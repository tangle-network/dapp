query Proposals(
  # The number of proposals to return
  $PerPage: Int!
  # The number of proposals to skip
  $Offset: Int!
) {
  proposalItems(first: $PerPage, offset: $Offset) {
    nodes {
      id
      data
      signature
      type
      status

      block {
        timestamp
        number
      }
    }
  }
}

query ProposalsCounter(
  #  Proposal counter id
  $id: String!
) {
  proposalCounter(id: $id) {
    id
    signedProposalsMap
    unSignedProposalsMap

    signedProposalsCount
    unSignedProposalsCount

    statusMap

    block {
      number
      timestamp
    }
  }
}

fragment ProposalListView on ProposalItem {
  id
  data
  signature
  type
  status
  proposalVotesByProposalId(orderBy: [BLOCK_NUMBER_DESC] first: 3) {
    nodes {
      id
      voterId
      voter {
        id
      }
    }
    totalCount
  }
  block {
    timestamp
    number
  }
}

query ProposalsOverview($startRange: BigFloatFilter!, $endRange: BigFloatFilter!, $sessionId: String!) {
  session(id: $sessionId) {
    id
    proposerThreshold

    sessionProposers {
      totalCount
    }
    sessionValidators {
      totalCount
    }
  }
  openProposals: proposalItems(filter: { status: { equalTo: "Open" } }, orderBy: [BLOCK_NUMBER_DESC], first: 10) {
    nodes {
      ...ProposalListView
    }
    pageInfo {
      ...PageInfoMeta
    }
    totalCount
  }

  open: proposalTimelineStatuses(
    filter: { status: { equalTo: Open }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }
  ) {
    totalCount
  }

  signed: proposalTimelineStatuses(
    filter: { status: { equalTo: Signed }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }
  ) {
    totalCount
  }

  reject: proposalTimelineStatuses(
    filter: { status: { equalTo: Rejected }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }
  ) {
    totalCount
  }

  accepted: proposalTimelineStatuses(
    filter: { status: { equalTo: Accepted }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }
  ) {
    totalCount
  }
}
