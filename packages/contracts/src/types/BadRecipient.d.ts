/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { EventFragment, FunctionFragment, Result } from '@ethersproject/abi';
import { BytesLike } from '@ethersproject/bytes';
import { Contract, ContractTransaction } from '@ethersproject/contracts';
import { Listener, Provider } from '@ethersproject/providers';
import { BigNumber, BigNumberish, ethers, EventFilter, PopulatedTransaction, Signer } from 'ethers';

interface BadRecipientInterface extends ethers.utils.Interface {
  functions: {};

  events: {};
}

export class BadRecipient extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: BadRecipientInterface;

  functions: {};

  callStatic: {};

  filters: {};

  estimateGas: {};

  populateTransaction: {};
}
