/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Overrides } from '@ethersproject/contracts';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import { BigNumberish, Signer } from 'ethers';

import { Erc20Anchor } from './Erc20Anchor';

export class Erc20AnchorFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _verifier: string,
    _hasher: string,
    _denomination: BigNumberish,
    _merkleTreeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides
  ): Promise<Erc20Anchor> {
    return super.deploy(
      _verifier,
      _hasher,
      _denomination,
      _merkleTreeHeight,
      _token,
      overrides || {}
    ) as Promise<Erc20Anchor>;
  }
  getDeployTransaction(
    _verifier: string,
    _hasher: string,
    _denomination: BigNumberish,
    _merkleTreeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, _hasher, _denomination, _merkleTreeHeight, _token, overrides || {});
  }
  attach(address: string): Erc20Anchor {
    return super.attach(address) as Erc20Anchor;
  }
  connect(signer: Signer): Erc20AnchorFactory {
    return super.connect(signer) as Erc20AnchorFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Erc20Anchor {
    return new Contract(address, _abi, signerOrProvider) as Erc20Anchor;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IVerifier',
        name: '_verifier',
        type: 'address',
      },
      {
        internalType: 'contract IHasher',
        name: '_hasher',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_denomination',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_merkleTreeHeight',
        type: 'uint32',
      },
      {
        internalType: 'contract IERC20',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'commitment',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'leafIndex',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'nullifierHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'relayer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    name: 'Withdrawal',
    type: 'event',
  },
  {
    inputs: [],
    name: 'FIELD_SIZE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'ROOT_HISTORY_SIZE',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'ZERO_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'commitments',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'currentRootIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'denomination',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_commitment',
        type: 'bytes32',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
    payable: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'filledSubtrees',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'getLastRoot',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'contract IHasher',
        name: '_hasher',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_left',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_right',
        type: 'bytes32',
      },
    ],
    name: 'hashLeftRight',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'hasher',
    outputs: [
      {
        internalType: 'contract IHasher',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_nullifierHash',
        type: 'bytes32',
      },
    ],
    name: 'isSpent',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: '_nullifierHashes',
        type: 'bytes32[]',
      },
    ],
    name: 'isSpentArray',
    outputs: [
      {
        internalType: 'bool[]',
        name: 'spent',
        type: 'bool[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'levels',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'nextIndex',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'nullifierHashes',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'roots',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'token',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [],
    name: 'verifier',
    outputs: [
      {
        internalType: 'contract IVerifier',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true,
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_proof',
        type: 'bytes',
      },
      {
        internalType: 'bytes32',
        name: '_root',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_nullifierHash',
        type: 'bytes32',
      },
      {
        internalType: 'address payable',
        name: '_recipient',
        type: 'address',
      },
      {
        internalType: 'address payable',
        name: '_relayer',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_fee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_refund',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
    payable: true,
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'i',
        type: 'uint256',
      },
    ],
    name: 'zeros',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
    constant: true,
  },
];

const _bytecode =
  '0x610120604052600280546001600160401b03191690553480156200002257600080fd5b50604051620026e8380380620026e8833981810160405260a08110156200004857600080fd5b5080516020820151604083015160608401516080909401519293919290919084848484808363ffffffff8216620000b15760405162461bcd60e51b8152600401808060200182810382526023815260200180620026c56023913960400191505060405180910390fd5b60208263ffffffff16106200010d576040805162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604482015290519081900360640190fd5b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff16101562000179576200015a63ffffffff821662000233565b63ffffffff821660009081526020819052604090205560010162000134565b506200018f63ffffffff60001984011662000233565b60008052600160208190527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4991909155600355505081620002025760405162461bcd60e51b8152600401808060200182810382526025815260200180620026a06025913960400191505060405180910390fd5b506001600160601b0319606093841b811660c05260e0919091529290911b9091166101005250620008c19350505050565b6000816200026357507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c620008bc565b81600114156200029557507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d620008bc565b8160021415620002c757507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200620008bc565b8160031415620002f957507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb620008bc565b81600414156200032b57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9620008bc565b81600514156200035d57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959620008bc565b81600614156200038f57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c620008bc565b8160071415620003c157507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4620008bc565b8160081415620003f357507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80620008bc565b81600914156200042457507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007620008bc565b81600a14156200045657507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30620008bc565b81600b14156200048857507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5620008bc565b81600c1415620004ba57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f620008bc565b81600d1415620004ec57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd620008bc565b81600e14156200051e57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108620008bc565b81600f14156200055057507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6620008bc565b81601014156200058257507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854620008bc565b8160111415620005b457507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea620008bc565b8160121415620005e657507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d620008bc565b81601314156200061857507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05620008bc565b81601414156200064a57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4620008bc565b81601514156200067c57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967620008bc565b8160161415620006ae57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453620008bc565b8160171415620006e057507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48620008bc565b81601814156200071257507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1620008bc565b81601914156200074457507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c620008bc565b81601a14156200077657507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99620008bc565b81601b1415620007a857507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354620008bc565b81601c1415620007d957507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d620008bc565b81601d14156200080b57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427620008bc565b81601e14156200083d57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb620008bc565b81601f14156200086f57507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc620008bc565b6040805162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015290519081900360640190fd5b919050565b60805160601c60a05160e01c60c05160601c60e0516101005160601c611d616200093f600039806114855280611505528061156252806118255250806105d852806109e75280611528528061184952508061070b528061090652508061093c528061164152806116ad52508061144f52806117395250611d616000f3fe6080604052600436106101355760003560e01c8063b214faa5116100ab578063e82955881161006f578063e8295588146104bc578063ec732959146104e6578063ed33639f146104fb578063f178e47c14610510578063fc0c546a1461053a578063fc7e9c6f1461054f57610135565b8063b214faa514610421578063ba70f7571461043e578063c2b40ae414610453578063cd87a3b41461047d578063e5285dcc1461049257610135565b80636d9833e3116100fd5780636d9833e314610299578063839df945146102c35780638bca6d16146102ed5780638ea3099e1461030257806390eeb02b146103415780639fa12d0b1461035657610135565b806317cc915c1461013a57806321a0adb6146101785780632b7ac3f314610213578063414a37ba146102445780634ecf518b1461026b575b600080fd5b34801561014657600080fd5b506101646004803603602081101561015d57600080fd5b5035610564565b604080519115158252519081900360200190f35b610211600480360360e081101561018e57600080fd5b810190602081018135600160201b8111156101a857600080fd5b8201836020820111156101ba57600080fd5b803590602001918460018302840111600160201b831117156101db57600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a00135610579565b005b34801561021f57600080fd5b50610228610904565b604080516001600160a01b039092168252519081900360200190f35b34801561025057600080fd5b50610259610928565b60408051918252519081900360200190f35b34801561027757600080fd5b5061028061093a565b6040805163ffffffff9092168252519081900360200190f35b3480156102a557600080fd5b50610164600480360360208110156102bc57600080fd5b503561095e565b3480156102cf57600080fd5b50610164600480360360208110156102e657600080fd5b50356109d0565b3480156102f957600080fd5b506102596109e5565b34801561030e57600080fd5b506102596004803603606081101561032557600080fd5b506001600160a01b038135169060208101359060400135610a09565b34801561034d57600080fd5b50610280610bd7565b34801561036257600080fd5b506103d16004803603602081101561037957600080fd5b810190602081018135600160201b81111561039357600080fd5b8201836020820111156103a557600080fd5b803590602001918460208302840111600160201b831117156103c657600080fd5b509092509050610be3565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561040d5781810151838201526020016103f5565b505050509050019250505060405180910390f35b6102116004803603602081101561043757600080fd5b5035610c82565b34801561044a57600080fd5b50610259610da3565b34801561045f57600080fd5b506102596004803603602081101561047657600080fd5b5035610dbe565b34801561048957600080fd5b50610280610dd0565b34801561049e57600080fd5b50610164600480360360208110156104b557600080fd5b5035610dd5565b3480156104c857600080fd5b50610259600480360360208110156104df57600080fd5b5035610dea565b3480156104f257600080fd5b50610259611429565b34801561050757600080fd5b5061022861144d565b34801561051c57600080fd5b506102596004803603602081101561053357600080fd5b5035611471565b34801561054657600080fd5b50610228611483565b34801561055b57600080fd5b506102806114a7565b60046020526000908152604090205460ff1681565b600260035414156105d1576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026003557f000000000000000000000000000000000000000000000000000000000000000082111561064b576040805162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015290519081900360640190fd5b60008581526004602052604090205460ff16156106af576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6106b88661095e565b610709576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663695ef6f989896040518060c001604052808b60001c81526020018a60001c8152602001896001600160a01b03168152602001886001600160a01b03168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b838110156107ba5781810151838201526020016107a2565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505050506040513d602081101561083657600080fd5b5051610882576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6000858152600460205260409020805460ff191660011790556108a7848484846114ba565b604080516001600160a01b038681168252602082018890528183018590529151918516917fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319181900360600190a250506001600355505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080516020611c6183398151915281565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008161096d575060006109cb565b60025463ffffffff16805b63ffffffff81166000908152600160205260409020548414156109a0576001925050506109cb565b63ffffffff81166109af5750601e5b6000190163ffffffff8082169083161415610978576000925050505b919050565b60056020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600080516020611c618339815191528310610a6d576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020611c618339815191528210610ab95760405162461bcd60e51b8152600401808060200182810382526021815260200180611c406021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b158015610b0857600080fd5b505afa158015610b1c573d6000803e3d6000fd5b505050506040513d6040811015610b3257600080fd5b5080516020909101519092509050600080516020611c618339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610b9f57600080fd5b505afa158015610bb3573d6000803e3d6000fd5b505050506040513d6040811015610bc957600080fd5b5051925050505b9392505050565b60025463ffffffff1681565b60608167ffffffffffffffff81118015610bfc57600080fd5b50604051908082528060200260200182016040528015610c26578160200160208202803683370190505b50905060005b82811015610c7b57610c4f848483818110610c4357fe5b90506020020135610dd5565b15610c73576001828281518110610c6257fe5b911515602092830291909101909101525b600101610c2c565b5092915050565b60026003541415610cda576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260035560008181526005602052604090205460ff1615610d2d5760405162461bcd60e51b8152600401808060200182810382526021815260200180611c816021913960400191505060405180910390fd5b6000610d3882611628565b6000838152600560205260409020805460ff191660011790559050610d5b6117db565b6040805163ffffffff83168152426020820152815184927fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196928290030190a250506001600355565b60025463ffffffff1660009081526001602052604090205490565b60016020526000908152604090205481565b601e81565b60009081526004602052604090205460ff1690565b600081610e1857507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6109cb565b8160011415610e4857507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6109cb565b8160021415610e7857507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006109cb565b8160031415610ea857507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6109cb565b8160041415610ed857507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96109cb565b8160051415610f0857507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596109cb565b8160061415610f3857507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6109cb565b8160071415610f6857507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46109cb565b8160081415610f9857507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806109cb565b8160091415610fc757507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076109cb565b81600a1415610ff757507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306109cb565b81600b141561102757507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56109cb565b81600c141561105757507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6109cb565b81600d141561108757507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6109cb565b81600e14156110b757507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086109cb565b81600f14156110e757507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66109cb565b816010141561111757507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546109cb565b816011141561114757507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6109cb565b816012141561117757507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6109cb565b81601314156111a757507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056109cb565b81601414156111d757507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46109cb565b816015141561120757507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676109cb565b816016141561123757507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536109cb565b816017141561126757507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486109cb565b816018141561129757507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16109cb565b81601914156112c757507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6109cb565b81601a14156112f757507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996109cb565b81601b141561132757507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546109cb565b81601c141561135657507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6109cb565b81601d141561138657507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276109cb565b81601e14156113b657507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6109cb565b81601f14156113e657507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6109cb565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600254600160201b900463ffffffff1681565b8034146114f85760405162461bcd60e51b8152600401808060200182810382526030815260200180611bea6030913960400191505060405180910390fd5b61154f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016857f000000000000000000000000000000000000000000000000000000000000000085900361186f565b8115611589576115896001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461186f565b8015611622576040516000906001600160a01b0386169083908381818185875af1925050503d80600081146115da576040519150601f19603f3d011682016040523d82523d6000602084013e6115df565b606091505b5050905080611620576040516001600160a01b0385169083156108fc029084906000818181858888f1935050505015801561161e573d6000803e3d6000fd5b505b505b50505050565b6002805460009163ffffffff600160201b9092048216917f0000000000000000000000000000000000000000000000000000000000000000811690910a168114156116a45760405162461bcd60e51b8152600401808060200182810382526030815260200180611cfc6030913960400191505060405180910390fd5b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156117755760018516611718578392506116f98163ffffffff16610dea565b63ffffffff821660009081526020819052604090208590559150611734565b63ffffffff811660009081526020819052604090205492508391505b61175f7f00000000000000000000000000000000000000000000000000000000000000008484610a09565b9350600263ffffffff86160494506001016116ab565b505060028054601e63ffffffff8083166001908101821692909206811663ffffffff199093168317845560009283526020829052604090922094909455815493860116600160201b0267ffffffff00000000199093169290921790915550909392505050565b34156118185760405162461bcd60e51b8152600401808060200182810382526030815260200180611ca26030913960400191505060405180910390fd5b61186d6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633307f00000000000000000000000000000000000000000000000000000000000000006118c6565b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526118c190849061191c565b505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526116229085905b6000611971826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119cd9092919063ffffffff16565b8051909150156118c15780806020019051602081101561199057600080fd5b50516118c15760405162461bcd60e51b815260040180806020018281038252602a815260200180611cd2602a913960400191505060405180910390fd5b60606119dc84846000856119e4565b949350505050565b606082471015611a255760405162461bcd60e51b8152600401808060200182810382526026815260200180611c1a6026913960400191505060405180910390fd5b611a2e85611b3f565b611a7f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611abd5780518252601f199092019160209182019101611a9e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611b1f576040519150601f19603f3d011682016040523d82523d6000602084013e611b24565b606091505b5091509150611b34828286611b45565b979650505050505050565b3b151590565b60608315611b54575081610bd0565b825115611b645782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bae578181015183820152602001611b96565b50505050905090810190601f168015611bdb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe496e636f727265637420726566756e6420616d6f756e742072656365697665642062792074686520636f6e7472616374416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465644554482076616c756520697320737570706f73656420746f206265203020666f7220455243323020696e7374616e63655361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a2646970667358221220a6761ac0125e4b690f5a151275b2177ad0824b8d284ed6c2be2d4a0f1968bdcd64736f6c6343000706003364656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f';
