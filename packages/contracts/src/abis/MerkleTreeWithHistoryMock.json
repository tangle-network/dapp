{
  "contractName": "MerkleTreeWithHistoryMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_treeLevels",
          "type": "uint32"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_leaf",
          "type": "bytes32"
        }
      ],
      "name": "insert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_treeLevels\",\"type\":\"uint32\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"}],\"name\":\"insert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":\"MerkleTreeWithHistoryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x0abefde6423ba3e21f380793ec5b061fd683c5a64da38a7b735510da6018c320\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://941250ecc9a42f2af9dd71989d0aa028faa30cdeeda6d66eb9944efc7a0c0b56\",\"dweb:/ipfs/QmekEu6s5HVVMiq6zRBdg8ubXBtQcn5HMxFduDdC1TazSx\"]},\"/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":{\"keccak256\":\"0x7a07cd2eb7531ae3977bc46b7392cef73d323478c0119ab2c4561325d46b9d31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd29860549b60580bcaae0612bc341c5c0a423f199e24eefe1bc54037367ddb9\",\"dweb:/ipfs/QmVU6W8JRd6EATrgt6gHeDoU2hwDv1NGsfv34JrEpdnEGv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c2b40ae41161008c578063ec73295911610066578063ec732959146101fe578063ed33639f14610206578063f178e47c1461022a578063fc7e9c6f14610247576100ea565b8063c2b40ae4146101bc578063cd87a3b4146101d9578063e8295588146101e1576100ea565b80636d9833e3116100c85780636d9833e3146101495780638ea3099e1461017a57806390eeb02b146101ac578063ba70f757146101b4576100ea565b80632d287e43146100ef578063414a37ba1461010e5780634ecf518b14610128575b600080fd5b61010c6004803603602081101561010557600080fd5b503561024f565b005b61011661025c565b60408051918252519081900360200190f35b61013061026e565b6040805163ffffffff9092168252519081900360200190f35b6101666004803603602081101561015f57600080fd5b5035610292565b604080519115158252519081900360200190f35b6101166004803603606081101561019057600080fd5b506001600160a01b038135169060208101359060400135610304565b6101306104d0565b6101166104dc565b610116600480360360208110156101d257600080fd5b50356104f7565b610130610509565b610116600480360360208110156101f757600080fd5b503561050e565b610116610b4d565b61020e610b71565b604080516001600160a01b039092168252519081900360200190f35b6101166004803603602081101561024057600080fd5b5035610b95565b610130610ba7565b61025881610bbb565b5050565b600080516020610d9283398151915281565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000816102a1575060006102ff565b60025463ffffffff16805b63ffffffff81166000908152600160205260409020548414156102d4576001925050506102ff565b63ffffffff81166102e35750601e5b6000190163ffffffff80821690831614156102ac576000925050505b919050565b6000600080516020610d928339815191528310610368576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020610d9283398151915282106103b45760405162461bcd60e51b8152600401808060200182810382526021815260200180610d716021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b15801561040357600080fd5b505afa158015610417573d6000803e3d6000fd5b505050506040513d604081101561042d57600080fd5b5080516020909101519092509050600080516020610d928339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561049a57600080fd5b505afa1580156104ae573d6000803e3d6000fd5b505050506040513d60408110156104c457600080fd5b50519695505050505050565b60025463ffffffff1681565b60025463ffffffff1660009081526001602052604090205490565b60016020526000908152604090205481565b601e81565b60008161053c57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6102ff565b816001141561056c57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6102ff565b816002141561059c57507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006102ff565b81600314156105cc57507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6102ff565b81600414156105fc57507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96102ff565b816005141561062c57507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596102ff565b816006141561065c57507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6102ff565b816007141561068c57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46102ff565b81600814156106bc57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806102ff565b81600914156106eb57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076102ff565b81600a141561071b57507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306102ff565b81600b141561074b57507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56102ff565b81600c141561077b57507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6102ff565b81600d14156107ab57507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6102ff565b81600e14156107db57507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086102ff565b81600f141561080b57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66102ff565b816010141561083b57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546102ff565b816011141561086b57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6102ff565b816012141561089b57507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6102ff565b81601314156108cb57507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056102ff565b81601414156108fb57507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46102ff565b816015141561092b57507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676102ff565b816016141561095b57507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536102ff565b816017141561098b57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486102ff565b81601814156109bb57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16102ff565b81601914156109eb57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6102ff565b81601a1415610a1b57507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996102ff565b81601b1415610a4b57507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546102ff565b81601c1415610a7a57507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6102ff565b81601d1415610aaa57507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276102ff565b81601e1415610ada57507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6102ff565b81601f1415610b0a57507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6102ff565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b600254640100000000900463ffffffff1681565b6002805460009163ffffffff6401000000009092048216917f0000000000000000000000000000000000000000000000000000000000000000811690910a16811415610c385760405162461bcd60e51b8152600401808060200182810382526030815260200180610db26030913960400191505060405180910390fd5b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff161015610d095760018516610cac57839250610c8d8163ffffffff1661050e565b63ffffffff821660009081526020819052604090208590559150610cc8565b63ffffffff811660009081526020819052604090205492508391505b610cf37f00000000000000000000000000000000000000000000000000000000000000008484610304565b9350600263ffffffff8616049450600101610c3f565b505060028054601e63ffffffff8083166001908101821692909206811663ffffffff1990931683178455600092835260208290526040909220949094558154938601166401000000000267ffffffff0000000019909316929092179091555090939250505056fe5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000014d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a26469706673582212202a93620a219dca9750942ff67c5e6b0b80dfe9bd1b1a28db7a150a01fb5e4ba964736f6c63430007060033",
  "immutableReferences": {
    "480": [
      {
        "length": 32,
        "start": 2931
      },
      {
        "length": 32,
        "start": 3277
      }
    ],
    "482": [
      {
        "length": 32,
        "start": 624
      },
      {
        "length": 32,
        "start": 3029
      },
      {
        "length": 32,
        "start": 3137
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "97:228:29:-:0;;;996:34:24;;;-1:-1:-1;;;;;;1034:27:24;;;161:95:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;161:95:29;;;;;;;;;1125:11:24;;;1117:59;;;;-1:-1:-1;;;1117:59:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1200:2;1190:7;:12;;;1182:55;;;;;-1:-1:-1;;;1182:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1243:16:24;;;;;;;-1:-1:-1;;;;;;1265:16:24;;;;;;;1293:8;1288:80;1311:7;1307:11;;:1;:11;;;1288:80;;;1353:8;;;;:5;:8::i;:::-;1333:17;;;:14;:17;;;;;;;;;;:28;1320:3;;1288:80;;;-1:-1:-1;1385:18:24;;-1:-1:-1;;1391:11:24;;1385:18;:5;:18::i;:::-;1374:8;;;:5;:8;;;:29;-1:-1:-1;97:228:29;;-1:-1:-1;;;97:228:29;3543:3478:24;3590:7;3609:6;3605:3411;;-1:-1:-1;3632:66:24;3617:82;;3605:3411;3714:1;3719;3714:6;3710:3306;;;-1:-1:-1;3737:66:24;3722:82;;3710:3306;3819:1;3824;3819:6;3815:3201;;;-1:-1:-1;3842:66:24;3827:82;;3815:3201;3924:1;3929;3924:6;3920:3096;;;-1:-1:-1;3947:66:24;3932:82;;3920:3096;4029:1;4034;4029:6;4025:2991;;;-1:-1:-1;4052:66:24;4037:82;;4025:2991;4134:1;4139;4134:6;4130:2886;;;-1:-1:-1;4157:66:24;4142:82;;4130:2886;4239:1;4244;4239:6;4235:2781;;;-1:-1:-1;4262:66:24;4247:82;;4235:2781;4344:1;4349;4344:6;4340:2676;;;-1:-1:-1;4367:66:24;4352:82;;4340:2676;4449:1;4454;4449:6;4445:2571;;;-1:-1:-1;4472:66:24;4457:82;;4445:2571;4554:1;4559;4554:6;4550:2466;;;-1:-1:-1;4577:66:24;4562:82;;4550:2466;4659:1;4664:2;4659:7;4655:2361;;;-1:-1:-1;4683:66:24;4668:82;;4655:2361;4765:1;4770:2;4765:7;4761:2255;;;-1:-1:-1;4789:66:24;4774:82;;4761:2255;4871:1;4876:2;4871:7;4867:2149;;;-1:-1:-1;4895:66:24;4880:82;;4867:2149;4977:1;4982:2;4977:7;4973:2043;;;-1:-1:-1;5001:66:24;4986:82;;4973:2043;5083:1;5088:2;5083:7;5079:1937;;;-1:-1:-1;5107:66:24;5092:82;;5079:1937;5189:1;5194:2;5189:7;5185:1831;;;-1:-1:-1;5213:66:24;5198:82;;5185:1831;5295:1;5300:2;5295:7;5291:1725;;;-1:-1:-1;5319:66:24;5304:82;;5291:1725;5401:1;5406:2;5401:7;5397:1619;;;-1:-1:-1;5425:66:24;5410:82;;5397:1619;5507:1;5512:2;5507:7;5503:1513;;;-1:-1:-1;5531:66:24;5516:82;;5503:1513;5613:1;5618:2;5613:7;5609:1407;;;-1:-1:-1;5637:66:24;5622:82;;5609:1407;5719:1;5724:2;5719:7;5715:1301;;;-1:-1:-1;5743:66:24;5728:82;;5715:1301;5825:1;5830:2;5825:7;5821:1195;;;-1:-1:-1;5849:66:24;5834:82;;5821:1195;5931:1;5936:2;5931:7;5927:1089;;;-1:-1:-1;5955:66:24;5940:82;;5927:1089;6037:1;6042:2;6037:7;6033:983;;;-1:-1:-1;6061:66:24;6046:82;;6033:983;6143:1;6148:2;6143:7;6139:877;;;-1:-1:-1;6167:66:24;6152:82;;6139:877;6249:1;6254:2;6249:7;6245:771;;;-1:-1:-1;6273:66:24;6258:82;;6245:771;6355:1;6360:2;6355:7;6351:665;;;-1:-1:-1;6379:66:24;6364:82;;6351:665;6461:1;6466:2;6461:7;6457:559;;;-1:-1:-1;6485:66:24;6470:82;;6457:559;6567:1;6572:2;6567:7;6563:453;;;-1:-1:-1;6591:66:24;6576:82;;6563:453;6673:1;6678:2;6673:7;6669:347;;;-1:-1:-1;6697:66:24;6682:82;;6669:347;6779:1;6784:2;6779:7;6775:241;;;-1:-1:-1;6803:66:24;6788:82;;6775:241;6885:1;6890:2;6885:7;6881:135;;;-1:-1:-1;6909:66:24;6894:82;;6881:135;6987:29;;;-1:-1:-1;;;6987:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;6881:135;3543:3478;;;:::o;97:228:29:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "97:228:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;260:63;;;;;;;;;;;;;;;;-1:-1:-1;260:63:29;;:::i;:::-;;215:114:24;;;:::i;:::-;;;;;;;;;;;;;;;;526:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2924:394;;;;;;;;;;;;;;;;-1:-1:-1;2924:394:24;;:::i;:::-;;;;;;;;;;;;;;;;;;1480:480;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1480:480:24;;;;;;;;;;;;;:::i;996:34::-;;;:::i;3364:94::-;;;:::i;903:40::-;;;;;;;;;;;;;;;;-1:-1:-1;903:40:24;;:::i;947:45::-;;;:::i;3543:3478::-;;;;;;;;;;;;;;;;-1:-1:-1;3543:3478:24;;:::i;333:114::-;;;:::i;491:31::-;;;:::i;:::-;;;;-1:-1:-1;;;;;491:31:24;;;;;;;;;;;;;;850:49;;;;;;;;;;;;;;;;-1:-1:-1;850:49:24;;:::i;1034:27::-;;;:::i;260:63:29:-;304:14;312:5;304:7;:14::i;:::-;;260:63;:::o;215:114:24:-;-1:-1:-1;;;;;;;;;;;215:114:24;:::o;526:30::-;;;:::o;2924:394::-;2981:4;2997:10;2993:43;;-1:-1:-1;3024:5:24;3017:12;;2993:43;3068:16;;;;;3124:172;3148:8;;;;;;;:5;:8;;;;;;3139:17;;3135:53;;;3175:4;3168:11;;;;;;3135:53;3199:6;;;3195:52;;-1:-1:-1;990:2:24;3195:52;-1:-1:-1;;3254:3:24;3272:22;;;;;;;;;3124:172;;3308:5;3301:12;;;;2924:394;;;;:::o;1480:480::-;1588:7;-1:-1:-1;;;;;;;;;;;1611:27:24;;1603:72;;;;;-1:-1:-1;;;1603:72:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1689:28:24;;1681:74;;;;-1:-1:-1;;;1681:74:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:24;;;-1:-1:-1;;;1821:24:24;;;;;;;;1761:9;1821:24;;;;;;;;1781:5;;1761:9;;-1:-1:-1;;;;;1821:18:24;;;;;:24;;;;;;;;;;:18;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1821:24:24;;;;;;;;;-1:-1:-1;1821:24:24;-1:-1:-1;;;;;;;;;;;;1873:6:24;1862:1;1855:38;1851:42;;1908:7;-1:-1:-1;;;;;1908:18:24;;1927:1;1930;1908:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1908:24:24;;1480:480;-1:-1:-1;;;;;;1480:480:24:o;996:34::-;;;;;;:::o;3364:94::-;3436:16;;;;3408:7;3430:23;;;:5;:23;;;;;;3364:94;:::o;903:40::-;;;;;;;;;;;;;:::o;947:45::-;990:2;947:45;:::o;3543:3478::-;3590:7;3609:6;3605:3411;;-1:-1:-1;3632:66:24;3617:82;;3605:3411;3714:1;3719;3714:6;3710:3306;;;-1:-1:-1;3737:66:24;3722:82;;3710:3306;3819:1;3824;3819:6;3815:3201;;;-1:-1:-1;3842:66:24;3827:82;;3815:3201;3924:1;3929;3924:6;3920:3096;;;-1:-1:-1;3947:66:24;3932:82;;3920:3096;4029:1;4034;4029:6;4025:2991;;;-1:-1:-1;4052:66:24;4037:82;;4025:2991;4134:1;4139;4134:6;4130:2886;;;-1:-1:-1;4157:66:24;4142:82;;4130:2886;4239:1;4244;4239:6;4235:2781;;;-1:-1:-1;4262:66:24;4247:82;;4235:2781;4344:1;4349;4344:6;4340:2676;;;-1:-1:-1;4367:66:24;4352:82;;4340:2676;4449:1;4454;4449:6;4445:2571;;;-1:-1:-1;4472:66:24;4457:82;;4445:2571;4554:1;4559;4554:6;4550:2466;;;-1:-1:-1;4577:66:24;4562:82;;4550:2466;4659:1;4664:2;4659:7;4655:2361;;;-1:-1:-1;4683:66:24;4668:82;;4655:2361;4765:1;4770:2;4765:7;4761:2255;;;-1:-1:-1;4789:66:24;4774:82;;4761:2255;4871:1;4876:2;4871:7;4867:2149;;;-1:-1:-1;4895:66:24;4880:82;;4867:2149;4977:1;4982:2;4977:7;4973:2043;;;-1:-1:-1;5001:66:24;4986:82;;4973:2043;5083:1;5088:2;5083:7;5079:1937;;;-1:-1:-1;5107:66:24;5092:82;;5079:1937;5189:1;5194:2;5189:7;5185:1831;;;-1:-1:-1;5213:66:24;5198:82;;5185:1831;5295:1;5300:2;5295:7;5291:1725;;;-1:-1:-1;5319:66:24;5304:82;;5291:1725;5401:1;5406:2;5401:7;5397:1619;;;-1:-1:-1;5425:66:24;5410:82;;5397:1619;5507:1;5512:2;5507:7;5503:1513;;;-1:-1:-1;5531:66:24;5516:82;;5503:1513;5613:1;5618:2;5613:7;5609:1407;;;-1:-1:-1;5637:66:24;5622:82;;5609:1407;5719:1;5724:2;5719:7;5715:1301;;;-1:-1:-1;5743:66:24;5728:82;;5715:1301;5825:1;5830:2;5825:7;5821:1195;;;-1:-1:-1;5849:66:24;5834:82;;5821:1195;5931:1;5936:2;5931:7;5927:1089;;;-1:-1:-1;5955:66:24;5940:82;;5927:1089;6037:1;6042:2;6037:7;6033:983;;;-1:-1:-1;6061:66:24;6046:82;;6033:983;6143:1;6148:2;6143:7;6139:877;;;-1:-1:-1;6167:66:24;6152:82;;6139:877;6249:1;6254:2;6249:7;6245:771;;;-1:-1:-1;6273:66:24;6258:82;;6245:771;6355:1;6360:2;6355:7;6351:665;;;-1:-1:-1;6379:66:24;6364:82;;6351:665;6461:1;6466:2;6461:7;6457:559;;;-1:-1:-1;6485:66:24;6470:82;;6457:559;6567:1;6572:2;6567:7;6563:453;;;-1:-1:-1;6591:66:24;6576:82;;6563:453;6673:1;6678:2;6673:7;6669:347;;;-1:-1:-1;6697:66:24;6682:82;;6669:347;6779:1;6784:2;6779:7;6775:241;;;-1:-1:-1;6803:66:24;6788:82;;6775:241;6885:1;6890:2;6885:7;6881:135;;;-1:-1:-1;6909:66:24;6894:82;;6881:135;6987:29;;;-1:-1:-1;;;6987:29:24;;;;;;;;;;;;-1:-1:-1;;;6987:29:24;;;;;;;;;;;;;;333:114;370:77;333:114;:::o;491:31::-;;;:::o;850:49::-;;;;;;;;;;;;;;:::o;1034:27::-;;;;;;;;;:::o;1964:888::-;2054:9;;;2014:12;;2054:9;;;;;;;;2102:6;2091:17;;;;;2077:31;;;;2069:92;;;;-1:-1:-1;;;2069:92:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:10;2232:5;2167:19;;;2281:360;2304:6;2300:10;;:1;:10;;;2281:360;;;2329:16;;;2325:224;;2369:16;2362:23;;2403:8;2409:1;2403:8;;:5;:8::i;:::-;2421:17;;;:14;:17;;;;;;;;;;:36;;;2395:16;-1:-1:-1;2325:224:24;;;2489:17;;;:14;:17;;;;;;;;;;;;-1:-1:-1;2524:16:24;;-1:-1:-1;2325:224:24;2575:34;2589:6;2597:4;2603:5;2575:13;:34::i;:::-;2556:53;-1:-1:-1;2633:1:24;2617:17;;;;;-1:-1:-1;2312:3:24;;2281:360;;;-1:-1:-1;;2670:16:24;;;990:2;2669:42;2670:16;;;;:20;;;2669:42;;;;;;2717:31;;-1:-1:-1;;2717:31:24;;;;;;;-1:-1:-1;2754:19:24;;;;;;;;;;;:38;;;;2798:26;;2810:14;;;2798:26;;;-1:-1:-1;;2798:26:24;;;;;;;;;;-1:-1:-1;2810:14:24;;;-1:-1:-1;;;1964:888:24:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"../MerkleTreeWithHistory.sol\";\n\ncontract MerkleTreeWithHistoryMock is MerkleTreeWithHistory {\n  constructor(uint32 _treeLevels, IHasher _hasher) MerkleTreeWithHistory(_treeLevels, _hasher) {}\n\n  function insert(bytes32 _leaf) public {\n    _insert(_leaf);\n  }\n}\n",
  "sourcePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
  "ast": {
    "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
    "exportedSymbols": {
      "IHasher": [472],
      "MerkleTreeWithHistory": [1127],
      "MerkleTreeWithHistoryMock": [1272]
    },
    "id": 1273,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1246,
        "literals": ["solidity", "^", "0.7", ".0"],
        "nodeType": "PragmaDirective",
        "src": "32:23:29"
      },
      {
        "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/MerkleTreeWithHistory.sol",
        "file": "../MerkleTreeWithHistory.sol",
        "id": 1247,
        "nodeType": "ImportDirective",
        "scope": 1273,
        "sourceUnit": 1128,
        "src": "57:38:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1248,
              "name": "MerkleTreeWithHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1127,
              "src": "135:21:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistory_$1127",
                "typeString": "contract MerkleTreeWithHistory"
              }
            },
            "id": 1249,
            "nodeType": "InheritanceSpecifier",
            "src": "135:21:29"
          }
        ],
        "contractDependencies": [1127],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1272,
        "linearizedBaseContracts": [1272, 1127],
        "name": "MerkleTreeWithHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1260,
              "nodeType": "Block",
              "src": "254:2:29",
              "statements": []
            },
            "id": 1261,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1256,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1251,
                    "src": "232:11:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "id": 1257,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1253,
                    "src": "245:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$472",
                      "typeString": "contract IHasher"
                    }
                  }
                ],
                "id": 1258,
                "modifierName": {
                  "id": 1255,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1127,
                  "src": "210:21:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithHistory_$1127_$",
                    "typeString": "type(contract MerkleTreeWithHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "210:43:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1261,
                  "src": "173:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 1261,
                  "src": "193:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$472",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 472,
                    "src": "193:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$472",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "172:37:29"
            },
            "returnParameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:0:29"
            },
            "scope": 1272,
            "src": "161:95:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1270,
              "nodeType": "Block",
              "src": "298:25:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1267,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1263,
                        "src": "312:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1266,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 762,
                      "src": "304:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "304:14:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "304:14:29"
                }
              ]
            },
            "functionSelector": "2d287e43",
            "id": 1271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "276:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:15:29"
            },
            "returnParameters": {
              "id": 1265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:0:29"
            },
            "scope": 1272,
            "src": "260:63:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1273,
        "src": "97:228:29"
      }
    ],
    "src": "32:294:29"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
      "exportedSymbols": {
        "IHasher": [472],
        "MerkleTreeWithHistory": [1127],
        "MerkleTreeWithHistoryMock": [1272]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": ["solidity", "^", "0.7", ".0"]
        },
        "id": 1246,
        "name": "PragmaDirective",
        "src": "32:23:29"
      },
      {
        "attributes": {
          "SourceUnit": 1128,
          "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/MerkleTreeWithHistory.sol",
          "file": "../MerkleTreeWithHistory.sol",
          "scope": 1273,
          "symbolAliases": [null],
          "unitAlias": ""
        },
        "id": 1247,
        "name": "ImportDirective",
        "src": "57:38:29"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [1127],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [1272, 1127],
          "name": "MerkleTreeWithHistoryMock",
          "scope": 1273
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MerkleTreeWithHistory",
                  "referencedDeclaration": 1127,
                  "type": "contract MerkleTreeWithHistory"
                },
                "id": 1248,
                "name": "UserDefinedTypeName",
                "src": "135:21:29"
              }
            ],
            "id": 1249,
            "name": "InheritanceSpecifier",
            "src": "135:21:29"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1272,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_treeLevels",
                      "scope": 1261,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint32",
                          "type": "uint32"
                        },
                        "id": 1250,
                        "name": "ElementaryTypeName",
                        "src": "173:6:29"
                      }
                    ],
                    "id": 1251,
                    "name": "VariableDeclaration",
                    "src": "173:18:29"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_hasher",
                      "scope": 1261,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IHasher",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IHasher",
                          "referencedDeclaration": 472,
                          "type": "contract IHasher"
                        },
                        "id": 1252,
                        "name": "UserDefinedTypeName",
                        "src": "193:7:29"
                      }
                    ],
                    "id": 1253,
                    "name": "VariableDeclaration",
                    "src": "193:15:29"
                  }
                ],
                "id": 1254,
                "name": "ParameterList",
                "src": "172:37:29"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 1259,
                "name": "ParameterList",
                "src": "254:0:29"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 1127,
                      "type": "type(contract MerkleTreeWithHistory)",
                      "value": "MerkleTreeWithHistory"
                    },
                    "id": 1255,
                    "name": "Identifier",
                    "src": "210:21:29"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 1251,
                      "type": "uint32",
                      "value": "_treeLevels"
                    },
                    "id": 1256,
                    "name": "Identifier",
                    "src": "232:11:29"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 1253,
                      "type": "contract IHasher",
                      "value": "_hasher"
                    },
                    "id": 1257,
                    "name": "Identifier",
                    "src": "245:7:29"
                  }
                ],
                "id": 1258,
                "name": "ModifierInvocation",
                "src": "210:43:29"
              },
              {
                "attributes": {
                  "statements": [null]
                },
                "children": [],
                "id": 1260,
                "name": "Block",
                "src": "254:2:29"
              }
            ],
            "id": 1261,
            "name": "FunctionDefinition",
            "src": "161:95:29"
          },
          {
            "attributes": {
              "functionSelector": "2d287e43",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [null],
              "name": "insert",
              "scope": 1272,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_leaf",
                      "scope": 1271,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 1262,
                        "name": "ElementaryTypeName",
                        "src": "276:7:29"
                      }
                    ],
                    "id": 1263,
                    "name": "VariableDeclaration",
                    "src": "276:13:29"
                  }
                ],
                "id": 1264,
                "name": "ParameterList",
                "src": "275:15:29"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 1265,
                "name": "ParameterList",
                "src": "298:0:29"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "uint32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 762,
                              "type": "function (bytes32) returns (uint32)",
                              "value": "_insert"
                            },
                            "id": 1266,
                            "name": "Identifier",
                            "src": "304:7:29"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 1263,
                              "type": "bytes32",
                              "value": "_leaf"
                            },
                            "id": 1267,
                            "name": "Identifier",
                            "src": "312:5:29"
                          }
                        ],
                        "id": 1268,
                        "name": "FunctionCall",
                        "src": "304:14:29"
                      }
                    ],
                    "id": 1269,
                    "name": "ExpressionStatement",
                    "src": "304:14:29"
                  }
                ],
                "id": 1270,
                "name": "Block",
                "src": "298:25:29"
              }
            ],
            "id": 1271,
            "name": "FunctionDefinition",
            "src": "260:63:29"
          }
        ],
        "id": 1272,
        "name": "ContractDefinition",
        "src": "97:228:29"
      }
    ],
    "id": 1273,
    "name": "SourceUnit",
    "src": "32:294:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-06T09:15:15.401Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(address,bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "zeros(uint256)": {
        "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
