{
  "contractName": "NativeAnchor",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVerifier",
          "name": "_verifier",
          "type": "address"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_denomination",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_merkleTreeHeight",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "commitment",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "leafIndex",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "nullifierHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "denomination",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_commitment",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        }
      ],
      "name": "isSpent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_nullifierHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "isSpentArray",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "spent",
          "type": "bool[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nullifierHashes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "contract IVerifier",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_nullifierHash",
          "type": "bytes32"
        },
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_relayer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_refund",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"_verifier\",\"type\":\"address\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_denomination\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_merkleTreeHeight\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitment\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"nullifierHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denomination\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_commitment\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"}],\"name\":\"isSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nullifierHashes\",\"type\":\"bytes32[]\"}],\"name\":\"isSpentArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"spent\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nullifierHashes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"contract IVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_nullifierHash\",\"type\":\"bytes32\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_relayer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_refund\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(bytes32)\":{\"details\":\"Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.\",\"params\":{\"_commitment\":\"the note commitment, which is PedersenHash(nullifier + secret)\"}},\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"isSpent(bytes32)\":{\"details\":\"whether a note is already spent \"},\"isSpentArray(bytes32[])\":{\"details\":\"whether an array of notes is already spent \"},\"withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)\":{\"details\":\"Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/NativeAnchor.sol\":\"NativeAnchor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Anchor.sol\":{\"keccak256\":\"0x1a95d9c07d0e54e007b90fb1a5a8f8971c956684a117c334f75b5bc27ff822b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42c189209f7a6a779cd0207df4832664a8f7e37c40f5710715ce8d4bf54cc8f9\",\"dweb:/ipfs/QmY447tGaUDAQXQwReyAjVcURXTtQVsccFhak9VxgurY4K\"]},\"/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x0abefde6423ba3e21f380793ec5b061fd683c5a64da38a7b735510da6018c320\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://941250ecc9a42f2af9dd71989d0aa028faa30cdeeda6d66eb9944efc7a0c0b56\",\"dweb:/ipfs/QmekEu6s5HVVMiq6zRBdg8ubXBtQcn5HMxFduDdC1TazSx\"]},\"/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/NativeAnchor.sol\":{\"keccak256\":\"0xcef158df101a428ecce0d55db78df7297bff30e5d9eb50c4b077419090890469\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a70211d7e69ef0e4463fcec0f121c9db92eec0f5333102b7863ae073f584209a\",\"dweb:/ipfs/QmVQNFN8j1FPSoAddar749CsNgR2T1F8xi3ppGuzgVFp4B\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b95e56c1640d0ef789fc5c16269e141e992f6c8ac97cc6d377bd3825e9cab182\",\"dweb:/ipfs/QmVzaxJZY51EhagrcNnkxoU6Uq17RhATe7aHvtkC6wUkgK\"]}},\"version\":1}",
  "bytecode": "0x610100604052600280546001600160401b03191690553480156200002257600080fd5b506040516200235738038062002357833981810160405260808110156200004857600080fd5b508051602082015160408301516060909301519192909183838383808363ffffffff8216620000a95760405162461bcd60e51b8152600401808060200182810382526023815260200180620023346023913960400191505060405180910390fd5b60208263ffffffff161062000105576040805162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e2033320000604482015290519081900360640190fd5b6001600160e01b031960e083901b1660a0526001600160601b0319606082901b1660805260005b8263ffffffff168163ffffffff16101562000171576200015263ffffffff82166200021d565b63ffffffff82166000908152602081905260409020556001016200012c565b506200018763ffffffff6000198401166200021d565b60008052600160208190527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4991909155600355505081620001fa5760405162461bcd60e51b81526004018080602001828103825260258152602001806200230f6025913960400191505060405180910390fd5b5060609290921b6001600160601b03191660c0525060e05250620008ab92505050565b6000816200024d57507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c620008a6565b81600114156200027f57507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d620008a6565b8160021415620002b157507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c200620008a6565b8160031415620002e357507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb620008a6565b81600414156200031557507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c9620008a6565b81600514156200034757507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb54959620008a6565b81600614156200037957507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c620008a6565b8160071415620003ab57507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb4620008a6565b8160081415620003dd57507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff80620008a6565b81600914156200040e57507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c007620008a6565b81600a14156200044057507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e30620008a6565b81600b14156200047257507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e5620008a6565b81600c1415620004a457507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f620008a6565b81600d1415620004d657507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd620008a6565b81600e14156200050857507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb108620008a6565b81600f14156200053a57507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b6620008a6565b81601014156200056c57507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db61854620008a6565b81601114156200059e57507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea620008a6565b8160121415620005d057507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d620008a6565b81601314156200060257507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc05620008a6565b81601414156200063457507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d4620008a6565b81601514156200066657507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b2967620008a6565b81601614156200069857507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc3453620008a6565b8160171415620006ca57507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c48620008a6565b8160181415620006fc57507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd1620008a6565b81601914156200072e57507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c620008a6565b81601a14156200076057507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce99620008a6565b81601b14156200079257507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f354620008a6565b81601c1415620007c357507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d620008a6565b81601d1415620007f557507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f427620008a6565b81601e14156200082757507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb620008a6565b81601f14156200085957507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc620008a6565b6040805162461bcd60e51b815260206004820152601360248201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604482015290519081900360640190fd5b919050565b60805160601c60a05160e01c60c05160601c60e051611a026200090d600039806105b852806109c7528061150152806117f35250806106eb52806108e652508061091c528061165752806116c352508061142d528061174f5250611a026000f3fe60806040526004361061012a5760003560e01c80639fa12d0b116100ab578063e5285dcc1161006f578063e5285dcc14610487578063e8295588146104b1578063ec732959146104db578063ed33639f146104f0578063f178e47c14610505578063fc7e9c6f1461052f5761012a565b80639fa12d0b1461034b578063b214faa514610416578063ba70f75714610433578063c2b40ae414610448578063cd87a3b4146104725761012a565b80636d9833e3116100f25780636d9833e31461028e578063839df945146102b85780638bca6d16146102e25780638ea3099e146102f757806390eeb02b146103365761012a565b806317cc915c1461012f57806321a0adb61461016d5780632b7ac3f314610208578063414a37ba146102395780634ecf518b14610260575b600080fd5b34801561013b57600080fd5b506101596004803603602081101561015257600080fd5b5035610544565b604080519115158252519081900360200190f35b610206600480360360e081101561018357600080fd5b810190602081018135600160201b81111561019d57600080fd5b8201836020820111156101af57600080fd5b803590602001918460018302840111600160201b831117156101d057600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a00135610559565b005b34801561021457600080fd5b5061021d6108e4565b604080516001600160a01b039092168252519081900360200190f35b34801561024557600080fd5b5061024e610908565b60408051918252519081900360200190f35b34801561026c57600080fd5b5061027561091a565b6040805163ffffffff9092168252519081900360200190f35b34801561029a57600080fd5b50610159600480360360208110156102b157600080fd5b503561093e565b3480156102c457600080fd5b50610159600480360360208110156102db57600080fd5b50356109b0565b3480156102ee57600080fd5b5061024e6109c5565b34801561030357600080fd5b5061024e6004803603606081101561031a57600080fd5b506001600160a01b0381351690602081013590604001356109e9565b34801561034257600080fd5b50610275610bb5565b34801561035757600080fd5b506103c66004803603602081101561036e57600080fd5b810190602081018135600160201b81111561038857600080fd5b82018360208201111561039a57600080fd5b803590602001918460208302840111600160201b831117156103bb57600080fd5b509092509050610bc1565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104025781810151838201526020016103ea565b505050509050019250505060405180910390f35b6102066004803603602081101561042c57600080fd5b5035610c60565b34801561043f57600080fd5b5061024e610d81565b34801561045457600080fd5b5061024e6004803603602081101561046b57600080fd5b5035610d9c565b34801561047e57600080fd5b50610275610dae565b34801561049357600080fd5b50610159600480360360208110156104aa57600080fd5b5035610db3565b3480156104bd57600080fd5b5061024e600480360360208110156104d457600080fd5b5035610dc8565b3480156104e757600080fd5b5061024e611407565b3480156104fc57600080fd5b5061021d61142b565b34801561051157600080fd5b5061024e6004803603602081101561052857600080fd5b503561144f565b34801561053b57600080fd5b50610275611461565b60046020526000908152604090205460ff1681565b600260035414156105b1576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026003557f000000000000000000000000000000000000000000000000000000000000000082111561062b576040805162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015290519081900360640190fd5b60008581526004602052604090205460ff161561068f576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6106988661093e565b6106e9576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663695ef6f989896040518060c001604052808b60001c81526020018a60001c8152602001896001600160a01b03168152602001886001600160a01b03168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b8381101561079a578181015183820152602001610782565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b1580156107ec57600080fd5b505af1158015610800573d6000803e3d6000fd5b505050506040513d602081101561081657600080fd5b5051610862576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6000858152600460205260409020805460ff1916600117905561088784848484611474565b604080516001600160a01b038681168252602082018890528183018590529151918516917fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319181900360600190a250506001600355505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000805160206118df83398151915281565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008161094d575060006109ab565b60025463ffffffff16805b63ffffffff8116600090815260016020526040902054841415610980576001925050506109ab565b63ffffffff811661098f5750601e5b6000190163ffffffff8082169083161415610958576000925050505b919050565b60056020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006000805160206118df8339815191528310610a4d576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b6000805160206118df8339815191528210610a995760405162461bcd60e51b815260040180806020018281038252602181526020018061188a6021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b158015610ae857600080fd5b505afa158015610afc573d6000803e3d6000fd5b505050506040513d6040811015610b1257600080fd5b50805160209091015190925090506000805160206118df8339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610b7f57600080fd5b505afa158015610b93573d6000803e3d6000fd5b505050506040513d6040811015610ba957600080fd5b50519695505050505050565b60025463ffffffff1681565b60608167ffffffffffffffff81118015610bda57600080fd5b50604051908082528060200260200182016040528015610c04578160200160208202803683370190505b50905060005b82811015610c5957610c2d848483818110610c2157fe5b90506020020135610db3565b15610c51576001828281518110610c4057fe5b911515602092830291909101909101525b600101610c0a565b5092915050565b60026003541415610cb8576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260035560008181526005602052604090205460ff1615610d0b5760405162461bcd60e51b81526004018080602001828103825260218152602001806118ff6021913960400191505060405180910390fd5b6000610d168261163e565b6000838152600560205260409020805460ff191660011790559050610d396117f1565b6040805163ffffffff83168152426020820152815184927fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196928290030190a250506001600355565b60025463ffffffff1660009081526001602052604090205490565b60016020526000908152604090205481565b601e81565b60009081526004602052604090205460ff1690565b600081610df657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6109ab565b8160011415610e2657507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6109ab565b8160021415610e5657507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006109ab565b8160031415610e8657507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6109ab565b8160041415610eb657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96109ab565b8160051415610ee657507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596109ab565b8160061415610f1657507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6109ab565b8160071415610f4657507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46109ab565b8160081415610f7657507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806109ab565b8160091415610fa557507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076109ab565b81600a1415610fd557507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306109ab565b81600b141561100557507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56109ab565b81600c141561103557507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6109ab565b81600d141561106557507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6109ab565b81600e141561109557507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086109ab565b81600f14156110c557507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66109ab565b81601014156110f557507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546109ab565b816011141561112557507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6109ab565b816012141561115557507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6109ab565b816013141561118557507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056109ab565b81601414156111b557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46109ab565b81601514156111e557507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676109ab565b816016141561121557507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536109ab565b816017141561124557507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486109ab565b816018141561127557507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16109ab565b81601914156112a557507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6109ab565b81601a14156112d557507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996109ab565b81601b141561130557507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546109ab565b81601c141561133457507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6109ab565b81601d141561136457507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276109ab565b81601e141561139457507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6109ab565b81601f14156113c457507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6109ab565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b600254600160201b900463ffffffff1681565b34156114b15760405162461bcd60e51b81526004018080602001828103825260358152602001806119986035913960400191505060405180910390fd5b80156114ee5760405162461bcd60e51b81526004018080602001828103825260348152602001806118ab6034913960400191505060405180910390fd5b6040516000906001600160a01b038616907f0000000000000000000000000000000000000000000000000000000000000000859003908381818185875af1925050503d806000811461155c576040519150601f19603f3d011682016040523d82523d6000602084013e611561565b606091505b50509050806115a15760405162461bcd60e51b81526004018080602001828103825260258152602001806119206025913960400191505060405180910390fd5b8215611637576040516001600160a01b038516908490600081818185875af1925050503d80600081146115f0576040519150601f19603f3d011682016040523d82523d6000602084013e6115f5565b606091505b505080915050806116375760405162461bcd60e51b81526004018080602001828103825260238152602001806119456023913960400191505060405180910390fd5b5050505050565b6002805460009163ffffffff600160201b9092048216917f0000000000000000000000000000000000000000000000000000000000000000811690910a168114156116ba5760405162461bcd60e51b81526004018080602001828103825260308152602001806119686030913960400191505060405180910390fd5b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16101561178b576001851661172e5783925061170f8163ffffffff16610dc8565b63ffffffff82166000908152602081905260409020859055915061174a565b63ffffffff811660009081526020819052604090205492508391505b6117757f000000000000000000000000000000000000000000000000000000000000000084846109e9565b9350600263ffffffff86160494506001016116c1565b505060028054601e63ffffffff8083166001908101821692909206811663ffffffff199093168317845560009283526020829052604090922094909455815493860116600160201b0267ffffffff00000000199093169290921790915550909392505050565b7f0000000000000000000000000000000000000000000000000000000000000000341461184f5760405162461bcd60e51b81526004018080602001828103825260388152602001806118526038913960400191505060405180910390fd5b56fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c64526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636530644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a26469706673582212206c360d0ec8daed435675560a4347ea68405b22b2f622b981c66bf4e43f36247764736f6c6343000706003364656e6f6d696e6174696f6e2073686f756c642062652067726561746572207468616e20305f6c6576656c732073686f756c642062652067726561746572207468616e207a65726f",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c80639fa12d0b116100ab578063e5285dcc1161006f578063e5285dcc14610487578063e8295588146104b1578063ec732959146104db578063ed33639f146104f0578063f178e47c14610505578063fc7e9c6f1461052f5761012a565b80639fa12d0b1461034b578063b214faa514610416578063ba70f75714610433578063c2b40ae414610448578063cd87a3b4146104725761012a565b80636d9833e3116100f25780636d9833e31461028e578063839df945146102b85780638bca6d16146102e25780638ea3099e146102f757806390eeb02b146103365761012a565b806317cc915c1461012f57806321a0adb61461016d5780632b7ac3f314610208578063414a37ba146102395780634ecf518b14610260575b600080fd5b34801561013b57600080fd5b506101596004803603602081101561015257600080fd5b5035610544565b604080519115158252519081900360200190f35b610206600480360360e081101561018357600080fd5b810190602081018135600160201b81111561019d57600080fd5b8201836020820111156101af57600080fd5b803590602001918460018302840111600160201b831117156101d057600080fd5b91935091508035906020810135906001600160a01b03604082013581169160608101359091169060808101359060a00135610559565b005b34801561021457600080fd5b5061021d6108e4565b604080516001600160a01b039092168252519081900360200190f35b34801561024557600080fd5b5061024e610908565b60408051918252519081900360200190f35b34801561026c57600080fd5b5061027561091a565b6040805163ffffffff9092168252519081900360200190f35b34801561029a57600080fd5b50610159600480360360208110156102b157600080fd5b503561093e565b3480156102c457600080fd5b50610159600480360360208110156102db57600080fd5b50356109b0565b3480156102ee57600080fd5b5061024e6109c5565b34801561030357600080fd5b5061024e6004803603606081101561031a57600080fd5b506001600160a01b0381351690602081013590604001356109e9565b34801561034257600080fd5b50610275610bb5565b34801561035757600080fd5b506103c66004803603602081101561036e57600080fd5b810190602081018135600160201b81111561038857600080fd5b82018360208201111561039a57600080fd5b803590602001918460208302840111600160201b831117156103bb57600080fd5b509092509050610bc1565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104025781810151838201526020016103ea565b505050509050019250505060405180910390f35b6102066004803603602081101561042c57600080fd5b5035610c60565b34801561043f57600080fd5b5061024e610d81565b34801561045457600080fd5b5061024e6004803603602081101561046b57600080fd5b5035610d9c565b34801561047e57600080fd5b50610275610dae565b34801561049357600080fd5b50610159600480360360208110156104aa57600080fd5b5035610db3565b3480156104bd57600080fd5b5061024e600480360360208110156104d457600080fd5b5035610dc8565b3480156104e757600080fd5b5061024e611407565b3480156104fc57600080fd5b5061021d61142b565b34801561051157600080fd5b5061024e6004803603602081101561052857600080fd5b503561144f565b34801561053b57600080fd5b50610275611461565b60046020526000908152604090205460ff1681565b600260035414156105b1576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026003557f000000000000000000000000000000000000000000000000000000000000000082111561062b576040805162461bcd60e51b815260206004820152601a60248201527f4665652065786365656473207472616e736665722076616c7565000000000000604482015290519081900360640190fd5b60008581526004602052604090205460ff161561068f576040805162461bcd60e51b815260206004820152601f60248201527f546865206e6f746520686173206265656e20616c7265616479207370656e7400604482015290519081900360640190fd5b6106988661093e565b6106e9576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f7400000000604482015290519081900360640190fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663695ef6f989896040518060c001604052808b60001c81526020018a60001c8152602001896001600160a01b03168152602001886001600160a01b03168152602001878152602001868152506040518463ffffffff1660e01b8152600401808060200183600660200280838360005b8381101561079a578181015183820152602001610782565b505050509050018281038252858582818152602001925080828437600081840152601f19601f820116905080830192505050945050505050602060405180830381600087803b1580156107ec57600080fd5b505af1158015610800573d6000803e3d6000fd5b505050506040513d602081101561081657600080fd5b5051610862576040805162461bcd60e51b815260206004820152601660248201527524b73b30b634b2103bb4ba34323930bb90383937b7b360511b604482015290519081900360640190fd5b6000858152600460205260409020805460ff1916600117905561088784848484611474565b604080516001600160a01b038681168252602082018890528183018590529151918516917fe9e508bad6d4c3227e881ca19068f099da81b5164dd6d62b2eaf1e8bc6c349319181900360600190a250506001600355505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000805160206118df83398151915281565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008161094d575060006109ab565b60025463ffffffff16805b63ffffffff8116600090815260016020526040902054841415610980576001925050506109ab565b63ffffffff811661098f5750601e5b6000190163ffffffff8082169083161415610958576000925050505b919050565b60056020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006000805160206118df8339815191528310610a4d576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b6000805160206118df8339815191528210610a995760405162461bcd60e51b815260040180806020018281038252602181526020018061188a6021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b158015610ae857600080fd5b505afa158015610afc573d6000803e3d6000fd5b505050506040513d6040811015610b1257600080fd5b50805160209091015190925090506000805160206118df8339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b158015610b7f57600080fd5b505afa158015610b93573d6000803e3d6000fd5b505050506040513d6040811015610ba957600080fd5b50519695505050505050565b60025463ffffffff1681565b60608167ffffffffffffffff81118015610bda57600080fd5b50604051908082528060200260200182016040528015610c04578160200160208202803683370190505b50905060005b82811015610c5957610c2d848483818110610c2157fe5b90506020020135610db3565b15610c51576001828281518110610c4057fe5b911515602092830291909101909101525b600101610c0a565b5092915050565b60026003541415610cb8576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260035560008181526005602052604090205460ff1615610d0b5760405162461bcd60e51b81526004018080602001828103825260218152602001806118ff6021913960400191505060405180910390fd5b6000610d168261163e565b6000838152600560205260409020805460ff191660011790559050610d396117f1565b6040805163ffffffff83168152426020820152815184927fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196928290030190a250506001600355565b60025463ffffffff1660009081526001602052604090205490565b60016020526000908152604090205481565b601e81565b60009081526004602052604090205460ff1690565b600081610df657507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6109ab565b8160011415610e2657507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6109ab565b8160021415610e5657507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006109ab565b8160031415610e8657507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6109ab565b8160041415610eb657507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96109ab565b8160051415610ee657507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596109ab565b8160061415610f1657507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6109ab565b8160071415610f4657507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46109ab565b8160081415610f7657507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806109ab565b8160091415610fa557507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076109ab565b81600a1415610fd557507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306109ab565b81600b141561100557507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56109ab565b81600c141561103557507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6109ab565b81600d141561106557507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6109ab565b81600e141561109557507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086109ab565b81600f14156110c557507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66109ab565b81601014156110f557507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546109ab565b816011141561112557507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6109ab565b816012141561115557507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6109ab565b816013141561118557507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056109ab565b81601414156111b557507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46109ab565b81601514156111e557507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676109ab565b816016141561121557507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536109ab565b816017141561124557507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486109ab565b816018141561127557507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16109ab565b81601914156112a557507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6109ab565b81601a14156112d557507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996109ab565b81601b141561130557507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546109ab565b81601c141561133457507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6109ab565b81601d141561136457507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276109ab565b81601e141561139457507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6109ab565b81601f14156113c457507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6109ab565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006020819052908152604090205481565b600254600160201b900463ffffffff1681565b34156114b15760405162461bcd60e51b81526004018080602001828103825260358152602001806119986035913960400191505060405180910390fd5b80156114ee5760405162461bcd60e51b81526004018080602001828103825260348152602001806118ab6034913960400191505060405180910390fd5b6040516000906001600160a01b038616907f0000000000000000000000000000000000000000000000000000000000000000859003908381818185875af1925050503d806000811461155c576040519150601f19603f3d011682016040523d82523d6000602084013e611561565b606091505b50509050806115a15760405162461bcd60e51b81526004018080602001828103825260258152602001806119206025913960400191505060405180910390fd5b8215611637576040516001600160a01b038516908490600081818185875af1925050503d80600081146115f0576040519150601f19603f3d011682016040523d82523d6000602084013e6115f5565b606091505b505080915050806116375760405162461bcd60e51b81526004018080602001828103825260238152602001806119456023913960400191505060405180910390fd5b5050505050565b6002805460009163ffffffff600160201b9092048216917f0000000000000000000000000000000000000000000000000000000000000000811690910a168114156116ba5760405162461bcd60e51b81526004018080602001828103825260308152602001806119686030913960400191505060405180910390fd5b8083600080805b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff16101561178b576001851661172e5783925061170f8163ffffffff16610dc8565b63ffffffff82166000908152602081905260409020859055915061174a565b63ffffffff811660009081526020819052604090205492508391505b6117757f000000000000000000000000000000000000000000000000000000000000000084846109e9565b9350600263ffffffff86160494506001016116c1565b505060028054601e63ffffffff8083166001908101821692909206811663ffffffff199093168317845560009283526020829052604090922094909455815493860116600160201b0267ffffffff00000000199093169290921790915550909392505050565b7f0000000000000000000000000000000000000000000000000000000000000000341461184f5760405162461bcd60e51b81526004018080602001828103825260388152602001806118526038913960400191505060405180910390fd5b56fe506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e5f72696768742073686f756c6420626520696e7369646520746865206669656c64526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e636530644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000154686520636f6d6d69746d656e7420686173206265656e207375626d69747465647061796d656e7420746f205f726563697069656e7420646964206e6f7420676f20746872757061796d656e7420746f205f72656c6179657220646964206e6f7420676f20746872754d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e2062652061646465644d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365a26469706673582212206c360d0ec8daed435675560a4347ea68405b22b2f622b981c66bf4e43f36247764736f6c63430007060033",
  "immutableReferences": {
    "65": [
      {
        "length": 32,
        "start": 1771
      },
      {
        "length": 32,
        "start": 2278
      }
    ],
    "67": [
      {
        "length": 32,
        "start": 1464
      },
      {
        "length": 32,
        "start": 2503
      },
      {
        "length": 32,
        "start": 5377
      },
      {
        "length": 32,
        "start": 6131
      }
    ],
    "480": [
      {
        "length": 32,
        "start": 5165
      },
      {
        "length": 32,
        "start": 5967
      }
    ],
    "482": [
      {
        "length": 32,
        "start": 2332
      },
      {
        "length": 32,
        "start": 5719
      },
      {
        "length": 32,
        "start": 5827
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "81:1003:30:-:0;;;996:34:24;;;-1:-1:-1;;;;;;1034:27:24;;;117:182:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:182:30;;;;;;;;;;;;;;;;;;;;;;;;;1125:11:24;;;1117:59;;;;-1:-1:-1;;;1117:59:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1200:2;1190:7;:12;;;1182:55;;;;;-1:-1:-1;;;1182:55:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1243:16:24;;;;;;;-1:-1:-1;;;;;;1265:16:24;;;;;;;1293:8;1288:80;1311:7;1307:11;;:1;:11;;;1288:80;;;1353:8;;;;:5;:8::i;:::-;1333:17;;;:14;:17;;;;;;;;;;:28;1320:3;;1288:80;;;-1:-1:-1;1385:18:24;;-1:-1:-1;;1391:11:24;;1385:18;:5;:18::i;:::-;1374:8;;;:5;:8;;;;;:29;;;;1760:7:38;:22;-1:-1:-1;;1258:17:22;1250:67:::1;;;;-1:-1:-1::0;;;1250:67:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1323:20:22::1;::::0;;;;-1:-1:-1;;;;;;1323:20:22;::::1;::::0;-1:-1:-1;1349:28:22::1;::::0;-1:-1:-1;81:1003:30;;-1:-1:-1;;;81:1003:30;3543:3478:24;3590:7;3609:6;3605:3411;;-1:-1:-1;3632:66:24;3617:82;;3605:3411;3714:1;3719;3714:6;3710:3306;;;-1:-1:-1;3737:66:24;3722:82;;3710:3306;3819:1;3824;3819:6;3815:3201;;;-1:-1:-1;3842:66:24;3827:82;;3815:3201;3924:1;3929;3924:6;3920:3096;;;-1:-1:-1;3947:66:24;3932:82;;3920:3096;4029:1;4034;4029:6;4025:2991;;;-1:-1:-1;4052:66:24;4037:82;;4025:2991;4134:1;4139;4134:6;4130:2886;;;-1:-1:-1;4157:66:24;4142:82;;4130:2886;4239:1;4244;4239:6;4235:2781;;;-1:-1:-1;4262:66:24;4247:82;;4235:2781;4344:1;4349;4344:6;4340:2676;;;-1:-1:-1;4367:66:24;4352:82;;4340:2676;4449:1;4454;4449:6;4445:2571;;;-1:-1:-1;4472:66:24;4457:82;;4445:2571;4554:1;4559;4554:6;4550:2466;;;-1:-1:-1;4577:66:24;4562:82;;4550:2466;4659:1;4664:2;4659:7;4655:2361;;;-1:-1:-1;4683:66:24;4668:82;;4655:2361;4765:1;4770:2;4765:7;4761:2255;;;-1:-1:-1;4789:66:24;4774:82;;4761:2255;4871:1;4876:2;4871:7;4867:2149;;;-1:-1:-1;4895:66:24;4880:82;;4867:2149;4977:1;4982:2;4977:7;4973:2043;;;-1:-1:-1;5001:66:24;4986:82;;4973:2043;5083:1;5088:2;5083:7;5079:1937;;;-1:-1:-1;5107:66:24;5092:82;;5079:1937;5189:1;5194:2;5189:7;5185:1831;;;-1:-1:-1;5213:66:24;5198:82;;5185:1831;5295:1;5300:2;5295:7;5291:1725;;;-1:-1:-1;5319:66:24;5304:82;;5291:1725;5401:1;5406:2;5401:7;5397:1619;;;-1:-1:-1;5425:66:24;5410:82;;5397:1619;5507:1;5512:2;5507:7;5503:1513;;;-1:-1:-1;5531:66:24;5516:82;;5503:1513;5613:1;5618:2;5613:7;5609:1407;;;-1:-1:-1;5637:66:24;5622:82;;5609:1407;5719:1;5724:2;5719:7;5715:1301;;;-1:-1:-1;5743:66:24;5728:82;;5715:1301;5825:1;5830:2;5825:7;5821:1195;;;-1:-1:-1;5849:66:24;5834:82;;5821:1195;5931:1;5936:2;5931:7;5927:1089;;;-1:-1:-1;5955:66:24;5940:82;;5927:1089;6037:1;6042:2;6037:7;6033:983;;;-1:-1:-1;6061:66:24;6046:82;;6033:983;6143:1;6148:2;6143:7;6139:877;;;-1:-1:-1;6167:66:24;6152:82;;6139:877;6249:1;6254:2;6249:7;6245:771;;;-1:-1:-1;6273:66:24;6258:82;;6245:771;6355:1;6360:2;6355:7;6351:665;;;-1:-1:-1;6379:66:24;6364:82;;6351:665;6461:1;6466:2;6461:7;6457:559;;;-1:-1:-1;6485:66:24;6470:82;;6457:559;6567:1;6572:2;6567:7;6563:453;;;-1:-1:-1;6591:66:24;6576:82;;6563:453;6673:1;6678:2;6673:7;6669:347;;;-1:-1:-1;6697:66:24;6682:82;;6669:347;6779:1;6784:2;6779:7;6775:241;;;-1:-1:-1;6803:66:24;6788:82;;6775:241;6885:1;6890:2;6885:7;6881:135;;;-1:-1:-1;6909:66:24;6894:82;;6881:135;6987:29;;;-1:-1:-1;;;6987:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;6881:135;3543:3478;;;:::o;81:1003:30:-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "81:1003:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:47:22;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;428:47:22;;:::i;:::-;;;;;;;;;;;;;;;;;;2458:855;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2458:855:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2458:855:22;;;;;;;;;;;;-1:-1:-1;2458:855:22;-1:-1:-1;2458:855:22;;;;;;;;-1:-1:-1;;;;;2458:855:22;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;347:35;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;347:35:22;;;;;;;;;;;;;;215:114:24;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;526:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2924:394;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2924:394:24;;:::i;570:43:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;570:43:22;;:::i;386:37::-;;;;;;;;;;;;;:::i;1480:480:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1480:480:24;;;;;;;;;;;;;:::i;996:34::-;;;;;;;;;;;;;:::i;3752:298:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3752:298:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3752:298:22;;;;;;;;;;-1:-1:-1;3752:298:22;;-1:-1:-1;3752:298:22;-1:-1:-1;3752:298:22;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:324;;;;;;;;;;;;;;;;-1:-1:-1;1630:324:22;;:::i;3364:94:24:-;;;;;;;;;;;;;:::i;903:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;903:40:24;;:::i;947:45::-;;;;;;;;;;;;;:::i;3574:117:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3574:117:22;;:::i;3543:3478:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3543:3478:24;;:::i;333:114::-;;;;;;;;;;;;;:::i;491:31::-;;;;;;;;;;;;;:::i;850:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:49:24;;:::i;1034:27::-;;;;;;;;;;;;;:::i;428:47:22:-;;;;;;;;;;;;;;;:::o;2458:855::-;1688:1:38;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;2707:12:22::1;2699:20:::0;::::1;;2691:59;;;::::0;;-1:-1:-1;;;2691:59:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2765:31;::::0;;;:15:::1;:31;::::0;;;;;::::1;;2764:32;2756:76;;;::::0;;-1:-1:-1;;;2756:76:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2846:18;2858:5;2846:11;:18::i;:::-;2838:59;;;::::0;;-1:-1:-1;;;2838:59:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2951:8;-1:-1:-1::0;;;;;2951:20:22::1;;2981:6;;2951:150;;;;;;;;3006:5;2998:14;;2951:150;;;;3022:14;3014:23;;2951:150;;;;3047:10;-1:-1:-1::0;;;;;3039:19:22::1;2951:150;;;;3068:8;-1:-1:-1::0;;;;;3060:17:22::1;2951:150;;;;3079:4;2951:150;;;;3085:7;2951:150;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2951:150:22;2936:203:::1;;;::::0;;-1:-1:-1;;;2936:203:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2936:203:22;;;;;;;;;;;;;::::1;;3146:31;::::0;;;:15:::1;:31;::::0;;;;:38;;-1:-1:-1;;3146:38:22::1;3180:4;3146:38;::::0;;3190:53:::1;3207:10:::0;3219:8;3229:4;3235:7;3190:16:::1;:53::i;:::-;3254:54;::::0;;-1:-1:-1;;;;;3254:54:22;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;-1:-1:-1::0;;1645:1:38;2580:7;:22;-1:-1:-1;;;;;;2458:855:22:o;347:35::-;;;:::o;215:114:24:-;-1:-1:-1;;;;;;;;;;;215:114:24;:::o;526:30::-;;;:::o;2924:394::-;2981:4;2997:10;2993:43;;-1:-1:-1;3024:5:24;3017:12;;2993:43;3068:16;;;;;3124:172;3148:8;;;;;;;:5;:8;;;;;;3139:17;;3135:53;;;3175:4;3168:11;;;;;;3135:53;3199:6;;;3195:52;;-1:-1:-1;990:2:24;3195:52;-1:-1:-1;;3254:3:24;3272:22;;;;;;;;;3124:172;;3308:5;3301:12;;;;2924:394;;;;:::o;570:43:22:-;;;;;;;;;;;;;;;:::o;386:37::-;;;:::o;1480:480:24:-;1588:7;-1:-1:-1;;;;;;;;;;;1611:27:24;;1603:72;;;;;-1:-1:-1;;;1603:72:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1689:28:24;;1681:74;;;;-1:-1:-1;;;1681:74:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:24;;;-1:-1:-1;;;1821:24:24;;;;;;;;1761:9;1821:24;;;;;;;;1781:5;;1761:9;;-1:-1:-1;;;;;1821:18:24;;;;;:24;;;;;;;;;;:18;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1821:24:24;;;;;;;;;-1:-1:-1;1821:24:24;-1:-1:-1;;;;;;;;;;;;1873:6:24;1862:1;1855:38;1851:42;;1908:7;-1:-1:-1;;;;;1908:18:24;;1927:1;1930;1908:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1908:24:24;;1480:480;-1:-1:-1;;;;;;1480:480:24:o;996:34::-;;;;;;:::o;3752:298:22:-;3834:19;3880:16;3869:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3869:35:22;;3861:43;;3915:9;3910:136;3930:27;;;3910:136;;;3976:28;3984:16;;4001:1;3984:19;;;;;;;;;;;;;3976:7;:28::i;:::-;3972:68;;;4027:4;4016:5;4022:1;4016:8;;;;;;;;:15;;;:8;;;;;;;;;;;:15;3972:68;3959:3;;3910:136;;;;3752:298;;;;:::o;1630:324::-;1688:1:38;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;1713:24:22::1;::::0;;;:11:::1;:24;::::0;;;;;::::1;;1712:25;1704:71;;;;-1:-1:-1::0;;;1704:71:22::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:20;1805;1813:11;1805:7;:20::i;:::-;1831:24;::::0;;;:11:::1;:24;::::0;;;;:31;;-1:-1:-1;;1831:31:22::1;1858:4;1831:31;::::0;;1782:43;-1:-1:-1;1868:17:22::1;:15;:17::i;:::-;1897:52;::::0;;::::1;::::0;::::1;::::0;;1933:15:::1;1897:52;::::0;::::1;::::0;;;1905:11;;1897:52:::1;::::0;;;;;;::::1;-1:-1:-1::0;;1645:1:38;2580:7;:22;1630:324:22:o;3364:94:24:-;3436:16;;;;3408:7;3430:23;;;:5;:23;;;;;;3364:94;:::o;903:40::-;;;;;;;;;;;;;:::o;947:45::-;990:2;947:45;:::o;3574:117:22:-;3636:4;3655:31;;;:15;:31;;;;;;;;;3574:117::o;3543:3478:24:-;3590:7;3609:6;3605:3411;;-1:-1:-1;3632:66:24;3617:82;;3605:3411;3714:1;3719;3714:6;3710:3306;;;-1:-1:-1;3737:66:24;3722:82;;3710:3306;3819:1;3824;3819:6;3815:3201;;;-1:-1:-1;3842:66:24;3827:82;;3815:3201;3924:1;3929;3924:6;3920:3096;;;-1:-1:-1;3947:66:24;3932:82;;3920:3096;4029:1;4034;4029:6;4025:2991;;;-1:-1:-1;4052:66:24;4037:82;;4025:2991;4134:1;4139;4134:6;4130:2886;;;-1:-1:-1;4157:66:24;4142:82;;4130:2886;4239:1;4244;4239:6;4235:2781;;;-1:-1:-1;4262:66:24;4247:82;;4235:2781;4344:1;4349;4344:6;4340:2676;;;-1:-1:-1;4367:66:24;4352:82;;4340:2676;4449:1;4454;4449:6;4445:2571;;;-1:-1:-1;4472:66:24;4457:82;;4445:2571;4554:1;4559;4554:6;4550:2466;;;-1:-1:-1;4577:66:24;4562:82;;4550:2466;4659:1;4664:2;4659:7;4655:2361;;;-1:-1:-1;4683:66:24;4668:82;;4655:2361;4765:1;4770:2;4765:7;4761:2255;;;-1:-1:-1;4789:66:24;4774:82;;4761:2255;4871:1;4876:2;4871:7;4867:2149;;;-1:-1:-1;4895:66:24;4880:82;;4867:2149;4977:1;4982:2;4977:7;4973:2043;;;-1:-1:-1;5001:66:24;4986:82;;4973:2043;5083:1;5088:2;5083:7;5079:1937;;;-1:-1:-1;5107:66:24;5092:82;;5079:1937;5189:1;5194:2;5189:7;5185:1831;;;-1:-1:-1;5213:66:24;5198:82;;5185:1831;5295:1;5300:2;5295:7;5291:1725;;;-1:-1:-1;5319:66:24;5304:82;;5291:1725;5401:1;5406:2;5401:7;5397:1619;;;-1:-1:-1;5425:66:24;5410:82;;5397:1619;5507:1;5512:2;5507:7;5503:1513;;;-1:-1:-1;5531:66:24;5516:82;;5503:1513;5613:1;5618:2;5613:7;5609:1407;;;-1:-1:-1;5637:66:24;5622:82;;5609:1407;5719:1;5724:2;5719:7;5715:1301;;;-1:-1:-1;5743:66:24;5728:82;;5715:1301;5825:1;5830:2;5825:7;5821:1195;;;-1:-1:-1;5849:66:24;5834:82;;5821:1195;5931:1;5936:2;5931:7;5927:1089;;;-1:-1:-1;5955:66:24;5940:82;;5927:1089;6037:1;6042:2;6037:7;6033:983;;;-1:-1:-1;6061:66:24;6046:82;;6033:983;6143:1;6148:2;6143:7;6139:877;;;-1:-1:-1;6167:66:24;6152:82;;6139:877;6249:1;6254:2;6249:7;6245:771;;;-1:-1:-1;6273:66:24;6258:82;;6245:771;6355:1;6360:2;6355:7;6351:665;;;-1:-1:-1;6379:66:24;6364:82;;6351:665;6461:1;6466:2;6461:7;6457:559;;;-1:-1:-1;6485:66:24;6470:82;;6457:559;6567:1;6572:2;6567:7;6563:453;;;-1:-1:-1;6591:66:24;6576:82;;6563:453;6673:1;6678:2;6673:7;6669:347;;;-1:-1:-1;6697:66:24;6682:82;;6669:347;6779:1;6784:2;6779:7;6775:241;;;-1:-1:-1;6803:66:24;6788:82;;6775:241;6885:1;6890:2;6885:7;6881:135;;;-1:-1:-1;6909:66:24;6894:82;;6881:135;6987:29;;;-1:-1:-1;;;6987:29:24;;;;;;;;;;;;-1:-1:-1;;;6987:29:24;;;;;;;;;;;;;;333:114;370:77;333:114;:::o;491:31::-;;;:::o;850:49::-;;;;;;;;;;;;;;:::o;1034:27::-;;;-1:-1:-1;;;1034:27:24;;;;;:::o;457:625:30:-;641:9;:14;633:80;;;;-1:-1:-1;;;633:80:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:12;;719:77;;;;-1:-1:-1;;;719:77:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;822:49;;804:12;;-1:-1:-1;;;;;822:15:30;;;846:12;:19;;;;804:12;822:49;804:12;822:49;846:19;822:15;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;803:68;;;885:7;877:57;;;;-1:-1:-1;;;877:57:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:8;;940:138;;976:32;;-1:-1:-1;;;;;976:13:30;;;998:4;;976:32;;;;998:4;976:13;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:46;;;;;1024:7;1016:55;;;;-1:-1:-1;;;1016:55:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;457:625;;;;;:::o;1964:888:24:-;2054:9;;;2014:12;;2054:9;-1:-1:-1;;;2054:9:24;;;;;;2102:6;2091:17;;;;;2077:31;;;;2069:92;;;;-1:-1:-1;;;2069:92:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2189:10;2232:5;2167:19;;;2281:360;2304:6;2300:10;;:1;:10;;;2281:360;;;2329:16;;;2325:224;;2369:16;2362:23;;2403:8;2409:1;2403:8;;:5;:8::i;:::-;2421:17;;;:14;:17;;;;;;;;;;:36;;;2395:16;-1:-1:-1;2325:224:24;;;2489:17;;;:14;:17;;;;;;;;;;;;-1:-1:-1;2524:16:24;;-1:-1:-1;2325:224:24;2575:34;2589:6;2597:4;2603:5;2575:13;:34::i;:::-;2556:53;-1:-1:-1;2633:1:24;2617:17;;;;;-1:-1:-1;2312:3:24;;2281:360;;;-1:-1:-1;;2670:16:24;;;990:2;2669:42;2670:16;;;;:20;;;2669:42;;;;;;2717:31;;-1:-1:-1;;2717:31:24;;;;;;;-1:-1:-1;2754:19:24;;;;;;;;;;;:38;;;;2798:26;;2810:14;;;2798:26;-1:-1:-1;;;2798:26:24;-1:-1:-1;;2798:26:24;;;;;;;;;;-1:-1:-1;2810:14:24;;;-1:-1:-1;;;1964:888:24:o;303:150:30:-;375:12;362:9;:25;354:94;;;;-1:-1:-1;;;354:94:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:150::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"./Anchor.sol\";\n\ncontract NativeAnchor is Anchor {\n  constructor(\n    IVerifier _verifier,\n    IHasher _hasher,\n    uint256 _denomination,\n    uint32 _merkleTreeHeight\n  ) Anchor(_verifier, _hasher, _denomination, _merkleTreeHeight) {}\n\n  function _processDeposit() internal override {\n    require(msg.value == denomination, \"Please send `mixDenomination` ETH along with transaction\");\n  }\n\n  function _processWithdraw(\n    address payable _recipient,\n    address payable _relayer,\n    uint256 _fee,\n    uint256 _refund\n  ) internal override {\n    // sanity checks\n    require(msg.value == 0, \"Message value is supposed to be zero for ETH instance\");\n    require(_refund == 0, \"Refund value is supposed to be zero for ETH instance\");\n\n    (bool success, ) = _recipient.call{ value: denomination - _fee }(\"\");\n    require(success, \"payment to _recipient did not go thru\");\n    if (_fee > 0) {\n      (success, ) = _relayer.call{ value: _fee }(\"\");\n      require(success, \"payment to _relayer did not go thru\");\n    }\n  }\n}\n",
  "sourcePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/NativeAnchor.sol",
  "ast": {
    "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/NativeAnchor.sol",
    "exportedSymbols": {
      "Anchor": [330],
      "IHasher": [472],
      "IVerifier": [59],
      "MerkleTreeWithHistory": [1127],
      "NativeAnchor": [1373],
      "ReentrancyGuard": [3959]
    },
    "id": 1374,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1274,
        "literals": ["solidity", "^", "0.7", ".0"],
        "nodeType": "PragmaDirective",
        "src": "32:23:30"
      },
      {
        "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Anchor.sol",
        "file": "./Anchor.sol",
        "id": 1275,
        "nodeType": "ImportDirective",
        "scope": 1374,
        "sourceUnit": 331,
        "src": "57:22:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1276,
              "name": "Anchor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 330,
              "src": "106:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Anchor_$330",
                "typeString": "contract Anchor"
              }
            },
            "id": 1277,
            "nodeType": "InheritanceSpecifier",
            "src": "106:6:30"
          }
        ],
        "contractDependencies": [330, 1127, 3959],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1373,
        "linearizedBaseContracts": [1373, 330, 3959, 1127],
        "name": "NativeAnchor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "297:2:30",
              "statements": []
            },
            "id": 1295,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1288,
                    "name": "_verifier",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1279,
                    "src": "243:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$59",
                      "typeString": "contract IVerifier"
                    }
                  },
                  {
                    "id": 1289,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1281,
                    "src": "254:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$472",
                      "typeString": "contract IHasher"
                    }
                  },
                  {
                    "id": 1290,
                    "name": "_denomination",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1283,
                    "src": "263:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 1291,
                    "name": "_merkleTreeHeight",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1285,
                    "src": "278:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 1292,
                "modifierName": {
                  "id": 1287,
                  "name": "Anchor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 330,
                  "src": "236:6:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Anchor_$330_$",
                    "typeString": "type(contract Anchor)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "236:60:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "134:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVerifier_$59",
                    "typeString": "contract IVerifier"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "IVerifier",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 59,
                    "src": "134:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerifier_$59",
                      "typeString": "contract IVerifier"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1281,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "159:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$472",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 1280,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 472,
                    "src": "159:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$472",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "_denomination",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "180:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "_merkleTreeHeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 1295,
                  "src": "207:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "128:107:30"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:30"
            },
            "scope": 1373,
            "src": "117:182:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [168],
            "body": {
              "id": 1307,
              "nodeType": "Block",
              "src": "348:105:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1300,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "362:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "362:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1302,
                          "name": "denomination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "375:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "362:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "389:58:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        },
                        "value": "Please send `mixDenomination` ETH along with transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                          "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                        }
                      ],
                      "id": 1299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "354:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "354:94:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1306,
                  "nodeType": "ExpressionStatement",
                  "src": "354:94:30"
                }
              ]
            },
            "id": 1308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processDeposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1297,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "339:8:30"
            },
            "parameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "327:2:30"
            },
            "returnParameters": {
              "id": 1298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:30"
            },
            "scope": 1373,
            "src": "303:150:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [270],
            "body": {
              "id": 1371,
              "nodeType": "Block",
              "src": "606:476:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1321,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "641:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "641:9:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "654:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "641:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "657:55:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        },
                        "value": "Message value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                          "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 1320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "633:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:80:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1327,
                  "nodeType": "ExpressionStatement",
                  "src": "633:80:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1329,
                          "name": "_refund",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "727:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "738:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "727:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "741:54:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        },
                        "value": "Refund value is supposed to be zero for ETH instance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                          "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                        }
                      ],
                      "id": 1328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "719:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:77:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1334,
                  "nodeType": "ExpressionStatement",
                  "src": "719:77:30"
                },
                {
                  "assignments": [1336, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1336,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 1371,
                      "src": "804:12:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1335,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "804:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1345,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "868:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1337,
                          "name": "_recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1310,
                          "src": "822:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "822:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1339,
                            "name": "denomination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "846:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1340,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1314,
                            "src": "861:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "846:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "822:45:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:49:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "803:68:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1347,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "885:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "894:39:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        },
                        "value": "payment to _recipient did not go thru"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                          "typeString": "literal_string \"payment to _recipient did not go thru\""
                        }
                      ],
                      "id": 1346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "877:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "877:57:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "877:57:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1351,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1314,
                      "src": "944:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "951:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "944:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1370,
                  "nodeType": "IfStatement",
                  "src": "940:138:30",
                  "trueBody": {
                    "id": 1369,
                    "nodeType": "Block",
                    "src": "954:124:30",
                    "statements": [
                      {
                        "expression": {
                          "id": 1362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1354,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1336,
                                "src": "963:7:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              null
                            ],
                            "id": 1355,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "962:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$__$",
                              "typeString": "tuple(bool,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1005:2:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "id": 1356,
                                  "name": "_relayer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1312,
                                  "src": "976:8:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 1357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "976:13:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": ["value"],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1358,
                                  "name": "_fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1314,
                                  "src": "998:4:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "976:28:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "976:32:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "962:46:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1363,
                        "nodeType": "ExpressionStatement",
                        "src": "962:46:30"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1365,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "1024:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                              "id": 1366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1033:37:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              },
                              "value": "payment to _relayer did not go thru"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                "typeString": "literal_string \"payment to _relayer did not go thru\""
                              }
                            ],
                            "id": 1364,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [4294967278, 4294967278],
                            "referencedDeclaration": 4294967278,
                            "src": "1016:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:55:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1368,
                        "nodeType": "ExpressionStatement",
                        "src": "1016:55:30"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_processWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1318,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "597:8:30"
            },
            "parameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "488:26:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:15:30",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "_relayer",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "520:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:15:30",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1314,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "550:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "_refund",
                  "nodeType": "VariableDeclaration",
                  "scope": 1372,
                  "src": "568:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:105:30"
            },
            "returnParameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "606:0:30"
            },
            "scope": 1373,
            "src": "457:625:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1374,
        "src": "81:1003:30"
      }
    ],
    "src": "32:1053:30"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/NativeAnchor.sol",
      "exportedSymbols": {
        "Anchor": [330],
        "IHasher": [472],
        "IVerifier": [59],
        "MerkleTreeWithHistory": [1127],
        "NativeAnchor": [1373],
        "ReentrancyGuard": [3959]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": ["solidity", "^", "0.7", ".0"]
        },
        "id": 1274,
        "name": "PragmaDirective",
        "src": "32:23:30"
      },
      {
        "attributes": {
          "SourceUnit": 331,
          "absolutePath": "/Users/ahmed/projects/edgeware/anon/contracts/evm/anchor/contracts/Anchor.sol",
          "file": "./Anchor.sol",
          "scope": 1374,
          "symbolAliases": [null],
          "unitAlias": ""
        },
        "id": 1275,
        "name": "ImportDirective",
        "src": "57:22:30"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [330, 1127, 3959],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [1373, 330, 3959, 1127],
          "name": "NativeAnchor",
          "scope": 1374
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Anchor",
                  "referencedDeclaration": 330,
                  "type": "contract Anchor"
                },
                "id": 1276,
                "name": "UserDefinedTypeName",
                "src": "106:6:30"
              }
            ],
            "id": 1277,
            "name": "InheritanceSpecifier",
            "src": "106:6:30"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1373,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_verifier",
                      "scope": 1295,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IVerifier",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IVerifier",
                          "referencedDeclaration": 59,
                          "type": "contract IVerifier"
                        },
                        "id": 1278,
                        "name": "UserDefinedTypeName",
                        "src": "134:9:30"
                      }
                    ],
                    "id": 1279,
                    "name": "VariableDeclaration",
                    "src": "134:19:30"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_hasher",
                      "scope": 1295,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IHasher",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IHasher",
                          "referencedDeclaration": 472,
                          "type": "contract IHasher"
                        },
                        "id": 1280,
                        "name": "UserDefinedTypeName",
                        "src": "159:7:30"
                      }
                    ],
                    "id": 1281,
                    "name": "VariableDeclaration",
                    "src": "159:15:30"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_denomination",
                      "scope": 1295,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1282,
                        "name": "ElementaryTypeName",
                        "src": "180:7:30"
                      }
                    ],
                    "id": 1283,
                    "name": "VariableDeclaration",
                    "src": "180:21:30"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_merkleTreeHeight",
                      "scope": 1295,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint32",
                          "type": "uint32"
                        },
                        "id": 1284,
                        "name": "ElementaryTypeName",
                        "src": "207:6:30"
                      }
                    ],
                    "id": 1285,
                    "name": "VariableDeclaration",
                    "src": "207:24:30"
                  }
                ],
                "id": 1286,
                "name": "ParameterList",
                "src": "128:107:30"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 1293,
                "name": "ParameterList",
                "src": "297:0:30"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 330,
                      "type": "type(contract Anchor)",
                      "value": "Anchor"
                    },
                    "id": 1287,
                    "name": "Identifier",
                    "src": "236:6:30"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 1279,
                      "type": "contract IVerifier",
                      "value": "_verifier"
                    },
                    "id": 1288,
                    "name": "Identifier",
                    "src": "243:9:30"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 1281,
                      "type": "contract IHasher",
                      "value": "_hasher"
                    },
                    "id": 1289,
                    "name": "Identifier",
                    "src": "254:7:30"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 1283,
                      "type": "uint256",
                      "value": "_denomination"
                    },
                    "id": 1290,
                    "name": "Identifier",
                    "src": "263:13:30"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [null],
                      "referencedDeclaration": 1285,
                      "type": "uint32",
                      "value": "_merkleTreeHeight"
                    },
                    "id": 1291,
                    "name": "Identifier",
                    "src": "278:17:30"
                  }
                ],
                "id": 1292,
                "name": "ModifierInvocation",
                "src": "236:60:30"
              },
              {
                "attributes": {
                  "statements": [null]
                },
                "children": [],
                "id": 1294,
                "name": "Block",
                "src": "297:2:30"
              }
            ],
            "id": 1295,
            "name": "FunctionDefinition",
            "src": "117:182:30"
          },
          {
            "attributes": {
              "baseFunctions": [168],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [null],
              "name": "_processDeposit",
              "scope": 1373,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [null]
                },
                "id": 1297,
                "name": "OverrideSpecifier",
                "src": "339:8:30"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 1296,
                "name": "ParameterList",
                "src": "327:2:30"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 1298,
                "name": "ParameterList",
                "src": "348:0:30"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2f304eb3b48ff9764f62a411a9ffb7aa0b97f5844028e285830061a3eb6b03a1",
                                  "typeString": "literal_string \"Please send `mixDenomination` ETH along with transaction\""
                                }
                              ],
                              "overloadedDeclarations": [4294967278, 4294967278],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1299,
                            "name": "Identifier",
                            "src": "354:7:30"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1300,
                                    "name": "Identifier",
                                    "src": "362:3:30"
                                  }
                                ],
                                "id": 1301,
                                "name": "MemberAccess",
                                "src": "362:9:30"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 67,
                                  "type": "uint256",
                                  "value": "denomination"
                                },
                                "id": 1302,
                                "name": "Identifier",
                                "src": "375:12:30"
                              }
                            ],
                            "id": 1303,
                            "name": "BinaryOperation",
                            "src": "362:25:30"
                          },
                          {
                            "attributes": {
                              "hexvalue": "506c656173652073656e6420606d697844656e6f6d696e6174696f6e602045544820616c6f6e672077697468207472616e73616374696f6e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Please send `mixDenomination` ETH along with transaction\"",
                              "value": "Please send `mixDenomination` ETH along with transaction"
                            },
                            "id": 1304,
                            "name": "Literal",
                            "src": "389:58:30"
                          }
                        ],
                        "id": 1305,
                        "name": "FunctionCall",
                        "src": "354:94:30"
                      }
                    ],
                    "id": 1306,
                    "name": "ExpressionStatement",
                    "src": "354:94:30"
                  }
                ],
                "id": 1307,
                "name": "Block",
                "src": "348:105:30"
              }
            ],
            "id": 1308,
            "name": "FunctionDefinition",
            "src": "303:150:30"
          },
          {
            "attributes": {
              "baseFunctions": [270],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [null],
              "name": "_processWithdraw",
              "scope": 1373,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [null]
                },
                "id": 1318,
                "name": "OverrideSpecifier",
                "src": "597:8:30"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_recipient",
                      "scope": 1372,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 1309,
                        "name": "ElementaryTypeName",
                        "src": "488:15:30"
                      }
                    ],
                    "id": 1310,
                    "name": "VariableDeclaration",
                    "src": "488:26:30"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_relayer",
                      "scope": 1372,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 1311,
                        "name": "ElementaryTypeName",
                        "src": "520:15:30"
                      }
                    ],
                    "id": 1312,
                    "name": "VariableDeclaration",
                    "src": "520:24:30"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_fee",
                      "scope": 1372,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1313,
                        "name": "ElementaryTypeName",
                        "src": "550:7:30"
                      }
                    ],
                    "id": 1314,
                    "name": "VariableDeclaration",
                    "src": "550:12:30"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_refund",
                      "scope": 1372,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1315,
                        "name": "ElementaryTypeName",
                        "src": "568:7:30"
                      }
                    ],
                    "id": 1316,
                    "name": "VariableDeclaration",
                    "src": "568:15:30"
                  }
                ],
                "id": 1317,
                "name": "ParameterList",
                "src": "482:105:30"
              },
              {
                "attributes": {
                  "parameters": [null]
                },
                "children": [],
                "id": 1319,
                "name": "ParameterList",
                "src": "606:0:30"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fb42cba8716e5ef1890027a84a51d30b8a9b3b6aff292fa4436fdfdb093e2b04",
                                  "typeString": "literal_string \"Message value is supposed to be zero for ETH instance\""
                                }
                              ],
                              "overloadedDeclarations": [4294967278, 4294967278],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1320,
                            "name": "Identifier",
                            "src": "633:7:30"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1321,
                                    "name": "Identifier",
                                    "src": "641:3:30"
                                  }
                                ],
                                "id": 1322,
                                "name": "MemberAccess",
                                "src": "641:9:30"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1323,
                                "name": "Literal",
                                "src": "654:1:30"
                              }
                            ],
                            "id": 1324,
                            "name": "BinaryOperation",
                            "src": "641:14:30"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4d6573736167652076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Message value is supposed to be zero for ETH instance\"",
                              "value": "Message value is supposed to be zero for ETH instance"
                            },
                            "id": 1325,
                            "name": "Literal",
                            "src": "657:55:30"
                          }
                        ],
                        "id": 1326,
                        "name": "FunctionCall",
                        "src": "633:80:30"
                      }
                    ],
                    "id": 1327,
                    "name": "ExpressionStatement",
                    "src": "633:80:30"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_81ced7081bd66f683c55140bd49cd7b11c81bd1cdd704658426bd50e1bd8ff84",
                                  "typeString": "literal_string \"Refund value is supposed to be zero for ETH instance\""
                                }
                              ],
                              "overloadedDeclarations": [4294967278, 4294967278],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1328,
                            "name": "Identifier",
                            "src": "719:7:30"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [null],
                                  "referencedDeclaration": 1316,
                                  "type": "uint256",
                                  "value": "_refund"
                                },
                                "id": 1329,
                                "name": "Identifier",
                                "src": "727:7:30"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1330,
                                "name": "Literal",
                                "src": "738:1:30"
                              }
                            ],
                            "id": 1331,
                            "name": "BinaryOperation",
                            "src": "727:12:30"
                          },
                          {
                            "attributes": {
                              "hexvalue": "526566756e642076616c756520697320737570706f73656420746f206265207a65726f20666f722045544820696e7374616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Refund value is supposed to be zero for ETH instance\"",
                              "value": "Refund value is supposed to be zero for ETH instance"
                            },
                            "id": 1332,
                            "name": "Literal",
                            "src": "741:54:30"
                          }
                        ],
                        "id": 1333,
                        "name": "FunctionCall",
                        "src": "719:77:30"
                      }
                    ],
                    "id": 1334,
                    "name": "ExpressionStatement",
                    "src": "719:77:30"
                  },
                  {
                    "attributes": {
                      "assignments": [1336, null]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "success",
                          "scope": 1371,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 1335,
                            "name": "ElementaryTypeName",
                            "src": "804:4:30"
                          }
                        ],
                        "id": 1336,
                        "name": "VariableDeclaration",
                        "src": "804:12:30"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple(bool,bytes memory)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": ["value"],
                              "type": "function (bytes memory) payable returns (bool,bytes memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "call",
                                  "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 1310,
                                      "type": "address payable",
                                      "value": "_recipient"
                                    },
                                    "id": 1337,
                                    "name": "Identifier",
                                    "src": "822:10:30"
                                  }
                                ],
                                "id": 1338,
                                "name": "MemberAccess",
                                "src": "822:15:30"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "-",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 67,
                                      "type": "uint256",
                                      "value": "denomination"
                                    },
                                    "id": 1339,
                                    "name": "Identifier",
                                    "src": "846:12:30"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 1314,
                                      "type": "uint256",
                                      "value": "_fee"
                                    },
                                    "id": 1340,
                                    "name": "Identifier",
                                    "src": "861:4:30"
                                  }
                                ],
                                "id": 1341,
                                "name": "BinaryOperation",
                                "src": "846:19:30"
                              }
                            ],
                            "id": 1342,
                            "name": "FunctionCallOptions",
                            "src": "822:45:30"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 1343,
                            "name": "Literal",
                            "src": "868:2:30"
                          }
                        ],
                        "id": 1344,
                        "name": "FunctionCall",
                        "src": "822:49:30"
                      }
                    ],
                    "id": 1345,
                    "name": "VariableDeclarationStatement",
                    "src": "803:68:30"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [null],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b817ea600508ee7f5bd41bf8aaa06721dfdc08b3c90f6e232639455b89be34a9",
                                  "typeString": "literal_string \"payment to _recipient did not go thru\""
                                }
                              ],
                              "overloadedDeclarations": [4294967278, 4294967278],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1346,
                            "name": "Identifier",
                            "src": "877:7:30"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 1336,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 1347,
                            "name": "Identifier",
                            "src": "885:7:30"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7061796d656e7420746f205f726563697069656e7420646964206e6f7420676f2074687275",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"payment to _recipient did not go thru\"",
                              "value": "payment to _recipient did not go thru"
                            },
                            "id": 1348,
                            "name": "Literal",
                            "src": "894:39:30"
                          }
                        ],
                        "id": 1349,
                        "name": "FunctionCall",
                        "src": "877:57:30"
                      }
                    ],
                    "id": 1350,
                    "name": "ExpressionStatement",
                    "src": "877:57:30"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [null],
                              "referencedDeclaration": 1314,
                              "type": "uint256",
                              "value": "_fee"
                            },
                            "id": 1351,
                            "name": "Identifier",
                            "src": "944:4:30"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1352,
                            "name": "Literal",
                            "src": "951:1:30"
                          }
                        ],
                        "id": 1353,
                        "name": "BinaryOperation",
                        "src": "944:8:30"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "tuple()"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "tuple(bool,)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [null],
                                          "referencedDeclaration": 1336,
                                          "type": "bool",
                                          "value": "success"
                                        },
                                        "id": 1354,
                                        "name": "Identifier",
                                        "src": "963:7:30"
                                      }
                                    ],
                                    "id": 1355,
                                    "name": "TupleExpression",
                                    "src": "962:11:30"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [null],
                                      "tryCall": false,
                                      "type": "tuple(bool,bytes memory)",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "names": ["value"],
                                          "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                                  "typeString": "literal_string \"\""
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "call",
                                              "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [null],
                                                  "referencedDeclaration": 1312,
                                                  "type": "address payable",
                                                  "value": "_relayer"
                                                },
                                                "id": 1356,
                                                "name": "Identifier",
                                                "src": "976:8:30"
                                              }
                                            ],
                                            "id": 1357,
                                            "name": "MemberAccess",
                                            "src": "976:13:30"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [null],
                                              "referencedDeclaration": 1314,
                                              "type": "uint256",
                                              "value": "_fee"
                                            },
                                            "id": 1358,
                                            "name": "Identifier",
                                            "src": "998:4:30"
                                          }
                                        ],
                                        "id": 1359,
                                        "name": "FunctionCallOptions",
                                        "src": "976:28:30"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "string",
                                          "type": "literal_string \"\"",
                                          "value": ""
                                        },
                                        "id": 1360,
                                        "name": "Literal",
                                        "src": "1005:2:30"
                                      }
                                    ],
                                    "id": 1361,
                                    "name": "FunctionCall",
                                    "src": "976:32:30"
                                  }
                                ],
                                "id": 1362,
                                "name": "Assignment",
                                "src": "962:46:30"
                              }
                            ],
                            "id": 1363,
                            "name": "ExpressionStatement",
                            "src": "962:46:30"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [null],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_d23a9425cb4f79b7ef092634b094eea804c04088be6543a697545fa4aa8c0ef0",
                                          "typeString": "literal_string \"payment to _relayer did not go thru\""
                                        }
                                      ],
                                      "overloadedDeclarations": [4294967278, 4294967278],
                                      "referencedDeclaration": 4294967278,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 1364,
                                    "name": "Identifier",
                                    "src": "1016:7:30"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [null],
                                      "referencedDeclaration": 1336,
                                      "type": "bool",
                                      "value": "success"
                                    },
                                    "id": 1365,
                                    "name": "Identifier",
                                    "src": "1024:7:30"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "7061796d656e7420746f205f72656c6179657220646964206e6f7420676f2074687275",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"payment to _relayer did not go thru\"",
                                      "value": "payment to _relayer did not go thru"
                                    },
                                    "id": 1366,
                                    "name": "Literal",
                                    "src": "1033:37:30"
                                  }
                                ],
                                "id": 1367,
                                "name": "FunctionCall",
                                "src": "1016:55:30"
                              }
                            ],
                            "id": 1368,
                            "name": "ExpressionStatement",
                            "src": "1016:55:30"
                          }
                        ],
                        "id": 1369,
                        "name": "Block",
                        "src": "954:124:30"
                      }
                    ],
                    "id": 1370,
                    "name": "IfStatement",
                    "src": "940:138:30"
                  }
                ],
                "id": 1371,
                "name": "Block",
                "src": "606:476:30"
              }
            ],
            "id": 1372,
            "name": "FunctionDefinition",
            "src": "457:625:30"
          }
        ],
        "id": 1373,
        "name": "ContractDefinition",
        "src": "81:1003:30"
      }
    ],
    "id": 1374,
    "name": "SourceUnit",
    "src": "32:1053:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-06T09:15:15.403Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(bytes32)": {
        "details": "Deposit funds into the contract. The caller must send (for ETH) or approve (for ERC20) value equal to or `denomination` of this instance.",
        "params": {
          "_commitment": "the note commitment, which is PedersenHash(nullifier + secret)"
        }
      },
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(address,bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "isSpent(bytes32)": {
        "details": "whether a note is already spent "
      },
      "isSpentArray(bytes32[])": {
        "details": "whether an array of notes is already spent "
      },
      "withdraw(bytes,bytes32,bytes32,address,address,uint256,uint256)": {
        "details": "Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs `input` array consists of: - merkle root of all deposits in the contract - hash of unique deposit nullifier to prevent double spends - the recipient of funds - optional fee that goes to the transaction sender (usually a relay)"
      },
      "zeros(uint256)": {
        "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
