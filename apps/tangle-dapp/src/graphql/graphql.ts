/* eslint-disable */
import { DocumentTypeDecoration } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** A floating point number that requires more precision than IEEE 754 binary 64 */
  BigFloat: { input: string; output: string; }
  /**
   * A signed eight-byte integer. The upper big integer values are greater than the
   * max value for a JavaScript number. Therefore all big integers will be output as
   * strings and not numbers.
   */
  BigInt: { input: any; output: any; }
  /** A location in a connection that can be used for resuming pagination. */
  Cursor: { input: any; output: any; }
  /** The day, does not include a time. */
  Date: { input: any; output: any; }
  /**
   * A point in time as described by the [ISO
   * 8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
   */
  Datetime: { input: any; output: any; }
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: { input: any; output: any; }
};

export type Account = Node & {
  __typename?: 'Account';
  /** Reads and enables pagination through a set of `Blueprint`. */
  blueprints: BlueprintsConnection;
  /** Reads and enables pagination through a set of `Blueprint`. */
  blueprintsByServiceOwnerIdAndBlueprintId: AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Blueprint`. */
  blueprintsByServiceRequestOwnerIdAndBlueprintId: AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyConnection;
  /** The block number when the account was created. */
  createdAt: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `Delegator`. */
  delegators: DelegatorsConnection;
  /** Account's account ID, serves as the unique identifier. */
  id: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `JobCall`. */
  jobCalls: JobCallsConnection;
  /** The block number of the last update to the account's information. */
  lastUpdateAt: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `LstPoolMember`. */
  lstPoolMembers: LstPoolMembersConnection;
  /** Reads and enables pagination through a set of `LstPool`. */
  lstPoolsByLstPoolMemberAccountIdAndLstPoolId: AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Operator`. */
  operators: OperatorsConnection;
  /** Reads and enables pagination through a set of `PointsAccrualRate`. */
  pointsAccruals: PointsAccrualRatesConnection;
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequests: ServiceRequestsConnection;
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequestsByServiceOwnerIdAndServiceRequestId: AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
  /** Reads and enables pagination through a set of `Service`. */
  servicesByJobCallCallerIdAndServiceId: AccountServicesByJobCallCallerIdAndServiceIdManyToManyConnection;
  /** Reads and enables pagination through a set of `PointsSnapshot`. */
  snapshots: PointsSnapshotsConnection;
  /** Total points associated with this account. */
  totalPoints: Scalars['BigFloat']['output'];
};


export type AccountBlueprintsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprints_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountBlueprintsByServiceOwnerIdAndBlueprintIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprints_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprints_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountDelegatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegators_Distinct_Enum>>>;
  filter?: InputMaybe<DelegatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountJobCallsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  filter?: InputMaybe<JobCallFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobCallsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountLstPoolMembersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_Members_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolMemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolMembersOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pools_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountPointsAccrualsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Points_Accrual_Rates_Distinct_Enum>>>;
  filter?: InputMaybe<PointsAccrualRateFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PointsAccrualRatesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountServiceRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountServicesByJobCallCallerIdAndServiceIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type AccountSnapshotsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Points_Snapshots_Distinct_Enum>>>;
  filter?: InputMaybe<PointsSnapshotFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PointsSnapshotsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type AccountAggregates = {
  __typename?: 'AccountAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AccountAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AccountDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AccountMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AccountMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AccountStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AccountStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AccountSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AccountVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AccountVarianceSampleAggregates>;
};

export type AccountAverageAggregates = {
  __typename?: 'AccountAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Blueprint` values, with data from `Service`. */
export type AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyConnection = {
  __typename?: 'AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BlueprintAggregates>;
  /** A list of edges which contains the `Blueprint`, info from the `Service`, and the cursor to aid in pagination. */
  edges: Array<AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BlueprintAggregates>>;
  /** A list of `Blueprint` objects. */
  nodes: Array<Maybe<Blueprint>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Blueprint` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Blueprint` values, with data from `Service`. */
export type AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<BlueprintsGroupBy>;
  having?: InputMaybe<BlueprintsHavingInput>;
};

/** A `Blueprint` edge in the connection, with data from `Service`. */
export type AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyEdge = {
  __typename?: 'AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Blueprint` at the end of the edge. */
  node?: Maybe<Blueprint>;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


/** A `Blueprint` edge in the connection, with data from `Service`. */
export type AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyEdgeServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Blueprint` values, with data from `ServiceRequest`. */
export type AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyConnection = {
  __typename?: 'AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BlueprintAggregates>;
  /** A list of edges which contains the `Blueprint`, info from the `ServiceRequest`, and the cursor to aid in pagination. */
  edges: Array<AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BlueprintAggregates>>;
  /** A list of `Blueprint` objects. */
  nodes: Array<Maybe<Blueprint>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Blueprint` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Blueprint` values, with data from `ServiceRequest`. */
export type AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<BlueprintsGroupBy>;
  having?: InputMaybe<BlueprintsHavingInput>;
};

/** A `Blueprint` edge in the connection, with data from `ServiceRequest`. */
export type AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyEdge = {
  __typename?: 'AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Blueprint` at the end of the edge. */
  node?: Maybe<Blueprint>;
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequests: ServiceRequestsConnection;
};


/** A `Blueprint` edge in the connection, with data from `ServiceRequest`. */
export type AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyEdgeServiceRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type AccountDistinctCountAggregates = {
  __typename?: 'AccountDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Account` object types. All fields are combined with a logical ‘and.’ */
export type AccountFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AccountFilter>>;
  /** Filter by the object’s `blueprints` relation. */
  blueprints?: InputMaybe<AccountToManyBlueprintFilter>;
  /** Some related `blueprints` exist. */
  blueprintsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `delegators` relation. */
  delegators?: InputMaybe<AccountToManyDelegatorFilter>;
  /** Some related `delegators` exist. */
  delegatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `jobCalls` relation. */
  jobCalls?: InputMaybe<AccountToManyJobCallFilter>;
  /** Some related `jobCalls` exist. */
  jobCallsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `lastUpdateAt` field. */
  lastUpdateAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `lstPoolMembers` relation. */
  lstPoolMembers?: InputMaybe<AccountToManyLstPoolMemberFilter>;
  /** Some related `lstPoolMembers` exist. */
  lstPoolMembersExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Negates the expression. */
  not?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `operators` relation. */
  operators?: InputMaybe<AccountToManyOperatorFilter>;
  /** Some related `operators` exist. */
  operatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AccountFilter>>;
  /** Filter by the object’s `pointsAccruals` relation. */
  pointsAccruals?: InputMaybe<AccountToManyPointsAccrualRateFilter>;
  /** Some related `pointsAccruals` exist. */
  pointsAccrualsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `serviceRequests` relation. */
  serviceRequests?: InputMaybe<AccountToManyServiceRequestFilter>;
  /** Some related `serviceRequests` exist. */
  serviceRequestsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `services` relation. */
  services?: InputMaybe<AccountToManyServiceFilter>;
  /** Some related `services` exist. */
  servicesExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `snapshots` relation. */
  snapshots?: InputMaybe<AccountToManyPointsSnapshotFilter>;
  /** Some related `snapshots` exist. */
  snapshotsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `totalPoints` field. */
  totalPoints?: InputMaybe<BigFloatFilter>;
};

/** A connection to a list of `LstPool` values, with data from `LstPoolMember`. */
export type AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyConnection = {
  __typename?: 'AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LstPoolAggregates>;
  /** A list of edges which contains the `LstPool`, info from the `LstPoolMember`, and the cursor to aid in pagination. */
  edges: Array<AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LstPoolAggregates>>;
  /** A list of `LstPool` objects. */
  nodes: Array<Maybe<LstPool>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LstPool` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LstPool` values, with data from `LstPoolMember`. */
export type AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<LstPoolsGroupBy>;
  having?: InputMaybe<LstPoolsHavingInput>;
};

/** A `LstPool` edge in the connection, with data from `LstPoolMember`. */
export type AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyEdge = {
  __typename?: 'AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `LstPoolMember`. */
  members: LstPoolMembersConnection;
  /** The `LstPool` at the end of the edge. */
  node?: Maybe<LstPool>;
};


/** A `LstPool` edge in the connection, with data from `LstPoolMember`. */
export type AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyEdgeMembersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_Members_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolMemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolMembersOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type AccountMaxAggregates = {
  __typename?: 'AccountMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountMinAggregates = {
  __typename?: 'AccountMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `ServiceRequest` values, with data from `Service`. */
export type AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyConnection = {
  __typename?: 'AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceRequestAggregates>;
  /** A list of edges which contains the `ServiceRequest`, info from the `Service`, and the cursor to aid in pagination. */
  edges: Array<AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceRequestAggregates>>;
  /** A list of `ServiceRequest` objects. */
  nodes: Array<Maybe<ServiceRequest>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ServiceRequest` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ServiceRequest` values, with data from `Service`. */
export type AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServiceRequestsGroupBy>;
  having?: InputMaybe<ServiceRequestsHavingInput>;
};

/** A `ServiceRequest` edge in the connection, with data from `Service`. */
export type AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyEdge = {
  __typename?: 'AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ServiceRequest` at the end of the edge. */
  node?: Maybe<ServiceRequest>;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


/** A `ServiceRequest` edge in the connection, with data from `Service`. */
export type AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyEdgeServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Service` values, with data from `JobCall`. */
export type AccountServicesByJobCallCallerIdAndServiceIdManyToManyConnection = {
  __typename?: 'AccountServicesByJobCallCallerIdAndServiceIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceAggregates>;
  /** A list of edges which contains the `Service`, info from the `JobCall`, and the cursor to aid in pagination. */
  edges: Array<AccountServicesByJobCallCallerIdAndServiceIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceAggregates>>;
  /** A list of `Service` objects. */
  nodes: Array<Maybe<Service>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Service` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Service` values, with data from `JobCall`. */
export type AccountServicesByJobCallCallerIdAndServiceIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServicesGroupBy>;
  having?: InputMaybe<ServicesHavingInput>;
};

/** A `Service` edge in the connection, with data from `JobCall`. */
export type AccountServicesByJobCallCallerIdAndServiceIdManyToManyEdge = {
  __typename?: 'AccountServicesByJobCallCallerIdAndServiceIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobCall`. */
  jobCalls: JobCallsConnection;
  /** The `Service` at the end of the edge. */
  node?: Maybe<Service>;
};


/** A `Service` edge in the connection, with data from `JobCall`. */
export type AccountServicesByJobCallCallerIdAndServiceIdManyToManyEdgeJobCallsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  filter?: InputMaybe<JobCallFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobCallsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type AccountStddevPopulationAggregates = {
  __typename?: 'AccountStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountStddevSampleAggregates = {
  __typename?: 'AccountStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountSumAggregates = {
  __typename?: 'AccountSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
  /** Sum of lastUpdateAt across the matching connection */
  lastUpdateAt: Scalars['BigInt']['output'];
  /** Sum of totalPoints across the matching connection */
  totalPoints: Scalars['BigFloat']['output'];
};

/** A filter to be used against many `Blueprint` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyBlueprintFilter = {
  /** Aggregates across related `Blueprint` match the filter criteria. */
  aggregates?: InputMaybe<BlueprintAggregatesFilter>;
  /** Every related `Blueprint` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BlueprintFilter>;
  /** No related `Blueprint` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BlueprintFilter>;
  /** Some related `Blueprint` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BlueprintFilter>;
};

/** A filter to be used against many `Delegator` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyDelegatorFilter = {
  /** Aggregates across related `Delegator` match the filter criteria. */
  aggregates?: InputMaybe<DelegatorAggregatesFilter>;
  /** Every related `Delegator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DelegatorFilter>;
  /** No related `Delegator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DelegatorFilter>;
  /** Some related `Delegator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DelegatorFilter>;
};

/** A filter to be used against many `JobCall` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyJobCallFilter = {
  /** Aggregates across related `JobCall` match the filter criteria. */
  aggregates?: InputMaybe<JobCallAggregatesFilter>;
  /** Every related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<JobCallFilter>;
  /** No related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<JobCallFilter>;
  /** Some related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<JobCallFilter>;
};

/** A filter to be used against many `LstPoolMember` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyLstPoolMemberFilter = {
  /** Aggregates across related `LstPoolMember` match the filter criteria. */
  aggregates?: InputMaybe<LstPoolMemberAggregatesFilter>;
  /** Every related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<LstPoolMemberFilter>;
  /** No related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<LstPoolMemberFilter>;
  /** Some related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<LstPoolMemberFilter>;
};

/** A filter to be used against many `Operator` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyOperatorFilter = {
  /** Aggregates across related `Operator` match the filter criteria. */
  aggregates?: InputMaybe<OperatorAggregatesFilter>;
  /** Every related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<OperatorFilter>;
  /** No related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<OperatorFilter>;
  /** Some related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<OperatorFilter>;
};

/** A filter to be used against many `PointsAccrualRate` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyPointsAccrualRateFilter = {
  /** Aggregates across related `PointsAccrualRate` match the filter criteria. */
  aggregates?: InputMaybe<PointsAccrualRateAggregatesFilter>;
  /** Every related `PointsAccrualRate` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<PointsAccrualRateFilter>;
  /** No related `PointsAccrualRate` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<PointsAccrualRateFilter>;
  /** Some related `PointsAccrualRate` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<PointsAccrualRateFilter>;
};

/** A filter to be used against many `PointsSnapshot` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyPointsSnapshotFilter = {
  /** Aggregates across related `PointsSnapshot` match the filter criteria. */
  aggregates?: InputMaybe<PointsSnapshotAggregatesFilter>;
  /** Every related `PointsSnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<PointsSnapshotFilter>;
  /** No related `PointsSnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<PointsSnapshotFilter>;
  /** Some related `PointsSnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<PointsSnapshotFilter>;
};

/** A filter to be used against many `Service` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyServiceFilter = {
  /** Aggregates across related `Service` match the filter criteria. */
  aggregates?: InputMaybe<ServiceAggregatesFilter>;
  /** Every related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceFilter>;
  /** No related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceFilter>;
  /** Some related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceFilter>;
};

/** A filter to be used against many `ServiceRequest` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyServiceRequestFilter = {
  /** Aggregates across related `ServiceRequest` match the filter criteria. */
  aggregates?: InputMaybe<ServiceRequestAggregatesFilter>;
  /** Every related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceRequestFilter>;
  /** No related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceRequestFilter>;
  /** Some related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceRequestFilter>;
};

export type AccountVariancePopulationAggregates = {
  __typename?: 'AccountVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountVarianceSampleAggregates = {
  __typename?: 'AccountVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Account` values. */
export type AccountsConnection = {
  __typename?: 'AccountsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account` and cursor to aid in pagination. */
  edges: Array<AccountsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Maybe<Account>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values. */
export type AccountsConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountsGroupBy>;
  having?: InputMaybe<AccountsHavingInput>;
};

/** A `Account` edge in the connection. */
export type AccountsEdge = {
  __typename?: 'AccountsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Account` at the end of the edge. */
  node?: Maybe<Account>;
};

/** Grouping methods for `Account` for usage during aggregation. */
export enum AccountsGroupBy {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  LastUpdateAt = 'LAST_UPDATE_AT',
  TotalPoints = 'TOTAL_POINTS'
}

export type AccountsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `Account` aggregates. */
export type AccountsHavingInput = {
  AND?: InputMaybe<Array<AccountsHavingInput>>;
  OR?: InputMaybe<Array<AccountsHavingInput>>;
  average?: InputMaybe<AccountsHavingAverageInput>;
  distinctCount?: InputMaybe<AccountsHavingDistinctCountInput>;
  max?: InputMaybe<AccountsHavingMaxInput>;
  min?: InputMaybe<AccountsHavingMinInput>;
  stddevPopulation?: InputMaybe<AccountsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AccountsHavingStddevSampleInput>;
  sum?: InputMaybe<AccountsHavingSumInput>;
  variancePopulation?: InputMaybe<AccountsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AccountsHavingVarianceSampleInput>;
};

export type AccountsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type AccountsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
};

/** Methods to use when ordering `Account`. */
export enum AccountsOrderBy {
  BlueprintsAverageBlockRangeAsc = 'BLUEPRINTS_AVERAGE_BLOCK_RANGE_ASC',
  BlueprintsAverageBlockRangeDesc = 'BLUEPRINTS_AVERAGE_BLOCK_RANGE_DESC',
  BlueprintsAverageCreatedAtAsc = 'BLUEPRINTS_AVERAGE_CREATED_AT_ASC',
  BlueprintsAverageCreatedAtDesc = 'BLUEPRINTS_AVERAGE_CREATED_AT_DESC',
  BlueprintsAverageIdAsc = 'BLUEPRINTS_AVERAGE_ID_ASC',
  BlueprintsAverageIdDesc = 'BLUEPRINTS_AVERAGE_ID_DESC',
  BlueprintsAverageOwnerIdAsc = 'BLUEPRINTS_AVERAGE_OWNER_ID_ASC',
  BlueprintsAverageOwnerIdDesc = 'BLUEPRINTS_AVERAGE_OWNER_ID_DESC',
  BlueprintsByOwnerIdCountAsc = 'BLUEPRINTS_BY_OWNER_ID__COUNT_ASC',
  BlueprintsByOwnerIdCountDesc = 'BLUEPRINTS_BY_OWNER_ID__COUNT_DESC',
  BlueprintsCountAsc = 'BLUEPRINTS_COUNT_ASC',
  BlueprintsCountDesc = 'BLUEPRINTS_COUNT_DESC',
  BlueprintsDistinctCountBlockRangeAsc = 'BLUEPRINTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  BlueprintsDistinctCountBlockRangeDesc = 'BLUEPRINTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  BlueprintsDistinctCountCreatedAtAsc = 'BLUEPRINTS_DISTINCT_COUNT_CREATED_AT_ASC',
  BlueprintsDistinctCountCreatedAtDesc = 'BLUEPRINTS_DISTINCT_COUNT_CREATED_AT_DESC',
  BlueprintsDistinctCountIdAsc = 'BLUEPRINTS_DISTINCT_COUNT_ID_ASC',
  BlueprintsDistinctCountIdDesc = 'BLUEPRINTS_DISTINCT_COUNT_ID_DESC',
  BlueprintsDistinctCountOwnerIdAsc = 'BLUEPRINTS_DISTINCT_COUNT_OWNER_ID_ASC',
  BlueprintsDistinctCountOwnerIdDesc = 'BLUEPRINTS_DISTINCT_COUNT_OWNER_ID_DESC',
  BlueprintsMaxBlockRangeAsc = 'BLUEPRINTS_MAX_BLOCK_RANGE_ASC',
  BlueprintsMaxBlockRangeDesc = 'BLUEPRINTS_MAX_BLOCK_RANGE_DESC',
  BlueprintsMaxCreatedAtAsc = 'BLUEPRINTS_MAX_CREATED_AT_ASC',
  BlueprintsMaxCreatedAtDesc = 'BLUEPRINTS_MAX_CREATED_AT_DESC',
  BlueprintsMaxIdAsc = 'BLUEPRINTS_MAX_ID_ASC',
  BlueprintsMaxIdDesc = 'BLUEPRINTS_MAX_ID_DESC',
  BlueprintsMaxOwnerIdAsc = 'BLUEPRINTS_MAX_OWNER_ID_ASC',
  BlueprintsMaxOwnerIdDesc = 'BLUEPRINTS_MAX_OWNER_ID_DESC',
  BlueprintsMinBlockRangeAsc = 'BLUEPRINTS_MIN_BLOCK_RANGE_ASC',
  BlueprintsMinBlockRangeDesc = 'BLUEPRINTS_MIN_BLOCK_RANGE_DESC',
  BlueprintsMinCreatedAtAsc = 'BLUEPRINTS_MIN_CREATED_AT_ASC',
  BlueprintsMinCreatedAtDesc = 'BLUEPRINTS_MIN_CREATED_AT_DESC',
  BlueprintsMinIdAsc = 'BLUEPRINTS_MIN_ID_ASC',
  BlueprintsMinIdDesc = 'BLUEPRINTS_MIN_ID_DESC',
  BlueprintsMinOwnerIdAsc = 'BLUEPRINTS_MIN_OWNER_ID_ASC',
  BlueprintsMinOwnerIdDesc = 'BLUEPRINTS_MIN_OWNER_ID_DESC',
  BlueprintsStddevPopulationBlockRangeAsc = 'BLUEPRINTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  BlueprintsStddevPopulationBlockRangeDesc = 'BLUEPRINTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  BlueprintsStddevPopulationCreatedAtAsc = 'BLUEPRINTS_STDDEV_POPULATION_CREATED_AT_ASC',
  BlueprintsStddevPopulationCreatedAtDesc = 'BLUEPRINTS_STDDEV_POPULATION_CREATED_AT_DESC',
  BlueprintsStddevPopulationIdAsc = 'BLUEPRINTS_STDDEV_POPULATION_ID_ASC',
  BlueprintsStddevPopulationIdDesc = 'BLUEPRINTS_STDDEV_POPULATION_ID_DESC',
  BlueprintsStddevPopulationOwnerIdAsc = 'BLUEPRINTS_STDDEV_POPULATION_OWNER_ID_ASC',
  BlueprintsStddevPopulationOwnerIdDesc = 'BLUEPRINTS_STDDEV_POPULATION_OWNER_ID_DESC',
  BlueprintsStddevSampleBlockRangeAsc = 'BLUEPRINTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  BlueprintsStddevSampleBlockRangeDesc = 'BLUEPRINTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  BlueprintsStddevSampleCreatedAtAsc = 'BLUEPRINTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  BlueprintsStddevSampleCreatedAtDesc = 'BLUEPRINTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  BlueprintsStddevSampleIdAsc = 'BLUEPRINTS_STDDEV_SAMPLE_ID_ASC',
  BlueprintsStddevSampleIdDesc = 'BLUEPRINTS_STDDEV_SAMPLE_ID_DESC',
  BlueprintsStddevSampleOwnerIdAsc = 'BLUEPRINTS_STDDEV_SAMPLE_OWNER_ID_ASC',
  BlueprintsStddevSampleOwnerIdDesc = 'BLUEPRINTS_STDDEV_SAMPLE_OWNER_ID_DESC',
  BlueprintsSumBlockRangeAsc = 'BLUEPRINTS_SUM_BLOCK_RANGE_ASC',
  BlueprintsSumBlockRangeDesc = 'BLUEPRINTS_SUM_BLOCK_RANGE_DESC',
  BlueprintsSumCreatedAtAsc = 'BLUEPRINTS_SUM_CREATED_AT_ASC',
  BlueprintsSumCreatedAtDesc = 'BLUEPRINTS_SUM_CREATED_AT_DESC',
  BlueprintsSumIdAsc = 'BLUEPRINTS_SUM_ID_ASC',
  BlueprintsSumIdDesc = 'BLUEPRINTS_SUM_ID_DESC',
  BlueprintsSumOwnerIdAsc = 'BLUEPRINTS_SUM_OWNER_ID_ASC',
  BlueprintsSumOwnerIdDesc = 'BLUEPRINTS_SUM_OWNER_ID_DESC',
  BlueprintsVariancePopulationBlockRangeAsc = 'BLUEPRINTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  BlueprintsVariancePopulationBlockRangeDesc = 'BLUEPRINTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  BlueprintsVariancePopulationCreatedAtAsc = 'BLUEPRINTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  BlueprintsVariancePopulationCreatedAtDesc = 'BLUEPRINTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  BlueprintsVariancePopulationIdAsc = 'BLUEPRINTS_VARIANCE_POPULATION_ID_ASC',
  BlueprintsVariancePopulationIdDesc = 'BLUEPRINTS_VARIANCE_POPULATION_ID_DESC',
  BlueprintsVariancePopulationOwnerIdAsc = 'BLUEPRINTS_VARIANCE_POPULATION_OWNER_ID_ASC',
  BlueprintsVariancePopulationOwnerIdDesc = 'BLUEPRINTS_VARIANCE_POPULATION_OWNER_ID_DESC',
  BlueprintsVarianceSampleBlockRangeAsc = 'BLUEPRINTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  BlueprintsVarianceSampleBlockRangeDesc = 'BLUEPRINTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  BlueprintsVarianceSampleCreatedAtAsc = 'BLUEPRINTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  BlueprintsVarianceSampleCreatedAtDesc = 'BLUEPRINTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  BlueprintsVarianceSampleIdAsc = 'BLUEPRINTS_VARIANCE_SAMPLE_ID_ASC',
  BlueprintsVarianceSampleIdDesc = 'BLUEPRINTS_VARIANCE_SAMPLE_ID_DESC',
  BlueprintsVarianceSampleOwnerIdAsc = 'BLUEPRINTS_VARIANCE_SAMPLE_OWNER_ID_ASC',
  BlueprintsVarianceSampleOwnerIdDesc = 'BLUEPRINTS_VARIANCE_SAMPLE_OWNER_ID_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  DelegatorsAverageAccountIdAsc = 'DELEGATORS_AVERAGE_ACCOUNT_ID_ASC',
  DelegatorsAverageAccountIdDesc = 'DELEGATORS_AVERAGE_ACCOUNT_ID_DESC',
  DelegatorsAverageBlockRangeAsc = 'DELEGATORS_AVERAGE_BLOCK_RANGE_ASC',
  DelegatorsAverageBlockRangeDesc = 'DELEGATORS_AVERAGE_BLOCK_RANGE_DESC',
  DelegatorsAverageIdAsc = 'DELEGATORS_AVERAGE_ID_ASC',
  DelegatorsAverageIdDesc = 'DELEGATORS_AVERAGE_ID_DESC',
  DelegatorsAverageJoinedAtAsc = 'DELEGATORS_AVERAGE_JOINED_AT_ASC',
  DelegatorsAverageJoinedAtDesc = 'DELEGATORS_AVERAGE_JOINED_AT_DESC',
  DelegatorsAverageLastUpdateAtAsc = 'DELEGATORS_AVERAGE_LAST_UPDATE_AT_ASC',
  DelegatorsAverageLastUpdateAtDesc = 'DELEGATORS_AVERAGE_LAST_UPDATE_AT_DESC',
  DelegatorsByAccountIdCountAsc = 'DELEGATORS_BY_ACCOUNT_ID__COUNT_ASC',
  DelegatorsByAccountIdCountDesc = 'DELEGATORS_BY_ACCOUNT_ID__COUNT_DESC',
  DelegatorsCountAsc = 'DELEGATORS_COUNT_ASC',
  DelegatorsCountDesc = 'DELEGATORS_COUNT_DESC',
  DelegatorsDistinctCountAccountIdAsc = 'DELEGATORS_DISTINCT_COUNT_ACCOUNT_ID_ASC',
  DelegatorsDistinctCountAccountIdDesc = 'DELEGATORS_DISTINCT_COUNT_ACCOUNT_ID_DESC',
  DelegatorsDistinctCountBlockRangeAsc = 'DELEGATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  DelegatorsDistinctCountBlockRangeDesc = 'DELEGATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  DelegatorsDistinctCountIdAsc = 'DELEGATORS_DISTINCT_COUNT_ID_ASC',
  DelegatorsDistinctCountIdDesc = 'DELEGATORS_DISTINCT_COUNT_ID_DESC',
  DelegatorsDistinctCountJoinedAtAsc = 'DELEGATORS_DISTINCT_COUNT_JOINED_AT_ASC',
  DelegatorsDistinctCountJoinedAtDesc = 'DELEGATORS_DISTINCT_COUNT_JOINED_AT_DESC',
  DelegatorsDistinctCountLastUpdateAtAsc = 'DELEGATORS_DISTINCT_COUNT_LAST_UPDATE_AT_ASC',
  DelegatorsDistinctCountLastUpdateAtDesc = 'DELEGATORS_DISTINCT_COUNT_LAST_UPDATE_AT_DESC',
  DelegatorsMaxAccountIdAsc = 'DELEGATORS_MAX_ACCOUNT_ID_ASC',
  DelegatorsMaxAccountIdDesc = 'DELEGATORS_MAX_ACCOUNT_ID_DESC',
  DelegatorsMaxBlockRangeAsc = 'DELEGATORS_MAX_BLOCK_RANGE_ASC',
  DelegatorsMaxBlockRangeDesc = 'DELEGATORS_MAX_BLOCK_RANGE_DESC',
  DelegatorsMaxIdAsc = 'DELEGATORS_MAX_ID_ASC',
  DelegatorsMaxIdDesc = 'DELEGATORS_MAX_ID_DESC',
  DelegatorsMaxJoinedAtAsc = 'DELEGATORS_MAX_JOINED_AT_ASC',
  DelegatorsMaxJoinedAtDesc = 'DELEGATORS_MAX_JOINED_AT_DESC',
  DelegatorsMaxLastUpdateAtAsc = 'DELEGATORS_MAX_LAST_UPDATE_AT_ASC',
  DelegatorsMaxLastUpdateAtDesc = 'DELEGATORS_MAX_LAST_UPDATE_AT_DESC',
  DelegatorsMinAccountIdAsc = 'DELEGATORS_MIN_ACCOUNT_ID_ASC',
  DelegatorsMinAccountIdDesc = 'DELEGATORS_MIN_ACCOUNT_ID_DESC',
  DelegatorsMinBlockRangeAsc = 'DELEGATORS_MIN_BLOCK_RANGE_ASC',
  DelegatorsMinBlockRangeDesc = 'DELEGATORS_MIN_BLOCK_RANGE_DESC',
  DelegatorsMinIdAsc = 'DELEGATORS_MIN_ID_ASC',
  DelegatorsMinIdDesc = 'DELEGATORS_MIN_ID_DESC',
  DelegatorsMinJoinedAtAsc = 'DELEGATORS_MIN_JOINED_AT_ASC',
  DelegatorsMinJoinedAtDesc = 'DELEGATORS_MIN_JOINED_AT_DESC',
  DelegatorsMinLastUpdateAtAsc = 'DELEGATORS_MIN_LAST_UPDATE_AT_ASC',
  DelegatorsMinLastUpdateAtDesc = 'DELEGATORS_MIN_LAST_UPDATE_AT_DESC',
  DelegatorsStddevPopulationAccountIdAsc = 'DELEGATORS_STDDEV_POPULATION_ACCOUNT_ID_ASC',
  DelegatorsStddevPopulationAccountIdDesc = 'DELEGATORS_STDDEV_POPULATION_ACCOUNT_ID_DESC',
  DelegatorsStddevPopulationBlockRangeAsc = 'DELEGATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  DelegatorsStddevPopulationBlockRangeDesc = 'DELEGATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  DelegatorsStddevPopulationIdAsc = 'DELEGATORS_STDDEV_POPULATION_ID_ASC',
  DelegatorsStddevPopulationIdDesc = 'DELEGATORS_STDDEV_POPULATION_ID_DESC',
  DelegatorsStddevPopulationJoinedAtAsc = 'DELEGATORS_STDDEV_POPULATION_JOINED_AT_ASC',
  DelegatorsStddevPopulationJoinedAtDesc = 'DELEGATORS_STDDEV_POPULATION_JOINED_AT_DESC',
  DelegatorsStddevPopulationLastUpdateAtAsc = 'DELEGATORS_STDDEV_POPULATION_LAST_UPDATE_AT_ASC',
  DelegatorsStddevPopulationLastUpdateAtDesc = 'DELEGATORS_STDDEV_POPULATION_LAST_UPDATE_AT_DESC',
  DelegatorsStddevSampleAccountIdAsc = 'DELEGATORS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',
  DelegatorsStddevSampleAccountIdDesc = 'DELEGATORS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',
  DelegatorsStddevSampleBlockRangeAsc = 'DELEGATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  DelegatorsStddevSampleBlockRangeDesc = 'DELEGATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  DelegatorsStddevSampleIdAsc = 'DELEGATORS_STDDEV_SAMPLE_ID_ASC',
  DelegatorsStddevSampleIdDesc = 'DELEGATORS_STDDEV_SAMPLE_ID_DESC',
  DelegatorsStddevSampleJoinedAtAsc = 'DELEGATORS_STDDEV_SAMPLE_JOINED_AT_ASC',
  DelegatorsStddevSampleJoinedAtDesc = 'DELEGATORS_STDDEV_SAMPLE_JOINED_AT_DESC',
  DelegatorsStddevSampleLastUpdateAtAsc = 'DELEGATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_ASC',
  DelegatorsStddevSampleLastUpdateAtDesc = 'DELEGATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_DESC',
  DelegatorsSumAccountIdAsc = 'DELEGATORS_SUM_ACCOUNT_ID_ASC',
  DelegatorsSumAccountIdDesc = 'DELEGATORS_SUM_ACCOUNT_ID_DESC',
  DelegatorsSumBlockRangeAsc = 'DELEGATORS_SUM_BLOCK_RANGE_ASC',
  DelegatorsSumBlockRangeDesc = 'DELEGATORS_SUM_BLOCK_RANGE_DESC',
  DelegatorsSumIdAsc = 'DELEGATORS_SUM_ID_ASC',
  DelegatorsSumIdDesc = 'DELEGATORS_SUM_ID_DESC',
  DelegatorsSumJoinedAtAsc = 'DELEGATORS_SUM_JOINED_AT_ASC',
  DelegatorsSumJoinedAtDesc = 'DELEGATORS_SUM_JOINED_AT_DESC',
  DelegatorsSumLastUpdateAtAsc = 'DELEGATORS_SUM_LAST_UPDATE_AT_ASC',
  DelegatorsSumLastUpdateAtDesc = 'DELEGATORS_SUM_LAST_UPDATE_AT_DESC',
  DelegatorsVariancePopulationAccountIdAsc = 'DELEGATORS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',
  DelegatorsVariancePopulationAccountIdDesc = 'DELEGATORS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',
  DelegatorsVariancePopulationBlockRangeAsc = 'DELEGATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  DelegatorsVariancePopulationBlockRangeDesc = 'DELEGATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  DelegatorsVariancePopulationIdAsc = 'DELEGATORS_VARIANCE_POPULATION_ID_ASC',
  DelegatorsVariancePopulationIdDesc = 'DELEGATORS_VARIANCE_POPULATION_ID_DESC',
  DelegatorsVariancePopulationJoinedAtAsc = 'DELEGATORS_VARIANCE_POPULATION_JOINED_AT_ASC',
  DelegatorsVariancePopulationJoinedAtDesc = 'DELEGATORS_VARIANCE_POPULATION_JOINED_AT_DESC',
  DelegatorsVariancePopulationLastUpdateAtAsc = 'DELEGATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_ASC',
  DelegatorsVariancePopulationLastUpdateAtDesc = 'DELEGATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_DESC',
  DelegatorsVarianceSampleAccountIdAsc = 'DELEGATORS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',
  DelegatorsVarianceSampleAccountIdDesc = 'DELEGATORS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',
  DelegatorsVarianceSampleBlockRangeAsc = 'DELEGATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  DelegatorsVarianceSampleBlockRangeDesc = 'DELEGATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  DelegatorsVarianceSampleIdAsc = 'DELEGATORS_VARIANCE_SAMPLE_ID_ASC',
  DelegatorsVarianceSampleIdDesc = 'DELEGATORS_VARIANCE_SAMPLE_ID_DESC',
  DelegatorsVarianceSampleJoinedAtAsc = 'DELEGATORS_VARIANCE_SAMPLE_JOINED_AT_ASC',
  DelegatorsVarianceSampleJoinedAtDesc = 'DELEGATORS_VARIANCE_SAMPLE_JOINED_AT_DESC',
  DelegatorsVarianceSampleLastUpdateAtAsc = 'DELEGATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_ASC',
  DelegatorsVarianceSampleLastUpdateAtDesc = 'DELEGATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  JobCallsAverageBlockRangeAsc = 'JOB_CALLS_AVERAGE_BLOCK_RANGE_ASC',
  JobCallsAverageBlockRangeDesc = 'JOB_CALLS_AVERAGE_BLOCK_RANGE_DESC',
  JobCallsAverageCallerIdAsc = 'JOB_CALLS_AVERAGE_CALLER_ID_ASC',
  JobCallsAverageCallerIdDesc = 'JOB_CALLS_AVERAGE_CALLER_ID_DESC',
  JobCallsAverageCreatedAtAsc = 'JOB_CALLS_AVERAGE_CREATED_AT_ASC',
  JobCallsAverageCreatedAtDesc = 'JOB_CALLS_AVERAGE_CREATED_AT_DESC',
  JobCallsAverageIdAsc = 'JOB_CALLS_AVERAGE_ID_ASC',
  JobCallsAverageIdDesc = 'JOB_CALLS_AVERAGE_ID_DESC',
  JobCallsAverageJobIdAsc = 'JOB_CALLS_AVERAGE_JOB_ID_ASC',
  JobCallsAverageJobIdDesc = 'JOB_CALLS_AVERAGE_JOB_ID_DESC',
  JobCallsAverageServiceIdAsc = 'JOB_CALLS_AVERAGE_SERVICE_ID_ASC',
  JobCallsAverageServiceIdDesc = 'JOB_CALLS_AVERAGE_SERVICE_ID_DESC',
  JobCallsByCallerIdCountAsc = 'JOB_CALLS_BY_CALLER_ID__COUNT_ASC',
  JobCallsByCallerIdCountDesc = 'JOB_CALLS_BY_CALLER_ID__COUNT_DESC',
  JobCallsCountAsc = 'JOB_CALLS_COUNT_ASC',
  JobCallsCountDesc = 'JOB_CALLS_COUNT_DESC',
  JobCallsDistinctCountBlockRangeAsc = 'JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  JobCallsDistinctCountBlockRangeDesc = 'JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  JobCallsDistinctCountCallerIdAsc = 'JOB_CALLS_DISTINCT_COUNT_CALLER_ID_ASC',
  JobCallsDistinctCountCallerIdDesc = 'JOB_CALLS_DISTINCT_COUNT_CALLER_ID_DESC',
  JobCallsDistinctCountCreatedAtAsc = 'JOB_CALLS_DISTINCT_COUNT_CREATED_AT_ASC',
  JobCallsDistinctCountCreatedAtDesc = 'JOB_CALLS_DISTINCT_COUNT_CREATED_AT_DESC',
  JobCallsDistinctCountIdAsc = 'JOB_CALLS_DISTINCT_COUNT_ID_ASC',
  JobCallsDistinctCountIdDesc = 'JOB_CALLS_DISTINCT_COUNT_ID_DESC',
  JobCallsDistinctCountJobIdAsc = 'JOB_CALLS_DISTINCT_COUNT_JOB_ID_ASC',
  JobCallsDistinctCountJobIdDesc = 'JOB_CALLS_DISTINCT_COUNT_JOB_ID_DESC',
  JobCallsDistinctCountServiceIdAsc = 'JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_ASC',
  JobCallsDistinctCountServiceIdDesc = 'JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_DESC',
  JobCallsMaxBlockRangeAsc = 'JOB_CALLS_MAX_BLOCK_RANGE_ASC',
  JobCallsMaxBlockRangeDesc = 'JOB_CALLS_MAX_BLOCK_RANGE_DESC',
  JobCallsMaxCallerIdAsc = 'JOB_CALLS_MAX_CALLER_ID_ASC',
  JobCallsMaxCallerIdDesc = 'JOB_CALLS_MAX_CALLER_ID_DESC',
  JobCallsMaxCreatedAtAsc = 'JOB_CALLS_MAX_CREATED_AT_ASC',
  JobCallsMaxCreatedAtDesc = 'JOB_CALLS_MAX_CREATED_AT_DESC',
  JobCallsMaxIdAsc = 'JOB_CALLS_MAX_ID_ASC',
  JobCallsMaxIdDesc = 'JOB_CALLS_MAX_ID_DESC',
  JobCallsMaxJobIdAsc = 'JOB_CALLS_MAX_JOB_ID_ASC',
  JobCallsMaxJobIdDesc = 'JOB_CALLS_MAX_JOB_ID_DESC',
  JobCallsMaxServiceIdAsc = 'JOB_CALLS_MAX_SERVICE_ID_ASC',
  JobCallsMaxServiceIdDesc = 'JOB_CALLS_MAX_SERVICE_ID_DESC',
  JobCallsMinBlockRangeAsc = 'JOB_CALLS_MIN_BLOCK_RANGE_ASC',
  JobCallsMinBlockRangeDesc = 'JOB_CALLS_MIN_BLOCK_RANGE_DESC',
  JobCallsMinCallerIdAsc = 'JOB_CALLS_MIN_CALLER_ID_ASC',
  JobCallsMinCallerIdDesc = 'JOB_CALLS_MIN_CALLER_ID_DESC',
  JobCallsMinCreatedAtAsc = 'JOB_CALLS_MIN_CREATED_AT_ASC',
  JobCallsMinCreatedAtDesc = 'JOB_CALLS_MIN_CREATED_AT_DESC',
  JobCallsMinIdAsc = 'JOB_CALLS_MIN_ID_ASC',
  JobCallsMinIdDesc = 'JOB_CALLS_MIN_ID_DESC',
  JobCallsMinJobIdAsc = 'JOB_CALLS_MIN_JOB_ID_ASC',
  JobCallsMinJobIdDesc = 'JOB_CALLS_MIN_JOB_ID_DESC',
  JobCallsMinServiceIdAsc = 'JOB_CALLS_MIN_SERVICE_ID_ASC',
  JobCallsMinServiceIdDesc = 'JOB_CALLS_MIN_SERVICE_ID_DESC',
  JobCallsStddevPopulationBlockRangeAsc = 'JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  JobCallsStddevPopulationBlockRangeDesc = 'JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  JobCallsStddevPopulationCallerIdAsc = 'JOB_CALLS_STDDEV_POPULATION_CALLER_ID_ASC',
  JobCallsStddevPopulationCallerIdDesc = 'JOB_CALLS_STDDEV_POPULATION_CALLER_ID_DESC',
  JobCallsStddevPopulationCreatedAtAsc = 'JOB_CALLS_STDDEV_POPULATION_CREATED_AT_ASC',
  JobCallsStddevPopulationCreatedAtDesc = 'JOB_CALLS_STDDEV_POPULATION_CREATED_AT_DESC',
  JobCallsStddevPopulationIdAsc = 'JOB_CALLS_STDDEV_POPULATION_ID_ASC',
  JobCallsStddevPopulationIdDesc = 'JOB_CALLS_STDDEV_POPULATION_ID_DESC',
  JobCallsStddevPopulationJobIdAsc = 'JOB_CALLS_STDDEV_POPULATION_JOB_ID_ASC',
  JobCallsStddevPopulationJobIdDesc = 'JOB_CALLS_STDDEV_POPULATION_JOB_ID_DESC',
  JobCallsStddevPopulationServiceIdAsc = 'JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_ASC',
  JobCallsStddevPopulationServiceIdDesc = 'JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_DESC',
  JobCallsStddevSampleBlockRangeAsc = 'JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  JobCallsStddevSampleBlockRangeDesc = 'JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  JobCallsStddevSampleCallerIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_ASC',
  JobCallsStddevSampleCallerIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_DESC',
  JobCallsStddevSampleCreatedAtAsc = 'JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_ASC',
  JobCallsStddevSampleCreatedAtDesc = 'JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_DESC',
  JobCallsStddevSampleIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_ID_ASC',
  JobCallsStddevSampleIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_ID_DESC',
  JobCallsStddevSampleJobIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_JOB_ID_ASC',
  JobCallsStddevSampleJobIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_JOB_ID_DESC',
  JobCallsStddevSampleServiceIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_ASC',
  JobCallsStddevSampleServiceIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_DESC',
  JobCallsSumBlockRangeAsc = 'JOB_CALLS_SUM_BLOCK_RANGE_ASC',
  JobCallsSumBlockRangeDesc = 'JOB_CALLS_SUM_BLOCK_RANGE_DESC',
  JobCallsSumCallerIdAsc = 'JOB_CALLS_SUM_CALLER_ID_ASC',
  JobCallsSumCallerIdDesc = 'JOB_CALLS_SUM_CALLER_ID_DESC',
  JobCallsSumCreatedAtAsc = 'JOB_CALLS_SUM_CREATED_AT_ASC',
  JobCallsSumCreatedAtDesc = 'JOB_CALLS_SUM_CREATED_AT_DESC',
  JobCallsSumIdAsc = 'JOB_CALLS_SUM_ID_ASC',
  JobCallsSumIdDesc = 'JOB_CALLS_SUM_ID_DESC',
  JobCallsSumJobIdAsc = 'JOB_CALLS_SUM_JOB_ID_ASC',
  JobCallsSumJobIdDesc = 'JOB_CALLS_SUM_JOB_ID_DESC',
  JobCallsSumServiceIdAsc = 'JOB_CALLS_SUM_SERVICE_ID_ASC',
  JobCallsSumServiceIdDesc = 'JOB_CALLS_SUM_SERVICE_ID_DESC',
  JobCallsVariancePopulationBlockRangeAsc = 'JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  JobCallsVariancePopulationBlockRangeDesc = 'JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  JobCallsVariancePopulationCallerIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_ASC',
  JobCallsVariancePopulationCallerIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_DESC',
  JobCallsVariancePopulationCreatedAtAsc = 'JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_ASC',
  JobCallsVariancePopulationCreatedAtDesc = 'JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_DESC',
  JobCallsVariancePopulationIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_ID_ASC',
  JobCallsVariancePopulationIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_ID_DESC',
  JobCallsVariancePopulationJobIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_JOB_ID_ASC',
  JobCallsVariancePopulationJobIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_JOB_ID_DESC',
  JobCallsVariancePopulationServiceIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_ASC',
  JobCallsVariancePopulationServiceIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_DESC',
  JobCallsVarianceSampleBlockRangeAsc = 'JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  JobCallsVarianceSampleBlockRangeDesc = 'JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  JobCallsVarianceSampleCallerIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_ASC',
  JobCallsVarianceSampleCallerIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_DESC',
  JobCallsVarianceSampleCreatedAtAsc = 'JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  JobCallsVarianceSampleCreatedAtDesc = 'JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  JobCallsVarianceSampleIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_ID_ASC',
  JobCallsVarianceSampleIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_ID_DESC',
  JobCallsVarianceSampleJobIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_ASC',
  JobCallsVarianceSampleJobIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_DESC',
  JobCallsVarianceSampleServiceIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_ASC',
  JobCallsVarianceSampleServiceIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_DESC',
  LastUpdateAtAsc = 'LAST_UPDATE_AT_ASC',
  LastUpdateAtDesc = 'LAST_UPDATE_AT_DESC',
  LstPoolMembersAverageAccountIdAsc = 'LST_POOL_MEMBERS_AVERAGE_ACCOUNT_ID_ASC',
  LstPoolMembersAverageAccountIdDesc = 'LST_POOL_MEMBERS_AVERAGE_ACCOUNT_ID_DESC',
  LstPoolMembersAverageBlockRangeAsc = 'LST_POOL_MEMBERS_AVERAGE_BLOCK_RANGE_ASC',
  LstPoolMembersAverageBlockRangeDesc = 'LST_POOL_MEMBERS_AVERAGE_BLOCK_RANGE_DESC',
  LstPoolMembersAverageCurrentStakeAsc = 'LST_POOL_MEMBERS_AVERAGE_CURRENT_STAKE_ASC',
  LstPoolMembersAverageCurrentStakeDesc = 'LST_POOL_MEMBERS_AVERAGE_CURRENT_STAKE_DESC',
  LstPoolMembersAverageIdAsc = 'LST_POOL_MEMBERS_AVERAGE_ID_ASC',
  LstPoolMembersAverageIdDesc = 'LST_POOL_MEMBERS_AVERAGE_ID_DESC',
  LstPoolMembersAverageLstPoolIdAsc = 'LST_POOL_MEMBERS_AVERAGE_LST_POOL_ID_ASC',
  LstPoolMembersAverageLstPoolIdDesc = 'LST_POOL_MEMBERS_AVERAGE_LST_POOL_ID_DESC',
  LstPoolMembersByAccountIdCountAsc = 'LST_POOL_MEMBERS_BY_ACCOUNT_ID__COUNT_ASC',
  LstPoolMembersByAccountIdCountDesc = 'LST_POOL_MEMBERS_BY_ACCOUNT_ID__COUNT_DESC',
  LstPoolMembersCountAsc = 'LST_POOL_MEMBERS_COUNT_ASC',
  LstPoolMembersCountDesc = 'LST_POOL_MEMBERS_COUNT_DESC',
  LstPoolMembersDistinctCountAccountIdAsc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_ASC',
  LstPoolMembersDistinctCountAccountIdDesc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_DESC',
  LstPoolMembersDistinctCountBlockRangeAsc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  LstPoolMembersDistinctCountBlockRangeDesc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  LstPoolMembersDistinctCountCurrentStakeAsc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_ASC',
  LstPoolMembersDistinctCountCurrentStakeDesc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_DESC',
  LstPoolMembersDistinctCountIdAsc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_ID_ASC',
  LstPoolMembersDistinctCountIdDesc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_ID_DESC',
  LstPoolMembersDistinctCountLstPoolIdAsc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_LST_POOL_ID_ASC',
  LstPoolMembersDistinctCountLstPoolIdDesc = 'LST_POOL_MEMBERS_DISTINCT_COUNT_LST_POOL_ID_DESC',
  LstPoolMembersMaxAccountIdAsc = 'LST_POOL_MEMBERS_MAX_ACCOUNT_ID_ASC',
  LstPoolMembersMaxAccountIdDesc = 'LST_POOL_MEMBERS_MAX_ACCOUNT_ID_DESC',
  LstPoolMembersMaxBlockRangeAsc = 'LST_POOL_MEMBERS_MAX_BLOCK_RANGE_ASC',
  LstPoolMembersMaxBlockRangeDesc = 'LST_POOL_MEMBERS_MAX_BLOCK_RANGE_DESC',
  LstPoolMembersMaxCurrentStakeAsc = 'LST_POOL_MEMBERS_MAX_CURRENT_STAKE_ASC',
  LstPoolMembersMaxCurrentStakeDesc = 'LST_POOL_MEMBERS_MAX_CURRENT_STAKE_DESC',
  LstPoolMembersMaxIdAsc = 'LST_POOL_MEMBERS_MAX_ID_ASC',
  LstPoolMembersMaxIdDesc = 'LST_POOL_MEMBERS_MAX_ID_DESC',
  LstPoolMembersMaxLstPoolIdAsc = 'LST_POOL_MEMBERS_MAX_LST_POOL_ID_ASC',
  LstPoolMembersMaxLstPoolIdDesc = 'LST_POOL_MEMBERS_MAX_LST_POOL_ID_DESC',
  LstPoolMembersMinAccountIdAsc = 'LST_POOL_MEMBERS_MIN_ACCOUNT_ID_ASC',
  LstPoolMembersMinAccountIdDesc = 'LST_POOL_MEMBERS_MIN_ACCOUNT_ID_DESC',
  LstPoolMembersMinBlockRangeAsc = 'LST_POOL_MEMBERS_MIN_BLOCK_RANGE_ASC',
  LstPoolMembersMinBlockRangeDesc = 'LST_POOL_MEMBERS_MIN_BLOCK_RANGE_DESC',
  LstPoolMembersMinCurrentStakeAsc = 'LST_POOL_MEMBERS_MIN_CURRENT_STAKE_ASC',
  LstPoolMembersMinCurrentStakeDesc = 'LST_POOL_MEMBERS_MIN_CURRENT_STAKE_DESC',
  LstPoolMembersMinIdAsc = 'LST_POOL_MEMBERS_MIN_ID_ASC',
  LstPoolMembersMinIdDesc = 'LST_POOL_MEMBERS_MIN_ID_DESC',
  LstPoolMembersMinLstPoolIdAsc = 'LST_POOL_MEMBERS_MIN_LST_POOL_ID_ASC',
  LstPoolMembersMinLstPoolIdDesc = 'LST_POOL_MEMBERS_MIN_LST_POOL_ID_DESC',
  LstPoolMembersStddevPopulationAccountIdAsc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_ASC',
  LstPoolMembersStddevPopulationAccountIdDesc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_DESC',
  LstPoolMembersStddevPopulationBlockRangeAsc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  LstPoolMembersStddevPopulationBlockRangeDesc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  LstPoolMembersStddevPopulationCurrentStakeAsc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_ASC',
  LstPoolMembersStddevPopulationCurrentStakeDesc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_DESC',
  LstPoolMembersStddevPopulationIdAsc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_ID_ASC',
  LstPoolMembersStddevPopulationIdDesc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_ID_DESC',
  LstPoolMembersStddevPopulationLstPoolIdAsc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_LST_POOL_ID_ASC',
  LstPoolMembersStddevPopulationLstPoolIdDesc = 'LST_POOL_MEMBERS_STDDEV_POPULATION_LST_POOL_ID_DESC',
  LstPoolMembersStddevSampleAccountIdAsc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',
  LstPoolMembersStddevSampleAccountIdDesc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',
  LstPoolMembersStddevSampleBlockRangeAsc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  LstPoolMembersStddevSampleBlockRangeDesc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  LstPoolMembersStddevSampleCurrentStakeAsc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_ASC',
  LstPoolMembersStddevSampleCurrentStakeDesc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_DESC',
  LstPoolMembersStddevSampleIdAsc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_ID_ASC',
  LstPoolMembersStddevSampleIdDesc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_ID_DESC',
  LstPoolMembersStddevSampleLstPoolIdAsc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_ASC',
  LstPoolMembersStddevSampleLstPoolIdDesc = 'LST_POOL_MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_DESC',
  LstPoolMembersSumAccountIdAsc = 'LST_POOL_MEMBERS_SUM_ACCOUNT_ID_ASC',
  LstPoolMembersSumAccountIdDesc = 'LST_POOL_MEMBERS_SUM_ACCOUNT_ID_DESC',
  LstPoolMembersSumBlockRangeAsc = 'LST_POOL_MEMBERS_SUM_BLOCK_RANGE_ASC',
  LstPoolMembersSumBlockRangeDesc = 'LST_POOL_MEMBERS_SUM_BLOCK_RANGE_DESC',
  LstPoolMembersSumCurrentStakeAsc = 'LST_POOL_MEMBERS_SUM_CURRENT_STAKE_ASC',
  LstPoolMembersSumCurrentStakeDesc = 'LST_POOL_MEMBERS_SUM_CURRENT_STAKE_DESC',
  LstPoolMembersSumIdAsc = 'LST_POOL_MEMBERS_SUM_ID_ASC',
  LstPoolMembersSumIdDesc = 'LST_POOL_MEMBERS_SUM_ID_DESC',
  LstPoolMembersSumLstPoolIdAsc = 'LST_POOL_MEMBERS_SUM_LST_POOL_ID_ASC',
  LstPoolMembersSumLstPoolIdDesc = 'LST_POOL_MEMBERS_SUM_LST_POOL_ID_DESC',
  LstPoolMembersVariancePopulationAccountIdAsc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',
  LstPoolMembersVariancePopulationAccountIdDesc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',
  LstPoolMembersVariancePopulationBlockRangeAsc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  LstPoolMembersVariancePopulationBlockRangeDesc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  LstPoolMembersVariancePopulationCurrentStakeAsc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_ASC',
  LstPoolMembersVariancePopulationCurrentStakeDesc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_DESC',
  LstPoolMembersVariancePopulationIdAsc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_ID_ASC',
  LstPoolMembersVariancePopulationIdDesc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_ID_DESC',
  LstPoolMembersVariancePopulationLstPoolIdAsc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_ASC',
  LstPoolMembersVariancePopulationLstPoolIdDesc = 'LST_POOL_MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_DESC',
  LstPoolMembersVarianceSampleAccountIdAsc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',
  LstPoolMembersVarianceSampleAccountIdDesc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',
  LstPoolMembersVarianceSampleBlockRangeAsc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  LstPoolMembersVarianceSampleBlockRangeDesc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  LstPoolMembersVarianceSampleCurrentStakeAsc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_ASC',
  LstPoolMembersVarianceSampleCurrentStakeDesc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_DESC',
  LstPoolMembersVarianceSampleIdAsc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_ID_ASC',
  LstPoolMembersVarianceSampleIdDesc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_ID_DESC',
  LstPoolMembersVarianceSampleLstPoolIdAsc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_ASC',
  LstPoolMembersVarianceSampleLstPoolIdDesc = 'LST_POOL_MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_DESC',
  Natural = 'NATURAL',
  OperatorsAverageAccountIdAsc = 'OPERATORS_AVERAGE_ACCOUNT_ID_ASC',
  OperatorsAverageAccountIdDesc = 'OPERATORS_AVERAGE_ACCOUNT_ID_DESC',
  OperatorsAverageBlockRangeAsc = 'OPERATORS_AVERAGE_BLOCK_RANGE_ASC',
  OperatorsAverageBlockRangeDesc = 'OPERATORS_AVERAGE_BLOCK_RANGE_DESC',
  OperatorsAverageCurrentStakeAsc = 'OPERATORS_AVERAGE_CURRENT_STAKE_ASC',
  OperatorsAverageCurrentStakeDesc = 'OPERATORS_AVERAGE_CURRENT_STAKE_DESC',
  OperatorsAverageCurrentStatusAsc = 'OPERATORS_AVERAGE_CURRENT_STATUS_ASC',
  OperatorsAverageCurrentStatusDesc = 'OPERATORS_AVERAGE_CURRENT_STATUS_DESC',
  OperatorsAverageIdAsc = 'OPERATORS_AVERAGE_ID_ASC',
  OperatorsAverageIdDesc = 'OPERATORS_AVERAGE_ID_DESC',
  OperatorsAverageJoinedAtAsc = 'OPERATORS_AVERAGE_JOINED_AT_ASC',
  OperatorsAverageJoinedAtDesc = 'OPERATORS_AVERAGE_JOINED_AT_DESC',
  OperatorsAverageLastUpdateAtAsc = 'OPERATORS_AVERAGE_LAST_UPDATE_AT_ASC',
  OperatorsAverageLastUpdateAtDesc = 'OPERATORS_AVERAGE_LAST_UPDATE_AT_DESC',
  OperatorsAverageScheduledUnstakeAmountAsc = 'OPERATORS_AVERAGE_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsAverageScheduledUnstakeAmountDesc = 'OPERATORS_AVERAGE_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsAverageTotalBlueprintsAsc = 'OPERATORS_AVERAGE_TOTAL_BLUEPRINTS_ASC',
  OperatorsAverageTotalBlueprintsDesc = 'OPERATORS_AVERAGE_TOTAL_BLUEPRINTS_DESC',
  OperatorsAverageTotalServicesAsc = 'OPERATORS_AVERAGE_TOTAL_SERVICES_ASC',
  OperatorsAverageTotalServicesDesc = 'OPERATORS_AVERAGE_TOTAL_SERVICES_DESC',
  OperatorsAverageTotalServiceRequestsAsc = 'OPERATORS_AVERAGE_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsAverageTotalServiceRequestsDesc = 'OPERATORS_AVERAGE_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsByAccountIdCountAsc = 'OPERATORS_BY_ACCOUNT_ID__COUNT_ASC',
  OperatorsByAccountIdCountDesc = 'OPERATORS_BY_ACCOUNT_ID__COUNT_DESC',
  OperatorsCountAsc = 'OPERATORS_COUNT_ASC',
  OperatorsCountDesc = 'OPERATORS_COUNT_DESC',
  OperatorsDistinctCountAccountIdAsc = 'OPERATORS_DISTINCT_COUNT_ACCOUNT_ID_ASC',
  OperatorsDistinctCountAccountIdDesc = 'OPERATORS_DISTINCT_COUNT_ACCOUNT_ID_DESC',
  OperatorsDistinctCountBlockRangeAsc = 'OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  OperatorsDistinctCountBlockRangeDesc = 'OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  OperatorsDistinctCountCurrentStakeAsc = 'OPERATORS_DISTINCT_COUNT_CURRENT_STAKE_ASC',
  OperatorsDistinctCountCurrentStakeDesc = 'OPERATORS_DISTINCT_COUNT_CURRENT_STAKE_DESC',
  OperatorsDistinctCountCurrentStatusAsc = 'OPERATORS_DISTINCT_COUNT_CURRENT_STATUS_ASC',
  OperatorsDistinctCountCurrentStatusDesc = 'OPERATORS_DISTINCT_COUNT_CURRENT_STATUS_DESC',
  OperatorsDistinctCountIdAsc = 'OPERATORS_DISTINCT_COUNT_ID_ASC',
  OperatorsDistinctCountIdDesc = 'OPERATORS_DISTINCT_COUNT_ID_DESC',
  OperatorsDistinctCountJoinedAtAsc = 'OPERATORS_DISTINCT_COUNT_JOINED_AT_ASC',
  OperatorsDistinctCountJoinedAtDesc = 'OPERATORS_DISTINCT_COUNT_JOINED_AT_DESC',
  OperatorsDistinctCountLastUpdateAtAsc = 'OPERATORS_DISTINCT_COUNT_LAST_UPDATE_AT_ASC',
  OperatorsDistinctCountLastUpdateAtDesc = 'OPERATORS_DISTINCT_COUNT_LAST_UPDATE_AT_DESC',
  OperatorsDistinctCountScheduledUnstakeAmountAsc = 'OPERATORS_DISTINCT_COUNT_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsDistinctCountScheduledUnstakeAmountDesc = 'OPERATORS_DISTINCT_COUNT_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsDistinctCountTotalBlueprintsAsc = 'OPERATORS_DISTINCT_COUNT_TOTAL_BLUEPRINTS_ASC',
  OperatorsDistinctCountTotalBlueprintsDesc = 'OPERATORS_DISTINCT_COUNT_TOTAL_BLUEPRINTS_DESC',
  OperatorsDistinctCountTotalServicesAsc = 'OPERATORS_DISTINCT_COUNT_TOTAL_SERVICES_ASC',
  OperatorsDistinctCountTotalServicesDesc = 'OPERATORS_DISTINCT_COUNT_TOTAL_SERVICES_DESC',
  OperatorsDistinctCountTotalServiceRequestsAsc = 'OPERATORS_DISTINCT_COUNT_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsDistinctCountTotalServiceRequestsDesc = 'OPERATORS_DISTINCT_COUNT_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsMaxAccountIdAsc = 'OPERATORS_MAX_ACCOUNT_ID_ASC',
  OperatorsMaxAccountIdDesc = 'OPERATORS_MAX_ACCOUNT_ID_DESC',
  OperatorsMaxBlockRangeAsc = 'OPERATORS_MAX_BLOCK_RANGE_ASC',
  OperatorsMaxBlockRangeDesc = 'OPERATORS_MAX_BLOCK_RANGE_DESC',
  OperatorsMaxCurrentStakeAsc = 'OPERATORS_MAX_CURRENT_STAKE_ASC',
  OperatorsMaxCurrentStakeDesc = 'OPERATORS_MAX_CURRENT_STAKE_DESC',
  OperatorsMaxCurrentStatusAsc = 'OPERATORS_MAX_CURRENT_STATUS_ASC',
  OperatorsMaxCurrentStatusDesc = 'OPERATORS_MAX_CURRENT_STATUS_DESC',
  OperatorsMaxIdAsc = 'OPERATORS_MAX_ID_ASC',
  OperatorsMaxIdDesc = 'OPERATORS_MAX_ID_DESC',
  OperatorsMaxJoinedAtAsc = 'OPERATORS_MAX_JOINED_AT_ASC',
  OperatorsMaxJoinedAtDesc = 'OPERATORS_MAX_JOINED_AT_DESC',
  OperatorsMaxLastUpdateAtAsc = 'OPERATORS_MAX_LAST_UPDATE_AT_ASC',
  OperatorsMaxLastUpdateAtDesc = 'OPERATORS_MAX_LAST_UPDATE_AT_DESC',
  OperatorsMaxScheduledUnstakeAmountAsc = 'OPERATORS_MAX_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsMaxScheduledUnstakeAmountDesc = 'OPERATORS_MAX_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsMaxTotalBlueprintsAsc = 'OPERATORS_MAX_TOTAL_BLUEPRINTS_ASC',
  OperatorsMaxTotalBlueprintsDesc = 'OPERATORS_MAX_TOTAL_BLUEPRINTS_DESC',
  OperatorsMaxTotalServicesAsc = 'OPERATORS_MAX_TOTAL_SERVICES_ASC',
  OperatorsMaxTotalServicesDesc = 'OPERATORS_MAX_TOTAL_SERVICES_DESC',
  OperatorsMaxTotalServiceRequestsAsc = 'OPERATORS_MAX_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsMaxTotalServiceRequestsDesc = 'OPERATORS_MAX_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsMinAccountIdAsc = 'OPERATORS_MIN_ACCOUNT_ID_ASC',
  OperatorsMinAccountIdDesc = 'OPERATORS_MIN_ACCOUNT_ID_DESC',
  OperatorsMinBlockRangeAsc = 'OPERATORS_MIN_BLOCK_RANGE_ASC',
  OperatorsMinBlockRangeDesc = 'OPERATORS_MIN_BLOCK_RANGE_DESC',
  OperatorsMinCurrentStakeAsc = 'OPERATORS_MIN_CURRENT_STAKE_ASC',
  OperatorsMinCurrentStakeDesc = 'OPERATORS_MIN_CURRENT_STAKE_DESC',
  OperatorsMinCurrentStatusAsc = 'OPERATORS_MIN_CURRENT_STATUS_ASC',
  OperatorsMinCurrentStatusDesc = 'OPERATORS_MIN_CURRENT_STATUS_DESC',
  OperatorsMinIdAsc = 'OPERATORS_MIN_ID_ASC',
  OperatorsMinIdDesc = 'OPERATORS_MIN_ID_DESC',
  OperatorsMinJoinedAtAsc = 'OPERATORS_MIN_JOINED_AT_ASC',
  OperatorsMinJoinedAtDesc = 'OPERATORS_MIN_JOINED_AT_DESC',
  OperatorsMinLastUpdateAtAsc = 'OPERATORS_MIN_LAST_UPDATE_AT_ASC',
  OperatorsMinLastUpdateAtDesc = 'OPERATORS_MIN_LAST_UPDATE_AT_DESC',
  OperatorsMinScheduledUnstakeAmountAsc = 'OPERATORS_MIN_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsMinScheduledUnstakeAmountDesc = 'OPERATORS_MIN_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsMinTotalBlueprintsAsc = 'OPERATORS_MIN_TOTAL_BLUEPRINTS_ASC',
  OperatorsMinTotalBlueprintsDesc = 'OPERATORS_MIN_TOTAL_BLUEPRINTS_DESC',
  OperatorsMinTotalServicesAsc = 'OPERATORS_MIN_TOTAL_SERVICES_ASC',
  OperatorsMinTotalServicesDesc = 'OPERATORS_MIN_TOTAL_SERVICES_DESC',
  OperatorsMinTotalServiceRequestsAsc = 'OPERATORS_MIN_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsMinTotalServiceRequestsDesc = 'OPERATORS_MIN_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsStddevPopulationAccountIdAsc = 'OPERATORS_STDDEV_POPULATION_ACCOUNT_ID_ASC',
  OperatorsStddevPopulationAccountIdDesc = 'OPERATORS_STDDEV_POPULATION_ACCOUNT_ID_DESC',
  OperatorsStddevPopulationBlockRangeAsc = 'OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  OperatorsStddevPopulationBlockRangeDesc = 'OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  OperatorsStddevPopulationCurrentStakeAsc = 'OPERATORS_STDDEV_POPULATION_CURRENT_STAKE_ASC',
  OperatorsStddevPopulationCurrentStakeDesc = 'OPERATORS_STDDEV_POPULATION_CURRENT_STAKE_DESC',
  OperatorsStddevPopulationCurrentStatusAsc = 'OPERATORS_STDDEV_POPULATION_CURRENT_STATUS_ASC',
  OperatorsStddevPopulationCurrentStatusDesc = 'OPERATORS_STDDEV_POPULATION_CURRENT_STATUS_DESC',
  OperatorsStddevPopulationIdAsc = 'OPERATORS_STDDEV_POPULATION_ID_ASC',
  OperatorsStddevPopulationIdDesc = 'OPERATORS_STDDEV_POPULATION_ID_DESC',
  OperatorsStddevPopulationJoinedAtAsc = 'OPERATORS_STDDEV_POPULATION_JOINED_AT_ASC',
  OperatorsStddevPopulationJoinedAtDesc = 'OPERATORS_STDDEV_POPULATION_JOINED_AT_DESC',
  OperatorsStddevPopulationLastUpdateAtAsc = 'OPERATORS_STDDEV_POPULATION_LAST_UPDATE_AT_ASC',
  OperatorsStddevPopulationLastUpdateAtDesc = 'OPERATORS_STDDEV_POPULATION_LAST_UPDATE_AT_DESC',
  OperatorsStddevPopulationScheduledUnstakeAmountAsc = 'OPERATORS_STDDEV_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsStddevPopulationScheduledUnstakeAmountDesc = 'OPERATORS_STDDEV_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsStddevPopulationTotalBlueprintsAsc = 'OPERATORS_STDDEV_POPULATION_TOTAL_BLUEPRINTS_ASC',
  OperatorsStddevPopulationTotalBlueprintsDesc = 'OPERATORS_STDDEV_POPULATION_TOTAL_BLUEPRINTS_DESC',
  OperatorsStddevPopulationTotalServicesAsc = 'OPERATORS_STDDEV_POPULATION_TOTAL_SERVICES_ASC',
  OperatorsStddevPopulationTotalServicesDesc = 'OPERATORS_STDDEV_POPULATION_TOTAL_SERVICES_DESC',
  OperatorsStddevPopulationTotalServiceRequestsAsc = 'OPERATORS_STDDEV_POPULATION_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsStddevPopulationTotalServiceRequestsDesc = 'OPERATORS_STDDEV_POPULATION_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsStddevSampleAccountIdAsc = 'OPERATORS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',
  OperatorsStddevSampleAccountIdDesc = 'OPERATORS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',
  OperatorsStddevSampleBlockRangeAsc = 'OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  OperatorsStddevSampleBlockRangeDesc = 'OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  OperatorsStddevSampleCurrentStakeAsc = 'OPERATORS_STDDEV_SAMPLE_CURRENT_STAKE_ASC',
  OperatorsStddevSampleCurrentStakeDesc = 'OPERATORS_STDDEV_SAMPLE_CURRENT_STAKE_DESC',
  OperatorsStddevSampleCurrentStatusAsc = 'OPERATORS_STDDEV_SAMPLE_CURRENT_STATUS_ASC',
  OperatorsStddevSampleCurrentStatusDesc = 'OPERATORS_STDDEV_SAMPLE_CURRENT_STATUS_DESC',
  OperatorsStddevSampleIdAsc = 'OPERATORS_STDDEV_SAMPLE_ID_ASC',
  OperatorsStddevSampleIdDesc = 'OPERATORS_STDDEV_SAMPLE_ID_DESC',
  OperatorsStddevSampleJoinedAtAsc = 'OPERATORS_STDDEV_SAMPLE_JOINED_AT_ASC',
  OperatorsStddevSampleJoinedAtDesc = 'OPERATORS_STDDEV_SAMPLE_JOINED_AT_DESC',
  OperatorsStddevSampleLastUpdateAtAsc = 'OPERATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_ASC',
  OperatorsStddevSampleLastUpdateAtDesc = 'OPERATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_DESC',
  OperatorsStddevSampleScheduledUnstakeAmountAsc = 'OPERATORS_STDDEV_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsStddevSampleScheduledUnstakeAmountDesc = 'OPERATORS_STDDEV_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsStddevSampleTotalBlueprintsAsc = 'OPERATORS_STDDEV_SAMPLE_TOTAL_BLUEPRINTS_ASC',
  OperatorsStddevSampleTotalBlueprintsDesc = 'OPERATORS_STDDEV_SAMPLE_TOTAL_BLUEPRINTS_DESC',
  OperatorsStddevSampleTotalServicesAsc = 'OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICES_ASC',
  OperatorsStddevSampleTotalServicesDesc = 'OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICES_DESC',
  OperatorsStddevSampleTotalServiceRequestsAsc = 'OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsStddevSampleTotalServiceRequestsDesc = 'OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsSumAccountIdAsc = 'OPERATORS_SUM_ACCOUNT_ID_ASC',
  OperatorsSumAccountIdDesc = 'OPERATORS_SUM_ACCOUNT_ID_DESC',
  OperatorsSumBlockRangeAsc = 'OPERATORS_SUM_BLOCK_RANGE_ASC',
  OperatorsSumBlockRangeDesc = 'OPERATORS_SUM_BLOCK_RANGE_DESC',
  OperatorsSumCurrentStakeAsc = 'OPERATORS_SUM_CURRENT_STAKE_ASC',
  OperatorsSumCurrentStakeDesc = 'OPERATORS_SUM_CURRENT_STAKE_DESC',
  OperatorsSumCurrentStatusAsc = 'OPERATORS_SUM_CURRENT_STATUS_ASC',
  OperatorsSumCurrentStatusDesc = 'OPERATORS_SUM_CURRENT_STATUS_DESC',
  OperatorsSumIdAsc = 'OPERATORS_SUM_ID_ASC',
  OperatorsSumIdDesc = 'OPERATORS_SUM_ID_DESC',
  OperatorsSumJoinedAtAsc = 'OPERATORS_SUM_JOINED_AT_ASC',
  OperatorsSumJoinedAtDesc = 'OPERATORS_SUM_JOINED_AT_DESC',
  OperatorsSumLastUpdateAtAsc = 'OPERATORS_SUM_LAST_UPDATE_AT_ASC',
  OperatorsSumLastUpdateAtDesc = 'OPERATORS_SUM_LAST_UPDATE_AT_DESC',
  OperatorsSumScheduledUnstakeAmountAsc = 'OPERATORS_SUM_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsSumScheduledUnstakeAmountDesc = 'OPERATORS_SUM_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsSumTotalBlueprintsAsc = 'OPERATORS_SUM_TOTAL_BLUEPRINTS_ASC',
  OperatorsSumTotalBlueprintsDesc = 'OPERATORS_SUM_TOTAL_BLUEPRINTS_DESC',
  OperatorsSumTotalServicesAsc = 'OPERATORS_SUM_TOTAL_SERVICES_ASC',
  OperatorsSumTotalServicesDesc = 'OPERATORS_SUM_TOTAL_SERVICES_DESC',
  OperatorsSumTotalServiceRequestsAsc = 'OPERATORS_SUM_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsSumTotalServiceRequestsDesc = 'OPERATORS_SUM_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsVariancePopulationAccountIdAsc = 'OPERATORS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',
  OperatorsVariancePopulationAccountIdDesc = 'OPERATORS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',
  OperatorsVariancePopulationBlockRangeAsc = 'OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  OperatorsVariancePopulationBlockRangeDesc = 'OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  OperatorsVariancePopulationCurrentStakeAsc = 'OPERATORS_VARIANCE_POPULATION_CURRENT_STAKE_ASC',
  OperatorsVariancePopulationCurrentStakeDesc = 'OPERATORS_VARIANCE_POPULATION_CURRENT_STAKE_DESC',
  OperatorsVariancePopulationCurrentStatusAsc = 'OPERATORS_VARIANCE_POPULATION_CURRENT_STATUS_ASC',
  OperatorsVariancePopulationCurrentStatusDesc = 'OPERATORS_VARIANCE_POPULATION_CURRENT_STATUS_DESC',
  OperatorsVariancePopulationIdAsc = 'OPERATORS_VARIANCE_POPULATION_ID_ASC',
  OperatorsVariancePopulationIdDesc = 'OPERATORS_VARIANCE_POPULATION_ID_DESC',
  OperatorsVariancePopulationJoinedAtAsc = 'OPERATORS_VARIANCE_POPULATION_JOINED_AT_ASC',
  OperatorsVariancePopulationJoinedAtDesc = 'OPERATORS_VARIANCE_POPULATION_JOINED_AT_DESC',
  OperatorsVariancePopulationLastUpdateAtAsc = 'OPERATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_ASC',
  OperatorsVariancePopulationLastUpdateAtDesc = 'OPERATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_DESC',
  OperatorsVariancePopulationScheduledUnstakeAmountAsc = 'OPERATORS_VARIANCE_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsVariancePopulationScheduledUnstakeAmountDesc = 'OPERATORS_VARIANCE_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsVariancePopulationTotalBlueprintsAsc = 'OPERATORS_VARIANCE_POPULATION_TOTAL_BLUEPRINTS_ASC',
  OperatorsVariancePopulationTotalBlueprintsDesc = 'OPERATORS_VARIANCE_POPULATION_TOTAL_BLUEPRINTS_DESC',
  OperatorsVariancePopulationTotalServicesAsc = 'OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICES_ASC',
  OperatorsVariancePopulationTotalServicesDesc = 'OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICES_DESC',
  OperatorsVariancePopulationTotalServiceRequestsAsc = 'OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsVariancePopulationTotalServiceRequestsDesc = 'OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICE_REQUESTS_DESC',
  OperatorsVarianceSampleAccountIdAsc = 'OPERATORS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',
  OperatorsVarianceSampleAccountIdDesc = 'OPERATORS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',
  OperatorsVarianceSampleBlockRangeAsc = 'OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  OperatorsVarianceSampleBlockRangeDesc = 'OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  OperatorsVarianceSampleCurrentStakeAsc = 'OPERATORS_VARIANCE_SAMPLE_CURRENT_STAKE_ASC',
  OperatorsVarianceSampleCurrentStakeDesc = 'OPERATORS_VARIANCE_SAMPLE_CURRENT_STAKE_DESC',
  OperatorsVarianceSampleCurrentStatusAsc = 'OPERATORS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC',
  OperatorsVarianceSampleCurrentStatusDesc = 'OPERATORS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC',
  OperatorsVarianceSampleIdAsc = 'OPERATORS_VARIANCE_SAMPLE_ID_ASC',
  OperatorsVarianceSampleIdDesc = 'OPERATORS_VARIANCE_SAMPLE_ID_DESC',
  OperatorsVarianceSampleJoinedAtAsc = 'OPERATORS_VARIANCE_SAMPLE_JOINED_AT_ASC',
  OperatorsVarianceSampleJoinedAtDesc = 'OPERATORS_VARIANCE_SAMPLE_JOINED_AT_DESC',
  OperatorsVarianceSampleLastUpdateAtAsc = 'OPERATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_ASC',
  OperatorsVarianceSampleLastUpdateAtDesc = 'OPERATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_DESC',
  OperatorsVarianceSampleScheduledUnstakeAmountAsc = 'OPERATORS_VARIANCE_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorsVarianceSampleScheduledUnstakeAmountDesc = 'OPERATORS_VARIANCE_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorsVarianceSampleTotalBlueprintsAsc = 'OPERATORS_VARIANCE_SAMPLE_TOTAL_BLUEPRINTS_ASC',
  OperatorsVarianceSampleTotalBlueprintsDesc = 'OPERATORS_VARIANCE_SAMPLE_TOTAL_BLUEPRINTS_DESC',
  OperatorsVarianceSampleTotalServicesAsc = 'OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICES_ASC',
  OperatorsVarianceSampleTotalServicesDesc = 'OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICES_DESC',
  OperatorsVarianceSampleTotalServiceRequestsAsc = 'OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICE_REQUESTS_ASC',
  OperatorsVarianceSampleTotalServiceRequestsDesc = 'OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICE_REQUESTS_DESC',
  PointsAccrualsAverageAccountIdAsc = 'POINTS_ACCRUALS_AVERAGE_ACCOUNT_ID_ASC',
  PointsAccrualsAverageAccountIdDesc = 'POINTS_ACCRUALS_AVERAGE_ACCOUNT_ID_DESC',
  PointsAccrualsAverageAmountAsc = 'POINTS_ACCRUALS_AVERAGE_AMOUNT_ASC',
  PointsAccrualsAverageAmountDesc = 'POINTS_ACCRUALS_AVERAGE_AMOUNT_DESC',
  PointsAccrualsAverageBlockRangeAsc = 'POINTS_ACCRUALS_AVERAGE_BLOCK_RANGE_ASC',
  PointsAccrualsAverageBlockRangeDesc = 'POINTS_ACCRUALS_AVERAGE_BLOCK_RANGE_DESC',
  PointsAccrualsAverageIdAsc = 'POINTS_ACCRUALS_AVERAGE_ID_ASC',
  PointsAccrualsAverageIdDesc = 'POINTS_ACCRUALS_AVERAGE_ID_DESC',
  PointsAccrualsAverageLastUpdateBlockAsc = 'POINTS_ACCRUALS_AVERAGE_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsAverageLastUpdateBlockDesc = 'POINTS_ACCRUALS_AVERAGE_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsAverageRatePerHourAsc = 'POINTS_ACCRUALS_AVERAGE_RATE_PER_HOUR_ASC',
  PointsAccrualsAverageRatePerHourDesc = 'POINTS_ACCRUALS_AVERAGE_RATE_PER_HOUR_DESC',
  PointsAccrualsAverageSourceAsc = 'POINTS_ACCRUALS_AVERAGE_SOURCE_ASC',
  PointsAccrualsAverageSourceDesc = 'POINTS_ACCRUALS_AVERAGE_SOURCE_DESC',
  PointsAccrualsAverageStartBlockAsc = 'POINTS_ACCRUALS_AVERAGE_START_BLOCK_ASC',
  PointsAccrualsAverageStartBlockDesc = 'POINTS_ACCRUALS_AVERAGE_START_BLOCK_DESC',
  PointsAccrualsCountAsc = 'POINTS_ACCRUALS_COUNT_ASC',
  PointsAccrualsCountDesc = 'POINTS_ACCRUALS_COUNT_DESC',
  PointsAccrualsDistinctCountAccountIdAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_ACCOUNT_ID_ASC',
  PointsAccrualsDistinctCountAccountIdDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_ACCOUNT_ID_DESC',
  PointsAccrualsDistinctCountAmountAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_AMOUNT_ASC',
  PointsAccrualsDistinctCountAmountDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_AMOUNT_DESC',
  PointsAccrualsDistinctCountBlockRangeAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  PointsAccrualsDistinctCountBlockRangeDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  PointsAccrualsDistinctCountIdAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_ID_ASC',
  PointsAccrualsDistinctCountIdDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_ID_DESC',
  PointsAccrualsDistinctCountLastUpdateBlockAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsDistinctCountLastUpdateBlockDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsDistinctCountRatePerHourAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_RATE_PER_HOUR_ASC',
  PointsAccrualsDistinctCountRatePerHourDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_RATE_PER_HOUR_DESC',
  PointsAccrualsDistinctCountSourceAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_SOURCE_ASC',
  PointsAccrualsDistinctCountSourceDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_SOURCE_DESC',
  PointsAccrualsDistinctCountStartBlockAsc = 'POINTS_ACCRUALS_DISTINCT_COUNT_START_BLOCK_ASC',
  PointsAccrualsDistinctCountStartBlockDesc = 'POINTS_ACCRUALS_DISTINCT_COUNT_START_BLOCK_DESC',
  PointsAccrualsMaxAccountIdAsc = 'POINTS_ACCRUALS_MAX_ACCOUNT_ID_ASC',
  PointsAccrualsMaxAccountIdDesc = 'POINTS_ACCRUALS_MAX_ACCOUNT_ID_DESC',
  PointsAccrualsMaxAmountAsc = 'POINTS_ACCRUALS_MAX_AMOUNT_ASC',
  PointsAccrualsMaxAmountDesc = 'POINTS_ACCRUALS_MAX_AMOUNT_DESC',
  PointsAccrualsMaxBlockRangeAsc = 'POINTS_ACCRUALS_MAX_BLOCK_RANGE_ASC',
  PointsAccrualsMaxBlockRangeDesc = 'POINTS_ACCRUALS_MAX_BLOCK_RANGE_DESC',
  PointsAccrualsMaxIdAsc = 'POINTS_ACCRUALS_MAX_ID_ASC',
  PointsAccrualsMaxIdDesc = 'POINTS_ACCRUALS_MAX_ID_DESC',
  PointsAccrualsMaxLastUpdateBlockAsc = 'POINTS_ACCRUALS_MAX_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsMaxLastUpdateBlockDesc = 'POINTS_ACCRUALS_MAX_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsMaxRatePerHourAsc = 'POINTS_ACCRUALS_MAX_RATE_PER_HOUR_ASC',
  PointsAccrualsMaxRatePerHourDesc = 'POINTS_ACCRUALS_MAX_RATE_PER_HOUR_DESC',
  PointsAccrualsMaxSourceAsc = 'POINTS_ACCRUALS_MAX_SOURCE_ASC',
  PointsAccrualsMaxSourceDesc = 'POINTS_ACCRUALS_MAX_SOURCE_DESC',
  PointsAccrualsMaxStartBlockAsc = 'POINTS_ACCRUALS_MAX_START_BLOCK_ASC',
  PointsAccrualsMaxStartBlockDesc = 'POINTS_ACCRUALS_MAX_START_BLOCK_DESC',
  PointsAccrualsMinAccountIdAsc = 'POINTS_ACCRUALS_MIN_ACCOUNT_ID_ASC',
  PointsAccrualsMinAccountIdDesc = 'POINTS_ACCRUALS_MIN_ACCOUNT_ID_DESC',
  PointsAccrualsMinAmountAsc = 'POINTS_ACCRUALS_MIN_AMOUNT_ASC',
  PointsAccrualsMinAmountDesc = 'POINTS_ACCRUALS_MIN_AMOUNT_DESC',
  PointsAccrualsMinBlockRangeAsc = 'POINTS_ACCRUALS_MIN_BLOCK_RANGE_ASC',
  PointsAccrualsMinBlockRangeDesc = 'POINTS_ACCRUALS_MIN_BLOCK_RANGE_DESC',
  PointsAccrualsMinIdAsc = 'POINTS_ACCRUALS_MIN_ID_ASC',
  PointsAccrualsMinIdDesc = 'POINTS_ACCRUALS_MIN_ID_DESC',
  PointsAccrualsMinLastUpdateBlockAsc = 'POINTS_ACCRUALS_MIN_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsMinLastUpdateBlockDesc = 'POINTS_ACCRUALS_MIN_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsMinRatePerHourAsc = 'POINTS_ACCRUALS_MIN_RATE_PER_HOUR_ASC',
  PointsAccrualsMinRatePerHourDesc = 'POINTS_ACCRUALS_MIN_RATE_PER_HOUR_DESC',
  PointsAccrualsMinSourceAsc = 'POINTS_ACCRUALS_MIN_SOURCE_ASC',
  PointsAccrualsMinSourceDesc = 'POINTS_ACCRUALS_MIN_SOURCE_DESC',
  PointsAccrualsMinStartBlockAsc = 'POINTS_ACCRUALS_MIN_START_BLOCK_ASC',
  PointsAccrualsMinStartBlockDesc = 'POINTS_ACCRUALS_MIN_START_BLOCK_DESC',
  PointsAccrualsStddevPopulationAccountIdAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_ACCOUNT_ID_ASC',
  PointsAccrualsStddevPopulationAccountIdDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_ACCOUNT_ID_DESC',
  PointsAccrualsStddevPopulationAmountAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_AMOUNT_ASC',
  PointsAccrualsStddevPopulationAmountDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_AMOUNT_DESC',
  PointsAccrualsStddevPopulationBlockRangeAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  PointsAccrualsStddevPopulationBlockRangeDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  PointsAccrualsStddevPopulationIdAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_ID_ASC',
  PointsAccrualsStddevPopulationIdDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_ID_DESC',
  PointsAccrualsStddevPopulationLastUpdateBlockAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsStddevPopulationLastUpdateBlockDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsStddevPopulationRatePerHourAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_RATE_PER_HOUR_ASC',
  PointsAccrualsStddevPopulationRatePerHourDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_RATE_PER_HOUR_DESC',
  PointsAccrualsStddevPopulationSourceAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_SOURCE_ASC',
  PointsAccrualsStddevPopulationSourceDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_SOURCE_DESC',
  PointsAccrualsStddevPopulationStartBlockAsc = 'POINTS_ACCRUALS_STDDEV_POPULATION_START_BLOCK_ASC',
  PointsAccrualsStddevPopulationStartBlockDesc = 'POINTS_ACCRUALS_STDDEV_POPULATION_START_BLOCK_DESC',
  PointsAccrualsStddevSampleAccountIdAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',
  PointsAccrualsStddevSampleAccountIdDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',
  PointsAccrualsStddevSampleAmountAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_AMOUNT_ASC',
  PointsAccrualsStddevSampleAmountDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_AMOUNT_DESC',
  PointsAccrualsStddevSampleBlockRangeAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  PointsAccrualsStddevSampleBlockRangeDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  PointsAccrualsStddevSampleIdAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_ID_ASC',
  PointsAccrualsStddevSampleIdDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_ID_DESC',
  PointsAccrualsStddevSampleLastUpdateBlockAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsStddevSampleLastUpdateBlockDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsStddevSampleRatePerHourAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_RATE_PER_HOUR_ASC',
  PointsAccrualsStddevSampleRatePerHourDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_RATE_PER_HOUR_DESC',
  PointsAccrualsStddevSampleSourceAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_SOURCE_ASC',
  PointsAccrualsStddevSampleSourceDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_SOURCE_DESC',
  PointsAccrualsStddevSampleStartBlockAsc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_START_BLOCK_ASC',
  PointsAccrualsStddevSampleStartBlockDesc = 'POINTS_ACCRUALS_STDDEV_SAMPLE_START_BLOCK_DESC',
  PointsAccrualsSumAccountIdAsc = 'POINTS_ACCRUALS_SUM_ACCOUNT_ID_ASC',
  PointsAccrualsSumAccountIdDesc = 'POINTS_ACCRUALS_SUM_ACCOUNT_ID_DESC',
  PointsAccrualsSumAmountAsc = 'POINTS_ACCRUALS_SUM_AMOUNT_ASC',
  PointsAccrualsSumAmountDesc = 'POINTS_ACCRUALS_SUM_AMOUNT_DESC',
  PointsAccrualsSumBlockRangeAsc = 'POINTS_ACCRUALS_SUM_BLOCK_RANGE_ASC',
  PointsAccrualsSumBlockRangeDesc = 'POINTS_ACCRUALS_SUM_BLOCK_RANGE_DESC',
  PointsAccrualsSumIdAsc = 'POINTS_ACCRUALS_SUM_ID_ASC',
  PointsAccrualsSumIdDesc = 'POINTS_ACCRUALS_SUM_ID_DESC',
  PointsAccrualsSumLastUpdateBlockAsc = 'POINTS_ACCRUALS_SUM_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsSumLastUpdateBlockDesc = 'POINTS_ACCRUALS_SUM_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsSumRatePerHourAsc = 'POINTS_ACCRUALS_SUM_RATE_PER_HOUR_ASC',
  PointsAccrualsSumRatePerHourDesc = 'POINTS_ACCRUALS_SUM_RATE_PER_HOUR_DESC',
  PointsAccrualsSumSourceAsc = 'POINTS_ACCRUALS_SUM_SOURCE_ASC',
  PointsAccrualsSumSourceDesc = 'POINTS_ACCRUALS_SUM_SOURCE_DESC',
  PointsAccrualsSumStartBlockAsc = 'POINTS_ACCRUALS_SUM_START_BLOCK_ASC',
  PointsAccrualsSumStartBlockDesc = 'POINTS_ACCRUALS_SUM_START_BLOCK_DESC',
  PointsAccrualsVariancePopulationAccountIdAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',
  PointsAccrualsVariancePopulationAccountIdDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',
  PointsAccrualsVariancePopulationAmountAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_AMOUNT_ASC',
  PointsAccrualsVariancePopulationAmountDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_AMOUNT_DESC',
  PointsAccrualsVariancePopulationBlockRangeAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  PointsAccrualsVariancePopulationBlockRangeDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  PointsAccrualsVariancePopulationIdAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_ID_ASC',
  PointsAccrualsVariancePopulationIdDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_ID_DESC',
  PointsAccrualsVariancePopulationLastUpdateBlockAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsVariancePopulationLastUpdateBlockDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsVariancePopulationRatePerHourAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_RATE_PER_HOUR_ASC',
  PointsAccrualsVariancePopulationRatePerHourDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_RATE_PER_HOUR_DESC',
  PointsAccrualsVariancePopulationSourceAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_SOURCE_ASC',
  PointsAccrualsVariancePopulationSourceDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_SOURCE_DESC',
  PointsAccrualsVariancePopulationStartBlockAsc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_START_BLOCK_ASC',
  PointsAccrualsVariancePopulationStartBlockDesc = 'POINTS_ACCRUALS_VARIANCE_POPULATION_START_BLOCK_DESC',
  PointsAccrualsVarianceSampleAccountIdAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',
  PointsAccrualsVarianceSampleAccountIdDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',
  PointsAccrualsVarianceSampleAmountAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_AMOUNT_ASC',
  PointsAccrualsVarianceSampleAmountDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_AMOUNT_DESC',
  PointsAccrualsVarianceSampleBlockRangeAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  PointsAccrualsVarianceSampleBlockRangeDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  PointsAccrualsVarianceSampleIdAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_ID_ASC',
  PointsAccrualsVarianceSampleIdDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_ID_DESC',
  PointsAccrualsVarianceSampleLastUpdateBlockAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_LAST_UPDATE_BLOCK_ASC',
  PointsAccrualsVarianceSampleLastUpdateBlockDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_LAST_UPDATE_BLOCK_DESC',
  PointsAccrualsVarianceSampleRatePerHourAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_RATE_PER_HOUR_ASC',
  PointsAccrualsVarianceSampleRatePerHourDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_RATE_PER_HOUR_DESC',
  PointsAccrualsVarianceSampleSourceAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_SOURCE_ASC',
  PointsAccrualsVarianceSampleSourceDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_SOURCE_DESC',
  PointsAccrualsVarianceSampleStartBlockAsc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_START_BLOCK_ASC',
  PointsAccrualsVarianceSampleStartBlockDesc = 'POINTS_ACCRUALS_VARIANCE_SAMPLE_START_BLOCK_DESC',
  PointsAccrualRatesByAccountIdCountAsc = 'POINTS_ACCRUAL_RATES_BY_ACCOUNT_ID__COUNT_ASC',
  PointsAccrualRatesByAccountIdCountDesc = 'POINTS_ACCRUAL_RATES_BY_ACCOUNT_ID__COUNT_DESC',
  PointsSnapshotsByAccountIdCountAsc = 'POINTS_SNAPSHOTS_BY_ACCOUNT_ID__COUNT_ASC',
  PointsSnapshotsByAccountIdCountDesc = 'POINTS_SNAPSHOTS_BY_ACCOUNT_ID__COUNT_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ServicesAverageAssetIdsAsc = 'SERVICES_AVERAGE_ASSET_IDS_ASC',
  ServicesAverageAssetIdsDesc = 'SERVICES_AVERAGE_ASSET_IDS_DESC',
  ServicesAverageBlockRangeAsc = 'SERVICES_AVERAGE_BLOCK_RANGE_ASC',
  ServicesAverageBlockRangeDesc = 'SERVICES_AVERAGE_BLOCK_RANGE_DESC',
  ServicesAverageBlueprintIdAsc = 'SERVICES_AVERAGE_BLUEPRINT_ID_ASC',
  ServicesAverageBlueprintIdDesc = 'SERVICES_AVERAGE_BLUEPRINT_ID_DESC',
  ServicesAverageCreatedAtAsc = 'SERVICES_AVERAGE_CREATED_AT_ASC',
  ServicesAverageCreatedAtDesc = 'SERVICES_AVERAGE_CREATED_AT_DESC',
  ServicesAverageIdAsc = 'SERVICES_AVERAGE_ID_ASC',
  ServicesAverageIdDesc = 'SERVICES_AVERAGE_ID_DESC',
  ServicesAverageOwnerIdAsc = 'SERVICES_AVERAGE_OWNER_ID_ASC',
  ServicesAverageOwnerIdDesc = 'SERVICES_AVERAGE_OWNER_ID_DESC',
  ServicesAverageServiceRequestIdAsc = 'SERVICES_AVERAGE_SERVICE_REQUEST_ID_ASC',
  ServicesAverageServiceRequestIdDesc = 'SERVICES_AVERAGE_SERVICE_REQUEST_ID_DESC',
  ServicesAverageTerminatedAtAsc = 'SERVICES_AVERAGE_TERMINATED_AT_ASC',
  ServicesAverageTerminatedAtDesc = 'SERVICES_AVERAGE_TERMINATED_AT_DESC',
  ServicesByOwnerIdCountAsc = 'SERVICES_BY_OWNER_ID__COUNT_ASC',
  ServicesByOwnerIdCountDesc = 'SERVICES_BY_OWNER_ID__COUNT_DESC',
  ServicesCountAsc = 'SERVICES_COUNT_ASC',
  ServicesCountDesc = 'SERVICES_COUNT_DESC',
  ServicesDistinctCountAssetIdsAsc = 'SERVICES_DISTINCT_COUNT_ASSET_IDS_ASC',
  ServicesDistinctCountAssetIdsDesc = 'SERVICES_DISTINCT_COUNT_ASSET_IDS_DESC',
  ServicesDistinctCountBlockRangeAsc = 'SERVICES_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServicesDistinctCountBlockRangeDesc = 'SERVICES_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServicesDistinctCountBlueprintIdAsc = 'SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_ASC',
  ServicesDistinctCountBlueprintIdDesc = 'SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_DESC',
  ServicesDistinctCountCreatedAtAsc = 'SERVICES_DISTINCT_COUNT_CREATED_AT_ASC',
  ServicesDistinctCountCreatedAtDesc = 'SERVICES_DISTINCT_COUNT_CREATED_AT_DESC',
  ServicesDistinctCountIdAsc = 'SERVICES_DISTINCT_COUNT_ID_ASC',
  ServicesDistinctCountIdDesc = 'SERVICES_DISTINCT_COUNT_ID_DESC',
  ServicesDistinctCountOwnerIdAsc = 'SERVICES_DISTINCT_COUNT_OWNER_ID_ASC',
  ServicesDistinctCountOwnerIdDesc = 'SERVICES_DISTINCT_COUNT_OWNER_ID_DESC',
  ServicesDistinctCountServiceRequestIdAsc = 'SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC',
  ServicesDistinctCountServiceRequestIdDesc = 'SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC',
  ServicesDistinctCountTerminatedAtAsc = 'SERVICES_DISTINCT_COUNT_TERMINATED_AT_ASC',
  ServicesDistinctCountTerminatedAtDesc = 'SERVICES_DISTINCT_COUNT_TERMINATED_AT_DESC',
  ServicesMaxAssetIdsAsc = 'SERVICES_MAX_ASSET_IDS_ASC',
  ServicesMaxAssetIdsDesc = 'SERVICES_MAX_ASSET_IDS_DESC',
  ServicesMaxBlockRangeAsc = 'SERVICES_MAX_BLOCK_RANGE_ASC',
  ServicesMaxBlockRangeDesc = 'SERVICES_MAX_BLOCK_RANGE_DESC',
  ServicesMaxBlueprintIdAsc = 'SERVICES_MAX_BLUEPRINT_ID_ASC',
  ServicesMaxBlueprintIdDesc = 'SERVICES_MAX_BLUEPRINT_ID_DESC',
  ServicesMaxCreatedAtAsc = 'SERVICES_MAX_CREATED_AT_ASC',
  ServicesMaxCreatedAtDesc = 'SERVICES_MAX_CREATED_AT_DESC',
  ServicesMaxIdAsc = 'SERVICES_MAX_ID_ASC',
  ServicesMaxIdDesc = 'SERVICES_MAX_ID_DESC',
  ServicesMaxOwnerIdAsc = 'SERVICES_MAX_OWNER_ID_ASC',
  ServicesMaxOwnerIdDesc = 'SERVICES_MAX_OWNER_ID_DESC',
  ServicesMaxServiceRequestIdAsc = 'SERVICES_MAX_SERVICE_REQUEST_ID_ASC',
  ServicesMaxServiceRequestIdDesc = 'SERVICES_MAX_SERVICE_REQUEST_ID_DESC',
  ServicesMaxTerminatedAtAsc = 'SERVICES_MAX_TERMINATED_AT_ASC',
  ServicesMaxTerminatedAtDesc = 'SERVICES_MAX_TERMINATED_AT_DESC',
  ServicesMinAssetIdsAsc = 'SERVICES_MIN_ASSET_IDS_ASC',
  ServicesMinAssetIdsDesc = 'SERVICES_MIN_ASSET_IDS_DESC',
  ServicesMinBlockRangeAsc = 'SERVICES_MIN_BLOCK_RANGE_ASC',
  ServicesMinBlockRangeDesc = 'SERVICES_MIN_BLOCK_RANGE_DESC',
  ServicesMinBlueprintIdAsc = 'SERVICES_MIN_BLUEPRINT_ID_ASC',
  ServicesMinBlueprintIdDesc = 'SERVICES_MIN_BLUEPRINT_ID_DESC',
  ServicesMinCreatedAtAsc = 'SERVICES_MIN_CREATED_AT_ASC',
  ServicesMinCreatedAtDesc = 'SERVICES_MIN_CREATED_AT_DESC',
  ServicesMinIdAsc = 'SERVICES_MIN_ID_ASC',
  ServicesMinIdDesc = 'SERVICES_MIN_ID_DESC',
  ServicesMinOwnerIdAsc = 'SERVICES_MIN_OWNER_ID_ASC',
  ServicesMinOwnerIdDesc = 'SERVICES_MIN_OWNER_ID_DESC',
  ServicesMinServiceRequestIdAsc = 'SERVICES_MIN_SERVICE_REQUEST_ID_ASC',
  ServicesMinServiceRequestIdDesc = 'SERVICES_MIN_SERVICE_REQUEST_ID_DESC',
  ServicesMinTerminatedAtAsc = 'SERVICES_MIN_TERMINATED_AT_ASC',
  ServicesMinTerminatedAtDesc = 'SERVICES_MIN_TERMINATED_AT_DESC',
  ServicesStddevPopulationAssetIdsAsc = 'SERVICES_STDDEV_POPULATION_ASSET_IDS_ASC',
  ServicesStddevPopulationAssetIdsDesc = 'SERVICES_STDDEV_POPULATION_ASSET_IDS_DESC',
  ServicesStddevPopulationBlockRangeAsc = 'SERVICES_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServicesStddevPopulationBlockRangeDesc = 'SERVICES_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServicesStddevPopulationBlueprintIdAsc = 'SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_ASC',
  ServicesStddevPopulationBlueprintIdDesc = 'SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_DESC',
  ServicesStddevPopulationCreatedAtAsc = 'SERVICES_STDDEV_POPULATION_CREATED_AT_ASC',
  ServicesStddevPopulationCreatedAtDesc = 'SERVICES_STDDEV_POPULATION_CREATED_AT_DESC',
  ServicesStddevPopulationIdAsc = 'SERVICES_STDDEV_POPULATION_ID_ASC',
  ServicesStddevPopulationIdDesc = 'SERVICES_STDDEV_POPULATION_ID_DESC',
  ServicesStddevPopulationOwnerIdAsc = 'SERVICES_STDDEV_POPULATION_OWNER_ID_ASC',
  ServicesStddevPopulationOwnerIdDesc = 'SERVICES_STDDEV_POPULATION_OWNER_ID_DESC',
  ServicesStddevPopulationServiceRequestIdAsc = 'SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServicesStddevPopulationServiceRequestIdDesc = 'SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServicesStddevPopulationTerminatedAtAsc = 'SERVICES_STDDEV_POPULATION_TERMINATED_AT_ASC',
  ServicesStddevPopulationTerminatedAtDesc = 'SERVICES_STDDEV_POPULATION_TERMINATED_AT_DESC',
  ServicesStddevSampleAssetIdsAsc = 'SERVICES_STDDEV_SAMPLE_ASSET_IDS_ASC',
  ServicesStddevSampleAssetIdsDesc = 'SERVICES_STDDEV_SAMPLE_ASSET_IDS_DESC',
  ServicesStddevSampleBlockRangeAsc = 'SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServicesStddevSampleBlockRangeDesc = 'SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServicesStddevSampleBlueprintIdAsc = 'SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_ASC',
  ServicesStddevSampleBlueprintIdDesc = 'SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_DESC',
  ServicesStddevSampleCreatedAtAsc = 'SERVICES_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServicesStddevSampleCreatedAtDesc = 'SERVICES_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServicesStddevSampleIdAsc = 'SERVICES_STDDEV_SAMPLE_ID_ASC',
  ServicesStddevSampleIdDesc = 'SERVICES_STDDEV_SAMPLE_ID_DESC',
  ServicesStddevSampleOwnerIdAsc = 'SERVICES_STDDEV_SAMPLE_OWNER_ID_ASC',
  ServicesStddevSampleOwnerIdDesc = 'SERVICES_STDDEV_SAMPLE_OWNER_ID_DESC',
  ServicesStddevSampleServiceRequestIdAsc = 'SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServicesStddevSampleServiceRequestIdDesc = 'SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServicesStddevSampleTerminatedAtAsc = 'SERVICES_STDDEV_SAMPLE_TERMINATED_AT_ASC',
  ServicesStddevSampleTerminatedAtDesc = 'SERVICES_STDDEV_SAMPLE_TERMINATED_AT_DESC',
  ServicesSumAssetIdsAsc = 'SERVICES_SUM_ASSET_IDS_ASC',
  ServicesSumAssetIdsDesc = 'SERVICES_SUM_ASSET_IDS_DESC',
  ServicesSumBlockRangeAsc = 'SERVICES_SUM_BLOCK_RANGE_ASC',
  ServicesSumBlockRangeDesc = 'SERVICES_SUM_BLOCK_RANGE_DESC',
  ServicesSumBlueprintIdAsc = 'SERVICES_SUM_BLUEPRINT_ID_ASC',
  ServicesSumBlueprintIdDesc = 'SERVICES_SUM_BLUEPRINT_ID_DESC',
  ServicesSumCreatedAtAsc = 'SERVICES_SUM_CREATED_AT_ASC',
  ServicesSumCreatedAtDesc = 'SERVICES_SUM_CREATED_AT_DESC',
  ServicesSumIdAsc = 'SERVICES_SUM_ID_ASC',
  ServicesSumIdDesc = 'SERVICES_SUM_ID_DESC',
  ServicesSumOwnerIdAsc = 'SERVICES_SUM_OWNER_ID_ASC',
  ServicesSumOwnerIdDesc = 'SERVICES_SUM_OWNER_ID_DESC',
  ServicesSumServiceRequestIdAsc = 'SERVICES_SUM_SERVICE_REQUEST_ID_ASC',
  ServicesSumServiceRequestIdDesc = 'SERVICES_SUM_SERVICE_REQUEST_ID_DESC',
  ServicesSumTerminatedAtAsc = 'SERVICES_SUM_TERMINATED_AT_ASC',
  ServicesSumTerminatedAtDesc = 'SERVICES_SUM_TERMINATED_AT_DESC',
  ServicesVariancePopulationAssetIdsAsc = 'SERVICES_VARIANCE_POPULATION_ASSET_IDS_ASC',
  ServicesVariancePopulationAssetIdsDesc = 'SERVICES_VARIANCE_POPULATION_ASSET_IDS_DESC',
  ServicesVariancePopulationBlockRangeAsc = 'SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServicesVariancePopulationBlockRangeDesc = 'SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServicesVariancePopulationBlueprintIdAsc = 'SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_ASC',
  ServicesVariancePopulationBlueprintIdDesc = 'SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_DESC',
  ServicesVariancePopulationCreatedAtAsc = 'SERVICES_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServicesVariancePopulationCreatedAtDesc = 'SERVICES_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServicesVariancePopulationIdAsc = 'SERVICES_VARIANCE_POPULATION_ID_ASC',
  ServicesVariancePopulationIdDesc = 'SERVICES_VARIANCE_POPULATION_ID_DESC',
  ServicesVariancePopulationOwnerIdAsc = 'SERVICES_VARIANCE_POPULATION_OWNER_ID_ASC',
  ServicesVariancePopulationOwnerIdDesc = 'SERVICES_VARIANCE_POPULATION_OWNER_ID_DESC',
  ServicesVariancePopulationServiceRequestIdAsc = 'SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServicesVariancePopulationServiceRequestIdDesc = 'SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServicesVariancePopulationTerminatedAtAsc = 'SERVICES_VARIANCE_POPULATION_TERMINATED_AT_ASC',
  ServicesVariancePopulationTerminatedAtDesc = 'SERVICES_VARIANCE_POPULATION_TERMINATED_AT_DESC',
  ServicesVarianceSampleAssetIdsAsc = 'SERVICES_VARIANCE_SAMPLE_ASSET_IDS_ASC',
  ServicesVarianceSampleAssetIdsDesc = 'SERVICES_VARIANCE_SAMPLE_ASSET_IDS_DESC',
  ServicesVarianceSampleBlockRangeAsc = 'SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServicesVarianceSampleBlockRangeDesc = 'SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServicesVarianceSampleBlueprintIdAsc = 'SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC',
  ServicesVarianceSampleBlueprintIdDesc = 'SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC',
  ServicesVarianceSampleCreatedAtAsc = 'SERVICES_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServicesVarianceSampleCreatedAtDesc = 'SERVICES_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServicesVarianceSampleIdAsc = 'SERVICES_VARIANCE_SAMPLE_ID_ASC',
  ServicesVarianceSampleIdDesc = 'SERVICES_VARIANCE_SAMPLE_ID_DESC',
  ServicesVarianceSampleOwnerIdAsc = 'SERVICES_VARIANCE_SAMPLE_OWNER_ID_ASC',
  ServicesVarianceSampleOwnerIdDesc = 'SERVICES_VARIANCE_SAMPLE_OWNER_ID_DESC',
  ServicesVarianceSampleServiceRequestIdAsc = 'SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServicesVarianceSampleServiceRequestIdDesc = 'SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServicesVarianceSampleTerminatedAtAsc = 'SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_ASC',
  ServicesVarianceSampleTerminatedAtDesc = 'SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_DESC',
  ServiceRequestsAverageAssetIdsAsc = 'SERVICE_REQUESTS_AVERAGE_ASSET_IDS_ASC',
  ServiceRequestsAverageAssetIdsDesc = 'SERVICE_REQUESTS_AVERAGE_ASSET_IDS_DESC',
  ServiceRequestsAverageBlockRangeAsc = 'SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC',
  ServiceRequestsAverageBlockRangeDesc = 'SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC',
  ServiceRequestsAverageBlueprintIdAsc = 'SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_ASC',
  ServiceRequestsAverageBlueprintIdDesc = 'SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_DESC',
  ServiceRequestsAverageCreatedAtAsc = 'SERVICE_REQUESTS_AVERAGE_CREATED_AT_ASC',
  ServiceRequestsAverageCreatedAtDesc = 'SERVICE_REQUESTS_AVERAGE_CREATED_AT_DESC',
  ServiceRequestsAverageIdAsc = 'SERVICE_REQUESTS_AVERAGE_ID_ASC',
  ServiceRequestsAverageIdDesc = 'SERVICE_REQUESTS_AVERAGE_ID_DESC',
  ServiceRequestsAverageOwnerIdAsc = 'SERVICE_REQUESTS_AVERAGE_OWNER_ID_ASC',
  ServiceRequestsAverageOwnerIdDesc = 'SERVICE_REQUESTS_AVERAGE_OWNER_ID_DESC',
  ServiceRequestsByOwnerIdCountAsc = 'SERVICE_REQUESTS_BY_OWNER_ID__COUNT_ASC',
  ServiceRequestsByOwnerIdCountDesc = 'SERVICE_REQUESTS_BY_OWNER_ID__COUNT_DESC',
  ServiceRequestsCountAsc = 'SERVICE_REQUESTS_COUNT_ASC',
  ServiceRequestsCountDesc = 'SERVICE_REQUESTS_COUNT_DESC',
  ServiceRequestsDistinctCountAssetIdsAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_ASC',
  ServiceRequestsDistinctCountAssetIdsDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_DESC',
  ServiceRequestsDistinctCountBlockRangeAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServiceRequestsDistinctCountBlockRangeDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServiceRequestsDistinctCountBlueprintIdAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_ASC',
  ServiceRequestsDistinctCountBlueprintIdDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_DESC',
  ServiceRequestsDistinctCountCreatedAtAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC',
  ServiceRequestsDistinctCountCreatedAtDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC',
  ServiceRequestsDistinctCountIdAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ID_ASC',
  ServiceRequestsDistinctCountIdDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ID_DESC',
  ServiceRequestsDistinctCountOwnerIdAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_ASC',
  ServiceRequestsDistinctCountOwnerIdDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_DESC',
  ServiceRequestsMaxAssetIdsAsc = 'SERVICE_REQUESTS_MAX_ASSET_IDS_ASC',
  ServiceRequestsMaxAssetIdsDesc = 'SERVICE_REQUESTS_MAX_ASSET_IDS_DESC',
  ServiceRequestsMaxBlockRangeAsc = 'SERVICE_REQUESTS_MAX_BLOCK_RANGE_ASC',
  ServiceRequestsMaxBlockRangeDesc = 'SERVICE_REQUESTS_MAX_BLOCK_RANGE_DESC',
  ServiceRequestsMaxBlueprintIdAsc = 'SERVICE_REQUESTS_MAX_BLUEPRINT_ID_ASC',
  ServiceRequestsMaxBlueprintIdDesc = 'SERVICE_REQUESTS_MAX_BLUEPRINT_ID_DESC',
  ServiceRequestsMaxCreatedAtAsc = 'SERVICE_REQUESTS_MAX_CREATED_AT_ASC',
  ServiceRequestsMaxCreatedAtDesc = 'SERVICE_REQUESTS_MAX_CREATED_AT_DESC',
  ServiceRequestsMaxIdAsc = 'SERVICE_REQUESTS_MAX_ID_ASC',
  ServiceRequestsMaxIdDesc = 'SERVICE_REQUESTS_MAX_ID_DESC',
  ServiceRequestsMaxOwnerIdAsc = 'SERVICE_REQUESTS_MAX_OWNER_ID_ASC',
  ServiceRequestsMaxOwnerIdDesc = 'SERVICE_REQUESTS_MAX_OWNER_ID_DESC',
  ServiceRequestsMinAssetIdsAsc = 'SERVICE_REQUESTS_MIN_ASSET_IDS_ASC',
  ServiceRequestsMinAssetIdsDesc = 'SERVICE_REQUESTS_MIN_ASSET_IDS_DESC',
  ServiceRequestsMinBlockRangeAsc = 'SERVICE_REQUESTS_MIN_BLOCK_RANGE_ASC',
  ServiceRequestsMinBlockRangeDesc = 'SERVICE_REQUESTS_MIN_BLOCK_RANGE_DESC',
  ServiceRequestsMinBlueprintIdAsc = 'SERVICE_REQUESTS_MIN_BLUEPRINT_ID_ASC',
  ServiceRequestsMinBlueprintIdDesc = 'SERVICE_REQUESTS_MIN_BLUEPRINT_ID_DESC',
  ServiceRequestsMinCreatedAtAsc = 'SERVICE_REQUESTS_MIN_CREATED_AT_ASC',
  ServiceRequestsMinCreatedAtDesc = 'SERVICE_REQUESTS_MIN_CREATED_AT_DESC',
  ServiceRequestsMinIdAsc = 'SERVICE_REQUESTS_MIN_ID_ASC',
  ServiceRequestsMinIdDesc = 'SERVICE_REQUESTS_MIN_ID_DESC',
  ServiceRequestsMinOwnerIdAsc = 'SERVICE_REQUESTS_MIN_OWNER_ID_ASC',
  ServiceRequestsMinOwnerIdDesc = 'SERVICE_REQUESTS_MIN_OWNER_ID_DESC',
  ServiceRequestsStddevPopulationAssetIdsAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_ASC',
  ServiceRequestsStddevPopulationAssetIdsDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_DESC',
  ServiceRequestsStddevPopulationBlockRangeAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestsStddevPopulationBlockRangeDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestsStddevPopulationBlueprintIdAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_ASC',
  ServiceRequestsStddevPopulationBlueprintIdDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_DESC',
  ServiceRequestsStddevPopulationCreatedAtAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC',
  ServiceRequestsStddevPopulationCreatedAtDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC',
  ServiceRequestsStddevPopulationIdAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ID_ASC',
  ServiceRequestsStddevPopulationIdDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ID_DESC',
  ServiceRequestsStddevPopulationOwnerIdAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_ASC',
  ServiceRequestsStddevPopulationOwnerIdDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_DESC',
  ServiceRequestsStddevSampleAssetIdsAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_ASC',
  ServiceRequestsStddevSampleAssetIdsDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_DESC',
  ServiceRequestsStddevSampleBlockRangeAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestsStddevSampleBlockRangeDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestsStddevSampleBlueprintIdAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC',
  ServiceRequestsStddevSampleBlueprintIdDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC',
  ServiceRequestsStddevSampleCreatedAtAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServiceRequestsStddevSampleCreatedAtDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServiceRequestsStddevSampleIdAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ID_ASC',
  ServiceRequestsStddevSampleIdDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ID_DESC',
  ServiceRequestsStddevSampleOwnerIdAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_ASC',
  ServiceRequestsStddevSampleOwnerIdDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_DESC',
  ServiceRequestsSumAssetIdsAsc = 'SERVICE_REQUESTS_SUM_ASSET_IDS_ASC',
  ServiceRequestsSumAssetIdsDesc = 'SERVICE_REQUESTS_SUM_ASSET_IDS_DESC',
  ServiceRequestsSumBlockRangeAsc = 'SERVICE_REQUESTS_SUM_BLOCK_RANGE_ASC',
  ServiceRequestsSumBlockRangeDesc = 'SERVICE_REQUESTS_SUM_BLOCK_RANGE_DESC',
  ServiceRequestsSumBlueprintIdAsc = 'SERVICE_REQUESTS_SUM_BLUEPRINT_ID_ASC',
  ServiceRequestsSumBlueprintIdDesc = 'SERVICE_REQUESTS_SUM_BLUEPRINT_ID_DESC',
  ServiceRequestsSumCreatedAtAsc = 'SERVICE_REQUESTS_SUM_CREATED_AT_ASC',
  ServiceRequestsSumCreatedAtDesc = 'SERVICE_REQUESTS_SUM_CREATED_AT_DESC',
  ServiceRequestsSumIdAsc = 'SERVICE_REQUESTS_SUM_ID_ASC',
  ServiceRequestsSumIdDesc = 'SERVICE_REQUESTS_SUM_ID_DESC',
  ServiceRequestsSumOwnerIdAsc = 'SERVICE_REQUESTS_SUM_OWNER_ID_ASC',
  ServiceRequestsSumOwnerIdDesc = 'SERVICE_REQUESTS_SUM_OWNER_ID_DESC',
  ServiceRequestsVariancePopulationAssetIdsAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_ASC',
  ServiceRequestsVariancePopulationAssetIdsDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_DESC',
  ServiceRequestsVariancePopulationBlockRangeAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestsVariancePopulationBlockRangeDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestsVariancePopulationBlueprintIdAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC',
  ServiceRequestsVariancePopulationBlueprintIdDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC',
  ServiceRequestsVariancePopulationCreatedAtAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServiceRequestsVariancePopulationCreatedAtDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServiceRequestsVariancePopulationIdAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ID_ASC',
  ServiceRequestsVariancePopulationIdDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ID_DESC',
  ServiceRequestsVariancePopulationOwnerIdAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_ASC',
  ServiceRequestsVariancePopulationOwnerIdDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_DESC',
  ServiceRequestsVarianceSampleAssetIdsAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_ASC',
  ServiceRequestsVarianceSampleAssetIdsDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_DESC',
  ServiceRequestsVarianceSampleBlockRangeAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestsVarianceSampleBlockRangeDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestsVarianceSampleBlueprintIdAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC',
  ServiceRequestsVarianceSampleBlueprintIdDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC',
  ServiceRequestsVarianceSampleCreatedAtAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServiceRequestsVarianceSampleCreatedAtDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServiceRequestsVarianceSampleIdAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_ASC',
  ServiceRequestsVarianceSampleIdDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_DESC',
  ServiceRequestsVarianceSampleOwnerIdAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_ASC',
  ServiceRequestsVarianceSampleOwnerIdDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_DESC',
  SnapshotsAverageAccountIdAsc = 'SNAPSHOTS_AVERAGE_ACCOUNT_ID_ASC',
  SnapshotsAverageAccountIdDesc = 'SNAPSHOTS_AVERAGE_ACCOUNT_ID_DESC',
  SnapshotsAverageBlockNumberAsc = 'SNAPSHOTS_AVERAGE_BLOCK_NUMBER_ASC',
  SnapshotsAverageBlockNumberDesc = 'SNAPSHOTS_AVERAGE_BLOCK_NUMBER_DESC',
  SnapshotsAverageBlockRangeAsc = 'SNAPSHOTS_AVERAGE_BLOCK_RANGE_ASC',
  SnapshotsAverageBlockRangeDesc = 'SNAPSHOTS_AVERAGE_BLOCK_RANGE_DESC',
  SnapshotsAverageIdAsc = 'SNAPSHOTS_AVERAGE_ID_ASC',
  SnapshotsAverageIdDesc = 'SNAPSHOTS_AVERAGE_ID_DESC',
  SnapshotsAverageLiquidStakingPointsAsc = 'SNAPSHOTS_AVERAGE_LIQUID_STAKING_POINTS_ASC',
  SnapshotsAverageLiquidStakingPointsDesc = 'SNAPSHOTS_AVERAGE_LIQUID_STAKING_POINTS_DESC',
  SnapshotsAverageOperatorRegistrationPointsAsc = 'SNAPSHOTS_AVERAGE_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsAverageOperatorRegistrationPointsDesc = 'SNAPSHOTS_AVERAGE_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsAverageRestakingDelegationPointsAsc = 'SNAPSHOTS_AVERAGE_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsAverageRestakingDelegationPointsDesc = 'SNAPSHOTS_AVERAGE_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsAverageRestakingDepositPointsAsc = 'SNAPSHOTS_AVERAGE_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsAverageRestakingDepositPointsDesc = 'SNAPSHOTS_AVERAGE_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsAverageTimestampAsc = 'SNAPSHOTS_AVERAGE_TIMESTAMP_ASC',
  SnapshotsAverageTimestampDesc = 'SNAPSHOTS_AVERAGE_TIMESTAMP_DESC',
  SnapshotsAverageTotalPointsAsc = 'SNAPSHOTS_AVERAGE_TOTAL_POINTS_ASC',
  SnapshotsAverageTotalPointsDesc = 'SNAPSHOTS_AVERAGE_TOTAL_POINTS_DESC',
  SnapshotsAverageValidatorNominationPointsAsc = 'SNAPSHOTS_AVERAGE_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsAverageValidatorNominationPointsDesc = 'SNAPSHOTS_AVERAGE_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsAverageValidatorRegistrationPointsAsc = 'SNAPSHOTS_AVERAGE_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsAverageValidatorRegistrationPointsDesc = 'SNAPSHOTS_AVERAGE_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsCountAsc = 'SNAPSHOTS_COUNT_ASC',
  SnapshotsCountDesc = 'SNAPSHOTS_COUNT_DESC',
  SnapshotsDistinctCountAccountIdAsc = 'SNAPSHOTS_DISTINCT_COUNT_ACCOUNT_ID_ASC',
  SnapshotsDistinctCountAccountIdDesc = 'SNAPSHOTS_DISTINCT_COUNT_ACCOUNT_ID_DESC',
  SnapshotsDistinctCountBlockNumberAsc = 'SNAPSHOTS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',
  SnapshotsDistinctCountBlockNumberDesc = 'SNAPSHOTS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',
  SnapshotsDistinctCountBlockRangeAsc = 'SNAPSHOTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  SnapshotsDistinctCountBlockRangeDesc = 'SNAPSHOTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  SnapshotsDistinctCountIdAsc = 'SNAPSHOTS_DISTINCT_COUNT_ID_ASC',
  SnapshotsDistinctCountIdDesc = 'SNAPSHOTS_DISTINCT_COUNT_ID_DESC',
  SnapshotsDistinctCountLiquidStakingPointsAsc = 'SNAPSHOTS_DISTINCT_COUNT_LIQUID_STAKING_POINTS_ASC',
  SnapshotsDistinctCountLiquidStakingPointsDesc = 'SNAPSHOTS_DISTINCT_COUNT_LIQUID_STAKING_POINTS_DESC',
  SnapshotsDistinctCountOperatorRegistrationPointsAsc = 'SNAPSHOTS_DISTINCT_COUNT_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsDistinctCountOperatorRegistrationPointsDesc = 'SNAPSHOTS_DISTINCT_COUNT_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsDistinctCountRestakingDelegationPointsAsc = 'SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsDistinctCountRestakingDelegationPointsDesc = 'SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsDistinctCountRestakingDepositPointsAsc = 'SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsDistinctCountRestakingDepositPointsDesc = 'SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsDistinctCountTimestampAsc = 'SNAPSHOTS_DISTINCT_COUNT_TIMESTAMP_ASC',
  SnapshotsDistinctCountTimestampDesc = 'SNAPSHOTS_DISTINCT_COUNT_TIMESTAMP_DESC',
  SnapshotsDistinctCountTotalPointsAsc = 'SNAPSHOTS_DISTINCT_COUNT_TOTAL_POINTS_ASC',
  SnapshotsDistinctCountTotalPointsDesc = 'SNAPSHOTS_DISTINCT_COUNT_TOTAL_POINTS_DESC',
  SnapshotsDistinctCountValidatorNominationPointsAsc = 'SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsDistinctCountValidatorNominationPointsDesc = 'SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsDistinctCountValidatorRegistrationPointsAsc = 'SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsDistinctCountValidatorRegistrationPointsDesc = 'SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsMaxAccountIdAsc = 'SNAPSHOTS_MAX_ACCOUNT_ID_ASC',
  SnapshotsMaxAccountIdDesc = 'SNAPSHOTS_MAX_ACCOUNT_ID_DESC',
  SnapshotsMaxBlockNumberAsc = 'SNAPSHOTS_MAX_BLOCK_NUMBER_ASC',
  SnapshotsMaxBlockNumberDesc = 'SNAPSHOTS_MAX_BLOCK_NUMBER_DESC',
  SnapshotsMaxBlockRangeAsc = 'SNAPSHOTS_MAX_BLOCK_RANGE_ASC',
  SnapshotsMaxBlockRangeDesc = 'SNAPSHOTS_MAX_BLOCK_RANGE_DESC',
  SnapshotsMaxIdAsc = 'SNAPSHOTS_MAX_ID_ASC',
  SnapshotsMaxIdDesc = 'SNAPSHOTS_MAX_ID_DESC',
  SnapshotsMaxLiquidStakingPointsAsc = 'SNAPSHOTS_MAX_LIQUID_STAKING_POINTS_ASC',
  SnapshotsMaxLiquidStakingPointsDesc = 'SNAPSHOTS_MAX_LIQUID_STAKING_POINTS_DESC',
  SnapshotsMaxOperatorRegistrationPointsAsc = 'SNAPSHOTS_MAX_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsMaxOperatorRegistrationPointsDesc = 'SNAPSHOTS_MAX_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsMaxRestakingDelegationPointsAsc = 'SNAPSHOTS_MAX_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsMaxRestakingDelegationPointsDesc = 'SNAPSHOTS_MAX_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsMaxRestakingDepositPointsAsc = 'SNAPSHOTS_MAX_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsMaxRestakingDepositPointsDesc = 'SNAPSHOTS_MAX_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsMaxTimestampAsc = 'SNAPSHOTS_MAX_TIMESTAMP_ASC',
  SnapshotsMaxTimestampDesc = 'SNAPSHOTS_MAX_TIMESTAMP_DESC',
  SnapshotsMaxTotalPointsAsc = 'SNAPSHOTS_MAX_TOTAL_POINTS_ASC',
  SnapshotsMaxTotalPointsDesc = 'SNAPSHOTS_MAX_TOTAL_POINTS_DESC',
  SnapshotsMaxValidatorNominationPointsAsc = 'SNAPSHOTS_MAX_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsMaxValidatorNominationPointsDesc = 'SNAPSHOTS_MAX_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsMaxValidatorRegistrationPointsAsc = 'SNAPSHOTS_MAX_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsMaxValidatorRegistrationPointsDesc = 'SNAPSHOTS_MAX_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsMinAccountIdAsc = 'SNAPSHOTS_MIN_ACCOUNT_ID_ASC',
  SnapshotsMinAccountIdDesc = 'SNAPSHOTS_MIN_ACCOUNT_ID_DESC',
  SnapshotsMinBlockNumberAsc = 'SNAPSHOTS_MIN_BLOCK_NUMBER_ASC',
  SnapshotsMinBlockNumberDesc = 'SNAPSHOTS_MIN_BLOCK_NUMBER_DESC',
  SnapshotsMinBlockRangeAsc = 'SNAPSHOTS_MIN_BLOCK_RANGE_ASC',
  SnapshotsMinBlockRangeDesc = 'SNAPSHOTS_MIN_BLOCK_RANGE_DESC',
  SnapshotsMinIdAsc = 'SNAPSHOTS_MIN_ID_ASC',
  SnapshotsMinIdDesc = 'SNAPSHOTS_MIN_ID_DESC',
  SnapshotsMinLiquidStakingPointsAsc = 'SNAPSHOTS_MIN_LIQUID_STAKING_POINTS_ASC',
  SnapshotsMinLiquidStakingPointsDesc = 'SNAPSHOTS_MIN_LIQUID_STAKING_POINTS_DESC',
  SnapshotsMinOperatorRegistrationPointsAsc = 'SNAPSHOTS_MIN_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsMinOperatorRegistrationPointsDesc = 'SNAPSHOTS_MIN_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsMinRestakingDelegationPointsAsc = 'SNAPSHOTS_MIN_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsMinRestakingDelegationPointsDesc = 'SNAPSHOTS_MIN_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsMinRestakingDepositPointsAsc = 'SNAPSHOTS_MIN_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsMinRestakingDepositPointsDesc = 'SNAPSHOTS_MIN_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsMinTimestampAsc = 'SNAPSHOTS_MIN_TIMESTAMP_ASC',
  SnapshotsMinTimestampDesc = 'SNAPSHOTS_MIN_TIMESTAMP_DESC',
  SnapshotsMinTotalPointsAsc = 'SNAPSHOTS_MIN_TOTAL_POINTS_ASC',
  SnapshotsMinTotalPointsDesc = 'SNAPSHOTS_MIN_TOTAL_POINTS_DESC',
  SnapshotsMinValidatorNominationPointsAsc = 'SNAPSHOTS_MIN_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsMinValidatorNominationPointsDesc = 'SNAPSHOTS_MIN_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsMinValidatorRegistrationPointsAsc = 'SNAPSHOTS_MIN_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsMinValidatorRegistrationPointsDesc = 'SNAPSHOTS_MIN_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsStddevPopulationAccountIdAsc = 'SNAPSHOTS_STDDEV_POPULATION_ACCOUNT_ID_ASC',
  SnapshotsStddevPopulationAccountIdDesc = 'SNAPSHOTS_STDDEV_POPULATION_ACCOUNT_ID_DESC',
  SnapshotsStddevPopulationBlockNumberAsc = 'SNAPSHOTS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',
  SnapshotsStddevPopulationBlockNumberDesc = 'SNAPSHOTS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',
  SnapshotsStddevPopulationBlockRangeAsc = 'SNAPSHOTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  SnapshotsStddevPopulationBlockRangeDesc = 'SNAPSHOTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  SnapshotsStddevPopulationIdAsc = 'SNAPSHOTS_STDDEV_POPULATION_ID_ASC',
  SnapshotsStddevPopulationIdDesc = 'SNAPSHOTS_STDDEV_POPULATION_ID_DESC',
  SnapshotsStddevPopulationLiquidStakingPointsAsc = 'SNAPSHOTS_STDDEV_POPULATION_LIQUID_STAKING_POINTS_ASC',
  SnapshotsStddevPopulationLiquidStakingPointsDesc = 'SNAPSHOTS_STDDEV_POPULATION_LIQUID_STAKING_POINTS_DESC',
  SnapshotsStddevPopulationOperatorRegistrationPointsAsc = 'SNAPSHOTS_STDDEV_POPULATION_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsStddevPopulationOperatorRegistrationPointsDesc = 'SNAPSHOTS_STDDEV_POPULATION_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsStddevPopulationRestakingDelegationPointsAsc = 'SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsStddevPopulationRestakingDelegationPointsDesc = 'SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsStddevPopulationRestakingDepositPointsAsc = 'SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsStddevPopulationRestakingDepositPointsDesc = 'SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsStddevPopulationTimestampAsc = 'SNAPSHOTS_STDDEV_POPULATION_TIMESTAMP_ASC',
  SnapshotsStddevPopulationTimestampDesc = 'SNAPSHOTS_STDDEV_POPULATION_TIMESTAMP_DESC',
  SnapshotsStddevPopulationTotalPointsAsc = 'SNAPSHOTS_STDDEV_POPULATION_TOTAL_POINTS_ASC',
  SnapshotsStddevPopulationTotalPointsDesc = 'SNAPSHOTS_STDDEV_POPULATION_TOTAL_POINTS_DESC',
  SnapshotsStddevPopulationValidatorNominationPointsAsc = 'SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsStddevPopulationValidatorNominationPointsDesc = 'SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsStddevPopulationValidatorRegistrationPointsAsc = 'SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsStddevPopulationValidatorRegistrationPointsDesc = 'SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsStddevSampleAccountIdAsc = 'SNAPSHOTS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',
  SnapshotsStddevSampleAccountIdDesc = 'SNAPSHOTS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',
  SnapshotsStddevSampleBlockNumberAsc = 'SNAPSHOTS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',
  SnapshotsStddevSampleBlockNumberDesc = 'SNAPSHOTS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',
  SnapshotsStddevSampleBlockRangeAsc = 'SNAPSHOTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  SnapshotsStddevSampleBlockRangeDesc = 'SNAPSHOTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  SnapshotsStddevSampleIdAsc = 'SNAPSHOTS_STDDEV_SAMPLE_ID_ASC',
  SnapshotsStddevSampleIdDesc = 'SNAPSHOTS_STDDEV_SAMPLE_ID_DESC',
  SnapshotsStddevSampleLiquidStakingPointsAsc = 'SNAPSHOTS_STDDEV_SAMPLE_LIQUID_STAKING_POINTS_ASC',
  SnapshotsStddevSampleLiquidStakingPointsDesc = 'SNAPSHOTS_STDDEV_SAMPLE_LIQUID_STAKING_POINTS_DESC',
  SnapshotsStddevSampleOperatorRegistrationPointsAsc = 'SNAPSHOTS_STDDEV_SAMPLE_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsStddevSampleOperatorRegistrationPointsDesc = 'SNAPSHOTS_STDDEV_SAMPLE_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsStddevSampleRestakingDelegationPointsAsc = 'SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsStddevSampleRestakingDelegationPointsDesc = 'SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsStddevSampleRestakingDepositPointsAsc = 'SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsStddevSampleRestakingDepositPointsDesc = 'SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsStddevSampleTimestampAsc = 'SNAPSHOTS_STDDEV_SAMPLE_TIMESTAMP_ASC',
  SnapshotsStddevSampleTimestampDesc = 'SNAPSHOTS_STDDEV_SAMPLE_TIMESTAMP_DESC',
  SnapshotsStddevSampleTotalPointsAsc = 'SNAPSHOTS_STDDEV_SAMPLE_TOTAL_POINTS_ASC',
  SnapshotsStddevSampleTotalPointsDesc = 'SNAPSHOTS_STDDEV_SAMPLE_TOTAL_POINTS_DESC',
  SnapshotsStddevSampleValidatorNominationPointsAsc = 'SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsStddevSampleValidatorNominationPointsDesc = 'SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsStddevSampleValidatorRegistrationPointsAsc = 'SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsStddevSampleValidatorRegistrationPointsDesc = 'SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsSumAccountIdAsc = 'SNAPSHOTS_SUM_ACCOUNT_ID_ASC',
  SnapshotsSumAccountIdDesc = 'SNAPSHOTS_SUM_ACCOUNT_ID_DESC',
  SnapshotsSumBlockNumberAsc = 'SNAPSHOTS_SUM_BLOCK_NUMBER_ASC',
  SnapshotsSumBlockNumberDesc = 'SNAPSHOTS_SUM_BLOCK_NUMBER_DESC',
  SnapshotsSumBlockRangeAsc = 'SNAPSHOTS_SUM_BLOCK_RANGE_ASC',
  SnapshotsSumBlockRangeDesc = 'SNAPSHOTS_SUM_BLOCK_RANGE_DESC',
  SnapshotsSumIdAsc = 'SNAPSHOTS_SUM_ID_ASC',
  SnapshotsSumIdDesc = 'SNAPSHOTS_SUM_ID_DESC',
  SnapshotsSumLiquidStakingPointsAsc = 'SNAPSHOTS_SUM_LIQUID_STAKING_POINTS_ASC',
  SnapshotsSumLiquidStakingPointsDesc = 'SNAPSHOTS_SUM_LIQUID_STAKING_POINTS_DESC',
  SnapshotsSumOperatorRegistrationPointsAsc = 'SNAPSHOTS_SUM_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsSumOperatorRegistrationPointsDesc = 'SNAPSHOTS_SUM_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsSumRestakingDelegationPointsAsc = 'SNAPSHOTS_SUM_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsSumRestakingDelegationPointsDesc = 'SNAPSHOTS_SUM_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsSumRestakingDepositPointsAsc = 'SNAPSHOTS_SUM_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsSumRestakingDepositPointsDesc = 'SNAPSHOTS_SUM_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsSumTimestampAsc = 'SNAPSHOTS_SUM_TIMESTAMP_ASC',
  SnapshotsSumTimestampDesc = 'SNAPSHOTS_SUM_TIMESTAMP_DESC',
  SnapshotsSumTotalPointsAsc = 'SNAPSHOTS_SUM_TOTAL_POINTS_ASC',
  SnapshotsSumTotalPointsDesc = 'SNAPSHOTS_SUM_TOTAL_POINTS_DESC',
  SnapshotsSumValidatorNominationPointsAsc = 'SNAPSHOTS_SUM_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsSumValidatorNominationPointsDesc = 'SNAPSHOTS_SUM_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsSumValidatorRegistrationPointsAsc = 'SNAPSHOTS_SUM_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsSumValidatorRegistrationPointsDesc = 'SNAPSHOTS_SUM_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsVariancePopulationAccountIdAsc = 'SNAPSHOTS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',
  SnapshotsVariancePopulationAccountIdDesc = 'SNAPSHOTS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',
  SnapshotsVariancePopulationBlockNumberAsc = 'SNAPSHOTS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',
  SnapshotsVariancePopulationBlockNumberDesc = 'SNAPSHOTS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',
  SnapshotsVariancePopulationBlockRangeAsc = 'SNAPSHOTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  SnapshotsVariancePopulationBlockRangeDesc = 'SNAPSHOTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  SnapshotsVariancePopulationIdAsc = 'SNAPSHOTS_VARIANCE_POPULATION_ID_ASC',
  SnapshotsVariancePopulationIdDesc = 'SNAPSHOTS_VARIANCE_POPULATION_ID_DESC',
  SnapshotsVariancePopulationLiquidStakingPointsAsc = 'SNAPSHOTS_VARIANCE_POPULATION_LIQUID_STAKING_POINTS_ASC',
  SnapshotsVariancePopulationLiquidStakingPointsDesc = 'SNAPSHOTS_VARIANCE_POPULATION_LIQUID_STAKING_POINTS_DESC',
  SnapshotsVariancePopulationOperatorRegistrationPointsAsc = 'SNAPSHOTS_VARIANCE_POPULATION_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsVariancePopulationOperatorRegistrationPointsDesc = 'SNAPSHOTS_VARIANCE_POPULATION_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsVariancePopulationRestakingDelegationPointsAsc = 'SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsVariancePopulationRestakingDelegationPointsDesc = 'SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsVariancePopulationRestakingDepositPointsAsc = 'SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsVariancePopulationRestakingDepositPointsDesc = 'SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsVariancePopulationTimestampAsc = 'SNAPSHOTS_VARIANCE_POPULATION_TIMESTAMP_ASC',
  SnapshotsVariancePopulationTimestampDesc = 'SNAPSHOTS_VARIANCE_POPULATION_TIMESTAMP_DESC',
  SnapshotsVariancePopulationTotalPointsAsc = 'SNAPSHOTS_VARIANCE_POPULATION_TOTAL_POINTS_ASC',
  SnapshotsVariancePopulationTotalPointsDesc = 'SNAPSHOTS_VARIANCE_POPULATION_TOTAL_POINTS_DESC',
  SnapshotsVariancePopulationValidatorNominationPointsAsc = 'SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsVariancePopulationValidatorNominationPointsDesc = 'SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsVariancePopulationValidatorRegistrationPointsAsc = 'SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsVariancePopulationValidatorRegistrationPointsDesc = 'SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_REGISTRATION_POINTS_DESC',
  SnapshotsVarianceSampleAccountIdAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',
  SnapshotsVarianceSampleAccountIdDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',
  SnapshotsVarianceSampleBlockNumberAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',
  SnapshotsVarianceSampleBlockNumberDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',
  SnapshotsVarianceSampleBlockRangeAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  SnapshotsVarianceSampleBlockRangeDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  SnapshotsVarianceSampleIdAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_ID_ASC',
  SnapshotsVarianceSampleIdDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_ID_DESC',
  SnapshotsVarianceSampleLiquidStakingPointsAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_LIQUID_STAKING_POINTS_ASC',
  SnapshotsVarianceSampleLiquidStakingPointsDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_LIQUID_STAKING_POINTS_DESC',
  SnapshotsVarianceSampleOperatorRegistrationPointsAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_OPERATOR_REGISTRATION_POINTS_ASC',
  SnapshotsVarianceSampleOperatorRegistrationPointsDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_OPERATOR_REGISTRATION_POINTS_DESC',
  SnapshotsVarianceSampleRestakingDelegationPointsAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DELEGATION_POINTS_ASC',
  SnapshotsVarianceSampleRestakingDelegationPointsDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DELEGATION_POINTS_DESC',
  SnapshotsVarianceSampleRestakingDepositPointsAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DEPOSIT_POINTS_ASC',
  SnapshotsVarianceSampleRestakingDepositPointsDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DEPOSIT_POINTS_DESC',
  SnapshotsVarianceSampleTimestampAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_TIMESTAMP_ASC',
  SnapshotsVarianceSampleTimestampDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_TIMESTAMP_DESC',
  SnapshotsVarianceSampleTotalPointsAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_TOTAL_POINTS_ASC',
  SnapshotsVarianceSampleTotalPointsDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_TOTAL_POINTS_DESC',
  SnapshotsVarianceSampleValidatorNominationPointsAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_NOMINATION_POINTS_ASC',
  SnapshotsVarianceSampleValidatorNominationPointsDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_NOMINATION_POINTS_DESC',
  SnapshotsVarianceSampleValidatorRegistrationPointsAsc = 'SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_REGISTRATION_POINTS_ASC',
  SnapshotsVarianceSampleValidatorRegistrationPointsDesc = 'SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_REGISTRATION_POINTS_DESC',
  TotalPointsAsc = 'TOTAL_POINTS_ASC',
  TotalPointsDesc = 'TOTAL_POINTS_DESC'
}

/** A filter to be used against BigFloat fields. All fields are combined with a logical ‘and.’ */
export type BigFloatFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['BigFloat']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['BigFloat']['input']>>;
};

/** A filter to be used against BigInt fields. All fields are combined with a logical ‘and.’ */
export type BigIntFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['BigInt']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['BigInt']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['BigInt']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['BigInt']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type Blueprint = Node & {
  __typename?: 'Blueprint';
  /** Reads and enables pagination through a set of `Account`. */
  accountsByServiceBlueprintIdAndOwnerId: BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Account`. */
  accountsByServiceRequestBlueprintIdAndOwnerId: BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyConnection;
  /** Reads and enables pagination through a set of `BlueprintOperator`. */
  blueprintOperators: BlueprintOperatorsConnection;
  /** The creation block number of the Blueprint. */
  createdAt: Scalars['Int']['output'];
  /** Unique identifier for the Blueprint. */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByBlueprintOperatorBlueprintIdAndOperatorId: BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyConnection;
  /** Reads a single `Account` that is related to this `Blueprint`. */
  owner?: Maybe<Account>;
  /** The owner of the Blueprint. */
  ownerId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequests: ServiceRequestsConnection;
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequestsByServiceBlueprintIdAndServiceRequestId: BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


export type BlueprintAccountsByServiceBlueprintIdAndOwnerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Accounts_Distinct_Enum>>>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Accounts_Distinct_Enum>>>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type BlueprintBlueprintOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprint_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type BlueprintServiceRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type BlueprintServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Account` values, with data from `Service`. */
export type BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyConnection = {
  __typename?: 'BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account`, info from the `Service`, and the cursor to aid in pagination. */
  edges: Array<BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Maybe<Account>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values, with data from `Service`. */
export type BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountsGroupBy>;
  having?: InputMaybe<AccountsHavingInput>;
};

/** A `Account` edge in the connection, with data from `Service`. */
export type BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyEdge = {
  __typename?: 'BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Account` at the end of the edge. */
  node?: Maybe<Account>;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


/** A `Account` edge in the connection, with data from `Service`. */
export type BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyEdgeServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Account` values, with data from `ServiceRequest`. */
export type BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyConnection = {
  __typename?: 'BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account`, info from the `ServiceRequest`, and the cursor to aid in pagination. */
  edges: Array<BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Maybe<Account>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values, with data from `ServiceRequest`. */
export type BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountsGroupBy>;
  having?: InputMaybe<AccountsHavingInput>;
};

/** A `Account` edge in the connection, with data from `ServiceRequest`. */
export type BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyEdge = {
  __typename?: 'BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Account` at the end of the edge. */
  node?: Maybe<Account>;
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequests: ServiceRequestsConnection;
};


/** A `Account` edge in the connection, with data from `ServiceRequest`. */
export type BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyEdgeServiceRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type BlueprintAggregates = {
  __typename?: 'BlueprintAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BlueprintAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BlueprintDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BlueprintMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BlueprintMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BlueprintStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BlueprintStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BlueprintSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BlueprintVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BlueprintVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `Blueprint` object types. */
export type BlueprintAggregatesFilter = {
  /** Mean average aggregate over matching `Blueprint` objects. */
  average?: InputMaybe<BlueprintAverageAggregateFilter>;
  /** Distinct count aggregate over matching `Blueprint` objects. */
  distinctCount?: InputMaybe<BlueprintDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `Blueprint` object to be included within the aggregate. */
  filter?: InputMaybe<BlueprintFilter>;
  /** Maximum aggregate over matching `Blueprint` objects. */
  max?: InputMaybe<BlueprintMaxAggregateFilter>;
  /** Minimum aggregate over matching `Blueprint` objects. */
  min?: InputMaybe<BlueprintMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `Blueprint` objects. */
  stddevPopulation?: InputMaybe<BlueprintStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `Blueprint` objects. */
  stddevSample?: InputMaybe<BlueprintStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `Blueprint` objects. */
  sum?: InputMaybe<BlueprintSumAggregateFilter>;
  /** Population variance aggregate over matching `Blueprint` objects. */
  variancePopulation?: InputMaybe<BlueprintVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `Blueprint` objects. */
  varianceSample?: InputMaybe<BlueprintVarianceSampleAggregateFilter>;
};

export type BlueprintAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintAverageAggregates = {
  __typename?: 'BlueprintAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  ownerId?: InputMaybe<BigIntFilter>;
};

export type BlueprintDistinctCountAggregates = {
  __typename?: 'BlueprintDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ownerId across the matching connection */
  ownerId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Blueprint` object types. All fields are combined with a logical ‘and.’ */
export type BlueprintFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BlueprintFilter>>;
  /** Filter by the object’s `blueprintOperators` relation. */
  blueprintOperators?: InputMaybe<BlueprintToManyBlueprintOperatorFilter>;
  /** Some related `blueprintOperators` exist. */
  blueprintOperatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BlueprintFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BlueprintFilter>>;
  /** Filter by the object’s `owner` relation. */
  owner?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `ownerId` field. */
  ownerId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `serviceRequests` relation. */
  serviceRequests?: InputMaybe<BlueprintToManyServiceRequestFilter>;
  /** Some related `serviceRequests` exist. */
  serviceRequestsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `services` relation. */
  services?: InputMaybe<BlueprintToManyServiceFilter>;
  /** Some related `services` exist. */
  servicesExist?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BlueprintMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type BlueprintMaxAggregates = {
  __typename?: 'BlueprintMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type BlueprintMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type BlueprintMinAggregates = {
  __typename?: 'BlueprintMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type BlueprintOperator = Node & {
  __typename?: 'BlueprintOperator';
  /** Reads a single `Blueprint` that is related to this `BlueprintOperator`. */
  blueprint?: Maybe<Blueprint>;
  /** The Blueprint associated with this relationship. */
  blueprintId: Scalars['String']['output'];
  /** Unique identifier for the relationship. Composite key: Blueprint ID + Operator ID */
  id: Scalars['String']['output'];
  /** Indicates whether the relationship is currently active. */
  isActive: Scalars['Boolean']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `BlueprintOperator`. */
  operator?: Maybe<Operator>;
  /** The Operator associated with this relationship. */
  operatorId: Scalars['String']['output'];
  /** The registration block number of the relationship. */
  registeredAt: Scalars['Int']['output'];
  /** The last update block number of the relationship. */
  updatedAt: Scalars['Int']['output'];
};

export type BlueprintOperatorAggregates = {
  __typename?: 'BlueprintOperatorAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BlueprintOperatorAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BlueprintOperatorDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BlueprintOperatorMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BlueprintOperatorMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BlueprintOperatorStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BlueprintOperatorStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BlueprintOperatorSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BlueprintOperatorVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BlueprintOperatorVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `BlueprintOperator` object types. */
export type BlueprintOperatorAggregatesFilter = {
  /** Mean average aggregate over matching `BlueprintOperator` objects. */
  average?: InputMaybe<BlueprintOperatorAverageAggregateFilter>;
  /** Distinct count aggregate over matching `BlueprintOperator` objects. */
  distinctCount?: InputMaybe<BlueprintOperatorDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `BlueprintOperator` object to be included within the aggregate. */
  filter?: InputMaybe<BlueprintOperatorFilter>;
  /** Maximum aggregate over matching `BlueprintOperator` objects. */
  max?: InputMaybe<BlueprintOperatorMaxAggregateFilter>;
  /** Minimum aggregate over matching `BlueprintOperator` objects. */
  min?: InputMaybe<BlueprintOperatorMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `BlueprintOperator` objects. */
  stddevPopulation?: InputMaybe<BlueprintOperatorStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `BlueprintOperator` objects. */
  stddevSample?: InputMaybe<BlueprintOperatorStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `BlueprintOperator` objects. */
  sum?: InputMaybe<BlueprintOperatorSumAggregateFilter>;
  /** Population variance aggregate over matching `BlueprintOperator` objects. */
  variancePopulation?: InputMaybe<BlueprintOperatorVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `BlueprintOperator` objects. */
  varianceSample?: InputMaybe<BlueprintOperatorVarianceSampleAggregateFilter>;
};

export type BlueprintOperatorAverageAggregateFilter = {
  registeredAt?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintOperatorAverageAggregates = {
  __typename?: 'BlueprintOperatorAverageAggregates';
  /** Mean average of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintOperatorDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  blueprintId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  isActive?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
  registeredAt?: InputMaybe<BigIntFilter>;
  updatedAt?: InputMaybe<BigIntFilter>;
};

export type BlueprintOperatorDistinctCountAggregates = {
  __typename?: 'BlueprintOperatorDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blueprintId across the matching connection */
  blueprintId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of isActive across the matching connection */
  isActive?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BlueprintOperator` object types. All fields are combined with a logical ‘and.’ */
export type BlueprintOperatorFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BlueprintOperatorFilter>>;
  /** Filter by the object’s `blueprint` relation. */
  blueprint?: InputMaybe<BlueprintFilter>;
  /** Filter by the object’s `blueprintId` field. */
  blueprintId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `isActive` field. */
  isActive?: InputMaybe<BooleanFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BlueprintOperatorFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BlueprintOperatorFilter>>;
  /** Filter by the object’s `registeredAt` field. */
  registeredAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `updatedAt` field. */
  updatedAt?: InputMaybe<IntFilter>;
};

export type BlueprintOperatorMaxAggregateFilter = {
  registeredAt?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<IntFilter>;
};

export type BlueprintOperatorMaxAggregates = {
  __typename?: 'BlueprintOperatorMaxAggregates';
  /** Maximum of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['Int']['output']>;
};

export type BlueprintOperatorMinAggregateFilter = {
  registeredAt?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<IntFilter>;
};

export type BlueprintOperatorMinAggregates = {
  __typename?: 'BlueprintOperatorMinAggregates';
  /** Minimum of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['Int']['output']>;
};

export type BlueprintOperatorStddevPopulationAggregateFilter = {
  registeredAt?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintOperatorStddevPopulationAggregates = {
  __typename?: 'BlueprintOperatorStddevPopulationAggregates';
  /** Population standard deviation of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintOperatorStddevSampleAggregateFilter = {
  registeredAt?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintOperatorStddevSampleAggregates = {
  __typename?: 'BlueprintOperatorStddevSampleAggregates';
  /** Sample standard deviation of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintOperatorSumAggregateFilter = {
  registeredAt?: InputMaybe<BigIntFilter>;
  updatedAt?: InputMaybe<BigIntFilter>;
};

export type BlueprintOperatorSumAggregates = {
  __typename?: 'BlueprintOperatorSumAggregates';
  /** Sum of registeredAt across the matching connection */
  registeredAt: Scalars['BigInt']['output'];
  /** Sum of updatedAt across the matching connection */
  updatedAt: Scalars['BigInt']['output'];
};

export type BlueprintOperatorVariancePopulationAggregateFilter = {
  registeredAt?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintOperatorVariancePopulationAggregates = {
  __typename?: 'BlueprintOperatorVariancePopulationAggregates';
  /** Population variance of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintOperatorVarianceSampleAggregateFilter = {
  registeredAt?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintOperatorVarianceSampleAggregates = {
  __typename?: 'BlueprintOperatorVarianceSampleAggregates';
  /** Sample variance of registeredAt across the matching connection */
  registeredAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Operator` values, with data from `BlueprintOperator`. */
export type BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyConnection = {
  __typename?: 'BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `BlueprintOperator`, and the cursor to aid in pagination. */
  edges: Array<BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `BlueprintOperator`. */
export type BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `BlueprintOperator`. */
export type BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyEdge = {
  __typename?: 'BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyEdge';
  /** Reads and enables pagination through a set of `BlueprintOperator`. */
  blueprintOperators: BlueprintOperatorsConnection;
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
};


/** A `Operator` edge in the connection, with data from `BlueprintOperator`. */
export type BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyEdgeBlueprintOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprint_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `BlueprintOperator` values. */
export type BlueprintOperatorsConnection = {
  __typename?: 'BlueprintOperatorsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BlueprintOperatorAggregates>;
  /** A list of edges which contains the `BlueprintOperator` and cursor to aid in pagination. */
  edges: Array<BlueprintOperatorsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BlueprintOperatorAggregates>>;
  /** A list of `BlueprintOperator` objects. */
  nodes: Array<Maybe<BlueprintOperator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BlueprintOperator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BlueprintOperator` values. */
export type BlueprintOperatorsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BlueprintOperatorsGroupBy>;
  having?: InputMaybe<BlueprintOperatorsHavingInput>;
};

/** A `BlueprintOperator` edge in the connection. */
export type BlueprintOperatorsEdge = {
  __typename?: 'BlueprintOperatorsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BlueprintOperator` at the end of the edge. */
  node?: Maybe<BlueprintOperator>;
};

/** Grouping methods for `BlueprintOperator` for usage during aggregation. */
export enum BlueprintOperatorsGroupBy {
  BlueprintId = 'BLUEPRINT_ID',
  Id = 'ID',
  IsActive = 'IS_ACTIVE',
  OperatorId = 'OPERATOR_ID',
  RegisteredAt = 'REGISTERED_AT',
  UpdatedAt = 'UPDATED_AT'
}

export type BlueprintOperatorsHavingAverageInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintOperatorsHavingDistinctCountInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `BlueprintOperator` aggregates. */
export type BlueprintOperatorsHavingInput = {
  AND?: InputMaybe<Array<BlueprintOperatorsHavingInput>>;
  OR?: InputMaybe<Array<BlueprintOperatorsHavingInput>>;
  average?: InputMaybe<BlueprintOperatorsHavingAverageInput>;
  distinctCount?: InputMaybe<BlueprintOperatorsHavingDistinctCountInput>;
  max?: InputMaybe<BlueprintOperatorsHavingMaxInput>;
  min?: InputMaybe<BlueprintOperatorsHavingMinInput>;
  stddevPopulation?: InputMaybe<BlueprintOperatorsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BlueprintOperatorsHavingStddevSampleInput>;
  sum?: InputMaybe<BlueprintOperatorsHavingSumInput>;
  variancePopulation?: InputMaybe<BlueprintOperatorsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BlueprintOperatorsHavingVarianceSampleInput>;
};

export type BlueprintOperatorsHavingMaxInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintOperatorsHavingMinInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintOperatorsHavingStddevPopulationInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintOperatorsHavingStddevSampleInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintOperatorsHavingSumInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintOperatorsHavingVariancePopulationInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintOperatorsHavingVarianceSampleInput = {
  registeredAt?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `BlueprintOperator`. */
export enum BlueprintOperatorsOrderBy {
  BlueprintByBlueprintIdCreatedAtAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_ASC',
  BlueprintByBlueprintIdCreatedAtDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_DESC',
  BlueprintByBlueprintIdIdAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__ID_ASC',
  BlueprintByBlueprintIdIdDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__ID_DESC',
  BlueprintByBlueprintIdOwnerIdAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_ASC',
  BlueprintByBlueprintIdOwnerIdDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_DESC',
  BlueprintIdAsc = 'BLUEPRINT_ID_ASC',
  BlueprintIdDesc = 'BLUEPRINT_ID_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  IsActiveAsc = 'IS_ACTIVE_ASC',
  IsActiveDesc = 'IS_ACTIVE_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  RegisteredAtAsc = 'REGISTERED_AT_ASC',
  RegisteredAtDesc = 'REGISTERED_AT_DESC',
  UpdatedAtAsc = 'UPDATED_AT_ASC',
  UpdatedAtDesc = 'UPDATED_AT_DESC'
}

/** A connection to a list of `ServiceRequest` values, with data from `Service`. */
export type BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyConnection = {
  __typename?: 'BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceRequestAggregates>;
  /** A list of edges which contains the `ServiceRequest`, info from the `Service`, and the cursor to aid in pagination. */
  edges: Array<BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceRequestAggregates>>;
  /** A list of `ServiceRequest` objects. */
  nodes: Array<Maybe<ServiceRequest>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ServiceRequest` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ServiceRequest` values, with data from `Service`. */
export type BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServiceRequestsGroupBy>;
  having?: InputMaybe<ServiceRequestsHavingInput>;
};

/** A `ServiceRequest` edge in the connection, with data from `Service`. */
export type BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyEdge = {
  __typename?: 'BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ServiceRequest` at the end of the edge. */
  node?: Maybe<ServiceRequest>;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


/** A `ServiceRequest` edge in the connection, with data from `Service`. */
export type BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyEdgeServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type BlueprintStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintStddevPopulationAggregates = {
  __typename?: 'BlueprintStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintStddevSampleAggregates = {
  __typename?: 'BlueprintStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
};

export type BlueprintSumAggregates = {
  __typename?: 'BlueprintSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
};

/** A filter to be used against many `BlueprintOperator` object types. All fields are combined with a logical ‘and.’ */
export type BlueprintToManyBlueprintOperatorFilter = {
  /** Aggregates across related `BlueprintOperator` match the filter criteria. */
  aggregates?: InputMaybe<BlueprintOperatorAggregatesFilter>;
  /** Every related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BlueprintOperatorFilter>;
  /** No related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BlueprintOperatorFilter>;
  /** Some related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BlueprintOperatorFilter>;
};

/** A filter to be used against many `Service` object types. All fields are combined with a logical ‘and.’ */
export type BlueprintToManyServiceFilter = {
  /** Aggregates across related `Service` match the filter criteria. */
  aggregates?: InputMaybe<ServiceAggregatesFilter>;
  /** Every related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceFilter>;
  /** No related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceFilter>;
  /** Some related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceFilter>;
};

/** A filter to be used against many `ServiceRequest` object types. All fields are combined with a logical ‘and.’ */
export type BlueprintToManyServiceRequestFilter = {
  /** Aggregates across related `ServiceRequest` match the filter criteria. */
  aggregates?: InputMaybe<ServiceRequestAggregatesFilter>;
  /** Every related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceRequestFilter>;
  /** No related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceRequestFilter>;
  /** Some related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceRequestFilter>;
};

export type BlueprintVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintVariancePopulationAggregates = {
  __typename?: 'BlueprintVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type BlueprintVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type BlueprintVarianceSampleAggregates = {
  __typename?: 'BlueprintVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Blueprint` values. */
export type BlueprintsConnection = {
  __typename?: 'BlueprintsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BlueprintAggregates>;
  /** A list of edges which contains the `Blueprint` and cursor to aid in pagination. */
  edges: Array<BlueprintsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BlueprintAggregates>>;
  /** A list of `Blueprint` objects. */
  nodes: Array<Maybe<Blueprint>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Blueprint` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Blueprint` values. */
export type BlueprintsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BlueprintsGroupBy>;
  having?: InputMaybe<BlueprintsHavingInput>;
};

/** A `Blueprint` edge in the connection. */
export type BlueprintsEdge = {
  __typename?: 'BlueprintsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Blueprint` at the end of the edge. */
  node?: Maybe<Blueprint>;
};

/** Grouping methods for `Blueprint` for usage during aggregation. */
export enum BlueprintsGroupBy {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OwnerId = 'OWNER_ID'
}

export type BlueprintsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Blueprint` aggregates. */
export type BlueprintsHavingInput = {
  AND?: InputMaybe<Array<BlueprintsHavingInput>>;
  OR?: InputMaybe<Array<BlueprintsHavingInput>>;
  average?: InputMaybe<BlueprintsHavingAverageInput>;
  distinctCount?: InputMaybe<BlueprintsHavingDistinctCountInput>;
  max?: InputMaybe<BlueprintsHavingMaxInput>;
  min?: InputMaybe<BlueprintsHavingMinInput>;
  stddevPopulation?: InputMaybe<BlueprintsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BlueprintsHavingStddevSampleInput>;
  sum?: InputMaybe<BlueprintsHavingSumInput>;
  variancePopulation?: InputMaybe<BlueprintsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BlueprintsHavingVarianceSampleInput>;
};

export type BlueprintsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type BlueprintsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `Blueprint`. */
export enum BlueprintsOrderBy {
  AccountByOwnerIdCreatedAtAsc = 'ACCOUNT_BY_OWNER_ID__CREATED_AT_ASC',
  AccountByOwnerIdCreatedAtDesc = 'ACCOUNT_BY_OWNER_ID__CREATED_AT_DESC',
  AccountByOwnerIdIdAsc = 'ACCOUNT_BY_OWNER_ID__ID_ASC',
  AccountByOwnerIdIdDesc = 'ACCOUNT_BY_OWNER_ID__ID_DESC',
  AccountByOwnerIdLastUpdateAtAsc = 'ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_ASC',
  AccountByOwnerIdLastUpdateAtDesc = 'ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_DESC',
  AccountByOwnerIdTotalPointsAsc = 'ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_ASC',
  AccountByOwnerIdTotalPointsDesc = 'ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_DESC',
  BlueprintOperatorsAverageBlockRangeAsc = 'BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_ASC',
  BlueprintOperatorsAverageBlockRangeDesc = 'BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_DESC',
  BlueprintOperatorsAverageBlueprintIdAsc = 'BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_ASC',
  BlueprintOperatorsAverageBlueprintIdDesc = 'BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_DESC',
  BlueprintOperatorsAverageIdAsc = 'BLUEPRINT_OPERATORS_AVERAGE_ID_ASC',
  BlueprintOperatorsAverageIdDesc = 'BLUEPRINT_OPERATORS_AVERAGE_ID_DESC',
  BlueprintOperatorsAverageIsActiveAsc = 'BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_ASC',
  BlueprintOperatorsAverageIsActiveDesc = 'BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_DESC',
  BlueprintOperatorsAverageOperatorIdAsc = 'BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_ASC',
  BlueprintOperatorsAverageOperatorIdDesc = 'BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_DESC',
  BlueprintOperatorsAverageRegisteredAtAsc = 'BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_ASC',
  BlueprintOperatorsAverageRegisteredAtDesc = 'BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_DESC',
  BlueprintOperatorsAverageUpdatedAtAsc = 'BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_ASC',
  BlueprintOperatorsAverageUpdatedAtDesc = 'BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_DESC',
  BlueprintOperatorsByBlueprintIdCountAsc = 'BLUEPRINT_OPERATORS_BY_BLUEPRINT_ID__COUNT_ASC',
  BlueprintOperatorsByBlueprintIdCountDesc = 'BLUEPRINT_OPERATORS_BY_BLUEPRINT_ID__COUNT_DESC',
  BlueprintOperatorsCountAsc = 'BLUEPRINT_OPERATORS_COUNT_ASC',
  BlueprintOperatorsCountDesc = 'BLUEPRINT_OPERATORS_COUNT_DESC',
  BlueprintOperatorsDistinctCountBlockRangeAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  BlueprintOperatorsDistinctCountBlockRangeDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  BlueprintOperatorsDistinctCountBlueprintIdAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_ASC',
  BlueprintOperatorsDistinctCountBlueprintIdDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_DESC',
  BlueprintOperatorsDistinctCountIdAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_ASC',
  BlueprintOperatorsDistinctCountIdDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_DESC',
  BlueprintOperatorsDistinctCountIsActiveAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_ASC',
  BlueprintOperatorsDistinctCountIsActiveDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_DESC',
  BlueprintOperatorsDistinctCountOperatorIdAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  BlueprintOperatorsDistinctCountOperatorIdDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  BlueprintOperatorsDistinctCountRegisteredAtAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_ASC',
  BlueprintOperatorsDistinctCountRegisteredAtDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_DESC',
  BlueprintOperatorsDistinctCountUpdatedAtAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_ASC',
  BlueprintOperatorsDistinctCountUpdatedAtDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_DESC',
  BlueprintOperatorsMaxBlockRangeAsc = 'BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_ASC',
  BlueprintOperatorsMaxBlockRangeDesc = 'BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_DESC',
  BlueprintOperatorsMaxBlueprintIdAsc = 'BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_ASC',
  BlueprintOperatorsMaxBlueprintIdDesc = 'BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_DESC',
  BlueprintOperatorsMaxIdAsc = 'BLUEPRINT_OPERATORS_MAX_ID_ASC',
  BlueprintOperatorsMaxIdDesc = 'BLUEPRINT_OPERATORS_MAX_ID_DESC',
  BlueprintOperatorsMaxIsActiveAsc = 'BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_ASC',
  BlueprintOperatorsMaxIsActiveDesc = 'BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_DESC',
  BlueprintOperatorsMaxOperatorIdAsc = 'BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_ASC',
  BlueprintOperatorsMaxOperatorIdDesc = 'BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_DESC',
  BlueprintOperatorsMaxRegisteredAtAsc = 'BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_ASC',
  BlueprintOperatorsMaxRegisteredAtDesc = 'BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_DESC',
  BlueprintOperatorsMaxUpdatedAtAsc = 'BLUEPRINT_OPERATORS_MAX_UPDATED_AT_ASC',
  BlueprintOperatorsMaxUpdatedAtDesc = 'BLUEPRINT_OPERATORS_MAX_UPDATED_AT_DESC',
  BlueprintOperatorsMinBlockRangeAsc = 'BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_ASC',
  BlueprintOperatorsMinBlockRangeDesc = 'BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_DESC',
  BlueprintOperatorsMinBlueprintIdAsc = 'BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_ASC',
  BlueprintOperatorsMinBlueprintIdDesc = 'BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_DESC',
  BlueprintOperatorsMinIdAsc = 'BLUEPRINT_OPERATORS_MIN_ID_ASC',
  BlueprintOperatorsMinIdDesc = 'BLUEPRINT_OPERATORS_MIN_ID_DESC',
  BlueprintOperatorsMinIsActiveAsc = 'BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_ASC',
  BlueprintOperatorsMinIsActiveDesc = 'BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_DESC',
  BlueprintOperatorsMinOperatorIdAsc = 'BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_ASC',
  BlueprintOperatorsMinOperatorIdDesc = 'BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_DESC',
  BlueprintOperatorsMinRegisteredAtAsc = 'BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_ASC',
  BlueprintOperatorsMinRegisteredAtDesc = 'BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_DESC',
  BlueprintOperatorsMinUpdatedAtAsc = 'BLUEPRINT_OPERATORS_MIN_UPDATED_AT_ASC',
  BlueprintOperatorsMinUpdatedAtDesc = 'BLUEPRINT_OPERATORS_MIN_UPDATED_AT_DESC',
  BlueprintOperatorsStddevPopulationBlockRangeAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  BlueprintOperatorsStddevPopulationBlockRangeDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  BlueprintOperatorsStddevPopulationBlueprintIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_ASC',
  BlueprintOperatorsStddevPopulationBlueprintIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_DESC',
  BlueprintOperatorsStddevPopulationIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_ASC',
  BlueprintOperatorsStddevPopulationIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_DESC',
  BlueprintOperatorsStddevPopulationIsActiveAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_ASC',
  BlueprintOperatorsStddevPopulationIsActiveDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_DESC',
  BlueprintOperatorsStddevPopulationOperatorIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  BlueprintOperatorsStddevPopulationOperatorIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  BlueprintOperatorsStddevPopulationRegisteredAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_ASC',
  BlueprintOperatorsStddevPopulationRegisteredAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_DESC',
  BlueprintOperatorsStddevPopulationUpdatedAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_ASC',
  BlueprintOperatorsStddevPopulationUpdatedAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_DESC',
  BlueprintOperatorsStddevSampleBlockRangeAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  BlueprintOperatorsStddevSampleBlockRangeDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  BlueprintOperatorsStddevSampleBlueprintIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC',
  BlueprintOperatorsStddevSampleBlueprintIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC',
  BlueprintOperatorsStddevSampleIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_ASC',
  BlueprintOperatorsStddevSampleIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_DESC',
  BlueprintOperatorsStddevSampleIsActiveAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_ASC',
  BlueprintOperatorsStddevSampleIsActiveDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_DESC',
  BlueprintOperatorsStddevSampleOperatorIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  BlueprintOperatorsStddevSampleOperatorIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  BlueprintOperatorsStddevSampleRegisteredAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_ASC',
  BlueprintOperatorsStddevSampleRegisteredAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_DESC',
  BlueprintOperatorsStddevSampleUpdatedAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_ASC',
  BlueprintOperatorsStddevSampleUpdatedAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_DESC',
  BlueprintOperatorsSumBlockRangeAsc = 'BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_ASC',
  BlueprintOperatorsSumBlockRangeDesc = 'BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_DESC',
  BlueprintOperatorsSumBlueprintIdAsc = 'BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_ASC',
  BlueprintOperatorsSumBlueprintIdDesc = 'BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_DESC',
  BlueprintOperatorsSumIdAsc = 'BLUEPRINT_OPERATORS_SUM_ID_ASC',
  BlueprintOperatorsSumIdDesc = 'BLUEPRINT_OPERATORS_SUM_ID_DESC',
  BlueprintOperatorsSumIsActiveAsc = 'BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_ASC',
  BlueprintOperatorsSumIsActiveDesc = 'BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_DESC',
  BlueprintOperatorsSumOperatorIdAsc = 'BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_ASC',
  BlueprintOperatorsSumOperatorIdDesc = 'BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_DESC',
  BlueprintOperatorsSumRegisteredAtAsc = 'BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_ASC',
  BlueprintOperatorsSumRegisteredAtDesc = 'BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_DESC',
  BlueprintOperatorsSumUpdatedAtAsc = 'BLUEPRINT_OPERATORS_SUM_UPDATED_AT_ASC',
  BlueprintOperatorsSumUpdatedAtDesc = 'BLUEPRINT_OPERATORS_SUM_UPDATED_AT_DESC',
  BlueprintOperatorsVariancePopulationBlockRangeAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  BlueprintOperatorsVariancePopulationBlockRangeDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  BlueprintOperatorsVariancePopulationBlueprintIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC',
  BlueprintOperatorsVariancePopulationBlueprintIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC',
  BlueprintOperatorsVariancePopulationIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_ASC',
  BlueprintOperatorsVariancePopulationIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_DESC',
  BlueprintOperatorsVariancePopulationIsActiveAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_ASC',
  BlueprintOperatorsVariancePopulationIsActiveDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_DESC',
  BlueprintOperatorsVariancePopulationOperatorIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  BlueprintOperatorsVariancePopulationOperatorIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  BlueprintOperatorsVariancePopulationRegisteredAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_ASC',
  BlueprintOperatorsVariancePopulationRegisteredAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_DESC',
  BlueprintOperatorsVariancePopulationUpdatedAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_ASC',
  BlueprintOperatorsVariancePopulationUpdatedAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_DESC',
  BlueprintOperatorsVarianceSampleBlockRangeAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  BlueprintOperatorsVarianceSampleBlockRangeDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  BlueprintOperatorsVarianceSampleBlueprintIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC',
  BlueprintOperatorsVarianceSampleBlueprintIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC',
  BlueprintOperatorsVarianceSampleIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_ASC',
  BlueprintOperatorsVarianceSampleIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_DESC',
  BlueprintOperatorsVarianceSampleIsActiveAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_ASC',
  BlueprintOperatorsVarianceSampleIsActiveDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_DESC',
  BlueprintOperatorsVarianceSampleOperatorIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  BlueprintOperatorsVarianceSampleOperatorIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  BlueprintOperatorsVarianceSampleRegisteredAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_ASC',
  BlueprintOperatorsVarianceSampleRegisteredAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_DESC',
  BlueprintOperatorsVarianceSampleUpdatedAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_ASC',
  BlueprintOperatorsVarianceSampleUpdatedAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OwnerIdAsc = 'OWNER_ID_ASC',
  OwnerIdDesc = 'OWNER_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ServicesAverageAssetIdsAsc = 'SERVICES_AVERAGE_ASSET_IDS_ASC',
  ServicesAverageAssetIdsDesc = 'SERVICES_AVERAGE_ASSET_IDS_DESC',
  ServicesAverageBlockRangeAsc = 'SERVICES_AVERAGE_BLOCK_RANGE_ASC',
  ServicesAverageBlockRangeDesc = 'SERVICES_AVERAGE_BLOCK_RANGE_DESC',
  ServicesAverageBlueprintIdAsc = 'SERVICES_AVERAGE_BLUEPRINT_ID_ASC',
  ServicesAverageBlueprintIdDesc = 'SERVICES_AVERAGE_BLUEPRINT_ID_DESC',
  ServicesAverageCreatedAtAsc = 'SERVICES_AVERAGE_CREATED_AT_ASC',
  ServicesAverageCreatedAtDesc = 'SERVICES_AVERAGE_CREATED_AT_DESC',
  ServicesAverageIdAsc = 'SERVICES_AVERAGE_ID_ASC',
  ServicesAverageIdDesc = 'SERVICES_AVERAGE_ID_DESC',
  ServicesAverageOwnerIdAsc = 'SERVICES_AVERAGE_OWNER_ID_ASC',
  ServicesAverageOwnerIdDesc = 'SERVICES_AVERAGE_OWNER_ID_DESC',
  ServicesAverageServiceRequestIdAsc = 'SERVICES_AVERAGE_SERVICE_REQUEST_ID_ASC',
  ServicesAverageServiceRequestIdDesc = 'SERVICES_AVERAGE_SERVICE_REQUEST_ID_DESC',
  ServicesAverageTerminatedAtAsc = 'SERVICES_AVERAGE_TERMINATED_AT_ASC',
  ServicesAverageTerminatedAtDesc = 'SERVICES_AVERAGE_TERMINATED_AT_DESC',
  ServicesByBlueprintIdCountAsc = 'SERVICES_BY_BLUEPRINT_ID__COUNT_ASC',
  ServicesByBlueprintIdCountDesc = 'SERVICES_BY_BLUEPRINT_ID__COUNT_DESC',
  ServicesCountAsc = 'SERVICES_COUNT_ASC',
  ServicesCountDesc = 'SERVICES_COUNT_DESC',
  ServicesDistinctCountAssetIdsAsc = 'SERVICES_DISTINCT_COUNT_ASSET_IDS_ASC',
  ServicesDistinctCountAssetIdsDesc = 'SERVICES_DISTINCT_COUNT_ASSET_IDS_DESC',
  ServicesDistinctCountBlockRangeAsc = 'SERVICES_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServicesDistinctCountBlockRangeDesc = 'SERVICES_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServicesDistinctCountBlueprintIdAsc = 'SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_ASC',
  ServicesDistinctCountBlueprintIdDesc = 'SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_DESC',
  ServicesDistinctCountCreatedAtAsc = 'SERVICES_DISTINCT_COUNT_CREATED_AT_ASC',
  ServicesDistinctCountCreatedAtDesc = 'SERVICES_DISTINCT_COUNT_CREATED_AT_DESC',
  ServicesDistinctCountIdAsc = 'SERVICES_DISTINCT_COUNT_ID_ASC',
  ServicesDistinctCountIdDesc = 'SERVICES_DISTINCT_COUNT_ID_DESC',
  ServicesDistinctCountOwnerIdAsc = 'SERVICES_DISTINCT_COUNT_OWNER_ID_ASC',
  ServicesDistinctCountOwnerIdDesc = 'SERVICES_DISTINCT_COUNT_OWNER_ID_DESC',
  ServicesDistinctCountServiceRequestIdAsc = 'SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC',
  ServicesDistinctCountServiceRequestIdDesc = 'SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC',
  ServicesDistinctCountTerminatedAtAsc = 'SERVICES_DISTINCT_COUNT_TERMINATED_AT_ASC',
  ServicesDistinctCountTerminatedAtDesc = 'SERVICES_DISTINCT_COUNT_TERMINATED_AT_DESC',
  ServicesMaxAssetIdsAsc = 'SERVICES_MAX_ASSET_IDS_ASC',
  ServicesMaxAssetIdsDesc = 'SERVICES_MAX_ASSET_IDS_DESC',
  ServicesMaxBlockRangeAsc = 'SERVICES_MAX_BLOCK_RANGE_ASC',
  ServicesMaxBlockRangeDesc = 'SERVICES_MAX_BLOCK_RANGE_DESC',
  ServicesMaxBlueprintIdAsc = 'SERVICES_MAX_BLUEPRINT_ID_ASC',
  ServicesMaxBlueprintIdDesc = 'SERVICES_MAX_BLUEPRINT_ID_DESC',
  ServicesMaxCreatedAtAsc = 'SERVICES_MAX_CREATED_AT_ASC',
  ServicesMaxCreatedAtDesc = 'SERVICES_MAX_CREATED_AT_DESC',
  ServicesMaxIdAsc = 'SERVICES_MAX_ID_ASC',
  ServicesMaxIdDesc = 'SERVICES_MAX_ID_DESC',
  ServicesMaxOwnerIdAsc = 'SERVICES_MAX_OWNER_ID_ASC',
  ServicesMaxOwnerIdDesc = 'SERVICES_MAX_OWNER_ID_DESC',
  ServicesMaxServiceRequestIdAsc = 'SERVICES_MAX_SERVICE_REQUEST_ID_ASC',
  ServicesMaxServiceRequestIdDesc = 'SERVICES_MAX_SERVICE_REQUEST_ID_DESC',
  ServicesMaxTerminatedAtAsc = 'SERVICES_MAX_TERMINATED_AT_ASC',
  ServicesMaxTerminatedAtDesc = 'SERVICES_MAX_TERMINATED_AT_DESC',
  ServicesMinAssetIdsAsc = 'SERVICES_MIN_ASSET_IDS_ASC',
  ServicesMinAssetIdsDesc = 'SERVICES_MIN_ASSET_IDS_DESC',
  ServicesMinBlockRangeAsc = 'SERVICES_MIN_BLOCK_RANGE_ASC',
  ServicesMinBlockRangeDesc = 'SERVICES_MIN_BLOCK_RANGE_DESC',
  ServicesMinBlueprintIdAsc = 'SERVICES_MIN_BLUEPRINT_ID_ASC',
  ServicesMinBlueprintIdDesc = 'SERVICES_MIN_BLUEPRINT_ID_DESC',
  ServicesMinCreatedAtAsc = 'SERVICES_MIN_CREATED_AT_ASC',
  ServicesMinCreatedAtDesc = 'SERVICES_MIN_CREATED_AT_DESC',
  ServicesMinIdAsc = 'SERVICES_MIN_ID_ASC',
  ServicesMinIdDesc = 'SERVICES_MIN_ID_DESC',
  ServicesMinOwnerIdAsc = 'SERVICES_MIN_OWNER_ID_ASC',
  ServicesMinOwnerIdDesc = 'SERVICES_MIN_OWNER_ID_DESC',
  ServicesMinServiceRequestIdAsc = 'SERVICES_MIN_SERVICE_REQUEST_ID_ASC',
  ServicesMinServiceRequestIdDesc = 'SERVICES_MIN_SERVICE_REQUEST_ID_DESC',
  ServicesMinTerminatedAtAsc = 'SERVICES_MIN_TERMINATED_AT_ASC',
  ServicesMinTerminatedAtDesc = 'SERVICES_MIN_TERMINATED_AT_DESC',
  ServicesStddevPopulationAssetIdsAsc = 'SERVICES_STDDEV_POPULATION_ASSET_IDS_ASC',
  ServicesStddevPopulationAssetIdsDesc = 'SERVICES_STDDEV_POPULATION_ASSET_IDS_DESC',
  ServicesStddevPopulationBlockRangeAsc = 'SERVICES_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServicesStddevPopulationBlockRangeDesc = 'SERVICES_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServicesStddevPopulationBlueprintIdAsc = 'SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_ASC',
  ServicesStddevPopulationBlueprintIdDesc = 'SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_DESC',
  ServicesStddevPopulationCreatedAtAsc = 'SERVICES_STDDEV_POPULATION_CREATED_AT_ASC',
  ServicesStddevPopulationCreatedAtDesc = 'SERVICES_STDDEV_POPULATION_CREATED_AT_DESC',
  ServicesStddevPopulationIdAsc = 'SERVICES_STDDEV_POPULATION_ID_ASC',
  ServicesStddevPopulationIdDesc = 'SERVICES_STDDEV_POPULATION_ID_DESC',
  ServicesStddevPopulationOwnerIdAsc = 'SERVICES_STDDEV_POPULATION_OWNER_ID_ASC',
  ServicesStddevPopulationOwnerIdDesc = 'SERVICES_STDDEV_POPULATION_OWNER_ID_DESC',
  ServicesStddevPopulationServiceRequestIdAsc = 'SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServicesStddevPopulationServiceRequestIdDesc = 'SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServicesStddevPopulationTerminatedAtAsc = 'SERVICES_STDDEV_POPULATION_TERMINATED_AT_ASC',
  ServicesStddevPopulationTerminatedAtDesc = 'SERVICES_STDDEV_POPULATION_TERMINATED_AT_DESC',
  ServicesStddevSampleAssetIdsAsc = 'SERVICES_STDDEV_SAMPLE_ASSET_IDS_ASC',
  ServicesStddevSampleAssetIdsDesc = 'SERVICES_STDDEV_SAMPLE_ASSET_IDS_DESC',
  ServicesStddevSampleBlockRangeAsc = 'SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServicesStddevSampleBlockRangeDesc = 'SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServicesStddevSampleBlueprintIdAsc = 'SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_ASC',
  ServicesStddevSampleBlueprintIdDesc = 'SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_DESC',
  ServicesStddevSampleCreatedAtAsc = 'SERVICES_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServicesStddevSampleCreatedAtDesc = 'SERVICES_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServicesStddevSampleIdAsc = 'SERVICES_STDDEV_SAMPLE_ID_ASC',
  ServicesStddevSampleIdDesc = 'SERVICES_STDDEV_SAMPLE_ID_DESC',
  ServicesStddevSampleOwnerIdAsc = 'SERVICES_STDDEV_SAMPLE_OWNER_ID_ASC',
  ServicesStddevSampleOwnerIdDesc = 'SERVICES_STDDEV_SAMPLE_OWNER_ID_DESC',
  ServicesStddevSampleServiceRequestIdAsc = 'SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServicesStddevSampleServiceRequestIdDesc = 'SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServicesStddevSampleTerminatedAtAsc = 'SERVICES_STDDEV_SAMPLE_TERMINATED_AT_ASC',
  ServicesStddevSampleTerminatedAtDesc = 'SERVICES_STDDEV_SAMPLE_TERMINATED_AT_DESC',
  ServicesSumAssetIdsAsc = 'SERVICES_SUM_ASSET_IDS_ASC',
  ServicesSumAssetIdsDesc = 'SERVICES_SUM_ASSET_IDS_DESC',
  ServicesSumBlockRangeAsc = 'SERVICES_SUM_BLOCK_RANGE_ASC',
  ServicesSumBlockRangeDesc = 'SERVICES_SUM_BLOCK_RANGE_DESC',
  ServicesSumBlueprintIdAsc = 'SERVICES_SUM_BLUEPRINT_ID_ASC',
  ServicesSumBlueprintIdDesc = 'SERVICES_SUM_BLUEPRINT_ID_DESC',
  ServicesSumCreatedAtAsc = 'SERVICES_SUM_CREATED_AT_ASC',
  ServicesSumCreatedAtDesc = 'SERVICES_SUM_CREATED_AT_DESC',
  ServicesSumIdAsc = 'SERVICES_SUM_ID_ASC',
  ServicesSumIdDesc = 'SERVICES_SUM_ID_DESC',
  ServicesSumOwnerIdAsc = 'SERVICES_SUM_OWNER_ID_ASC',
  ServicesSumOwnerIdDesc = 'SERVICES_SUM_OWNER_ID_DESC',
  ServicesSumServiceRequestIdAsc = 'SERVICES_SUM_SERVICE_REQUEST_ID_ASC',
  ServicesSumServiceRequestIdDesc = 'SERVICES_SUM_SERVICE_REQUEST_ID_DESC',
  ServicesSumTerminatedAtAsc = 'SERVICES_SUM_TERMINATED_AT_ASC',
  ServicesSumTerminatedAtDesc = 'SERVICES_SUM_TERMINATED_AT_DESC',
  ServicesVariancePopulationAssetIdsAsc = 'SERVICES_VARIANCE_POPULATION_ASSET_IDS_ASC',
  ServicesVariancePopulationAssetIdsDesc = 'SERVICES_VARIANCE_POPULATION_ASSET_IDS_DESC',
  ServicesVariancePopulationBlockRangeAsc = 'SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServicesVariancePopulationBlockRangeDesc = 'SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServicesVariancePopulationBlueprintIdAsc = 'SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_ASC',
  ServicesVariancePopulationBlueprintIdDesc = 'SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_DESC',
  ServicesVariancePopulationCreatedAtAsc = 'SERVICES_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServicesVariancePopulationCreatedAtDesc = 'SERVICES_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServicesVariancePopulationIdAsc = 'SERVICES_VARIANCE_POPULATION_ID_ASC',
  ServicesVariancePopulationIdDesc = 'SERVICES_VARIANCE_POPULATION_ID_DESC',
  ServicesVariancePopulationOwnerIdAsc = 'SERVICES_VARIANCE_POPULATION_OWNER_ID_ASC',
  ServicesVariancePopulationOwnerIdDesc = 'SERVICES_VARIANCE_POPULATION_OWNER_ID_DESC',
  ServicesVariancePopulationServiceRequestIdAsc = 'SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServicesVariancePopulationServiceRequestIdDesc = 'SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServicesVariancePopulationTerminatedAtAsc = 'SERVICES_VARIANCE_POPULATION_TERMINATED_AT_ASC',
  ServicesVariancePopulationTerminatedAtDesc = 'SERVICES_VARIANCE_POPULATION_TERMINATED_AT_DESC',
  ServicesVarianceSampleAssetIdsAsc = 'SERVICES_VARIANCE_SAMPLE_ASSET_IDS_ASC',
  ServicesVarianceSampleAssetIdsDesc = 'SERVICES_VARIANCE_SAMPLE_ASSET_IDS_DESC',
  ServicesVarianceSampleBlockRangeAsc = 'SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServicesVarianceSampleBlockRangeDesc = 'SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServicesVarianceSampleBlueprintIdAsc = 'SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC',
  ServicesVarianceSampleBlueprintIdDesc = 'SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC',
  ServicesVarianceSampleCreatedAtAsc = 'SERVICES_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServicesVarianceSampleCreatedAtDesc = 'SERVICES_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServicesVarianceSampleIdAsc = 'SERVICES_VARIANCE_SAMPLE_ID_ASC',
  ServicesVarianceSampleIdDesc = 'SERVICES_VARIANCE_SAMPLE_ID_DESC',
  ServicesVarianceSampleOwnerIdAsc = 'SERVICES_VARIANCE_SAMPLE_OWNER_ID_ASC',
  ServicesVarianceSampleOwnerIdDesc = 'SERVICES_VARIANCE_SAMPLE_OWNER_ID_DESC',
  ServicesVarianceSampleServiceRequestIdAsc = 'SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServicesVarianceSampleServiceRequestIdDesc = 'SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServicesVarianceSampleTerminatedAtAsc = 'SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_ASC',
  ServicesVarianceSampleTerminatedAtDesc = 'SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_DESC',
  ServiceRequestsAverageAssetIdsAsc = 'SERVICE_REQUESTS_AVERAGE_ASSET_IDS_ASC',
  ServiceRequestsAverageAssetIdsDesc = 'SERVICE_REQUESTS_AVERAGE_ASSET_IDS_DESC',
  ServiceRequestsAverageBlockRangeAsc = 'SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC',
  ServiceRequestsAverageBlockRangeDesc = 'SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC',
  ServiceRequestsAverageBlueprintIdAsc = 'SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_ASC',
  ServiceRequestsAverageBlueprintIdDesc = 'SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_DESC',
  ServiceRequestsAverageCreatedAtAsc = 'SERVICE_REQUESTS_AVERAGE_CREATED_AT_ASC',
  ServiceRequestsAverageCreatedAtDesc = 'SERVICE_REQUESTS_AVERAGE_CREATED_AT_DESC',
  ServiceRequestsAverageIdAsc = 'SERVICE_REQUESTS_AVERAGE_ID_ASC',
  ServiceRequestsAverageIdDesc = 'SERVICE_REQUESTS_AVERAGE_ID_DESC',
  ServiceRequestsAverageOwnerIdAsc = 'SERVICE_REQUESTS_AVERAGE_OWNER_ID_ASC',
  ServiceRequestsAverageOwnerIdDesc = 'SERVICE_REQUESTS_AVERAGE_OWNER_ID_DESC',
  ServiceRequestsByBlueprintIdCountAsc = 'SERVICE_REQUESTS_BY_BLUEPRINT_ID__COUNT_ASC',
  ServiceRequestsByBlueprintIdCountDesc = 'SERVICE_REQUESTS_BY_BLUEPRINT_ID__COUNT_DESC',
  ServiceRequestsCountAsc = 'SERVICE_REQUESTS_COUNT_ASC',
  ServiceRequestsCountDesc = 'SERVICE_REQUESTS_COUNT_DESC',
  ServiceRequestsDistinctCountAssetIdsAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_ASC',
  ServiceRequestsDistinctCountAssetIdsDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_DESC',
  ServiceRequestsDistinctCountBlockRangeAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServiceRequestsDistinctCountBlockRangeDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServiceRequestsDistinctCountBlueprintIdAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_ASC',
  ServiceRequestsDistinctCountBlueprintIdDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_DESC',
  ServiceRequestsDistinctCountCreatedAtAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC',
  ServiceRequestsDistinctCountCreatedAtDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC',
  ServiceRequestsDistinctCountIdAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ID_ASC',
  ServiceRequestsDistinctCountIdDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_ID_DESC',
  ServiceRequestsDistinctCountOwnerIdAsc = 'SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_ASC',
  ServiceRequestsDistinctCountOwnerIdDesc = 'SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_DESC',
  ServiceRequestsMaxAssetIdsAsc = 'SERVICE_REQUESTS_MAX_ASSET_IDS_ASC',
  ServiceRequestsMaxAssetIdsDesc = 'SERVICE_REQUESTS_MAX_ASSET_IDS_DESC',
  ServiceRequestsMaxBlockRangeAsc = 'SERVICE_REQUESTS_MAX_BLOCK_RANGE_ASC',
  ServiceRequestsMaxBlockRangeDesc = 'SERVICE_REQUESTS_MAX_BLOCK_RANGE_DESC',
  ServiceRequestsMaxBlueprintIdAsc = 'SERVICE_REQUESTS_MAX_BLUEPRINT_ID_ASC',
  ServiceRequestsMaxBlueprintIdDesc = 'SERVICE_REQUESTS_MAX_BLUEPRINT_ID_DESC',
  ServiceRequestsMaxCreatedAtAsc = 'SERVICE_REQUESTS_MAX_CREATED_AT_ASC',
  ServiceRequestsMaxCreatedAtDesc = 'SERVICE_REQUESTS_MAX_CREATED_AT_DESC',
  ServiceRequestsMaxIdAsc = 'SERVICE_REQUESTS_MAX_ID_ASC',
  ServiceRequestsMaxIdDesc = 'SERVICE_REQUESTS_MAX_ID_DESC',
  ServiceRequestsMaxOwnerIdAsc = 'SERVICE_REQUESTS_MAX_OWNER_ID_ASC',
  ServiceRequestsMaxOwnerIdDesc = 'SERVICE_REQUESTS_MAX_OWNER_ID_DESC',
  ServiceRequestsMinAssetIdsAsc = 'SERVICE_REQUESTS_MIN_ASSET_IDS_ASC',
  ServiceRequestsMinAssetIdsDesc = 'SERVICE_REQUESTS_MIN_ASSET_IDS_DESC',
  ServiceRequestsMinBlockRangeAsc = 'SERVICE_REQUESTS_MIN_BLOCK_RANGE_ASC',
  ServiceRequestsMinBlockRangeDesc = 'SERVICE_REQUESTS_MIN_BLOCK_RANGE_DESC',
  ServiceRequestsMinBlueprintIdAsc = 'SERVICE_REQUESTS_MIN_BLUEPRINT_ID_ASC',
  ServiceRequestsMinBlueprintIdDesc = 'SERVICE_REQUESTS_MIN_BLUEPRINT_ID_DESC',
  ServiceRequestsMinCreatedAtAsc = 'SERVICE_REQUESTS_MIN_CREATED_AT_ASC',
  ServiceRequestsMinCreatedAtDesc = 'SERVICE_REQUESTS_MIN_CREATED_AT_DESC',
  ServiceRequestsMinIdAsc = 'SERVICE_REQUESTS_MIN_ID_ASC',
  ServiceRequestsMinIdDesc = 'SERVICE_REQUESTS_MIN_ID_DESC',
  ServiceRequestsMinOwnerIdAsc = 'SERVICE_REQUESTS_MIN_OWNER_ID_ASC',
  ServiceRequestsMinOwnerIdDesc = 'SERVICE_REQUESTS_MIN_OWNER_ID_DESC',
  ServiceRequestsStddevPopulationAssetIdsAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_ASC',
  ServiceRequestsStddevPopulationAssetIdsDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_DESC',
  ServiceRequestsStddevPopulationBlockRangeAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestsStddevPopulationBlockRangeDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestsStddevPopulationBlueprintIdAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_ASC',
  ServiceRequestsStddevPopulationBlueprintIdDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_DESC',
  ServiceRequestsStddevPopulationCreatedAtAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC',
  ServiceRequestsStddevPopulationCreatedAtDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC',
  ServiceRequestsStddevPopulationIdAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ID_ASC',
  ServiceRequestsStddevPopulationIdDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_ID_DESC',
  ServiceRequestsStddevPopulationOwnerIdAsc = 'SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_ASC',
  ServiceRequestsStddevPopulationOwnerIdDesc = 'SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_DESC',
  ServiceRequestsStddevSampleAssetIdsAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_ASC',
  ServiceRequestsStddevSampleAssetIdsDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_DESC',
  ServiceRequestsStddevSampleBlockRangeAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestsStddevSampleBlockRangeDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestsStddevSampleBlueprintIdAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC',
  ServiceRequestsStddevSampleBlueprintIdDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC',
  ServiceRequestsStddevSampleCreatedAtAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServiceRequestsStddevSampleCreatedAtDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServiceRequestsStddevSampleIdAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ID_ASC',
  ServiceRequestsStddevSampleIdDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_ID_DESC',
  ServiceRequestsStddevSampleOwnerIdAsc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_ASC',
  ServiceRequestsStddevSampleOwnerIdDesc = 'SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_DESC',
  ServiceRequestsSumAssetIdsAsc = 'SERVICE_REQUESTS_SUM_ASSET_IDS_ASC',
  ServiceRequestsSumAssetIdsDesc = 'SERVICE_REQUESTS_SUM_ASSET_IDS_DESC',
  ServiceRequestsSumBlockRangeAsc = 'SERVICE_REQUESTS_SUM_BLOCK_RANGE_ASC',
  ServiceRequestsSumBlockRangeDesc = 'SERVICE_REQUESTS_SUM_BLOCK_RANGE_DESC',
  ServiceRequestsSumBlueprintIdAsc = 'SERVICE_REQUESTS_SUM_BLUEPRINT_ID_ASC',
  ServiceRequestsSumBlueprintIdDesc = 'SERVICE_REQUESTS_SUM_BLUEPRINT_ID_DESC',
  ServiceRequestsSumCreatedAtAsc = 'SERVICE_REQUESTS_SUM_CREATED_AT_ASC',
  ServiceRequestsSumCreatedAtDesc = 'SERVICE_REQUESTS_SUM_CREATED_AT_DESC',
  ServiceRequestsSumIdAsc = 'SERVICE_REQUESTS_SUM_ID_ASC',
  ServiceRequestsSumIdDesc = 'SERVICE_REQUESTS_SUM_ID_DESC',
  ServiceRequestsSumOwnerIdAsc = 'SERVICE_REQUESTS_SUM_OWNER_ID_ASC',
  ServiceRequestsSumOwnerIdDesc = 'SERVICE_REQUESTS_SUM_OWNER_ID_DESC',
  ServiceRequestsVariancePopulationAssetIdsAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_ASC',
  ServiceRequestsVariancePopulationAssetIdsDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_DESC',
  ServiceRequestsVariancePopulationBlockRangeAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestsVariancePopulationBlockRangeDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestsVariancePopulationBlueprintIdAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC',
  ServiceRequestsVariancePopulationBlueprintIdDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC',
  ServiceRequestsVariancePopulationCreatedAtAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServiceRequestsVariancePopulationCreatedAtDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServiceRequestsVariancePopulationIdAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ID_ASC',
  ServiceRequestsVariancePopulationIdDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_ID_DESC',
  ServiceRequestsVariancePopulationOwnerIdAsc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_ASC',
  ServiceRequestsVariancePopulationOwnerIdDesc = 'SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_DESC',
  ServiceRequestsVarianceSampleAssetIdsAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_ASC',
  ServiceRequestsVarianceSampleAssetIdsDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_DESC',
  ServiceRequestsVarianceSampleBlockRangeAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestsVarianceSampleBlockRangeDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestsVarianceSampleBlueprintIdAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC',
  ServiceRequestsVarianceSampleBlueprintIdDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC',
  ServiceRequestsVarianceSampleCreatedAtAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServiceRequestsVarianceSampleCreatedAtDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServiceRequestsVarianceSampleIdAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_ASC',
  ServiceRequestsVarianceSampleIdDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_DESC',
  ServiceRequestsVarianceSampleOwnerIdAsc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_ASC',
  ServiceRequestsVarianceSampleOwnerIdDesc = 'SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_DESC'
}

/**  Enum representing the different types of bond change actions for an Operator. */
export enum BondChangeAction {
  DecreaseCancelled = 'DECREASE_CANCELLED',
  DecreaseExecuted = 'DECREASE_EXECUTED',
  DecreaseScheduled = 'DECREASE_SCHEDULED',
  Increase = 'INCREASE'
}

/** A filter to be used against BondChangeAction fields. All fields are combined with a logical ‘and.’ */
export type BondChangeActionFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<BondChangeAction>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<BondChangeAction>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<BondChangeAction>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<BondChangeAction>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<BondChangeAction>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<BondChangeAction>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<BondChangeAction>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<BondChangeAction>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<BondChangeAction>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<BondChangeAction>>;
};

/** A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’ */
export type BooleanFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Boolean']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Boolean']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Boolean']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

/** A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’ */
export type DatetimeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Datetime']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Datetime']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Datetime']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Datetime']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Datetime']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Datetime']['input']>>;
};

export type Delegation = Node & {
  __typename?: 'Delegation';
  /** The asset ID of the delegated tokens. */
  assetId: Scalars['JSON']['output'];
  /** Reads a single `Delegator` that is related to this `Delegation`. */
  delegator?: Maybe<Delegator>;
  /** The Delegator who made the delegation. */
  delegatorId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Delegator`. */
  delegatorsByUnstakeRequestDelegationIdAndDelegatorId: DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyConnection;
  /** Indicates whether this delegation has an active unstake request. */
  hasActiveUnstakeRequest: Scalars['Boolean']['output'];
  /** Reads and enables pagination through a set of `DelegationHistory`. */
  history: DelegationHistoriesConnection;
  /** Unique identifier for the delegation. Composite key: delegator ID + operator ID + asset ID */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `Delegation`. */
  operator?: Maybe<Operator>;
  /** The Operator to whom the delegation was made. */
  operatorId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByUnstakeRequestDelegationIdAndOperatorId: DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyConnection;
  /** The total amount of tokens delegated. */
  totalAmount: Scalars['BigFloat']['output'];
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


export type DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegators_Distinct_Enum>>>;
  filter?: InputMaybe<DelegatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegationHistoryArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegation_Histories_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationHistoryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationHistoriesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegationUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DelegationAggregates = {
  __typename?: 'DelegationAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<DelegationAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<DelegationDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<DelegationMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<DelegationMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<DelegationStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<DelegationStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<DelegationSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<DelegationVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<DelegationVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `Delegation` object types. */
export type DelegationAggregatesFilter = {
  /** Mean average aggregate over matching `Delegation` objects. */
  average?: InputMaybe<DelegationAverageAggregateFilter>;
  /** Distinct count aggregate over matching `Delegation` objects. */
  distinctCount?: InputMaybe<DelegationDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `Delegation` object to be included within the aggregate. */
  filter?: InputMaybe<DelegationFilter>;
  /** Maximum aggregate over matching `Delegation` objects. */
  max?: InputMaybe<DelegationMaxAggregateFilter>;
  /** Minimum aggregate over matching `Delegation` objects. */
  min?: InputMaybe<DelegationMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `Delegation` objects. */
  stddevPopulation?: InputMaybe<DelegationStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `Delegation` objects. */
  stddevSample?: InputMaybe<DelegationStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `Delegation` objects. */
  sum?: InputMaybe<DelegationSumAggregateFilter>;
  /** Population variance aggregate over matching `Delegation` objects. */
  variancePopulation?: InputMaybe<DelegationVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `Delegation` objects. */
  varianceSample?: InputMaybe<DelegationVarianceSampleAggregateFilter>;
};

export type DelegationAverageAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationAverageAggregates = {
  __typename?: 'DelegationAverageAggregates';
  /** Mean average of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Delegator` values, with data from `UnstakeRequest`. */
export type DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyConnection = {
  __typename?: 'DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegatorAggregates>;
  /** A list of edges which contains the `Delegator`, info from the `UnstakeRequest`, and the cursor to aid in pagination. */
  edges: Array<DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegatorAggregates>>;
  /** A list of `Delegator` objects. */
  nodes: Array<Maybe<Delegator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegator` values, with data from `UnstakeRequest`. */
export type DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegatorsGroupBy>;
  having?: InputMaybe<DelegatorsHavingInput>;
};

/** A `Delegator` edge in the connection, with data from `UnstakeRequest`. */
export type DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyEdge = {
  __typename?: 'DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Delegator` at the end of the edge. */
  node?: Maybe<Delegator>;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


/** A `Delegator` edge in the connection, with data from `UnstakeRequest`. */
export type DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyEdgeUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DelegationDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  assetId?: InputMaybe<BigIntFilter>;
  delegatorId?: InputMaybe<BigIntFilter>;
  hasActiveUnstakeRequest?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
  totalAmount?: InputMaybe<BigIntFilter>;
};

export type DelegationDistinctCountAggregates = {
  __typename?: 'DelegationDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of assetId across the matching connection */
  assetId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of delegatorId across the matching connection */
  delegatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of hasActiveUnstakeRequest across the matching connection */
  hasActiveUnstakeRequest?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Delegation` object types. All fields are combined with a logical ‘and.’ */
export type DelegationFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<DelegationFilter>>;
  /** Filter by the object’s `assetId` field. */
  assetId?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `delegator` relation. */
  delegator?: InputMaybe<DelegatorFilter>;
  /** Filter by the object’s `delegatorId` field. */
  delegatorId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `hasActiveUnstakeRequest` field. */
  hasActiveUnstakeRequest?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `history` relation. */
  history?: InputMaybe<DelegationToManyDelegationHistoryFilter>;
  /** Some related `history` exist. */
  historyExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<DelegationFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<DelegationFilter>>;
  /** Filter by the object’s `totalAmount` field. */
  totalAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `unstakeRequests` relation. */
  unstakeRequests?: InputMaybe<DelegationToManyUnstakeRequestFilter>;
  /** Some related `unstakeRequests` exist. */
  unstakeRequestsExist?: InputMaybe<Scalars['Boolean']['input']>;
};

/** A connection to a list of `DelegationHistory` values. */
export type DelegationHistoriesConnection = {
  __typename?: 'DelegationHistoriesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegationHistoryAggregates>;
  /** A list of edges which contains the `DelegationHistory` and cursor to aid in pagination. */
  edges: Array<DelegationHistoriesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegationHistoryAggregates>>;
  /** A list of `DelegationHistory` objects. */
  nodes: Array<Maybe<DelegationHistory>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `DelegationHistory` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `DelegationHistory` values. */
export type DelegationHistoriesConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegationHistoriesGroupBy>;
  having?: InputMaybe<DelegationHistoriesHavingInput>;
};

/** A `DelegationHistory` edge in the connection. */
export type DelegationHistoriesEdge = {
  __typename?: 'DelegationHistoriesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `DelegationHistory` at the end of the edge. */
  node?: Maybe<DelegationHistory>;
};

/** Grouping methods for `DelegationHistory` for usage during aggregation. */
export enum DelegationHistoriesGroupBy {
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  DelegationId = 'DELEGATION_ID',
  Id = 'ID'
}

export type DelegationHistoriesHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DelegationHistoriesHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `DelegationHistory` aggregates. */
export type DelegationHistoriesHavingInput = {
  AND?: InputMaybe<Array<DelegationHistoriesHavingInput>>;
  OR?: InputMaybe<Array<DelegationHistoriesHavingInput>>;
  average?: InputMaybe<DelegationHistoriesHavingAverageInput>;
  distinctCount?: InputMaybe<DelegationHistoriesHavingDistinctCountInput>;
  max?: InputMaybe<DelegationHistoriesHavingMaxInput>;
  min?: InputMaybe<DelegationHistoriesHavingMinInput>;
  stddevPopulation?: InputMaybe<DelegationHistoriesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<DelegationHistoriesHavingStddevSampleInput>;
  sum?: InputMaybe<DelegationHistoriesHavingSumInput>;
  variancePopulation?: InputMaybe<DelegationHistoriesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<DelegationHistoriesHavingVarianceSampleInput>;
};

export type DelegationHistoriesHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DelegationHistoriesHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DelegationHistoriesHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DelegationHistoriesHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DelegationHistoriesHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DelegationHistoriesHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DelegationHistoriesHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `DelegationHistory`. */
export enum DelegationHistoriesOrderBy {
  AmountAsc = 'AMOUNT_ASC',
  AmountDesc = 'AMOUNT_DESC',
  BlockNumberAsc = 'BLOCK_NUMBER_ASC',
  BlockNumberDesc = 'BLOCK_NUMBER_DESC',
  DelegationByDelegationIdAssetIdAsc = 'DELEGATION_BY_DELEGATION_ID__ASSET_ID_ASC',
  DelegationByDelegationIdAssetIdDesc = 'DELEGATION_BY_DELEGATION_ID__ASSET_ID_DESC',
  DelegationByDelegationIdDelegatorIdAsc = 'DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_ASC',
  DelegationByDelegationIdDelegatorIdDesc = 'DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_DESC',
  DelegationByDelegationIdHasActiveUnstakeRequestAsc = 'DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationByDelegationIdHasActiveUnstakeRequestDesc = 'DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationByDelegationIdIdAsc = 'DELEGATION_BY_DELEGATION_ID__ID_ASC',
  DelegationByDelegationIdIdDesc = 'DELEGATION_BY_DELEGATION_ID__ID_DESC',
  DelegationByDelegationIdOperatorIdAsc = 'DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_ASC',
  DelegationByDelegationIdOperatorIdDesc = 'DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_DESC',
  DelegationByDelegationIdTotalAmountAsc = 'DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_ASC',
  DelegationByDelegationIdTotalAmountDesc = 'DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_DESC',
  DelegationIdAsc = 'DELEGATION_ID_ASC',
  DelegationIdDesc = 'DELEGATION_ID_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'
}

export type DelegationHistory = Node & {
  __typename?: 'DelegationHistory';
  /** The amount of tokens delegated in this transaction. */
  amount: Scalars['BigFloat']['output'];
  /** The block number at which this delegation transaction occurred. */
  blockNumber: Scalars['Int']['output'];
  /** Reads a single `Delegation` that is related to this `DelegationHistory`. */
  delegation?: Maybe<Delegation>;
  /** The delegation this history entry is associated with. */
  delegationId: Scalars['String']['output'];
  /** Unique identifier for the delegation history entry. Composite key: delegation ID + block number */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type DelegationHistoryAggregates = {
  __typename?: 'DelegationHistoryAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<DelegationHistoryAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<DelegationHistoryDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<DelegationHistoryMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<DelegationHistoryMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<DelegationHistoryStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<DelegationHistoryStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<DelegationHistorySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<DelegationHistoryVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<DelegationHistoryVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `DelegationHistory` object types. */
export type DelegationHistoryAggregatesFilter = {
  /** Mean average aggregate over matching `DelegationHistory` objects. */
  average?: InputMaybe<DelegationHistoryAverageAggregateFilter>;
  /** Distinct count aggregate over matching `DelegationHistory` objects. */
  distinctCount?: InputMaybe<DelegationHistoryDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `DelegationHistory` object to be included within the aggregate. */
  filter?: InputMaybe<DelegationHistoryFilter>;
  /** Maximum aggregate over matching `DelegationHistory` objects. */
  max?: InputMaybe<DelegationHistoryMaxAggregateFilter>;
  /** Minimum aggregate over matching `DelegationHistory` objects. */
  min?: InputMaybe<DelegationHistoryMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `DelegationHistory` objects. */
  stddevPopulation?: InputMaybe<DelegationHistoryStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `DelegationHistory` objects. */
  stddevSample?: InputMaybe<DelegationHistoryStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `DelegationHistory` objects. */
  sum?: InputMaybe<DelegationHistorySumAggregateFilter>;
  /** Population variance aggregate over matching `DelegationHistory` objects. */
  variancePopulation?: InputMaybe<DelegationHistoryVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `DelegationHistory` objects. */
  varianceSample?: InputMaybe<DelegationHistoryVarianceSampleAggregateFilter>;
};

export type DelegationHistoryAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DelegationHistoryAverageAggregates = {
  __typename?: 'DelegationHistoryAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationHistoryDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  amount?: InputMaybe<BigIntFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
  delegationId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
};

export type DelegationHistoryDistinctCountAggregates = {
  __typename?: 'DelegationHistoryDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of delegationId across the matching connection */
  delegationId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `DelegationHistory` object types. All fields are combined with a logical ‘and.’ */
export type DelegationHistoryFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<DelegationHistoryFilter>>;
  /** Filter by the object’s `blockNumber` field. */
  blockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `delegation` relation. */
  delegation?: InputMaybe<DelegationFilter>;
  /** Filter by the object’s `delegationId` field. */
  delegationId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<DelegationHistoryFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<DelegationHistoryFilter>>;
};

export type DelegationHistoryMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type DelegationHistoryMaxAggregates = {
  __typename?: 'DelegationHistoryMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type DelegationHistoryMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type DelegationHistoryMinAggregates = {
  __typename?: 'DelegationHistoryMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type DelegationHistoryStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DelegationHistoryStddevPopulationAggregates = {
  __typename?: 'DelegationHistoryStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationHistoryStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DelegationHistoryStddevSampleAggregates = {
  __typename?: 'DelegationHistoryStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationHistorySumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
};

export type DelegationHistorySumAggregates = {
  __typename?: 'DelegationHistorySumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of blockNumber across the matching connection */
  blockNumber: Scalars['BigInt']['output'];
};

export type DelegationHistoryVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DelegationHistoryVariancePopulationAggregates = {
  __typename?: 'DelegationHistoryVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationHistoryVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DelegationHistoryVarianceSampleAggregates = {
  __typename?: 'DelegationHistoryVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationMaxAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationMaxAggregates = {
  __typename?: 'DelegationMaxAggregates';
  /** Maximum of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationMinAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationMinAggregates = {
  __typename?: 'DelegationMinAggregates';
  /** Minimum of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Operator` values, with data from `UnstakeRequest`. */
export type DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyConnection = {
  __typename?: 'DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `UnstakeRequest`, and the cursor to aid in pagination. */
  edges: Array<DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `UnstakeRequest`. */
export type DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `UnstakeRequest`. */
export type DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyEdge = {
  __typename?: 'DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


/** A `Operator` edge in the connection, with data from `UnstakeRequest`. */
export type DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyEdgeUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DelegationStddevPopulationAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationStddevPopulationAggregates = {
  __typename?: 'DelegationStddevPopulationAggregates';
  /** Population standard deviation of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationStddevSampleAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationStddevSampleAggregates = {
  __typename?: 'DelegationStddevSampleAggregates';
  /** Sample standard deviation of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationSumAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationSumAggregates = {
  __typename?: 'DelegationSumAggregates';
  /** Sum of totalAmount across the matching connection */
  totalAmount: Scalars['BigFloat']['output'];
};

/** A filter to be used against many `DelegationHistory` object types. All fields are combined with a logical ‘and.’ */
export type DelegationToManyDelegationHistoryFilter = {
  /** Aggregates across related `DelegationHistory` match the filter criteria. */
  aggregates?: InputMaybe<DelegationHistoryAggregatesFilter>;
  /** Every related `DelegationHistory` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DelegationHistoryFilter>;
  /** No related `DelegationHistory` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DelegationHistoryFilter>;
  /** Some related `DelegationHistory` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DelegationHistoryFilter>;
};

/** A filter to be used against many `UnstakeRequest` object types. All fields are combined with a logical ‘and.’ */
export type DelegationToManyUnstakeRequestFilter = {
  /** Aggregates across related `UnstakeRequest` match the filter criteria. */
  aggregates?: InputMaybe<UnstakeRequestAggregatesFilter>;
  /** Every related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<UnstakeRequestFilter>;
  /** No related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<UnstakeRequestFilter>;
  /** Some related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<UnstakeRequestFilter>;
};

export type DelegationVariancePopulationAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationVariancePopulationAggregates = {
  __typename?: 'DelegationVariancePopulationAggregates';
  /** Population variance of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegationVarianceSampleAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DelegationVarianceSampleAggregates = {
  __typename?: 'DelegationVarianceSampleAggregates';
  /** Sample variance of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Delegation` values. */
export type DelegationsConnection = {
  __typename?: 'DelegationsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegationAggregates>;
  /** A list of edges which contains the `Delegation` and cursor to aid in pagination. */
  edges: Array<DelegationsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegationAggregates>>;
  /** A list of `Delegation` objects. */
  nodes: Array<Maybe<Delegation>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegation` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegation` values. */
export type DelegationsConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegationsGroupBy>;
  having?: InputMaybe<DelegationsHavingInput>;
};

/** A `Delegation` edge in the connection. */
export type DelegationsEdge = {
  __typename?: 'DelegationsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Delegation` at the end of the edge. */
  node?: Maybe<Delegation>;
};

/** Grouping methods for `Delegation` for usage during aggregation. */
export enum DelegationsGroupBy {
  AssetId = 'ASSET_ID',
  DelegatorId = 'DELEGATOR_ID',
  HasActiveUnstakeRequest = 'HAS_ACTIVE_UNSTAKE_REQUEST',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  TotalAmount = 'TOTAL_AMOUNT'
}

export type DelegationsHavingAverageInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DelegationsHavingDistinctCountInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `Delegation` aggregates. */
export type DelegationsHavingInput = {
  AND?: InputMaybe<Array<DelegationsHavingInput>>;
  OR?: InputMaybe<Array<DelegationsHavingInput>>;
  average?: InputMaybe<DelegationsHavingAverageInput>;
  distinctCount?: InputMaybe<DelegationsHavingDistinctCountInput>;
  max?: InputMaybe<DelegationsHavingMaxInput>;
  min?: InputMaybe<DelegationsHavingMinInput>;
  stddevPopulation?: InputMaybe<DelegationsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<DelegationsHavingStddevSampleInput>;
  sum?: InputMaybe<DelegationsHavingSumInput>;
  variancePopulation?: InputMaybe<DelegationsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<DelegationsHavingVarianceSampleInput>;
};

export type DelegationsHavingMaxInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DelegationsHavingMinInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DelegationsHavingStddevPopulationInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DelegationsHavingStddevSampleInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DelegationsHavingSumInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DelegationsHavingVariancePopulationInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DelegationsHavingVarianceSampleInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

/** Methods to use when ordering `Delegation`. */
export enum DelegationsOrderBy {
  AssetIdAsc = 'ASSET_ID_ASC',
  AssetIdDesc = 'ASSET_ID_DESC',
  DelegationHistoriesByDelegationIdCountAsc = 'DELEGATION_HISTORIES_BY_DELEGATION_ID__COUNT_ASC',
  DelegationHistoriesByDelegationIdCountDesc = 'DELEGATION_HISTORIES_BY_DELEGATION_ID__COUNT_DESC',
  DelegatorByDelegatorIdAccountIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC',
  DelegatorByDelegatorIdAccountIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC',
  DelegatorByDelegatorIdIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ID_ASC',
  DelegatorByDelegatorIdIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ID_DESC',
  DelegatorByDelegatorIdJoinedAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC',
  DelegatorByDelegatorIdJoinedAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC',
  DelegatorByDelegatorIdLastUpdateAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC',
  DelegatorByDelegatorIdLastUpdateAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC',
  DelegatorIdAsc = 'DELEGATOR_ID_ASC',
  DelegatorIdDesc = 'DELEGATOR_ID_DESC',
  HasActiveUnstakeRequestAsc = 'HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  HasActiveUnstakeRequestDesc = 'HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  HistoryAverageAmountAsc = 'HISTORY_AVERAGE_AMOUNT_ASC',
  HistoryAverageAmountDesc = 'HISTORY_AVERAGE_AMOUNT_DESC',
  HistoryAverageBlockNumberAsc = 'HISTORY_AVERAGE_BLOCK_NUMBER_ASC',
  HistoryAverageBlockNumberDesc = 'HISTORY_AVERAGE_BLOCK_NUMBER_DESC',
  HistoryAverageBlockRangeAsc = 'HISTORY_AVERAGE_BLOCK_RANGE_ASC',
  HistoryAverageBlockRangeDesc = 'HISTORY_AVERAGE_BLOCK_RANGE_DESC',
  HistoryAverageDelegationIdAsc = 'HISTORY_AVERAGE_DELEGATION_ID_ASC',
  HistoryAverageDelegationIdDesc = 'HISTORY_AVERAGE_DELEGATION_ID_DESC',
  HistoryAverageIdAsc = 'HISTORY_AVERAGE_ID_ASC',
  HistoryAverageIdDesc = 'HISTORY_AVERAGE_ID_DESC',
  HistoryCountAsc = 'HISTORY_COUNT_ASC',
  HistoryCountDesc = 'HISTORY_COUNT_DESC',
  HistoryDistinctCountAmountAsc = 'HISTORY_DISTINCT_COUNT_AMOUNT_ASC',
  HistoryDistinctCountAmountDesc = 'HISTORY_DISTINCT_COUNT_AMOUNT_DESC',
  HistoryDistinctCountBlockNumberAsc = 'HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC',
  HistoryDistinctCountBlockNumberDesc = 'HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC',
  HistoryDistinctCountBlockRangeAsc = 'HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  HistoryDistinctCountBlockRangeDesc = 'HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  HistoryDistinctCountDelegationIdAsc = 'HISTORY_DISTINCT_COUNT_DELEGATION_ID_ASC',
  HistoryDistinctCountDelegationIdDesc = 'HISTORY_DISTINCT_COUNT_DELEGATION_ID_DESC',
  HistoryDistinctCountIdAsc = 'HISTORY_DISTINCT_COUNT_ID_ASC',
  HistoryDistinctCountIdDesc = 'HISTORY_DISTINCT_COUNT_ID_DESC',
  HistoryMaxAmountAsc = 'HISTORY_MAX_AMOUNT_ASC',
  HistoryMaxAmountDesc = 'HISTORY_MAX_AMOUNT_DESC',
  HistoryMaxBlockNumberAsc = 'HISTORY_MAX_BLOCK_NUMBER_ASC',
  HistoryMaxBlockNumberDesc = 'HISTORY_MAX_BLOCK_NUMBER_DESC',
  HistoryMaxBlockRangeAsc = 'HISTORY_MAX_BLOCK_RANGE_ASC',
  HistoryMaxBlockRangeDesc = 'HISTORY_MAX_BLOCK_RANGE_DESC',
  HistoryMaxDelegationIdAsc = 'HISTORY_MAX_DELEGATION_ID_ASC',
  HistoryMaxDelegationIdDesc = 'HISTORY_MAX_DELEGATION_ID_DESC',
  HistoryMaxIdAsc = 'HISTORY_MAX_ID_ASC',
  HistoryMaxIdDesc = 'HISTORY_MAX_ID_DESC',
  HistoryMinAmountAsc = 'HISTORY_MIN_AMOUNT_ASC',
  HistoryMinAmountDesc = 'HISTORY_MIN_AMOUNT_DESC',
  HistoryMinBlockNumberAsc = 'HISTORY_MIN_BLOCK_NUMBER_ASC',
  HistoryMinBlockNumberDesc = 'HISTORY_MIN_BLOCK_NUMBER_DESC',
  HistoryMinBlockRangeAsc = 'HISTORY_MIN_BLOCK_RANGE_ASC',
  HistoryMinBlockRangeDesc = 'HISTORY_MIN_BLOCK_RANGE_DESC',
  HistoryMinDelegationIdAsc = 'HISTORY_MIN_DELEGATION_ID_ASC',
  HistoryMinDelegationIdDesc = 'HISTORY_MIN_DELEGATION_ID_DESC',
  HistoryMinIdAsc = 'HISTORY_MIN_ID_ASC',
  HistoryMinIdDesc = 'HISTORY_MIN_ID_DESC',
  HistoryStddevPopulationAmountAsc = 'HISTORY_STDDEV_POPULATION_AMOUNT_ASC',
  HistoryStddevPopulationAmountDesc = 'HISTORY_STDDEV_POPULATION_AMOUNT_DESC',
  HistoryStddevPopulationBlockNumberAsc = 'HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC',
  HistoryStddevPopulationBlockNumberDesc = 'HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC',
  HistoryStddevPopulationBlockRangeAsc = 'HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  HistoryStddevPopulationBlockRangeDesc = 'HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  HistoryStddevPopulationDelegationIdAsc = 'HISTORY_STDDEV_POPULATION_DELEGATION_ID_ASC',
  HistoryStddevPopulationDelegationIdDesc = 'HISTORY_STDDEV_POPULATION_DELEGATION_ID_DESC',
  HistoryStddevPopulationIdAsc = 'HISTORY_STDDEV_POPULATION_ID_ASC',
  HistoryStddevPopulationIdDesc = 'HISTORY_STDDEV_POPULATION_ID_DESC',
  HistoryStddevSampleAmountAsc = 'HISTORY_STDDEV_SAMPLE_AMOUNT_ASC',
  HistoryStddevSampleAmountDesc = 'HISTORY_STDDEV_SAMPLE_AMOUNT_DESC',
  HistoryStddevSampleBlockNumberAsc = 'HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',
  HistoryStddevSampleBlockNumberDesc = 'HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',
  HistoryStddevSampleBlockRangeAsc = 'HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  HistoryStddevSampleBlockRangeDesc = 'HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  HistoryStddevSampleDelegationIdAsc = 'HISTORY_STDDEV_SAMPLE_DELEGATION_ID_ASC',
  HistoryStddevSampleDelegationIdDesc = 'HISTORY_STDDEV_SAMPLE_DELEGATION_ID_DESC',
  HistoryStddevSampleIdAsc = 'HISTORY_STDDEV_SAMPLE_ID_ASC',
  HistoryStddevSampleIdDesc = 'HISTORY_STDDEV_SAMPLE_ID_DESC',
  HistorySumAmountAsc = 'HISTORY_SUM_AMOUNT_ASC',
  HistorySumAmountDesc = 'HISTORY_SUM_AMOUNT_DESC',
  HistorySumBlockNumberAsc = 'HISTORY_SUM_BLOCK_NUMBER_ASC',
  HistorySumBlockNumberDesc = 'HISTORY_SUM_BLOCK_NUMBER_DESC',
  HistorySumBlockRangeAsc = 'HISTORY_SUM_BLOCK_RANGE_ASC',
  HistorySumBlockRangeDesc = 'HISTORY_SUM_BLOCK_RANGE_DESC',
  HistorySumDelegationIdAsc = 'HISTORY_SUM_DELEGATION_ID_ASC',
  HistorySumDelegationIdDesc = 'HISTORY_SUM_DELEGATION_ID_DESC',
  HistorySumIdAsc = 'HISTORY_SUM_ID_ASC',
  HistorySumIdDesc = 'HISTORY_SUM_ID_DESC',
  HistoryVariancePopulationAmountAsc = 'HISTORY_VARIANCE_POPULATION_AMOUNT_ASC',
  HistoryVariancePopulationAmountDesc = 'HISTORY_VARIANCE_POPULATION_AMOUNT_DESC',
  HistoryVariancePopulationBlockNumberAsc = 'HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',
  HistoryVariancePopulationBlockNumberDesc = 'HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',
  HistoryVariancePopulationBlockRangeAsc = 'HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  HistoryVariancePopulationBlockRangeDesc = 'HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  HistoryVariancePopulationDelegationIdAsc = 'HISTORY_VARIANCE_POPULATION_DELEGATION_ID_ASC',
  HistoryVariancePopulationDelegationIdDesc = 'HISTORY_VARIANCE_POPULATION_DELEGATION_ID_DESC',
  HistoryVariancePopulationIdAsc = 'HISTORY_VARIANCE_POPULATION_ID_ASC',
  HistoryVariancePopulationIdDesc = 'HISTORY_VARIANCE_POPULATION_ID_DESC',
  HistoryVarianceSampleAmountAsc = 'HISTORY_VARIANCE_SAMPLE_AMOUNT_ASC',
  HistoryVarianceSampleAmountDesc = 'HISTORY_VARIANCE_SAMPLE_AMOUNT_DESC',
  HistoryVarianceSampleBlockNumberAsc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',
  HistoryVarianceSampleBlockNumberDesc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',
  HistoryVarianceSampleBlockRangeAsc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  HistoryVarianceSampleBlockRangeDesc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  HistoryVarianceSampleDelegationIdAsc = 'HISTORY_VARIANCE_SAMPLE_DELEGATION_ID_ASC',
  HistoryVarianceSampleDelegationIdDesc = 'HISTORY_VARIANCE_SAMPLE_DELEGATION_ID_DESC',
  HistoryVarianceSampleIdAsc = 'HISTORY_VARIANCE_SAMPLE_ID_ASC',
  HistoryVarianceSampleIdDesc = 'HISTORY_VARIANCE_SAMPLE_ID_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  TotalAmountAsc = 'TOTAL_AMOUNT_ASC',
  TotalAmountDesc = 'TOTAL_AMOUNT_DESC',
  UnstakeRequestsAverageAssetIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_ASC',
  UnstakeRequestsAverageAssetIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_DESC',
  UnstakeRequestsAverageBlockRangeAsc = 'UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC',
  UnstakeRequestsAverageBlockRangeDesc = 'UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC',
  UnstakeRequestsAverageCreatedAtAsc = 'UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_ASC',
  UnstakeRequestsAverageCreatedAtDesc = 'UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_DESC',
  UnstakeRequestsAverageCurrentAmountAsc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsAverageCurrentAmountDesc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsAverageCurrentStatusAsc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_ASC',
  UnstakeRequestsAverageCurrentStatusDesc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_DESC',
  UnstakeRequestsAverageDelegationIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_ASC',
  UnstakeRequestsAverageDelegationIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_DESC',
  UnstakeRequestsAverageDelegatorIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_ASC',
  UnstakeRequestsAverageDelegatorIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_DESC',
  UnstakeRequestsAverageIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_ID_ASC',
  UnstakeRequestsAverageIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_ID_DESC',
  UnstakeRequestsAverageOperatorIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_ASC',
  UnstakeRequestsAverageOperatorIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_DESC',
  UnstakeRequestsAverageRequestedRoundAsc = 'UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC',
  UnstakeRequestsAverageRequestedRoundDesc = 'UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC',
  UnstakeRequestsAverageUpdatedAtAsc = 'UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_ASC',
  UnstakeRequestsAverageUpdatedAtDesc = 'UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_DESC',
  UnstakeRequestsByDelegationIdCountAsc = 'UNSTAKE_REQUESTS_BY_DELEGATION_ID__COUNT_ASC',
  UnstakeRequestsByDelegationIdCountDesc = 'UNSTAKE_REQUESTS_BY_DELEGATION_ID__COUNT_DESC',
  UnstakeRequestsCountAsc = 'UNSTAKE_REQUESTS_COUNT_ASC',
  UnstakeRequestsCountDesc = 'UNSTAKE_REQUESTS_COUNT_DESC',
  UnstakeRequestsDistinctCountAssetIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC',
  UnstakeRequestsDistinctCountAssetIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC',
  UnstakeRequestsDistinctCountBlockRangeAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  UnstakeRequestsDistinctCountBlockRangeDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  UnstakeRequestsDistinctCountCreatedAtAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC',
  UnstakeRequestsDistinctCountCreatedAtDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC',
  UnstakeRequestsDistinctCountCurrentAmountAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC',
  UnstakeRequestsDistinctCountCurrentAmountDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC',
  UnstakeRequestsDistinctCountCurrentStatusAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC',
  UnstakeRequestsDistinctCountCurrentStatusDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC',
  UnstakeRequestsDistinctCountDelegationIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_ASC',
  UnstakeRequestsDistinctCountDelegationIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_DESC',
  UnstakeRequestsDistinctCountDelegatorIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  UnstakeRequestsDistinctCountDelegatorIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  UnstakeRequestsDistinctCountIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_ASC',
  UnstakeRequestsDistinctCountIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_DESC',
  UnstakeRequestsDistinctCountOperatorIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  UnstakeRequestsDistinctCountOperatorIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  UnstakeRequestsDistinctCountRequestedRoundAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC',
  UnstakeRequestsDistinctCountRequestedRoundDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC',
  UnstakeRequestsDistinctCountUpdatedAtAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC',
  UnstakeRequestsDistinctCountUpdatedAtDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC',
  UnstakeRequestsMaxAssetIdAsc = 'UNSTAKE_REQUESTS_MAX_ASSET_ID_ASC',
  UnstakeRequestsMaxAssetIdDesc = 'UNSTAKE_REQUESTS_MAX_ASSET_ID_DESC',
  UnstakeRequestsMaxBlockRangeAsc = 'UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_ASC',
  UnstakeRequestsMaxBlockRangeDesc = 'UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_DESC',
  UnstakeRequestsMaxCreatedAtAsc = 'UNSTAKE_REQUESTS_MAX_CREATED_AT_ASC',
  UnstakeRequestsMaxCreatedAtDesc = 'UNSTAKE_REQUESTS_MAX_CREATED_AT_DESC',
  UnstakeRequestsMaxCurrentAmountAsc = 'UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_ASC',
  UnstakeRequestsMaxCurrentAmountDesc = 'UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_DESC',
  UnstakeRequestsMaxCurrentStatusAsc = 'UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_ASC',
  UnstakeRequestsMaxCurrentStatusDesc = 'UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_DESC',
  UnstakeRequestsMaxDelegationIdAsc = 'UNSTAKE_REQUESTS_MAX_DELEGATION_ID_ASC',
  UnstakeRequestsMaxDelegationIdDesc = 'UNSTAKE_REQUESTS_MAX_DELEGATION_ID_DESC',
  UnstakeRequestsMaxDelegatorIdAsc = 'UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_ASC',
  UnstakeRequestsMaxDelegatorIdDesc = 'UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_DESC',
  UnstakeRequestsMaxIdAsc = 'UNSTAKE_REQUESTS_MAX_ID_ASC',
  UnstakeRequestsMaxIdDesc = 'UNSTAKE_REQUESTS_MAX_ID_DESC',
  UnstakeRequestsMaxOperatorIdAsc = 'UNSTAKE_REQUESTS_MAX_OPERATOR_ID_ASC',
  UnstakeRequestsMaxOperatorIdDesc = 'UNSTAKE_REQUESTS_MAX_OPERATOR_ID_DESC',
  UnstakeRequestsMaxRequestedRoundAsc = 'UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_ASC',
  UnstakeRequestsMaxRequestedRoundDesc = 'UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_DESC',
  UnstakeRequestsMaxUpdatedAtAsc = 'UNSTAKE_REQUESTS_MAX_UPDATED_AT_ASC',
  UnstakeRequestsMaxUpdatedAtDesc = 'UNSTAKE_REQUESTS_MAX_UPDATED_AT_DESC',
  UnstakeRequestsMinAssetIdAsc = 'UNSTAKE_REQUESTS_MIN_ASSET_ID_ASC',
  UnstakeRequestsMinAssetIdDesc = 'UNSTAKE_REQUESTS_MIN_ASSET_ID_DESC',
  UnstakeRequestsMinBlockRangeAsc = 'UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_ASC',
  UnstakeRequestsMinBlockRangeDesc = 'UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_DESC',
  UnstakeRequestsMinCreatedAtAsc = 'UNSTAKE_REQUESTS_MIN_CREATED_AT_ASC',
  UnstakeRequestsMinCreatedAtDesc = 'UNSTAKE_REQUESTS_MIN_CREATED_AT_DESC',
  UnstakeRequestsMinCurrentAmountAsc = 'UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_ASC',
  UnstakeRequestsMinCurrentAmountDesc = 'UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_DESC',
  UnstakeRequestsMinCurrentStatusAsc = 'UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_ASC',
  UnstakeRequestsMinCurrentStatusDesc = 'UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_DESC',
  UnstakeRequestsMinDelegationIdAsc = 'UNSTAKE_REQUESTS_MIN_DELEGATION_ID_ASC',
  UnstakeRequestsMinDelegationIdDesc = 'UNSTAKE_REQUESTS_MIN_DELEGATION_ID_DESC',
  UnstakeRequestsMinDelegatorIdAsc = 'UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_ASC',
  UnstakeRequestsMinDelegatorIdDesc = 'UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_DESC',
  UnstakeRequestsMinIdAsc = 'UNSTAKE_REQUESTS_MIN_ID_ASC',
  UnstakeRequestsMinIdDesc = 'UNSTAKE_REQUESTS_MIN_ID_DESC',
  UnstakeRequestsMinOperatorIdAsc = 'UNSTAKE_REQUESTS_MIN_OPERATOR_ID_ASC',
  UnstakeRequestsMinOperatorIdDesc = 'UNSTAKE_REQUESTS_MIN_OPERATOR_ID_DESC',
  UnstakeRequestsMinRequestedRoundAsc = 'UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_ASC',
  UnstakeRequestsMinRequestedRoundDesc = 'UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_DESC',
  UnstakeRequestsMinUpdatedAtAsc = 'UNSTAKE_REQUESTS_MIN_UPDATED_AT_ASC',
  UnstakeRequestsMinUpdatedAtDesc = 'UNSTAKE_REQUESTS_MIN_UPDATED_AT_DESC',
  UnstakeRequestsStddevPopulationAssetIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC',
  UnstakeRequestsStddevPopulationAssetIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC',
  UnstakeRequestsStddevPopulationBlockRangeAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  UnstakeRequestsStddevPopulationBlockRangeDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  UnstakeRequestsStddevPopulationCreatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC',
  UnstakeRequestsStddevPopulationCreatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC',
  UnstakeRequestsStddevPopulationCurrentAmountAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC',
  UnstakeRequestsStddevPopulationCurrentAmountDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC',
  UnstakeRequestsStddevPopulationCurrentStatusAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC',
  UnstakeRequestsStddevPopulationCurrentStatusDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC',
  UnstakeRequestsStddevPopulationDelegationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_ASC',
  UnstakeRequestsStddevPopulationDelegationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_DESC',
  UnstakeRequestsStddevPopulationDelegatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  UnstakeRequestsStddevPopulationDelegatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  UnstakeRequestsStddevPopulationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_ASC',
  UnstakeRequestsStddevPopulationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_DESC',
  UnstakeRequestsStddevPopulationOperatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  UnstakeRequestsStddevPopulationOperatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  UnstakeRequestsStddevPopulationRequestedRoundAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC',
  UnstakeRequestsStddevPopulationRequestedRoundDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC',
  UnstakeRequestsStddevPopulationUpdatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC',
  UnstakeRequestsStddevPopulationUpdatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC',
  UnstakeRequestsStddevSampleAssetIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC',
  UnstakeRequestsStddevSampleAssetIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC',
  UnstakeRequestsStddevSampleBlockRangeAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  UnstakeRequestsStddevSampleBlockRangeDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  UnstakeRequestsStddevSampleCreatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  UnstakeRequestsStddevSampleCreatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  UnstakeRequestsStddevSampleCurrentAmountAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsStddevSampleCurrentAmountDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsStddevSampleCurrentStatusAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC',
  UnstakeRequestsStddevSampleCurrentStatusDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC',
  UnstakeRequestsStddevSampleDelegationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_ASC',
  UnstakeRequestsStddevSampleDelegationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_DESC',
  UnstakeRequestsStddevSampleDelegatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  UnstakeRequestsStddevSampleDelegatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  UnstakeRequestsStddevSampleIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_ASC',
  UnstakeRequestsStddevSampleIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_DESC',
  UnstakeRequestsStddevSampleOperatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  UnstakeRequestsStddevSampleOperatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  UnstakeRequestsStddevSampleRequestedRoundAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC',
  UnstakeRequestsStddevSampleRequestedRoundDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC',
  UnstakeRequestsStddevSampleUpdatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC',
  UnstakeRequestsStddevSampleUpdatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC',
  UnstakeRequestsSumAssetIdAsc = 'UNSTAKE_REQUESTS_SUM_ASSET_ID_ASC',
  UnstakeRequestsSumAssetIdDesc = 'UNSTAKE_REQUESTS_SUM_ASSET_ID_DESC',
  UnstakeRequestsSumBlockRangeAsc = 'UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_ASC',
  UnstakeRequestsSumBlockRangeDesc = 'UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_DESC',
  UnstakeRequestsSumCreatedAtAsc = 'UNSTAKE_REQUESTS_SUM_CREATED_AT_ASC',
  UnstakeRequestsSumCreatedAtDesc = 'UNSTAKE_REQUESTS_SUM_CREATED_AT_DESC',
  UnstakeRequestsSumCurrentAmountAsc = 'UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_ASC',
  UnstakeRequestsSumCurrentAmountDesc = 'UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_DESC',
  UnstakeRequestsSumCurrentStatusAsc = 'UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_ASC',
  UnstakeRequestsSumCurrentStatusDesc = 'UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_DESC',
  UnstakeRequestsSumDelegationIdAsc = 'UNSTAKE_REQUESTS_SUM_DELEGATION_ID_ASC',
  UnstakeRequestsSumDelegationIdDesc = 'UNSTAKE_REQUESTS_SUM_DELEGATION_ID_DESC',
  UnstakeRequestsSumDelegatorIdAsc = 'UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_ASC',
  UnstakeRequestsSumDelegatorIdDesc = 'UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_DESC',
  UnstakeRequestsSumIdAsc = 'UNSTAKE_REQUESTS_SUM_ID_ASC',
  UnstakeRequestsSumIdDesc = 'UNSTAKE_REQUESTS_SUM_ID_DESC',
  UnstakeRequestsSumOperatorIdAsc = 'UNSTAKE_REQUESTS_SUM_OPERATOR_ID_ASC',
  UnstakeRequestsSumOperatorIdDesc = 'UNSTAKE_REQUESTS_SUM_OPERATOR_ID_DESC',
  UnstakeRequestsSumRequestedRoundAsc = 'UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_ASC',
  UnstakeRequestsSumRequestedRoundDesc = 'UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_DESC',
  UnstakeRequestsSumUpdatedAtAsc = 'UNSTAKE_REQUESTS_SUM_UPDATED_AT_ASC',
  UnstakeRequestsSumUpdatedAtDesc = 'UNSTAKE_REQUESTS_SUM_UPDATED_AT_DESC',
  UnstakeRequestsVariancePopulationAssetIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC',
  UnstakeRequestsVariancePopulationAssetIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC',
  UnstakeRequestsVariancePopulationBlockRangeAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  UnstakeRequestsVariancePopulationBlockRangeDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  UnstakeRequestsVariancePopulationCreatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  UnstakeRequestsVariancePopulationCreatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  UnstakeRequestsVariancePopulationCurrentAmountAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC',
  UnstakeRequestsVariancePopulationCurrentAmountDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC',
  UnstakeRequestsVariancePopulationCurrentStatusAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC',
  UnstakeRequestsVariancePopulationCurrentStatusDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC',
  UnstakeRequestsVariancePopulationDelegationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_ASC',
  UnstakeRequestsVariancePopulationDelegationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_DESC',
  UnstakeRequestsVariancePopulationDelegatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  UnstakeRequestsVariancePopulationDelegatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  UnstakeRequestsVariancePopulationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_ASC',
  UnstakeRequestsVariancePopulationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_DESC',
  UnstakeRequestsVariancePopulationOperatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  UnstakeRequestsVariancePopulationOperatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  UnstakeRequestsVariancePopulationRequestedRoundAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC',
  UnstakeRequestsVariancePopulationRequestedRoundDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC',
  UnstakeRequestsVariancePopulationUpdatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC',
  UnstakeRequestsVariancePopulationUpdatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC',
  UnstakeRequestsVarianceSampleAssetIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  UnstakeRequestsVarianceSampleAssetIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  UnstakeRequestsVarianceSampleBlockRangeAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  UnstakeRequestsVarianceSampleBlockRangeDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  UnstakeRequestsVarianceSampleCreatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  UnstakeRequestsVarianceSampleCreatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  UnstakeRequestsVarianceSampleCurrentAmountAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsVarianceSampleCurrentAmountDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsVarianceSampleCurrentStatusAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC',
  UnstakeRequestsVarianceSampleCurrentStatusDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC',
  UnstakeRequestsVarianceSampleDelegationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_ASC',
  UnstakeRequestsVarianceSampleDelegationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_DESC',
  UnstakeRequestsVarianceSampleDelegatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  UnstakeRequestsVarianceSampleDelegatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  UnstakeRequestsVarianceSampleIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_ASC',
  UnstakeRequestsVarianceSampleIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_DESC',
  UnstakeRequestsVarianceSampleOperatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  UnstakeRequestsVarianceSampleOperatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  UnstakeRequestsVarianceSampleRequestedRoundAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC',
  UnstakeRequestsVarianceSampleRequestedRoundDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC',
  UnstakeRequestsVarianceSampleUpdatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC',
  UnstakeRequestsVarianceSampleUpdatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC'
}

export type Delegator = Node & {
  __typename?: 'Delegator';
  /** Reads a single `Account` that is related to this `Delegator`. */
  account?: Maybe<Account>;
  /** The account associated with this Delegator. */
  accountId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Delegation`. */
  delegations: DelegationsConnection;
  /** Reads and enables pagination through a set of `Delegation`. */
  delegationsByUnstakeRequestDelegatorIdAndDelegationId: DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Deposit`. */
  deposits: DepositsConnection;
  /** Reads and enables pagination through a set of `Deposit`. */
  depositsByWithdrawRequestDelegatorIdAndDepositId: DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyConnection;
  /** Delegator's account ID, serves as the unique identifier. */
  id: Scalars['String']['output'];
  /** The block number when the Delegator first interacted with the system. */
  joinedAt: Scalars['Int']['output'];
  /** The block number of the last update to the Delegator's information. */
  lastUpdateAt: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByDelegationDelegatorIdAndOperatorId: DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByUnstakeRequestDelegatorIdAndOperatorId: DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyConnection;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
  /** Reads and enables pagination through a set of `WithdrawRequest`. */
  withdrawRequests: WithdrawRequestsConnection;
};


export type DelegatorDelegationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegatorDepositsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Deposits_Distinct_Enum>>>;
  filter?: InputMaybe<DepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Deposits_Distinct_Enum>>>;
  filter?: InputMaybe<DepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegatorUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DelegatorWithdrawRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Withdraw_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<WithdrawRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WithdrawRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DelegatorAggregates = {
  __typename?: 'DelegatorAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<DelegatorAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<DelegatorDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<DelegatorMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<DelegatorMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<DelegatorStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<DelegatorStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<DelegatorSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<DelegatorVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<DelegatorVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `Delegator` object types. */
export type DelegatorAggregatesFilter = {
  /** Mean average aggregate over matching `Delegator` objects. */
  average?: InputMaybe<DelegatorAverageAggregateFilter>;
  /** Distinct count aggregate over matching `Delegator` objects. */
  distinctCount?: InputMaybe<DelegatorDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `Delegator` object to be included within the aggregate. */
  filter?: InputMaybe<DelegatorFilter>;
  /** Maximum aggregate over matching `Delegator` objects. */
  max?: InputMaybe<DelegatorMaxAggregateFilter>;
  /** Minimum aggregate over matching `Delegator` objects. */
  min?: InputMaybe<DelegatorMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `Delegator` objects. */
  stddevPopulation?: InputMaybe<DelegatorStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `Delegator` objects. */
  stddevSample?: InputMaybe<DelegatorStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `Delegator` objects. */
  sum?: InputMaybe<DelegatorSumAggregateFilter>;
  /** Population variance aggregate over matching `Delegator` objects. */
  variancePopulation?: InputMaybe<DelegatorVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `Delegator` objects. */
  varianceSample?: InputMaybe<DelegatorVarianceSampleAggregateFilter>;
};

export type DelegatorAverageAggregateFilter = {
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
};

export type DelegatorAverageAggregates = {
  __typename?: 'DelegatorAverageAggregates';
  /** Mean average of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Delegation` values, with data from `UnstakeRequest`. */
export type DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyConnection = {
  __typename?: 'DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegationAggregates>;
  /** A list of edges which contains the `Delegation`, info from the `UnstakeRequest`, and the cursor to aid in pagination. */
  edges: Array<DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegationAggregates>>;
  /** A list of `Delegation` objects. */
  nodes: Array<Maybe<Delegation>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegation` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegation` values, with data from `UnstakeRequest`. */
export type DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegationsGroupBy>;
  having?: InputMaybe<DelegationsHavingInput>;
};

/** A `Delegation` edge in the connection, with data from `UnstakeRequest`. */
export type DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyEdge = {
  __typename?: 'DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Delegation` at the end of the edge. */
  node?: Maybe<Delegation>;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


/** A `Delegation` edge in the connection, with data from `UnstakeRequest`. */
export type DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyEdgeUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Deposit` values, with data from `WithdrawRequest`. */
export type DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyConnection = {
  __typename?: 'DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DepositAggregates>;
  /** A list of edges which contains the `Deposit`, info from the `WithdrawRequest`, and the cursor to aid in pagination. */
  edges: Array<DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DepositAggregates>>;
  /** A list of `Deposit` objects. */
  nodes: Array<Maybe<Deposit>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Deposit` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Deposit` values, with data from `WithdrawRequest`. */
export type DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<DepositsGroupBy>;
  having?: InputMaybe<DepositsHavingInput>;
};

/** A `Deposit` edge in the connection, with data from `WithdrawRequest`. */
export type DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyEdge = {
  __typename?: 'DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Deposit` at the end of the edge. */
  node?: Maybe<Deposit>;
  /** Reads and enables pagination through a set of `WithdrawRequest`. */
  withdrawRequests: WithdrawRequestsConnection;
};


/** A `Deposit` edge in the connection, with data from `WithdrawRequest`. */
export type DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyEdgeWithdrawRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Withdraw_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<WithdrawRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WithdrawRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DelegatorDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  accountId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  joinedAt?: InputMaybe<BigIntFilter>;
  lastUpdateAt?: InputMaybe<BigIntFilter>;
};

export type DelegatorDistinctCountAggregates = {
  __typename?: 'DelegatorDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Delegator` object types. All fields are combined with a logical ‘and.’ */
export type DelegatorFilter = {
  /** Filter by the object’s `account` relation. */
  account?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<DelegatorFilter>>;
  /** Filter by the object’s `delegations` relation. */
  delegations?: InputMaybe<DelegatorToManyDelegationFilter>;
  /** Some related `delegations` exist. */
  delegationsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `deposits` relation. */
  deposits?: InputMaybe<DelegatorToManyDepositFilter>;
  /** Some related `deposits` exist. */
  depositsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `joinedAt` field. */
  joinedAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `lastUpdateAt` field. */
  lastUpdateAt?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<DelegatorFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<DelegatorFilter>>;
  /** Filter by the object’s `unstakeRequests` relation. */
  unstakeRequests?: InputMaybe<DelegatorToManyUnstakeRequestFilter>;
  /** Some related `unstakeRequests` exist. */
  unstakeRequestsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `withdrawRequests` relation. */
  withdrawRequests?: InputMaybe<DelegatorToManyWithdrawRequestFilter>;
  /** Some related `withdrawRequests` exist. */
  withdrawRequestsExist?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DelegatorMaxAggregateFilter = {
  joinedAt?: InputMaybe<IntFilter>;
  lastUpdateAt?: InputMaybe<IntFilter>;
};

export type DelegatorMaxAggregates = {
  __typename?: 'DelegatorMaxAggregates';
  /** Maximum of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['Int']['output']>;
};

export type DelegatorMinAggregateFilter = {
  joinedAt?: InputMaybe<IntFilter>;
  lastUpdateAt?: InputMaybe<IntFilter>;
};

export type DelegatorMinAggregates = {
  __typename?: 'DelegatorMinAggregates';
  /** Minimum of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of `Operator` values, with data from `Delegation`. */
export type DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyConnection = {
  __typename?: 'DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `Delegation`, and the cursor to aid in pagination. */
  edges: Array<DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `Delegation`. */
export type DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `Delegation`. */
export type DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyEdge = {
  __typename?: 'DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `Delegation`. */
  delegations: DelegationsConnection;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
};


/** A `Operator` edge in the connection, with data from `Delegation`. */
export type DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyEdgeDelegationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Operator` values, with data from `UnstakeRequest`. */
export type DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyConnection = {
  __typename?: 'DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `UnstakeRequest`, and the cursor to aid in pagination. */
  edges: Array<DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `UnstakeRequest`. */
export type DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `UnstakeRequest`. */
export type DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyEdge = {
  __typename?: 'DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


/** A `Operator` edge in the connection, with data from `UnstakeRequest`. */
export type DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyEdgeUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DelegatorStddevPopulationAggregateFilter = {
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
};

export type DelegatorStddevPopulationAggregates = {
  __typename?: 'DelegatorStddevPopulationAggregates';
  /** Population standard deviation of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegatorStddevSampleAggregateFilter = {
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
};

export type DelegatorStddevSampleAggregates = {
  __typename?: 'DelegatorStddevSampleAggregates';
  /** Sample standard deviation of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegatorSumAggregateFilter = {
  joinedAt?: InputMaybe<BigIntFilter>;
  lastUpdateAt?: InputMaybe<BigIntFilter>;
};

export type DelegatorSumAggregates = {
  __typename?: 'DelegatorSumAggregates';
  /** Sum of joinedAt across the matching connection */
  joinedAt: Scalars['BigInt']['output'];
  /** Sum of lastUpdateAt across the matching connection */
  lastUpdateAt: Scalars['BigInt']['output'];
};

/** A filter to be used against many `Delegation` object types. All fields are combined with a logical ‘and.’ */
export type DelegatorToManyDelegationFilter = {
  /** Aggregates across related `Delegation` match the filter criteria. */
  aggregates?: InputMaybe<DelegationAggregatesFilter>;
  /** Every related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DelegationFilter>;
  /** No related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DelegationFilter>;
  /** Some related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DelegationFilter>;
};

/** A filter to be used against many `Deposit` object types. All fields are combined with a logical ‘and.’ */
export type DelegatorToManyDepositFilter = {
  /** Aggregates across related `Deposit` match the filter criteria. */
  aggregates?: InputMaybe<DepositAggregatesFilter>;
  /** Every related `Deposit` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DepositFilter>;
  /** No related `Deposit` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DepositFilter>;
  /** Some related `Deposit` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DepositFilter>;
};

/** A filter to be used against many `UnstakeRequest` object types. All fields are combined with a logical ‘and.’ */
export type DelegatorToManyUnstakeRequestFilter = {
  /** Aggregates across related `UnstakeRequest` match the filter criteria. */
  aggregates?: InputMaybe<UnstakeRequestAggregatesFilter>;
  /** Every related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<UnstakeRequestFilter>;
  /** No related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<UnstakeRequestFilter>;
  /** Some related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<UnstakeRequestFilter>;
};

/** A filter to be used against many `WithdrawRequest` object types. All fields are combined with a logical ‘and.’ */
export type DelegatorToManyWithdrawRequestFilter = {
  /** Aggregates across related `WithdrawRequest` match the filter criteria. */
  aggregates?: InputMaybe<WithdrawRequestAggregatesFilter>;
  /** Every related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<WithdrawRequestFilter>;
  /** No related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<WithdrawRequestFilter>;
  /** Some related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<WithdrawRequestFilter>;
};

export type DelegatorVariancePopulationAggregateFilter = {
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
};

export type DelegatorVariancePopulationAggregates = {
  __typename?: 'DelegatorVariancePopulationAggregates';
  /** Population variance of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type DelegatorVarianceSampleAggregateFilter = {
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
};

export type DelegatorVarianceSampleAggregates = {
  __typename?: 'DelegatorVarianceSampleAggregates';
  /** Sample variance of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Delegator` values. */
export type DelegatorsConnection = {
  __typename?: 'DelegatorsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegatorAggregates>;
  /** A list of edges which contains the `Delegator` and cursor to aid in pagination. */
  edges: Array<DelegatorsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegatorAggregates>>;
  /** A list of `Delegator` objects. */
  nodes: Array<Maybe<Delegator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegator` values. */
export type DelegatorsConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegatorsGroupBy>;
  having?: InputMaybe<DelegatorsHavingInput>;
};

/** A `Delegator` edge in the connection. */
export type DelegatorsEdge = {
  __typename?: 'DelegatorsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Delegator` at the end of the edge. */
  node?: Maybe<Delegator>;
};

/** Grouping methods for `Delegator` for usage during aggregation. */
export enum DelegatorsGroupBy {
  AccountId = 'ACCOUNT_ID',
  Id = 'ID',
  JoinedAt = 'JOINED_AT',
  LastUpdateAt = 'LAST_UPDATE_AT'
}

export type DelegatorsHavingAverageInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

export type DelegatorsHavingDistinctCountInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Delegator` aggregates. */
export type DelegatorsHavingInput = {
  AND?: InputMaybe<Array<DelegatorsHavingInput>>;
  OR?: InputMaybe<Array<DelegatorsHavingInput>>;
  average?: InputMaybe<DelegatorsHavingAverageInput>;
  distinctCount?: InputMaybe<DelegatorsHavingDistinctCountInput>;
  max?: InputMaybe<DelegatorsHavingMaxInput>;
  min?: InputMaybe<DelegatorsHavingMinInput>;
  stddevPopulation?: InputMaybe<DelegatorsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<DelegatorsHavingStddevSampleInput>;
  sum?: InputMaybe<DelegatorsHavingSumInput>;
  variancePopulation?: InputMaybe<DelegatorsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<DelegatorsHavingVarianceSampleInput>;
};

export type DelegatorsHavingMaxInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

export type DelegatorsHavingMinInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

export type DelegatorsHavingStddevPopulationInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

export type DelegatorsHavingStddevSampleInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

export type DelegatorsHavingSumInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

export type DelegatorsHavingVariancePopulationInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

export type DelegatorsHavingVarianceSampleInput = {
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `Delegator`. */
export enum DelegatorsOrderBy {
  AccountByAccountIdCreatedAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC',
  AccountByAccountIdCreatedAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC',
  AccountByAccountIdIdAsc = 'ACCOUNT_BY_ACCOUNT_ID__ID_ASC',
  AccountByAccountIdIdDesc = 'ACCOUNT_BY_ACCOUNT_ID__ID_DESC',
  AccountByAccountIdLastUpdateAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC',
  AccountByAccountIdLastUpdateAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC',
  AccountByAccountIdTotalPointsAsc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC',
  AccountByAccountIdTotalPointsDesc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC',
  AccountIdAsc = 'ACCOUNT_ID_ASC',
  AccountIdDesc = 'ACCOUNT_ID_DESC',
  DelegationsAverageAssetIdAsc = 'DELEGATIONS_AVERAGE_ASSET_ID_ASC',
  DelegationsAverageAssetIdDesc = 'DELEGATIONS_AVERAGE_ASSET_ID_DESC',
  DelegationsAverageBlockRangeAsc = 'DELEGATIONS_AVERAGE_BLOCK_RANGE_ASC',
  DelegationsAverageBlockRangeDesc = 'DELEGATIONS_AVERAGE_BLOCK_RANGE_DESC',
  DelegationsAverageDelegatorIdAsc = 'DELEGATIONS_AVERAGE_DELEGATOR_ID_ASC',
  DelegationsAverageDelegatorIdDesc = 'DELEGATIONS_AVERAGE_DELEGATOR_ID_DESC',
  DelegationsAverageHasActiveUnstakeRequestAsc = 'DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsAverageHasActiveUnstakeRequestDesc = 'DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsAverageIdAsc = 'DELEGATIONS_AVERAGE_ID_ASC',
  DelegationsAverageIdDesc = 'DELEGATIONS_AVERAGE_ID_DESC',
  DelegationsAverageOperatorIdAsc = 'DELEGATIONS_AVERAGE_OPERATOR_ID_ASC',
  DelegationsAverageOperatorIdDesc = 'DELEGATIONS_AVERAGE_OPERATOR_ID_DESC',
  DelegationsAverageTotalAmountAsc = 'DELEGATIONS_AVERAGE_TOTAL_AMOUNT_ASC',
  DelegationsAverageTotalAmountDesc = 'DELEGATIONS_AVERAGE_TOTAL_AMOUNT_DESC',
  DelegationsByDelegatorIdCountAsc = 'DELEGATIONS_BY_DELEGATOR_ID__COUNT_ASC',
  DelegationsByDelegatorIdCountDesc = 'DELEGATIONS_BY_DELEGATOR_ID__COUNT_DESC',
  DelegationsCountAsc = 'DELEGATIONS_COUNT_ASC',
  DelegationsCountDesc = 'DELEGATIONS_COUNT_DESC',
  DelegationsDistinctCountAssetIdAsc = 'DELEGATIONS_DISTINCT_COUNT_ASSET_ID_ASC',
  DelegationsDistinctCountAssetIdDesc = 'DELEGATIONS_DISTINCT_COUNT_ASSET_ID_DESC',
  DelegationsDistinctCountBlockRangeAsc = 'DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  DelegationsDistinctCountBlockRangeDesc = 'DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  DelegationsDistinctCountDelegatorIdAsc = 'DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  DelegationsDistinctCountDelegatorIdDesc = 'DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  DelegationsDistinctCountHasActiveUnstakeRequestAsc = 'DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsDistinctCountHasActiveUnstakeRequestDesc = 'DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsDistinctCountIdAsc = 'DELEGATIONS_DISTINCT_COUNT_ID_ASC',
  DelegationsDistinctCountIdDesc = 'DELEGATIONS_DISTINCT_COUNT_ID_DESC',
  DelegationsDistinctCountOperatorIdAsc = 'DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  DelegationsDistinctCountOperatorIdDesc = 'DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  DelegationsDistinctCountTotalAmountAsc = 'DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_ASC',
  DelegationsDistinctCountTotalAmountDesc = 'DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_DESC',
  DelegationsMaxAssetIdAsc = 'DELEGATIONS_MAX_ASSET_ID_ASC',
  DelegationsMaxAssetIdDesc = 'DELEGATIONS_MAX_ASSET_ID_DESC',
  DelegationsMaxBlockRangeAsc = 'DELEGATIONS_MAX_BLOCK_RANGE_ASC',
  DelegationsMaxBlockRangeDesc = 'DELEGATIONS_MAX_BLOCK_RANGE_DESC',
  DelegationsMaxDelegatorIdAsc = 'DELEGATIONS_MAX_DELEGATOR_ID_ASC',
  DelegationsMaxDelegatorIdDesc = 'DELEGATIONS_MAX_DELEGATOR_ID_DESC',
  DelegationsMaxHasActiveUnstakeRequestAsc = 'DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsMaxHasActiveUnstakeRequestDesc = 'DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsMaxIdAsc = 'DELEGATIONS_MAX_ID_ASC',
  DelegationsMaxIdDesc = 'DELEGATIONS_MAX_ID_DESC',
  DelegationsMaxOperatorIdAsc = 'DELEGATIONS_MAX_OPERATOR_ID_ASC',
  DelegationsMaxOperatorIdDesc = 'DELEGATIONS_MAX_OPERATOR_ID_DESC',
  DelegationsMaxTotalAmountAsc = 'DELEGATIONS_MAX_TOTAL_AMOUNT_ASC',
  DelegationsMaxTotalAmountDesc = 'DELEGATIONS_MAX_TOTAL_AMOUNT_DESC',
  DelegationsMinAssetIdAsc = 'DELEGATIONS_MIN_ASSET_ID_ASC',
  DelegationsMinAssetIdDesc = 'DELEGATIONS_MIN_ASSET_ID_DESC',
  DelegationsMinBlockRangeAsc = 'DELEGATIONS_MIN_BLOCK_RANGE_ASC',
  DelegationsMinBlockRangeDesc = 'DELEGATIONS_MIN_BLOCK_RANGE_DESC',
  DelegationsMinDelegatorIdAsc = 'DELEGATIONS_MIN_DELEGATOR_ID_ASC',
  DelegationsMinDelegatorIdDesc = 'DELEGATIONS_MIN_DELEGATOR_ID_DESC',
  DelegationsMinHasActiveUnstakeRequestAsc = 'DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsMinHasActiveUnstakeRequestDesc = 'DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsMinIdAsc = 'DELEGATIONS_MIN_ID_ASC',
  DelegationsMinIdDesc = 'DELEGATIONS_MIN_ID_DESC',
  DelegationsMinOperatorIdAsc = 'DELEGATIONS_MIN_OPERATOR_ID_ASC',
  DelegationsMinOperatorIdDesc = 'DELEGATIONS_MIN_OPERATOR_ID_DESC',
  DelegationsMinTotalAmountAsc = 'DELEGATIONS_MIN_TOTAL_AMOUNT_ASC',
  DelegationsMinTotalAmountDesc = 'DELEGATIONS_MIN_TOTAL_AMOUNT_DESC',
  DelegationsStddevPopulationAssetIdAsc = 'DELEGATIONS_STDDEV_POPULATION_ASSET_ID_ASC',
  DelegationsStddevPopulationAssetIdDesc = 'DELEGATIONS_STDDEV_POPULATION_ASSET_ID_DESC',
  DelegationsStddevPopulationBlockRangeAsc = 'DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  DelegationsStddevPopulationBlockRangeDesc = 'DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  DelegationsStddevPopulationDelegatorIdAsc = 'DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  DelegationsStddevPopulationDelegatorIdDesc = 'DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  DelegationsStddevPopulationHasActiveUnstakeRequestAsc = 'DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsStddevPopulationHasActiveUnstakeRequestDesc = 'DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsStddevPopulationIdAsc = 'DELEGATIONS_STDDEV_POPULATION_ID_ASC',
  DelegationsStddevPopulationIdDesc = 'DELEGATIONS_STDDEV_POPULATION_ID_DESC',
  DelegationsStddevPopulationOperatorIdAsc = 'DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  DelegationsStddevPopulationOperatorIdDesc = 'DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  DelegationsStddevPopulationTotalAmountAsc = 'DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_ASC',
  DelegationsStddevPopulationTotalAmountDesc = 'DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_DESC',
  DelegationsStddevSampleAssetIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_ASC',
  DelegationsStddevSampleAssetIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_DESC',
  DelegationsStddevSampleBlockRangeAsc = 'DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  DelegationsStddevSampleBlockRangeDesc = 'DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  DelegationsStddevSampleDelegatorIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  DelegationsStddevSampleDelegatorIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  DelegationsStddevSampleHasActiveUnstakeRequestAsc = 'DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsStddevSampleHasActiveUnstakeRequestDesc = 'DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsStddevSampleIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_ID_ASC',
  DelegationsStddevSampleIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_ID_DESC',
  DelegationsStddevSampleOperatorIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  DelegationsStddevSampleOperatorIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  DelegationsStddevSampleTotalAmountAsc = 'DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_ASC',
  DelegationsStddevSampleTotalAmountDesc = 'DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_DESC',
  DelegationsSumAssetIdAsc = 'DELEGATIONS_SUM_ASSET_ID_ASC',
  DelegationsSumAssetIdDesc = 'DELEGATIONS_SUM_ASSET_ID_DESC',
  DelegationsSumBlockRangeAsc = 'DELEGATIONS_SUM_BLOCK_RANGE_ASC',
  DelegationsSumBlockRangeDesc = 'DELEGATIONS_SUM_BLOCK_RANGE_DESC',
  DelegationsSumDelegatorIdAsc = 'DELEGATIONS_SUM_DELEGATOR_ID_ASC',
  DelegationsSumDelegatorIdDesc = 'DELEGATIONS_SUM_DELEGATOR_ID_DESC',
  DelegationsSumHasActiveUnstakeRequestAsc = 'DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsSumHasActiveUnstakeRequestDesc = 'DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsSumIdAsc = 'DELEGATIONS_SUM_ID_ASC',
  DelegationsSumIdDesc = 'DELEGATIONS_SUM_ID_DESC',
  DelegationsSumOperatorIdAsc = 'DELEGATIONS_SUM_OPERATOR_ID_ASC',
  DelegationsSumOperatorIdDesc = 'DELEGATIONS_SUM_OPERATOR_ID_DESC',
  DelegationsSumTotalAmountAsc = 'DELEGATIONS_SUM_TOTAL_AMOUNT_ASC',
  DelegationsSumTotalAmountDesc = 'DELEGATIONS_SUM_TOTAL_AMOUNT_DESC',
  DelegationsVariancePopulationAssetIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_ASC',
  DelegationsVariancePopulationAssetIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_DESC',
  DelegationsVariancePopulationBlockRangeAsc = 'DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  DelegationsVariancePopulationBlockRangeDesc = 'DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  DelegationsVariancePopulationDelegatorIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  DelegationsVariancePopulationDelegatorIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  DelegationsVariancePopulationHasActiveUnstakeRequestAsc = 'DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsVariancePopulationHasActiveUnstakeRequestDesc = 'DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsVariancePopulationIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_ID_ASC',
  DelegationsVariancePopulationIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_ID_DESC',
  DelegationsVariancePopulationOperatorIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  DelegationsVariancePopulationOperatorIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  DelegationsVariancePopulationTotalAmountAsc = 'DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_ASC',
  DelegationsVariancePopulationTotalAmountDesc = 'DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_DESC',
  DelegationsVarianceSampleAssetIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  DelegationsVarianceSampleAssetIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  DelegationsVarianceSampleBlockRangeAsc = 'DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  DelegationsVarianceSampleBlockRangeDesc = 'DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  DelegationsVarianceSampleDelegatorIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  DelegationsVarianceSampleDelegatorIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  DelegationsVarianceSampleHasActiveUnstakeRequestAsc = 'DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsVarianceSampleHasActiveUnstakeRequestDesc = 'DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsVarianceSampleIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_ID_ASC',
  DelegationsVarianceSampleIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_ID_DESC',
  DelegationsVarianceSampleOperatorIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  DelegationsVarianceSampleOperatorIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  DelegationsVarianceSampleTotalAmountAsc = 'DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_ASC',
  DelegationsVarianceSampleTotalAmountDesc = 'DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_DESC',
  DepositsAverageAssetIdAsc = 'DEPOSITS_AVERAGE_ASSET_ID_ASC',
  DepositsAverageAssetIdDesc = 'DEPOSITS_AVERAGE_ASSET_ID_DESC',
  DepositsAverageBlockRangeAsc = 'DEPOSITS_AVERAGE_BLOCK_RANGE_ASC',
  DepositsAverageBlockRangeDesc = 'DEPOSITS_AVERAGE_BLOCK_RANGE_DESC',
  DepositsAverageDelegatorIdAsc = 'DEPOSITS_AVERAGE_DELEGATOR_ID_ASC',
  DepositsAverageDelegatorIdDesc = 'DEPOSITS_AVERAGE_DELEGATOR_ID_DESC',
  DepositsAverageHasActiveWithdrawRequestAsc = 'DEPOSITS_AVERAGE_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsAverageHasActiveWithdrawRequestDesc = 'DEPOSITS_AVERAGE_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsAverageIdAsc = 'DEPOSITS_AVERAGE_ID_ASC',
  DepositsAverageIdDesc = 'DEPOSITS_AVERAGE_ID_DESC',
  DepositsAverageTotalAmountAsc = 'DEPOSITS_AVERAGE_TOTAL_AMOUNT_ASC',
  DepositsAverageTotalAmountDesc = 'DEPOSITS_AVERAGE_TOTAL_AMOUNT_DESC',
  DepositsByDelegatorIdCountAsc = 'DEPOSITS_BY_DELEGATOR_ID__COUNT_ASC',
  DepositsByDelegatorIdCountDesc = 'DEPOSITS_BY_DELEGATOR_ID__COUNT_DESC',
  DepositsCountAsc = 'DEPOSITS_COUNT_ASC',
  DepositsCountDesc = 'DEPOSITS_COUNT_DESC',
  DepositsDistinctCountAssetIdAsc = 'DEPOSITS_DISTINCT_COUNT_ASSET_ID_ASC',
  DepositsDistinctCountAssetIdDesc = 'DEPOSITS_DISTINCT_COUNT_ASSET_ID_DESC',
  DepositsDistinctCountBlockRangeAsc = 'DEPOSITS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  DepositsDistinctCountBlockRangeDesc = 'DEPOSITS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  DepositsDistinctCountDelegatorIdAsc = 'DEPOSITS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  DepositsDistinctCountDelegatorIdDesc = 'DEPOSITS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  DepositsDistinctCountHasActiveWithdrawRequestAsc = 'DEPOSITS_DISTINCT_COUNT_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsDistinctCountHasActiveWithdrawRequestDesc = 'DEPOSITS_DISTINCT_COUNT_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsDistinctCountIdAsc = 'DEPOSITS_DISTINCT_COUNT_ID_ASC',
  DepositsDistinctCountIdDesc = 'DEPOSITS_DISTINCT_COUNT_ID_DESC',
  DepositsDistinctCountTotalAmountAsc = 'DEPOSITS_DISTINCT_COUNT_TOTAL_AMOUNT_ASC',
  DepositsDistinctCountTotalAmountDesc = 'DEPOSITS_DISTINCT_COUNT_TOTAL_AMOUNT_DESC',
  DepositsMaxAssetIdAsc = 'DEPOSITS_MAX_ASSET_ID_ASC',
  DepositsMaxAssetIdDesc = 'DEPOSITS_MAX_ASSET_ID_DESC',
  DepositsMaxBlockRangeAsc = 'DEPOSITS_MAX_BLOCK_RANGE_ASC',
  DepositsMaxBlockRangeDesc = 'DEPOSITS_MAX_BLOCK_RANGE_DESC',
  DepositsMaxDelegatorIdAsc = 'DEPOSITS_MAX_DELEGATOR_ID_ASC',
  DepositsMaxDelegatorIdDesc = 'DEPOSITS_MAX_DELEGATOR_ID_DESC',
  DepositsMaxHasActiveWithdrawRequestAsc = 'DEPOSITS_MAX_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsMaxHasActiveWithdrawRequestDesc = 'DEPOSITS_MAX_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsMaxIdAsc = 'DEPOSITS_MAX_ID_ASC',
  DepositsMaxIdDesc = 'DEPOSITS_MAX_ID_DESC',
  DepositsMaxTotalAmountAsc = 'DEPOSITS_MAX_TOTAL_AMOUNT_ASC',
  DepositsMaxTotalAmountDesc = 'DEPOSITS_MAX_TOTAL_AMOUNT_DESC',
  DepositsMinAssetIdAsc = 'DEPOSITS_MIN_ASSET_ID_ASC',
  DepositsMinAssetIdDesc = 'DEPOSITS_MIN_ASSET_ID_DESC',
  DepositsMinBlockRangeAsc = 'DEPOSITS_MIN_BLOCK_RANGE_ASC',
  DepositsMinBlockRangeDesc = 'DEPOSITS_MIN_BLOCK_RANGE_DESC',
  DepositsMinDelegatorIdAsc = 'DEPOSITS_MIN_DELEGATOR_ID_ASC',
  DepositsMinDelegatorIdDesc = 'DEPOSITS_MIN_DELEGATOR_ID_DESC',
  DepositsMinHasActiveWithdrawRequestAsc = 'DEPOSITS_MIN_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsMinHasActiveWithdrawRequestDesc = 'DEPOSITS_MIN_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsMinIdAsc = 'DEPOSITS_MIN_ID_ASC',
  DepositsMinIdDesc = 'DEPOSITS_MIN_ID_DESC',
  DepositsMinTotalAmountAsc = 'DEPOSITS_MIN_TOTAL_AMOUNT_ASC',
  DepositsMinTotalAmountDesc = 'DEPOSITS_MIN_TOTAL_AMOUNT_DESC',
  DepositsStddevPopulationAssetIdAsc = 'DEPOSITS_STDDEV_POPULATION_ASSET_ID_ASC',
  DepositsStddevPopulationAssetIdDesc = 'DEPOSITS_STDDEV_POPULATION_ASSET_ID_DESC',
  DepositsStddevPopulationBlockRangeAsc = 'DEPOSITS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  DepositsStddevPopulationBlockRangeDesc = 'DEPOSITS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  DepositsStddevPopulationDelegatorIdAsc = 'DEPOSITS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  DepositsStddevPopulationDelegatorIdDesc = 'DEPOSITS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  DepositsStddevPopulationHasActiveWithdrawRequestAsc = 'DEPOSITS_STDDEV_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsStddevPopulationHasActiveWithdrawRequestDesc = 'DEPOSITS_STDDEV_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsStddevPopulationIdAsc = 'DEPOSITS_STDDEV_POPULATION_ID_ASC',
  DepositsStddevPopulationIdDesc = 'DEPOSITS_STDDEV_POPULATION_ID_DESC',
  DepositsStddevPopulationTotalAmountAsc = 'DEPOSITS_STDDEV_POPULATION_TOTAL_AMOUNT_ASC',
  DepositsStddevPopulationTotalAmountDesc = 'DEPOSITS_STDDEV_POPULATION_TOTAL_AMOUNT_DESC',
  DepositsStddevSampleAssetIdAsc = 'DEPOSITS_STDDEV_SAMPLE_ASSET_ID_ASC',
  DepositsStddevSampleAssetIdDesc = 'DEPOSITS_STDDEV_SAMPLE_ASSET_ID_DESC',
  DepositsStddevSampleBlockRangeAsc = 'DEPOSITS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  DepositsStddevSampleBlockRangeDesc = 'DEPOSITS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  DepositsStddevSampleDelegatorIdAsc = 'DEPOSITS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  DepositsStddevSampleDelegatorIdDesc = 'DEPOSITS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  DepositsStddevSampleHasActiveWithdrawRequestAsc = 'DEPOSITS_STDDEV_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsStddevSampleHasActiveWithdrawRequestDesc = 'DEPOSITS_STDDEV_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsStddevSampleIdAsc = 'DEPOSITS_STDDEV_SAMPLE_ID_ASC',
  DepositsStddevSampleIdDesc = 'DEPOSITS_STDDEV_SAMPLE_ID_DESC',
  DepositsStddevSampleTotalAmountAsc = 'DEPOSITS_STDDEV_SAMPLE_TOTAL_AMOUNT_ASC',
  DepositsStddevSampleTotalAmountDesc = 'DEPOSITS_STDDEV_SAMPLE_TOTAL_AMOUNT_DESC',
  DepositsSumAssetIdAsc = 'DEPOSITS_SUM_ASSET_ID_ASC',
  DepositsSumAssetIdDesc = 'DEPOSITS_SUM_ASSET_ID_DESC',
  DepositsSumBlockRangeAsc = 'DEPOSITS_SUM_BLOCK_RANGE_ASC',
  DepositsSumBlockRangeDesc = 'DEPOSITS_SUM_BLOCK_RANGE_DESC',
  DepositsSumDelegatorIdAsc = 'DEPOSITS_SUM_DELEGATOR_ID_ASC',
  DepositsSumDelegatorIdDesc = 'DEPOSITS_SUM_DELEGATOR_ID_DESC',
  DepositsSumHasActiveWithdrawRequestAsc = 'DEPOSITS_SUM_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsSumHasActiveWithdrawRequestDesc = 'DEPOSITS_SUM_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsSumIdAsc = 'DEPOSITS_SUM_ID_ASC',
  DepositsSumIdDesc = 'DEPOSITS_SUM_ID_DESC',
  DepositsSumTotalAmountAsc = 'DEPOSITS_SUM_TOTAL_AMOUNT_ASC',
  DepositsSumTotalAmountDesc = 'DEPOSITS_SUM_TOTAL_AMOUNT_DESC',
  DepositsVariancePopulationAssetIdAsc = 'DEPOSITS_VARIANCE_POPULATION_ASSET_ID_ASC',
  DepositsVariancePopulationAssetIdDesc = 'DEPOSITS_VARIANCE_POPULATION_ASSET_ID_DESC',
  DepositsVariancePopulationBlockRangeAsc = 'DEPOSITS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  DepositsVariancePopulationBlockRangeDesc = 'DEPOSITS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  DepositsVariancePopulationDelegatorIdAsc = 'DEPOSITS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  DepositsVariancePopulationDelegatorIdDesc = 'DEPOSITS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  DepositsVariancePopulationHasActiveWithdrawRequestAsc = 'DEPOSITS_VARIANCE_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsVariancePopulationHasActiveWithdrawRequestDesc = 'DEPOSITS_VARIANCE_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsVariancePopulationIdAsc = 'DEPOSITS_VARIANCE_POPULATION_ID_ASC',
  DepositsVariancePopulationIdDesc = 'DEPOSITS_VARIANCE_POPULATION_ID_DESC',
  DepositsVariancePopulationTotalAmountAsc = 'DEPOSITS_VARIANCE_POPULATION_TOTAL_AMOUNT_ASC',
  DepositsVariancePopulationTotalAmountDesc = 'DEPOSITS_VARIANCE_POPULATION_TOTAL_AMOUNT_DESC',
  DepositsVarianceSampleAssetIdAsc = 'DEPOSITS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  DepositsVarianceSampleAssetIdDesc = 'DEPOSITS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  DepositsVarianceSampleBlockRangeAsc = 'DEPOSITS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  DepositsVarianceSampleBlockRangeDesc = 'DEPOSITS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  DepositsVarianceSampleDelegatorIdAsc = 'DEPOSITS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  DepositsVarianceSampleDelegatorIdDesc = 'DEPOSITS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  DepositsVarianceSampleHasActiveWithdrawRequestAsc = 'DEPOSITS_VARIANCE_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositsVarianceSampleHasActiveWithdrawRequestDesc = 'DEPOSITS_VARIANCE_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositsVarianceSampleIdAsc = 'DEPOSITS_VARIANCE_SAMPLE_ID_ASC',
  DepositsVarianceSampleIdDesc = 'DEPOSITS_VARIANCE_SAMPLE_ID_DESC',
  DepositsVarianceSampleTotalAmountAsc = 'DEPOSITS_VARIANCE_SAMPLE_TOTAL_AMOUNT_ASC',
  DepositsVarianceSampleTotalAmountDesc = 'DEPOSITS_VARIANCE_SAMPLE_TOTAL_AMOUNT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  JoinedAtAsc = 'JOINED_AT_ASC',
  JoinedAtDesc = 'JOINED_AT_DESC',
  LastUpdateAtAsc = 'LAST_UPDATE_AT_ASC',
  LastUpdateAtDesc = 'LAST_UPDATE_AT_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  UnstakeRequestsAverageAssetIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_ASC',
  UnstakeRequestsAverageAssetIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_DESC',
  UnstakeRequestsAverageBlockRangeAsc = 'UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC',
  UnstakeRequestsAverageBlockRangeDesc = 'UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC',
  UnstakeRequestsAverageCreatedAtAsc = 'UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_ASC',
  UnstakeRequestsAverageCreatedAtDesc = 'UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_DESC',
  UnstakeRequestsAverageCurrentAmountAsc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsAverageCurrentAmountDesc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsAverageCurrentStatusAsc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_ASC',
  UnstakeRequestsAverageCurrentStatusDesc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_DESC',
  UnstakeRequestsAverageDelegationIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_ASC',
  UnstakeRequestsAverageDelegationIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_DESC',
  UnstakeRequestsAverageDelegatorIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_ASC',
  UnstakeRequestsAverageDelegatorIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_DESC',
  UnstakeRequestsAverageIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_ID_ASC',
  UnstakeRequestsAverageIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_ID_DESC',
  UnstakeRequestsAverageOperatorIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_ASC',
  UnstakeRequestsAverageOperatorIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_DESC',
  UnstakeRequestsAverageRequestedRoundAsc = 'UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC',
  UnstakeRequestsAverageRequestedRoundDesc = 'UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC',
  UnstakeRequestsAverageUpdatedAtAsc = 'UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_ASC',
  UnstakeRequestsAverageUpdatedAtDesc = 'UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_DESC',
  UnstakeRequestsByDelegatorIdCountAsc = 'UNSTAKE_REQUESTS_BY_DELEGATOR_ID__COUNT_ASC',
  UnstakeRequestsByDelegatorIdCountDesc = 'UNSTAKE_REQUESTS_BY_DELEGATOR_ID__COUNT_DESC',
  UnstakeRequestsCountAsc = 'UNSTAKE_REQUESTS_COUNT_ASC',
  UnstakeRequestsCountDesc = 'UNSTAKE_REQUESTS_COUNT_DESC',
  UnstakeRequestsDistinctCountAssetIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC',
  UnstakeRequestsDistinctCountAssetIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC',
  UnstakeRequestsDistinctCountBlockRangeAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  UnstakeRequestsDistinctCountBlockRangeDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  UnstakeRequestsDistinctCountCreatedAtAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC',
  UnstakeRequestsDistinctCountCreatedAtDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC',
  UnstakeRequestsDistinctCountCurrentAmountAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC',
  UnstakeRequestsDistinctCountCurrentAmountDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC',
  UnstakeRequestsDistinctCountCurrentStatusAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC',
  UnstakeRequestsDistinctCountCurrentStatusDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC',
  UnstakeRequestsDistinctCountDelegationIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_ASC',
  UnstakeRequestsDistinctCountDelegationIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_DESC',
  UnstakeRequestsDistinctCountDelegatorIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  UnstakeRequestsDistinctCountDelegatorIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  UnstakeRequestsDistinctCountIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_ASC',
  UnstakeRequestsDistinctCountIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_DESC',
  UnstakeRequestsDistinctCountOperatorIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  UnstakeRequestsDistinctCountOperatorIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  UnstakeRequestsDistinctCountRequestedRoundAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC',
  UnstakeRequestsDistinctCountRequestedRoundDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC',
  UnstakeRequestsDistinctCountUpdatedAtAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC',
  UnstakeRequestsDistinctCountUpdatedAtDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC',
  UnstakeRequestsMaxAssetIdAsc = 'UNSTAKE_REQUESTS_MAX_ASSET_ID_ASC',
  UnstakeRequestsMaxAssetIdDesc = 'UNSTAKE_REQUESTS_MAX_ASSET_ID_DESC',
  UnstakeRequestsMaxBlockRangeAsc = 'UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_ASC',
  UnstakeRequestsMaxBlockRangeDesc = 'UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_DESC',
  UnstakeRequestsMaxCreatedAtAsc = 'UNSTAKE_REQUESTS_MAX_CREATED_AT_ASC',
  UnstakeRequestsMaxCreatedAtDesc = 'UNSTAKE_REQUESTS_MAX_CREATED_AT_DESC',
  UnstakeRequestsMaxCurrentAmountAsc = 'UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_ASC',
  UnstakeRequestsMaxCurrentAmountDesc = 'UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_DESC',
  UnstakeRequestsMaxCurrentStatusAsc = 'UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_ASC',
  UnstakeRequestsMaxCurrentStatusDesc = 'UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_DESC',
  UnstakeRequestsMaxDelegationIdAsc = 'UNSTAKE_REQUESTS_MAX_DELEGATION_ID_ASC',
  UnstakeRequestsMaxDelegationIdDesc = 'UNSTAKE_REQUESTS_MAX_DELEGATION_ID_DESC',
  UnstakeRequestsMaxDelegatorIdAsc = 'UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_ASC',
  UnstakeRequestsMaxDelegatorIdDesc = 'UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_DESC',
  UnstakeRequestsMaxIdAsc = 'UNSTAKE_REQUESTS_MAX_ID_ASC',
  UnstakeRequestsMaxIdDesc = 'UNSTAKE_REQUESTS_MAX_ID_DESC',
  UnstakeRequestsMaxOperatorIdAsc = 'UNSTAKE_REQUESTS_MAX_OPERATOR_ID_ASC',
  UnstakeRequestsMaxOperatorIdDesc = 'UNSTAKE_REQUESTS_MAX_OPERATOR_ID_DESC',
  UnstakeRequestsMaxRequestedRoundAsc = 'UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_ASC',
  UnstakeRequestsMaxRequestedRoundDesc = 'UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_DESC',
  UnstakeRequestsMaxUpdatedAtAsc = 'UNSTAKE_REQUESTS_MAX_UPDATED_AT_ASC',
  UnstakeRequestsMaxUpdatedAtDesc = 'UNSTAKE_REQUESTS_MAX_UPDATED_AT_DESC',
  UnstakeRequestsMinAssetIdAsc = 'UNSTAKE_REQUESTS_MIN_ASSET_ID_ASC',
  UnstakeRequestsMinAssetIdDesc = 'UNSTAKE_REQUESTS_MIN_ASSET_ID_DESC',
  UnstakeRequestsMinBlockRangeAsc = 'UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_ASC',
  UnstakeRequestsMinBlockRangeDesc = 'UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_DESC',
  UnstakeRequestsMinCreatedAtAsc = 'UNSTAKE_REQUESTS_MIN_CREATED_AT_ASC',
  UnstakeRequestsMinCreatedAtDesc = 'UNSTAKE_REQUESTS_MIN_CREATED_AT_DESC',
  UnstakeRequestsMinCurrentAmountAsc = 'UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_ASC',
  UnstakeRequestsMinCurrentAmountDesc = 'UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_DESC',
  UnstakeRequestsMinCurrentStatusAsc = 'UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_ASC',
  UnstakeRequestsMinCurrentStatusDesc = 'UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_DESC',
  UnstakeRequestsMinDelegationIdAsc = 'UNSTAKE_REQUESTS_MIN_DELEGATION_ID_ASC',
  UnstakeRequestsMinDelegationIdDesc = 'UNSTAKE_REQUESTS_MIN_DELEGATION_ID_DESC',
  UnstakeRequestsMinDelegatorIdAsc = 'UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_ASC',
  UnstakeRequestsMinDelegatorIdDesc = 'UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_DESC',
  UnstakeRequestsMinIdAsc = 'UNSTAKE_REQUESTS_MIN_ID_ASC',
  UnstakeRequestsMinIdDesc = 'UNSTAKE_REQUESTS_MIN_ID_DESC',
  UnstakeRequestsMinOperatorIdAsc = 'UNSTAKE_REQUESTS_MIN_OPERATOR_ID_ASC',
  UnstakeRequestsMinOperatorIdDesc = 'UNSTAKE_REQUESTS_MIN_OPERATOR_ID_DESC',
  UnstakeRequestsMinRequestedRoundAsc = 'UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_ASC',
  UnstakeRequestsMinRequestedRoundDesc = 'UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_DESC',
  UnstakeRequestsMinUpdatedAtAsc = 'UNSTAKE_REQUESTS_MIN_UPDATED_AT_ASC',
  UnstakeRequestsMinUpdatedAtDesc = 'UNSTAKE_REQUESTS_MIN_UPDATED_AT_DESC',
  UnstakeRequestsStddevPopulationAssetIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC',
  UnstakeRequestsStddevPopulationAssetIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC',
  UnstakeRequestsStddevPopulationBlockRangeAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  UnstakeRequestsStddevPopulationBlockRangeDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  UnstakeRequestsStddevPopulationCreatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC',
  UnstakeRequestsStddevPopulationCreatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC',
  UnstakeRequestsStddevPopulationCurrentAmountAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC',
  UnstakeRequestsStddevPopulationCurrentAmountDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC',
  UnstakeRequestsStddevPopulationCurrentStatusAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC',
  UnstakeRequestsStddevPopulationCurrentStatusDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC',
  UnstakeRequestsStddevPopulationDelegationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_ASC',
  UnstakeRequestsStddevPopulationDelegationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_DESC',
  UnstakeRequestsStddevPopulationDelegatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  UnstakeRequestsStddevPopulationDelegatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  UnstakeRequestsStddevPopulationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_ASC',
  UnstakeRequestsStddevPopulationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_DESC',
  UnstakeRequestsStddevPopulationOperatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  UnstakeRequestsStddevPopulationOperatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  UnstakeRequestsStddevPopulationRequestedRoundAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC',
  UnstakeRequestsStddevPopulationRequestedRoundDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC',
  UnstakeRequestsStddevPopulationUpdatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC',
  UnstakeRequestsStddevPopulationUpdatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC',
  UnstakeRequestsStddevSampleAssetIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC',
  UnstakeRequestsStddevSampleAssetIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC',
  UnstakeRequestsStddevSampleBlockRangeAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  UnstakeRequestsStddevSampleBlockRangeDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  UnstakeRequestsStddevSampleCreatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  UnstakeRequestsStddevSampleCreatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  UnstakeRequestsStddevSampleCurrentAmountAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsStddevSampleCurrentAmountDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsStddevSampleCurrentStatusAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC',
  UnstakeRequestsStddevSampleCurrentStatusDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC',
  UnstakeRequestsStddevSampleDelegationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_ASC',
  UnstakeRequestsStddevSampleDelegationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_DESC',
  UnstakeRequestsStddevSampleDelegatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  UnstakeRequestsStddevSampleDelegatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  UnstakeRequestsStddevSampleIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_ASC',
  UnstakeRequestsStddevSampleIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_DESC',
  UnstakeRequestsStddevSampleOperatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  UnstakeRequestsStddevSampleOperatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  UnstakeRequestsStddevSampleRequestedRoundAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC',
  UnstakeRequestsStddevSampleRequestedRoundDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC',
  UnstakeRequestsStddevSampleUpdatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC',
  UnstakeRequestsStddevSampleUpdatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC',
  UnstakeRequestsSumAssetIdAsc = 'UNSTAKE_REQUESTS_SUM_ASSET_ID_ASC',
  UnstakeRequestsSumAssetIdDesc = 'UNSTAKE_REQUESTS_SUM_ASSET_ID_DESC',
  UnstakeRequestsSumBlockRangeAsc = 'UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_ASC',
  UnstakeRequestsSumBlockRangeDesc = 'UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_DESC',
  UnstakeRequestsSumCreatedAtAsc = 'UNSTAKE_REQUESTS_SUM_CREATED_AT_ASC',
  UnstakeRequestsSumCreatedAtDesc = 'UNSTAKE_REQUESTS_SUM_CREATED_AT_DESC',
  UnstakeRequestsSumCurrentAmountAsc = 'UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_ASC',
  UnstakeRequestsSumCurrentAmountDesc = 'UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_DESC',
  UnstakeRequestsSumCurrentStatusAsc = 'UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_ASC',
  UnstakeRequestsSumCurrentStatusDesc = 'UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_DESC',
  UnstakeRequestsSumDelegationIdAsc = 'UNSTAKE_REQUESTS_SUM_DELEGATION_ID_ASC',
  UnstakeRequestsSumDelegationIdDesc = 'UNSTAKE_REQUESTS_SUM_DELEGATION_ID_DESC',
  UnstakeRequestsSumDelegatorIdAsc = 'UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_ASC',
  UnstakeRequestsSumDelegatorIdDesc = 'UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_DESC',
  UnstakeRequestsSumIdAsc = 'UNSTAKE_REQUESTS_SUM_ID_ASC',
  UnstakeRequestsSumIdDesc = 'UNSTAKE_REQUESTS_SUM_ID_DESC',
  UnstakeRequestsSumOperatorIdAsc = 'UNSTAKE_REQUESTS_SUM_OPERATOR_ID_ASC',
  UnstakeRequestsSumOperatorIdDesc = 'UNSTAKE_REQUESTS_SUM_OPERATOR_ID_DESC',
  UnstakeRequestsSumRequestedRoundAsc = 'UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_ASC',
  UnstakeRequestsSumRequestedRoundDesc = 'UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_DESC',
  UnstakeRequestsSumUpdatedAtAsc = 'UNSTAKE_REQUESTS_SUM_UPDATED_AT_ASC',
  UnstakeRequestsSumUpdatedAtDesc = 'UNSTAKE_REQUESTS_SUM_UPDATED_AT_DESC',
  UnstakeRequestsVariancePopulationAssetIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC',
  UnstakeRequestsVariancePopulationAssetIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC',
  UnstakeRequestsVariancePopulationBlockRangeAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  UnstakeRequestsVariancePopulationBlockRangeDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  UnstakeRequestsVariancePopulationCreatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  UnstakeRequestsVariancePopulationCreatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  UnstakeRequestsVariancePopulationCurrentAmountAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC',
  UnstakeRequestsVariancePopulationCurrentAmountDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC',
  UnstakeRequestsVariancePopulationCurrentStatusAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC',
  UnstakeRequestsVariancePopulationCurrentStatusDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC',
  UnstakeRequestsVariancePopulationDelegationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_ASC',
  UnstakeRequestsVariancePopulationDelegationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_DESC',
  UnstakeRequestsVariancePopulationDelegatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  UnstakeRequestsVariancePopulationDelegatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  UnstakeRequestsVariancePopulationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_ASC',
  UnstakeRequestsVariancePopulationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_DESC',
  UnstakeRequestsVariancePopulationOperatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  UnstakeRequestsVariancePopulationOperatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  UnstakeRequestsVariancePopulationRequestedRoundAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC',
  UnstakeRequestsVariancePopulationRequestedRoundDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC',
  UnstakeRequestsVariancePopulationUpdatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC',
  UnstakeRequestsVariancePopulationUpdatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC',
  UnstakeRequestsVarianceSampleAssetIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  UnstakeRequestsVarianceSampleAssetIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  UnstakeRequestsVarianceSampleBlockRangeAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  UnstakeRequestsVarianceSampleBlockRangeDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  UnstakeRequestsVarianceSampleCreatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  UnstakeRequestsVarianceSampleCreatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  UnstakeRequestsVarianceSampleCurrentAmountAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsVarianceSampleCurrentAmountDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsVarianceSampleCurrentStatusAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC',
  UnstakeRequestsVarianceSampleCurrentStatusDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC',
  UnstakeRequestsVarianceSampleDelegationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_ASC',
  UnstakeRequestsVarianceSampleDelegationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_DESC',
  UnstakeRequestsVarianceSampleDelegatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  UnstakeRequestsVarianceSampleDelegatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  UnstakeRequestsVarianceSampleIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_ASC',
  UnstakeRequestsVarianceSampleIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_DESC',
  UnstakeRequestsVarianceSampleOperatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  UnstakeRequestsVarianceSampleOperatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  UnstakeRequestsVarianceSampleRequestedRoundAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC',
  UnstakeRequestsVarianceSampleRequestedRoundDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC',
  UnstakeRequestsVarianceSampleUpdatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC',
  UnstakeRequestsVarianceSampleUpdatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC',
  WithdrawRequestsAverageAssetIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_ASC',
  WithdrawRequestsAverageAssetIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_DESC',
  WithdrawRequestsAverageBlockRangeAsc = 'WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_ASC',
  WithdrawRequestsAverageBlockRangeDesc = 'WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_DESC',
  WithdrawRequestsAverageCreatedAtAsc = 'WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_ASC',
  WithdrawRequestsAverageCreatedAtDesc = 'WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_DESC',
  WithdrawRequestsAverageCurrentAmountAsc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC',
  WithdrawRequestsAverageCurrentAmountDesc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC',
  WithdrawRequestsAverageCurrentStatusAsc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_ASC',
  WithdrawRequestsAverageCurrentStatusDesc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_DESC',
  WithdrawRequestsAverageDelegatorIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_ASC',
  WithdrawRequestsAverageDelegatorIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_DESC',
  WithdrawRequestsAverageDepositIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_ASC',
  WithdrawRequestsAverageDepositIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_DESC',
  WithdrawRequestsAverageIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_ID_ASC',
  WithdrawRequestsAverageIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_ID_DESC',
  WithdrawRequestsAverageRequestedRoundAsc = 'WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC',
  WithdrawRequestsAverageRequestedRoundDesc = 'WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC',
  WithdrawRequestsAverageUpdatedAtAsc = 'WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_ASC',
  WithdrawRequestsAverageUpdatedAtDesc = 'WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_DESC',
  WithdrawRequestsByDelegatorIdCountAsc = 'WITHDRAW_REQUESTS_BY_DELEGATOR_ID__COUNT_ASC',
  WithdrawRequestsByDelegatorIdCountDesc = 'WITHDRAW_REQUESTS_BY_DELEGATOR_ID__COUNT_DESC',
  WithdrawRequestsCountAsc = 'WITHDRAW_REQUESTS_COUNT_ASC',
  WithdrawRequestsCountDesc = 'WITHDRAW_REQUESTS_COUNT_DESC',
  WithdrawRequestsDistinctCountAssetIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC',
  WithdrawRequestsDistinctCountAssetIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC',
  WithdrawRequestsDistinctCountBlockRangeAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  WithdrawRequestsDistinctCountBlockRangeDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  WithdrawRequestsDistinctCountCreatedAtAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC',
  WithdrawRequestsDistinctCountCreatedAtDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC',
  WithdrawRequestsDistinctCountCurrentAmountAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC',
  WithdrawRequestsDistinctCountCurrentAmountDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC',
  WithdrawRequestsDistinctCountCurrentStatusAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC',
  WithdrawRequestsDistinctCountCurrentStatusDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC',
  WithdrawRequestsDistinctCountDelegatorIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  WithdrawRequestsDistinctCountDelegatorIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  WithdrawRequestsDistinctCountDepositIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_ASC',
  WithdrawRequestsDistinctCountDepositIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_DESC',
  WithdrawRequestsDistinctCountIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_ASC',
  WithdrawRequestsDistinctCountIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_DESC',
  WithdrawRequestsDistinctCountRequestedRoundAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC',
  WithdrawRequestsDistinctCountRequestedRoundDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC',
  WithdrawRequestsDistinctCountUpdatedAtAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC',
  WithdrawRequestsDistinctCountUpdatedAtDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC',
  WithdrawRequestsMaxAssetIdAsc = 'WITHDRAW_REQUESTS_MAX_ASSET_ID_ASC',
  WithdrawRequestsMaxAssetIdDesc = 'WITHDRAW_REQUESTS_MAX_ASSET_ID_DESC',
  WithdrawRequestsMaxBlockRangeAsc = 'WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_ASC',
  WithdrawRequestsMaxBlockRangeDesc = 'WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_DESC',
  WithdrawRequestsMaxCreatedAtAsc = 'WITHDRAW_REQUESTS_MAX_CREATED_AT_ASC',
  WithdrawRequestsMaxCreatedAtDesc = 'WITHDRAW_REQUESTS_MAX_CREATED_AT_DESC',
  WithdrawRequestsMaxCurrentAmountAsc = 'WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_ASC',
  WithdrawRequestsMaxCurrentAmountDesc = 'WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_DESC',
  WithdrawRequestsMaxCurrentStatusAsc = 'WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_ASC',
  WithdrawRequestsMaxCurrentStatusDesc = 'WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_DESC',
  WithdrawRequestsMaxDelegatorIdAsc = 'WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_ASC',
  WithdrawRequestsMaxDelegatorIdDesc = 'WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_DESC',
  WithdrawRequestsMaxDepositIdAsc = 'WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_ASC',
  WithdrawRequestsMaxDepositIdDesc = 'WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_DESC',
  WithdrawRequestsMaxIdAsc = 'WITHDRAW_REQUESTS_MAX_ID_ASC',
  WithdrawRequestsMaxIdDesc = 'WITHDRAW_REQUESTS_MAX_ID_DESC',
  WithdrawRequestsMaxRequestedRoundAsc = 'WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_ASC',
  WithdrawRequestsMaxRequestedRoundDesc = 'WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_DESC',
  WithdrawRequestsMaxUpdatedAtAsc = 'WITHDRAW_REQUESTS_MAX_UPDATED_AT_ASC',
  WithdrawRequestsMaxUpdatedAtDesc = 'WITHDRAW_REQUESTS_MAX_UPDATED_AT_DESC',
  WithdrawRequestsMinAssetIdAsc = 'WITHDRAW_REQUESTS_MIN_ASSET_ID_ASC',
  WithdrawRequestsMinAssetIdDesc = 'WITHDRAW_REQUESTS_MIN_ASSET_ID_DESC',
  WithdrawRequestsMinBlockRangeAsc = 'WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_ASC',
  WithdrawRequestsMinBlockRangeDesc = 'WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_DESC',
  WithdrawRequestsMinCreatedAtAsc = 'WITHDRAW_REQUESTS_MIN_CREATED_AT_ASC',
  WithdrawRequestsMinCreatedAtDesc = 'WITHDRAW_REQUESTS_MIN_CREATED_AT_DESC',
  WithdrawRequestsMinCurrentAmountAsc = 'WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_ASC',
  WithdrawRequestsMinCurrentAmountDesc = 'WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_DESC',
  WithdrawRequestsMinCurrentStatusAsc = 'WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_ASC',
  WithdrawRequestsMinCurrentStatusDesc = 'WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_DESC',
  WithdrawRequestsMinDelegatorIdAsc = 'WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_ASC',
  WithdrawRequestsMinDelegatorIdDesc = 'WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_DESC',
  WithdrawRequestsMinDepositIdAsc = 'WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_ASC',
  WithdrawRequestsMinDepositIdDesc = 'WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_DESC',
  WithdrawRequestsMinIdAsc = 'WITHDRAW_REQUESTS_MIN_ID_ASC',
  WithdrawRequestsMinIdDesc = 'WITHDRAW_REQUESTS_MIN_ID_DESC',
  WithdrawRequestsMinRequestedRoundAsc = 'WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_ASC',
  WithdrawRequestsMinRequestedRoundDesc = 'WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_DESC',
  WithdrawRequestsMinUpdatedAtAsc = 'WITHDRAW_REQUESTS_MIN_UPDATED_AT_ASC',
  WithdrawRequestsMinUpdatedAtDesc = 'WITHDRAW_REQUESTS_MIN_UPDATED_AT_DESC',
  WithdrawRequestsStddevPopulationAssetIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC',
  WithdrawRequestsStddevPopulationAssetIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC',
  WithdrawRequestsStddevPopulationBlockRangeAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  WithdrawRequestsStddevPopulationBlockRangeDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  WithdrawRequestsStddevPopulationCreatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC',
  WithdrawRequestsStddevPopulationCreatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC',
  WithdrawRequestsStddevPopulationCurrentAmountAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC',
  WithdrawRequestsStddevPopulationCurrentAmountDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC',
  WithdrawRequestsStddevPopulationCurrentStatusAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC',
  WithdrawRequestsStddevPopulationCurrentStatusDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC',
  WithdrawRequestsStddevPopulationDelegatorIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  WithdrawRequestsStddevPopulationDelegatorIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  WithdrawRequestsStddevPopulationDepositIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_ASC',
  WithdrawRequestsStddevPopulationDepositIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_DESC',
  WithdrawRequestsStddevPopulationIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_ASC',
  WithdrawRequestsStddevPopulationIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_DESC',
  WithdrawRequestsStddevPopulationRequestedRoundAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC',
  WithdrawRequestsStddevPopulationRequestedRoundDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC',
  WithdrawRequestsStddevPopulationUpdatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC',
  WithdrawRequestsStddevPopulationUpdatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC',
  WithdrawRequestsStddevSampleAssetIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC',
  WithdrawRequestsStddevSampleAssetIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC',
  WithdrawRequestsStddevSampleBlockRangeAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  WithdrawRequestsStddevSampleBlockRangeDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  WithdrawRequestsStddevSampleCreatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  WithdrawRequestsStddevSampleCreatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  WithdrawRequestsStddevSampleCurrentAmountAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC',
  WithdrawRequestsStddevSampleCurrentAmountDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC',
  WithdrawRequestsStddevSampleCurrentStatusAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC',
  WithdrawRequestsStddevSampleCurrentStatusDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC',
  WithdrawRequestsStddevSampleDelegatorIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  WithdrawRequestsStddevSampleDelegatorIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  WithdrawRequestsStddevSampleDepositIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_ASC',
  WithdrawRequestsStddevSampleDepositIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_DESC',
  WithdrawRequestsStddevSampleIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_ASC',
  WithdrawRequestsStddevSampleIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_DESC',
  WithdrawRequestsStddevSampleRequestedRoundAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC',
  WithdrawRequestsStddevSampleRequestedRoundDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC',
  WithdrawRequestsStddevSampleUpdatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC',
  WithdrawRequestsStddevSampleUpdatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC',
  WithdrawRequestsSumAssetIdAsc = 'WITHDRAW_REQUESTS_SUM_ASSET_ID_ASC',
  WithdrawRequestsSumAssetIdDesc = 'WITHDRAW_REQUESTS_SUM_ASSET_ID_DESC',
  WithdrawRequestsSumBlockRangeAsc = 'WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_ASC',
  WithdrawRequestsSumBlockRangeDesc = 'WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_DESC',
  WithdrawRequestsSumCreatedAtAsc = 'WITHDRAW_REQUESTS_SUM_CREATED_AT_ASC',
  WithdrawRequestsSumCreatedAtDesc = 'WITHDRAW_REQUESTS_SUM_CREATED_AT_DESC',
  WithdrawRequestsSumCurrentAmountAsc = 'WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_ASC',
  WithdrawRequestsSumCurrentAmountDesc = 'WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_DESC',
  WithdrawRequestsSumCurrentStatusAsc = 'WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_ASC',
  WithdrawRequestsSumCurrentStatusDesc = 'WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_DESC',
  WithdrawRequestsSumDelegatorIdAsc = 'WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_ASC',
  WithdrawRequestsSumDelegatorIdDesc = 'WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_DESC',
  WithdrawRequestsSumDepositIdAsc = 'WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_ASC',
  WithdrawRequestsSumDepositIdDesc = 'WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_DESC',
  WithdrawRequestsSumIdAsc = 'WITHDRAW_REQUESTS_SUM_ID_ASC',
  WithdrawRequestsSumIdDesc = 'WITHDRAW_REQUESTS_SUM_ID_DESC',
  WithdrawRequestsSumRequestedRoundAsc = 'WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_ASC',
  WithdrawRequestsSumRequestedRoundDesc = 'WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_DESC',
  WithdrawRequestsSumUpdatedAtAsc = 'WITHDRAW_REQUESTS_SUM_UPDATED_AT_ASC',
  WithdrawRequestsSumUpdatedAtDesc = 'WITHDRAW_REQUESTS_SUM_UPDATED_AT_DESC',
  WithdrawRequestsVariancePopulationAssetIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC',
  WithdrawRequestsVariancePopulationAssetIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC',
  WithdrawRequestsVariancePopulationBlockRangeAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  WithdrawRequestsVariancePopulationBlockRangeDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  WithdrawRequestsVariancePopulationCreatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  WithdrawRequestsVariancePopulationCreatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  WithdrawRequestsVariancePopulationCurrentAmountAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC',
  WithdrawRequestsVariancePopulationCurrentAmountDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC',
  WithdrawRequestsVariancePopulationCurrentStatusAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC',
  WithdrawRequestsVariancePopulationCurrentStatusDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC',
  WithdrawRequestsVariancePopulationDelegatorIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  WithdrawRequestsVariancePopulationDelegatorIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  WithdrawRequestsVariancePopulationDepositIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_ASC',
  WithdrawRequestsVariancePopulationDepositIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_DESC',
  WithdrawRequestsVariancePopulationIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_ASC',
  WithdrawRequestsVariancePopulationIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_DESC',
  WithdrawRequestsVariancePopulationRequestedRoundAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC',
  WithdrawRequestsVariancePopulationRequestedRoundDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC',
  WithdrawRequestsVariancePopulationUpdatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC',
  WithdrawRequestsVariancePopulationUpdatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC',
  WithdrawRequestsVarianceSampleAssetIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  WithdrawRequestsVarianceSampleAssetIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  WithdrawRequestsVarianceSampleBlockRangeAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  WithdrawRequestsVarianceSampleBlockRangeDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  WithdrawRequestsVarianceSampleCreatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  WithdrawRequestsVarianceSampleCreatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  WithdrawRequestsVarianceSampleCurrentAmountAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC',
  WithdrawRequestsVarianceSampleCurrentAmountDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC',
  WithdrawRequestsVarianceSampleCurrentStatusAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC',
  WithdrawRequestsVarianceSampleCurrentStatusDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC',
  WithdrawRequestsVarianceSampleDelegatorIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  WithdrawRequestsVarianceSampleDelegatorIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  WithdrawRequestsVarianceSampleDepositIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_ASC',
  WithdrawRequestsVarianceSampleDepositIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_DESC',
  WithdrawRequestsVarianceSampleIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_ASC',
  WithdrawRequestsVarianceSampleIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_DESC',
  WithdrawRequestsVarianceSampleRequestedRoundAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC',
  WithdrawRequestsVarianceSampleRequestedRoundDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC',
  WithdrawRequestsVarianceSampleUpdatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC',
  WithdrawRequestsVarianceSampleUpdatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC'
}

export type Deposit = Node & {
  __typename?: 'Deposit';
  /** The asset ID of the deposited tokens. */
  assetId: Scalars['JSON']['output'];
  /** Reads a single `Delegator` that is related to this `Deposit`. */
  delegator?: Maybe<Delegator>;
  /** The Delegator who made the deposit. */
  delegatorId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Delegator`. */
  delegatorsByWithdrawRequestDepositIdAndDelegatorId: DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyConnection;
  /** Indicates whether there is an active withdraw request for this deposit. */
  hasActiveWithdrawRequest: Scalars['Boolean']['output'];
  /** Reads and enables pagination through a set of `DepositHistory`. */
  history: DepositHistoriesConnection;
  /** Unique identifier for the deposit. Composite key: delegator ID + asset ID */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** The total amount of tokens deposited by the Delegator for this asset. */
  totalAmount: Scalars['BigFloat']['output'];
  /** Reads and enables pagination through a set of `WithdrawRequest`. */
  withdrawRequests: WithdrawRequestsConnection;
};


export type DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegators_Distinct_Enum>>>;
  filter?: InputMaybe<DelegatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DepositHistoryArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Deposit_Histories_Distinct_Enum>>>;
  filter?: InputMaybe<DepositHistoryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositHistoriesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type DepositWithdrawRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Withdraw_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<WithdrawRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WithdrawRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DepositAggregates = {
  __typename?: 'DepositAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<DepositAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<DepositDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<DepositMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<DepositMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<DepositStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<DepositStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<DepositSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<DepositVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<DepositVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `Deposit` object types. */
export type DepositAggregatesFilter = {
  /** Mean average aggregate over matching `Deposit` objects. */
  average?: InputMaybe<DepositAverageAggregateFilter>;
  /** Distinct count aggregate over matching `Deposit` objects. */
  distinctCount?: InputMaybe<DepositDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `Deposit` object to be included within the aggregate. */
  filter?: InputMaybe<DepositFilter>;
  /** Maximum aggregate over matching `Deposit` objects. */
  max?: InputMaybe<DepositMaxAggregateFilter>;
  /** Minimum aggregate over matching `Deposit` objects. */
  min?: InputMaybe<DepositMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `Deposit` objects. */
  stddevPopulation?: InputMaybe<DepositStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `Deposit` objects. */
  stddevSample?: InputMaybe<DepositStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `Deposit` objects. */
  sum?: InputMaybe<DepositSumAggregateFilter>;
  /** Population variance aggregate over matching `Deposit` objects. */
  variancePopulation?: InputMaybe<DepositVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `Deposit` objects. */
  varianceSample?: InputMaybe<DepositVarianceSampleAggregateFilter>;
};

export type DepositAverageAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositAverageAggregates = {
  __typename?: 'DepositAverageAggregates';
  /** Mean average of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Delegator` values, with data from `WithdrawRequest`. */
export type DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyConnection = {
  __typename?: 'DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegatorAggregates>;
  /** A list of edges which contains the `Delegator`, info from the `WithdrawRequest`, and the cursor to aid in pagination. */
  edges: Array<DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegatorAggregates>>;
  /** A list of `Delegator` objects. */
  nodes: Array<Maybe<Delegator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegator` values, with data from `WithdrawRequest`. */
export type DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegatorsGroupBy>;
  having?: InputMaybe<DelegatorsHavingInput>;
};

/** A `Delegator` edge in the connection, with data from `WithdrawRequest`. */
export type DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyEdge = {
  __typename?: 'DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Delegator` at the end of the edge. */
  node?: Maybe<Delegator>;
  /** Reads and enables pagination through a set of `WithdrawRequest`. */
  withdrawRequests: WithdrawRequestsConnection;
};


/** A `Delegator` edge in the connection, with data from `WithdrawRequest`. */
export type DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyEdgeWithdrawRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Withdraw_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<WithdrawRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WithdrawRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type DepositDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  assetId?: InputMaybe<BigIntFilter>;
  delegatorId?: InputMaybe<BigIntFilter>;
  hasActiveWithdrawRequest?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  totalAmount?: InputMaybe<BigIntFilter>;
};

export type DepositDistinctCountAggregates = {
  __typename?: 'DepositDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of assetId across the matching connection */
  assetId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of delegatorId across the matching connection */
  delegatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of hasActiveWithdrawRequest across the matching connection */
  hasActiveWithdrawRequest?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Deposit` object types. All fields are combined with a logical ‘and.’ */
export type DepositFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<DepositFilter>>;
  /** Filter by the object’s `assetId` field. */
  assetId?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `delegator` relation. */
  delegator?: InputMaybe<DelegatorFilter>;
  /** Filter by the object’s `delegatorId` field. */
  delegatorId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `hasActiveWithdrawRequest` field. */
  hasActiveWithdrawRequest?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `history` relation. */
  history?: InputMaybe<DepositToManyDepositHistoryFilter>;
  /** Some related `history` exist. */
  historyExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<DepositFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<DepositFilter>>;
  /** Filter by the object’s `totalAmount` field. */
  totalAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `withdrawRequests` relation. */
  withdrawRequests?: InputMaybe<DepositToManyWithdrawRequestFilter>;
  /** Some related `withdrawRequests` exist. */
  withdrawRequestsExist?: InputMaybe<Scalars['Boolean']['input']>;
};

/** A connection to a list of `DepositHistory` values. */
export type DepositHistoriesConnection = {
  __typename?: 'DepositHistoriesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DepositHistoryAggregates>;
  /** A list of edges which contains the `DepositHistory` and cursor to aid in pagination. */
  edges: Array<DepositHistoriesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DepositHistoryAggregates>>;
  /** A list of `DepositHistory` objects. */
  nodes: Array<Maybe<DepositHistory>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `DepositHistory` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `DepositHistory` values. */
export type DepositHistoriesConnectionGroupedAggregatesArgs = {
  groupBy: Array<DepositHistoriesGroupBy>;
  having?: InputMaybe<DepositHistoriesHavingInput>;
};

/** A `DepositHistory` edge in the connection. */
export type DepositHistoriesEdge = {
  __typename?: 'DepositHistoriesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `DepositHistory` at the end of the edge. */
  node?: Maybe<DepositHistory>;
};

/** Grouping methods for `DepositHistory` for usage during aggregation. */
export enum DepositHistoriesGroupBy {
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  DepositId = 'DEPOSIT_ID',
  Id = 'ID'
}

export type DepositHistoriesHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DepositHistoriesHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `DepositHistory` aggregates. */
export type DepositHistoriesHavingInput = {
  AND?: InputMaybe<Array<DepositHistoriesHavingInput>>;
  OR?: InputMaybe<Array<DepositHistoriesHavingInput>>;
  average?: InputMaybe<DepositHistoriesHavingAverageInput>;
  distinctCount?: InputMaybe<DepositHistoriesHavingDistinctCountInput>;
  max?: InputMaybe<DepositHistoriesHavingMaxInput>;
  min?: InputMaybe<DepositHistoriesHavingMinInput>;
  stddevPopulation?: InputMaybe<DepositHistoriesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<DepositHistoriesHavingStddevSampleInput>;
  sum?: InputMaybe<DepositHistoriesHavingSumInput>;
  variancePopulation?: InputMaybe<DepositHistoriesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<DepositHistoriesHavingVarianceSampleInput>;
};

export type DepositHistoriesHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DepositHistoriesHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DepositHistoriesHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DepositHistoriesHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DepositHistoriesHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DepositHistoriesHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type DepositHistoriesHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `DepositHistory`. */
export enum DepositHistoriesOrderBy {
  AmountAsc = 'AMOUNT_ASC',
  AmountDesc = 'AMOUNT_DESC',
  BlockNumberAsc = 'BLOCK_NUMBER_ASC',
  BlockNumberDesc = 'BLOCK_NUMBER_DESC',
  DepositByDepositIdAssetIdAsc = 'DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_ASC',
  DepositByDepositIdAssetIdDesc = 'DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_DESC',
  DepositByDepositIdDelegatorIdAsc = 'DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_ASC',
  DepositByDepositIdDelegatorIdDesc = 'DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_DESC',
  DepositByDepositIdHasActiveWithdrawRequestAsc = 'DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositByDepositIdHasActiveWithdrawRequestDesc = 'DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositByDepositIdIdAsc = 'DEPOSIT_BY_DEPOSIT_ID__ID_ASC',
  DepositByDepositIdIdDesc = 'DEPOSIT_BY_DEPOSIT_ID__ID_DESC',
  DepositByDepositIdTotalAmountAsc = 'DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_ASC',
  DepositByDepositIdTotalAmountDesc = 'DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_DESC',
  DepositIdAsc = 'DEPOSIT_ID_ASC',
  DepositIdDesc = 'DEPOSIT_ID_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'
}

export type DepositHistory = Node & {
  __typename?: 'DepositHistory';
  /** The amount of tokens deposited in this transaction. */
  amount: Scalars['BigFloat']['output'];
  /** The block number at which this deposit transaction occurred. */
  blockNumber: Scalars['Int']['output'];
  /** Reads a single `Deposit` that is related to this `DepositHistory`. */
  deposit?: Maybe<Deposit>;
  /** The deposit this history entry is associated with. */
  depositId: Scalars['String']['output'];
  /** Unique identifier for the deposit history entry. Composite key: deposit ID + block number */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type DepositHistoryAggregates = {
  __typename?: 'DepositHistoryAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<DepositHistoryAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<DepositHistoryDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<DepositHistoryMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<DepositHistoryMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<DepositHistoryStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<DepositHistoryStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<DepositHistorySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<DepositHistoryVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<DepositHistoryVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `DepositHistory` object types. */
export type DepositHistoryAggregatesFilter = {
  /** Mean average aggregate over matching `DepositHistory` objects. */
  average?: InputMaybe<DepositHistoryAverageAggregateFilter>;
  /** Distinct count aggregate over matching `DepositHistory` objects. */
  distinctCount?: InputMaybe<DepositHistoryDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `DepositHistory` object to be included within the aggregate. */
  filter?: InputMaybe<DepositHistoryFilter>;
  /** Maximum aggregate over matching `DepositHistory` objects. */
  max?: InputMaybe<DepositHistoryMaxAggregateFilter>;
  /** Minimum aggregate over matching `DepositHistory` objects. */
  min?: InputMaybe<DepositHistoryMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `DepositHistory` objects. */
  stddevPopulation?: InputMaybe<DepositHistoryStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `DepositHistory` objects. */
  stddevSample?: InputMaybe<DepositHistoryStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `DepositHistory` objects. */
  sum?: InputMaybe<DepositHistorySumAggregateFilter>;
  /** Population variance aggregate over matching `DepositHistory` objects. */
  variancePopulation?: InputMaybe<DepositHistoryVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `DepositHistory` objects. */
  varianceSample?: InputMaybe<DepositHistoryVarianceSampleAggregateFilter>;
};

export type DepositHistoryAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DepositHistoryAverageAggregates = {
  __typename?: 'DepositHistoryAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositHistoryDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  amount?: InputMaybe<BigIntFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
  depositId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
};

export type DepositHistoryDistinctCountAggregates = {
  __typename?: 'DepositHistoryDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositId across the matching connection */
  depositId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `DepositHistory` object types. All fields are combined with a logical ‘and.’ */
export type DepositHistoryFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<DepositHistoryFilter>>;
  /** Filter by the object’s `blockNumber` field. */
  blockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `deposit` relation. */
  deposit?: InputMaybe<DepositFilter>;
  /** Filter by the object’s `depositId` field. */
  depositId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<DepositHistoryFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<DepositHistoryFilter>>;
};

export type DepositHistoryMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type DepositHistoryMaxAggregates = {
  __typename?: 'DepositHistoryMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type DepositHistoryMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type DepositHistoryMinAggregates = {
  __typename?: 'DepositHistoryMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type DepositHistoryStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DepositHistoryStddevPopulationAggregates = {
  __typename?: 'DepositHistoryStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositHistoryStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DepositHistoryStddevSampleAggregates = {
  __typename?: 'DepositHistoryStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositHistorySumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
};

export type DepositHistorySumAggregates = {
  __typename?: 'DepositHistorySumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of blockNumber across the matching connection */
  blockNumber: Scalars['BigInt']['output'];
};

export type DepositHistoryVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DepositHistoryVariancePopulationAggregates = {
  __typename?: 'DepositHistoryVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositHistoryVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type DepositHistoryVarianceSampleAggregates = {
  __typename?: 'DepositHistoryVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositMaxAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositMaxAggregates = {
  __typename?: 'DepositMaxAggregates';
  /** Maximum of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositMinAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositMinAggregates = {
  __typename?: 'DepositMinAggregates';
  /** Minimum of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositStddevPopulationAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositStddevPopulationAggregates = {
  __typename?: 'DepositStddevPopulationAggregates';
  /** Population standard deviation of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositStddevSampleAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositStddevSampleAggregates = {
  __typename?: 'DepositStddevSampleAggregates';
  /** Sample standard deviation of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositSumAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositSumAggregates = {
  __typename?: 'DepositSumAggregates';
  /** Sum of totalAmount across the matching connection */
  totalAmount: Scalars['BigFloat']['output'];
};

/** A filter to be used against many `DepositHistory` object types. All fields are combined with a logical ‘and.’ */
export type DepositToManyDepositHistoryFilter = {
  /** Aggregates across related `DepositHistory` match the filter criteria. */
  aggregates?: InputMaybe<DepositHistoryAggregatesFilter>;
  /** Every related `DepositHistory` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DepositHistoryFilter>;
  /** No related `DepositHistory` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DepositHistoryFilter>;
  /** Some related `DepositHistory` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DepositHistoryFilter>;
};

/** A filter to be used against many `WithdrawRequest` object types. All fields are combined with a logical ‘and.’ */
export type DepositToManyWithdrawRequestFilter = {
  /** Aggregates across related `WithdrawRequest` match the filter criteria. */
  aggregates?: InputMaybe<WithdrawRequestAggregatesFilter>;
  /** Every related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<WithdrawRequestFilter>;
  /** No related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<WithdrawRequestFilter>;
  /** Some related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<WithdrawRequestFilter>;
};

export type DepositVariancePopulationAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositVariancePopulationAggregates = {
  __typename?: 'DepositVariancePopulationAggregates';
  /** Population variance of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositVarianceSampleAggregateFilter = {
  totalAmount?: InputMaybe<BigFloatFilter>;
};

export type DepositVarianceSampleAggregates = {
  __typename?: 'DepositVarianceSampleAggregates';
  /** Sample variance of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Deposit` values. */
export type DepositsConnection = {
  __typename?: 'DepositsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DepositAggregates>;
  /** A list of edges which contains the `Deposit` and cursor to aid in pagination. */
  edges: Array<DepositsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DepositAggregates>>;
  /** A list of `Deposit` objects. */
  nodes: Array<Maybe<Deposit>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Deposit` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Deposit` values. */
export type DepositsConnectionGroupedAggregatesArgs = {
  groupBy: Array<DepositsGroupBy>;
  having?: InputMaybe<DepositsHavingInput>;
};

/** A `Deposit` edge in the connection. */
export type DepositsEdge = {
  __typename?: 'DepositsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Deposit` at the end of the edge. */
  node?: Maybe<Deposit>;
};

/** Grouping methods for `Deposit` for usage during aggregation. */
export enum DepositsGroupBy {
  AssetId = 'ASSET_ID',
  DelegatorId = 'DELEGATOR_ID',
  HasActiveWithdrawRequest = 'HAS_ACTIVE_WITHDRAW_REQUEST',
  Id = 'ID',
  TotalAmount = 'TOTAL_AMOUNT'
}

export type DepositsHavingAverageInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositsHavingDistinctCountInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `Deposit` aggregates. */
export type DepositsHavingInput = {
  AND?: InputMaybe<Array<DepositsHavingInput>>;
  OR?: InputMaybe<Array<DepositsHavingInput>>;
  average?: InputMaybe<DepositsHavingAverageInput>;
  distinctCount?: InputMaybe<DepositsHavingDistinctCountInput>;
  max?: InputMaybe<DepositsHavingMaxInput>;
  min?: InputMaybe<DepositsHavingMinInput>;
  stddevPopulation?: InputMaybe<DepositsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<DepositsHavingStddevSampleInput>;
  sum?: InputMaybe<DepositsHavingSumInput>;
  variancePopulation?: InputMaybe<DepositsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<DepositsHavingVarianceSampleInput>;
};

export type DepositsHavingMaxInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositsHavingMinInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositsHavingStddevPopulationInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositsHavingStddevSampleInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositsHavingSumInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositsHavingVariancePopulationInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

export type DepositsHavingVarianceSampleInput = {
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
};

/** Methods to use when ordering `Deposit`. */
export enum DepositsOrderBy {
  AssetIdAsc = 'ASSET_ID_ASC',
  AssetIdDesc = 'ASSET_ID_DESC',
  DelegatorByDelegatorIdAccountIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC',
  DelegatorByDelegatorIdAccountIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC',
  DelegatorByDelegatorIdIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ID_ASC',
  DelegatorByDelegatorIdIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ID_DESC',
  DelegatorByDelegatorIdJoinedAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC',
  DelegatorByDelegatorIdJoinedAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC',
  DelegatorByDelegatorIdLastUpdateAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC',
  DelegatorByDelegatorIdLastUpdateAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC',
  DelegatorIdAsc = 'DELEGATOR_ID_ASC',
  DelegatorIdDesc = 'DELEGATOR_ID_DESC',
  DepositHistoriesByDepositIdCountAsc = 'DEPOSIT_HISTORIES_BY_DEPOSIT_ID__COUNT_ASC',
  DepositHistoriesByDepositIdCountDesc = 'DEPOSIT_HISTORIES_BY_DEPOSIT_ID__COUNT_DESC',
  HasActiveWithdrawRequestAsc = 'HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  HasActiveWithdrawRequestDesc = 'HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  HistoryAverageAmountAsc = 'HISTORY_AVERAGE_AMOUNT_ASC',
  HistoryAverageAmountDesc = 'HISTORY_AVERAGE_AMOUNT_DESC',
  HistoryAverageBlockNumberAsc = 'HISTORY_AVERAGE_BLOCK_NUMBER_ASC',
  HistoryAverageBlockNumberDesc = 'HISTORY_AVERAGE_BLOCK_NUMBER_DESC',
  HistoryAverageBlockRangeAsc = 'HISTORY_AVERAGE_BLOCK_RANGE_ASC',
  HistoryAverageBlockRangeDesc = 'HISTORY_AVERAGE_BLOCK_RANGE_DESC',
  HistoryAverageDepositIdAsc = 'HISTORY_AVERAGE_DEPOSIT_ID_ASC',
  HistoryAverageDepositIdDesc = 'HISTORY_AVERAGE_DEPOSIT_ID_DESC',
  HistoryAverageIdAsc = 'HISTORY_AVERAGE_ID_ASC',
  HistoryAverageIdDesc = 'HISTORY_AVERAGE_ID_DESC',
  HistoryCountAsc = 'HISTORY_COUNT_ASC',
  HistoryCountDesc = 'HISTORY_COUNT_DESC',
  HistoryDistinctCountAmountAsc = 'HISTORY_DISTINCT_COUNT_AMOUNT_ASC',
  HistoryDistinctCountAmountDesc = 'HISTORY_DISTINCT_COUNT_AMOUNT_DESC',
  HistoryDistinctCountBlockNumberAsc = 'HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC',
  HistoryDistinctCountBlockNumberDesc = 'HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC',
  HistoryDistinctCountBlockRangeAsc = 'HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  HistoryDistinctCountBlockRangeDesc = 'HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  HistoryDistinctCountDepositIdAsc = 'HISTORY_DISTINCT_COUNT_DEPOSIT_ID_ASC',
  HistoryDistinctCountDepositIdDesc = 'HISTORY_DISTINCT_COUNT_DEPOSIT_ID_DESC',
  HistoryDistinctCountIdAsc = 'HISTORY_DISTINCT_COUNT_ID_ASC',
  HistoryDistinctCountIdDesc = 'HISTORY_DISTINCT_COUNT_ID_DESC',
  HistoryMaxAmountAsc = 'HISTORY_MAX_AMOUNT_ASC',
  HistoryMaxAmountDesc = 'HISTORY_MAX_AMOUNT_DESC',
  HistoryMaxBlockNumberAsc = 'HISTORY_MAX_BLOCK_NUMBER_ASC',
  HistoryMaxBlockNumberDesc = 'HISTORY_MAX_BLOCK_NUMBER_DESC',
  HistoryMaxBlockRangeAsc = 'HISTORY_MAX_BLOCK_RANGE_ASC',
  HistoryMaxBlockRangeDesc = 'HISTORY_MAX_BLOCK_RANGE_DESC',
  HistoryMaxDepositIdAsc = 'HISTORY_MAX_DEPOSIT_ID_ASC',
  HistoryMaxDepositIdDesc = 'HISTORY_MAX_DEPOSIT_ID_DESC',
  HistoryMaxIdAsc = 'HISTORY_MAX_ID_ASC',
  HistoryMaxIdDesc = 'HISTORY_MAX_ID_DESC',
  HistoryMinAmountAsc = 'HISTORY_MIN_AMOUNT_ASC',
  HistoryMinAmountDesc = 'HISTORY_MIN_AMOUNT_DESC',
  HistoryMinBlockNumberAsc = 'HISTORY_MIN_BLOCK_NUMBER_ASC',
  HistoryMinBlockNumberDesc = 'HISTORY_MIN_BLOCK_NUMBER_DESC',
  HistoryMinBlockRangeAsc = 'HISTORY_MIN_BLOCK_RANGE_ASC',
  HistoryMinBlockRangeDesc = 'HISTORY_MIN_BLOCK_RANGE_DESC',
  HistoryMinDepositIdAsc = 'HISTORY_MIN_DEPOSIT_ID_ASC',
  HistoryMinDepositIdDesc = 'HISTORY_MIN_DEPOSIT_ID_DESC',
  HistoryMinIdAsc = 'HISTORY_MIN_ID_ASC',
  HistoryMinIdDesc = 'HISTORY_MIN_ID_DESC',
  HistoryStddevPopulationAmountAsc = 'HISTORY_STDDEV_POPULATION_AMOUNT_ASC',
  HistoryStddevPopulationAmountDesc = 'HISTORY_STDDEV_POPULATION_AMOUNT_DESC',
  HistoryStddevPopulationBlockNumberAsc = 'HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC',
  HistoryStddevPopulationBlockNumberDesc = 'HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC',
  HistoryStddevPopulationBlockRangeAsc = 'HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  HistoryStddevPopulationBlockRangeDesc = 'HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  HistoryStddevPopulationDepositIdAsc = 'HISTORY_STDDEV_POPULATION_DEPOSIT_ID_ASC',
  HistoryStddevPopulationDepositIdDesc = 'HISTORY_STDDEV_POPULATION_DEPOSIT_ID_DESC',
  HistoryStddevPopulationIdAsc = 'HISTORY_STDDEV_POPULATION_ID_ASC',
  HistoryStddevPopulationIdDesc = 'HISTORY_STDDEV_POPULATION_ID_DESC',
  HistoryStddevSampleAmountAsc = 'HISTORY_STDDEV_SAMPLE_AMOUNT_ASC',
  HistoryStddevSampleAmountDesc = 'HISTORY_STDDEV_SAMPLE_AMOUNT_DESC',
  HistoryStddevSampleBlockNumberAsc = 'HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',
  HistoryStddevSampleBlockNumberDesc = 'HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',
  HistoryStddevSampleBlockRangeAsc = 'HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  HistoryStddevSampleBlockRangeDesc = 'HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  HistoryStddevSampleDepositIdAsc = 'HISTORY_STDDEV_SAMPLE_DEPOSIT_ID_ASC',
  HistoryStddevSampleDepositIdDesc = 'HISTORY_STDDEV_SAMPLE_DEPOSIT_ID_DESC',
  HistoryStddevSampleIdAsc = 'HISTORY_STDDEV_SAMPLE_ID_ASC',
  HistoryStddevSampleIdDesc = 'HISTORY_STDDEV_SAMPLE_ID_DESC',
  HistorySumAmountAsc = 'HISTORY_SUM_AMOUNT_ASC',
  HistorySumAmountDesc = 'HISTORY_SUM_AMOUNT_DESC',
  HistorySumBlockNumberAsc = 'HISTORY_SUM_BLOCK_NUMBER_ASC',
  HistorySumBlockNumberDesc = 'HISTORY_SUM_BLOCK_NUMBER_DESC',
  HistorySumBlockRangeAsc = 'HISTORY_SUM_BLOCK_RANGE_ASC',
  HistorySumBlockRangeDesc = 'HISTORY_SUM_BLOCK_RANGE_DESC',
  HistorySumDepositIdAsc = 'HISTORY_SUM_DEPOSIT_ID_ASC',
  HistorySumDepositIdDesc = 'HISTORY_SUM_DEPOSIT_ID_DESC',
  HistorySumIdAsc = 'HISTORY_SUM_ID_ASC',
  HistorySumIdDesc = 'HISTORY_SUM_ID_DESC',
  HistoryVariancePopulationAmountAsc = 'HISTORY_VARIANCE_POPULATION_AMOUNT_ASC',
  HistoryVariancePopulationAmountDesc = 'HISTORY_VARIANCE_POPULATION_AMOUNT_DESC',
  HistoryVariancePopulationBlockNumberAsc = 'HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',
  HistoryVariancePopulationBlockNumberDesc = 'HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',
  HistoryVariancePopulationBlockRangeAsc = 'HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  HistoryVariancePopulationBlockRangeDesc = 'HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  HistoryVariancePopulationDepositIdAsc = 'HISTORY_VARIANCE_POPULATION_DEPOSIT_ID_ASC',
  HistoryVariancePopulationDepositIdDesc = 'HISTORY_VARIANCE_POPULATION_DEPOSIT_ID_DESC',
  HistoryVariancePopulationIdAsc = 'HISTORY_VARIANCE_POPULATION_ID_ASC',
  HistoryVariancePopulationIdDesc = 'HISTORY_VARIANCE_POPULATION_ID_DESC',
  HistoryVarianceSampleAmountAsc = 'HISTORY_VARIANCE_SAMPLE_AMOUNT_ASC',
  HistoryVarianceSampleAmountDesc = 'HISTORY_VARIANCE_SAMPLE_AMOUNT_DESC',
  HistoryVarianceSampleBlockNumberAsc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',
  HistoryVarianceSampleBlockNumberDesc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',
  HistoryVarianceSampleBlockRangeAsc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  HistoryVarianceSampleBlockRangeDesc = 'HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  HistoryVarianceSampleDepositIdAsc = 'HISTORY_VARIANCE_SAMPLE_DEPOSIT_ID_ASC',
  HistoryVarianceSampleDepositIdDesc = 'HISTORY_VARIANCE_SAMPLE_DEPOSIT_ID_DESC',
  HistoryVarianceSampleIdAsc = 'HISTORY_VARIANCE_SAMPLE_ID_ASC',
  HistoryVarianceSampleIdDesc = 'HISTORY_VARIANCE_SAMPLE_ID_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  TotalAmountAsc = 'TOTAL_AMOUNT_ASC',
  TotalAmountDesc = 'TOTAL_AMOUNT_DESC',
  WithdrawRequestsAverageAssetIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_ASC',
  WithdrawRequestsAverageAssetIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_DESC',
  WithdrawRequestsAverageBlockRangeAsc = 'WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_ASC',
  WithdrawRequestsAverageBlockRangeDesc = 'WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_DESC',
  WithdrawRequestsAverageCreatedAtAsc = 'WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_ASC',
  WithdrawRequestsAverageCreatedAtDesc = 'WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_DESC',
  WithdrawRequestsAverageCurrentAmountAsc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC',
  WithdrawRequestsAverageCurrentAmountDesc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC',
  WithdrawRequestsAverageCurrentStatusAsc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_ASC',
  WithdrawRequestsAverageCurrentStatusDesc = 'WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_DESC',
  WithdrawRequestsAverageDelegatorIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_ASC',
  WithdrawRequestsAverageDelegatorIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_DESC',
  WithdrawRequestsAverageDepositIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_ASC',
  WithdrawRequestsAverageDepositIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_DESC',
  WithdrawRequestsAverageIdAsc = 'WITHDRAW_REQUESTS_AVERAGE_ID_ASC',
  WithdrawRequestsAverageIdDesc = 'WITHDRAW_REQUESTS_AVERAGE_ID_DESC',
  WithdrawRequestsAverageRequestedRoundAsc = 'WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC',
  WithdrawRequestsAverageRequestedRoundDesc = 'WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC',
  WithdrawRequestsAverageUpdatedAtAsc = 'WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_ASC',
  WithdrawRequestsAverageUpdatedAtDesc = 'WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_DESC',
  WithdrawRequestsByDepositIdCountAsc = 'WITHDRAW_REQUESTS_BY_DEPOSIT_ID__COUNT_ASC',
  WithdrawRequestsByDepositIdCountDesc = 'WITHDRAW_REQUESTS_BY_DEPOSIT_ID__COUNT_DESC',
  WithdrawRequestsCountAsc = 'WITHDRAW_REQUESTS_COUNT_ASC',
  WithdrawRequestsCountDesc = 'WITHDRAW_REQUESTS_COUNT_DESC',
  WithdrawRequestsDistinctCountAssetIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC',
  WithdrawRequestsDistinctCountAssetIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC',
  WithdrawRequestsDistinctCountBlockRangeAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  WithdrawRequestsDistinctCountBlockRangeDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  WithdrawRequestsDistinctCountCreatedAtAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC',
  WithdrawRequestsDistinctCountCreatedAtDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC',
  WithdrawRequestsDistinctCountCurrentAmountAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC',
  WithdrawRequestsDistinctCountCurrentAmountDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC',
  WithdrawRequestsDistinctCountCurrentStatusAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC',
  WithdrawRequestsDistinctCountCurrentStatusDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC',
  WithdrawRequestsDistinctCountDelegatorIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  WithdrawRequestsDistinctCountDelegatorIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  WithdrawRequestsDistinctCountDepositIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_ASC',
  WithdrawRequestsDistinctCountDepositIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_DESC',
  WithdrawRequestsDistinctCountIdAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_ASC',
  WithdrawRequestsDistinctCountIdDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_DESC',
  WithdrawRequestsDistinctCountRequestedRoundAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC',
  WithdrawRequestsDistinctCountRequestedRoundDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC',
  WithdrawRequestsDistinctCountUpdatedAtAsc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC',
  WithdrawRequestsDistinctCountUpdatedAtDesc = 'WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC',
  WithdrawRequestsMaxAssetIdAsc = 'WITHDRAW_REQUESTS_MAX_ASSET_ID_ASC',
  WithdrawRequestsMaxAssetIdDesc = 'WITHDRAW_REQUESTS_MAX_ASSET_ID_DESC',
  WithdrawRequestsMaxBlockRangeAsc = 'WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_ASC',
  WithdrawRequestsMaxBlockRangeDesc = 'WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_DESC',
  WithdrawRequestsMaxCreatedAtAsc = 'WITHDRAW_REQUESTS_MAX_CREATED_AT_ASC',
  WithdrawRequestsMaxCreatedAtDesc = 'WITHDRAW_REQUESTS_MAX_CREATED_AT_DESC',
  WithdrawRequestsMaxCurrentAmountAsc = 'WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_ASC',
  WithdrawRequestsMaxCurrentAmountDesc = 'WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_DESC',
  WithdrawRequestsMaxCurrentStatusAsc = 'WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_ASC',
  WithdrawRequestsMaxCurrentStatusDesc = 'WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_DESC',
  WithdrawRequestsMaxDelegatorIdAsc = 'WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_ASC',
  WithdrawRequestsMaxDelegatorIdDesc = 'WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_DESC',
  WithdrawRequestsMaxDepositIdAsc = 'WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_ASC',
  WithdrawRequestsMaxDepositIdDesc = 'WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_DESC',
  WithdrawRequestsMaxIdAsc = 'WITHDRAW_REQUESTS_MAX_ID_ASC',
  WithdrawRequestsMaxIdDesc = 'WITHDRAW_REQUESTS_MAX_ID_DESC',
  WithdrawRequestsMaxRequestedRoundAsc = 'WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_ASC',
  WithdrawRequestsMaxRequestedRoundDesc = 'WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_DESC',
  WithdrawRequestsMaxUpdatedAtAsc = 'WITHDRAW_REQUESTS_MAX_UPDATED_AT_ASC',
  WithdrawRequestsMaxUpdatedAtDesc = 'WITHDRAW_REQUESTS_MAX_UPDATED_AT_DESC',
  WithdrawRequestsMinAssetIdAsc = 'WITHDRAW_REQUESTS_MIN_ASSET_ID_ASC',
  WithdrawRequestsMinAssetIdDesc = 'WITHDRAW_REQUESTS_MIN_ASSET_ID_DESC',
  WithdrawRequestsMinBlockRangeAsc = 'WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_ASC',
  WithdrawRequestsMinBlockRangeDesc = 'WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_DESC',
  WithdrawRequestsMinCreatedAtAsc = 'WITHDRAW_REQUESTS_MIN_CREATED_AT_ASC',
  WithdrawRequestsMinCreatedAtDesc = 'WITHDRAW_REQUESTS_MIN_CREATED_AT_DESC',
  WithdrawRequestsMinCurrentAmountAsc = 'WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_ASC',
  WithdrawRequestsMinCurrentAmountDesc = 'WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_DESC',
  WithdrawRequestsMinCurrentStatusAsc = 'WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_ASC',
  WithdrawRequestsMinCurrentStatusDesc = 'WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_DESC',
  WithdrawRequestsMinDelegatorIdAsc = 'WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_ASC',
  WithdrawRequestsMinDelegatorIdDesc = 'WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_DESC',
  WithdrawRequestsMinDepositIdAsc = 'WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_ASC',
  WithdrawRequestsMinDepositIdDesc = 'WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_DESC',
  WithdrawRequestsMinIdAsc = 'WITHDRAW_REQUESTS_MIN_ID_ASC',
  WithdrawRequestsMinIdDesc = 'WITHDRAW_REQUESTS_MIN_ID_DESC',
  WithdrawRequestsMinRequestedRoundAsc = 'WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_ASC',
  WithdrawRequestsMinRequestedRoundDesc = 'WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_DESC',
  WithdrawRequestsMinUpdatedAtAsc = 'WITHDRAW_REQUESTS_MIN_UPDATED_AT_ASC',
  WithdrawRequestsMinUpdatedAtDesc = 'WITHDRAW_REQUESTS_MIN_UPDATED_AT_DESC',
  WithdrawRequestsStddevPopulationAssetIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC',
  WithdrawRequestsStddevPopulationAssetIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC',
  WithdrawRequestsStddevPopulationBlockRangeAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  WithdrawRequestsStddevPopulationBlockRangeDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  WithdrawRequestsStddevPopulationCreatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC',
  WithdrawRequestsStddevPopulationCreatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC',
  WithdrawRequestsStddevPopulationCurrentAmountAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC',
  WithdrawRequestsStddevPopulationCurrentAmountDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC',
  WithdrawRequestsStddevPopulationCurrentStatusAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC',
  WithdrawRequestsStddevPopulationCurrentStatusDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC',
  WithdrawRequestsStddevPopulationDelegatorIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  WithdrawRequestsStddevPopulationDelegatorIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  WithdrawRequestsStddevPopulationDepositIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_ASC',
  WithdrawRequestsStddevPopulationDepositIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_DESC',
  WithdrawRequestsStddevPopulationIdAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_ASC',
  WithdrawRequestsStddevPopulationIdDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_DESC',
  WithdrawRequestsStddevPopulationRequestedRoundAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC',
  WithdrawRequestsStddevPopulationRequestedRoundDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC',
  WithdrawRequestsStddevPopulationUpdatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC',
  WithdrawRequestsStddevPopulationUpdatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC',
  WithdrawRequestsStddevSampleAssetIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC',
  WithdrawRequestsStddevSampleAssetIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC',
  WithdrawRequestsStddevSampleBlockRangeAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  WithdrawRequestsStddevSampleBlockRangeDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  WithdrawRequestsStddevSampleCreatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  WithdrawRequestsStddevSampleCreatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  WithdrawRequestsStddevSampleCurrentAmountAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC',
  WithdrawRequestsStddevSampleCurrentAmountDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC',
  WithdrawRequestsStddevSampleCurrentStatusAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC',
  WithdrawRequestsStddevSampleCurrentStatusDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC',
  WithdrawRequestsStddevSampleDelegatorIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  WithdrawRequestsStddevSampleDelegatorIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  WithdrawRequestsStddevSampleDepositIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_ASC',
  WithdrawRequestsStddevSampleDepositIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_DESC',
  WithdrawRequestsStddevSampleIdAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_ASC',
  WithdrawRequestsStddevSampleIdDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_DESC',
  WithdrawRequestsStddevSampleRequestedRoundAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC',
  WithdrawRequestsStddevSampleRequestedRoundDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC',
  WithdrawRequestsStddevSampleUpdatedAtAsc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC',
  WithdrawRequestsStddevSampleUpdatedAtDesc = 'WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC',
  WithdrawRequestsSumAssetIdAsc = 'WITHDRAW_REQUESTS_SUM_ASSET_ID_ASC',
  WithdrawRequestsSumAssetIdDesc = 'WITHDRAW_REQUESTS_SUM_ASSET_ID_DESC',
  WithdrawRequestsSumBlockRangeAsc = 'WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_ASC',
  WithdrawRequestsSumBlockRangeDesc = 'WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_DESC',
  WithdrawRequestsSumCreatedAtAsc = 'WITHDRAW_REQUESTS_SUM_CREATED_AT_ASC',
  WithdrawRequestsSumCreatedAtDesc = 'WITHDRAW_REQUESTS_SUM_CREATED_AT_DESC',
  WithdrawRequestsSumCurrentAmountAsc = 'WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_ASC',
  WithdrawRequestsSumCurrentAmountDesc = 'WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_DESC',
  WithdrawRequestsSumCurrentStatusAsc = 'WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_ASC',
  WithdrawRequestsSumCurrentStatusDesc = 'WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_DESC',
  WithdrawRequestsSumDelegatorIdAsc = 'WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_ASC',
  WithdrawRequestsSumDelegatorIdDesc = 'WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_DESC',
  WithdrawRequestsSumDepositIdAsc = 'WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_ASC',
  WithdrawRequestsSumDepositIdDesc = 'WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_DESC',
  WithdrawRequestsSumIdAsc = 'WITHDRAW_REQUESTS_SUM_ID_ASC',
  WithdrawRequestsSumIdDesc = 'WITHDRAW_REQUESTS_SUM_ID_DESC',
  WithdrawRequestsSumRequestedRoundAsc = 'WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_ASC',
  WithdrawRequestsSumRequestedRoundDesc = 'WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_DESC',
  WithdrawRequestsSumUpdatedAtAsc = 'WITHDRAW_REQUESTS_SUM_UPDATED_AT_ASC',
  WithdrawRequestsSumUpdatedAtDesc = 'WITHDRAW_REQUESTS_SUM_UPDATED_AT_DESC',
  WithdrawRequestsVariancePopulationAssetIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC',
  WithdrawRequestsVariancePopulationAssetIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC',
  WithdrawRequestsVariancePopulationBlockRangeAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  WithdrawRequestsVariancePopulationBlockRangeDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  WithdrawRequestsVariancePopulationCreatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  WithdrawRequestsVariancePopulationCreatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  WithdrawRequestsVariancePopulationCurrentAmountAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC',
  WithdrawRequestsVariancePopulationCurrentAmountDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC',
  WithdrawRequestsVariancePopulationCurrentStatusAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC',
  WithdrawRequestsVariancePopulationCurrentStatusDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC',
  WithdrawRequestsVariancePopulationDelegatorIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  WithdrawRequestsVariancePopulationDelegatorIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  WithdrawRequestsVariancePopulationDepositIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_ASC',
  WithdrawRequestsVariancePopulationDepositIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_DESC',
  WithdrawRequestsVariancePopulationIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_ASC',
  WithdrawRequestsVariancePopulationIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_DESC',
  WithdrawRequestsVariancePopulationRequestedRoundAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC',
  WithdrawRequestsVariancePopulationRequestedRoundDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC',
  WithdrawRequestsVariancePopulationUpdatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC',
  WithdrawRequestsVariancePopulationUpdatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC',
  WithdrawRequestsVarianceSampleAssetIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  WithdrawRequestsVarianceSampleAssetIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  WithdrawRequestsVarianceSampleBlockRangeAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  WithdrawRequestsVarianceSampleBlockRangeDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  WithdrawRequestsVarianceSampleCreatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  WithdrawRequestsVarianceSampleCreatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  WithdrawRequestsVarianceSampleCurrentAmountAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC',
  WithdrawRequestsVarianceSampleCurrentAmountDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC',
  WithdrawRequestsVarianceSampleCurrentStatusAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC',
  WithdrawRequestsVarianceSampleCurrentStatusDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC',
  WithdrawRequestsVarianceSampleDelegatorIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  WithdrawRequestsVarianceSampleDelegatorIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  WithdrawRequestsVarianceSampleDepositIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_ASC',
  WithdrawRequestsVarianceSampleDepositIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_DESC',
  WithdrawRequestsVarianceSampleIdAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_ASC',
  WithdrawRequestsVarianceSampleIdDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_DESC',
  WithdrawRequestsVarianceSampleRequestedRoundAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC',
  WithdrawRequestsVarianceSampleRequestedRoundDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC',
  WithdrawRequestsVarianceSampleUpdatedAtAsc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC',
  WithdrawRequestsVarianceSampleUpdatedAtDesc = 'WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC'
}

/** A filter to be used against Float fields. All fields are combined with a logical ‘and.’ */
export type FloatFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Float']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Float']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Float']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Float']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Float']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Float']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type HavingBigfloatFilter = {
  equalTo?: InputMaybe<Scalars['BigFloat']['input']>;
  greaterThan?: InputMaybe<Scalars['BigFloat']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  lessThan?: InputMaybe<Scalars['BigFloat']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  notEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type HavingDatetimeFilter = {
  equalTo?: InputMaybe<Scalars['Datetime']['input']>;
  greaterThan?: InputMaybe<Scalars['Datetime']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  lessThan?: InputMaybe<Scalars['Datetime']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  notEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
};

export type HavingFloatFilter = {
  equalTo?: InputMaybe<Scalars['Float']['input']>;
  greaterThan?: InputMaybe<Scalars['Float']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  lessThan?: InputMaybe<Scalars['Float']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Float']['input']>;
  notEqualTo?: InputMaybe<Scalars['Float']['input']>;
};

export type HavingIntFilter = {
  equalTo?: InputMaybe<Scalars['Int']['input']>;
  greaterThan?: InputMaybe<Scalars['Int']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  lessThan?: InputMaybe<Scalars['Int']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  notEqualTo?: InputMaybe<Scalars['Int']['input']>;
};

/** A filter to be used against Int fields. All fields are combined with a logical ‘and.’ */
export type IntFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Int']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Int']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Int']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Int']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Int']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** A filter to be used against JSON fields. All fields are combined with a logical ‘and.’ */
export type JsonFilter = {
  /** Contained by the specified JSON. */
  containedBy?: InputMaybe<Scalars['JSON']['input']>;
  /** Contains the specified JSON. */
  contains?: InputMaybe<Scalars['JSON']['input']>;
  /** Contains all of the specified keys. */
  containsAllKeys?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Contains any of the specified keys. */
  containsAnyKeys?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Contains the specified key. */
  containsKey?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['JSON']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['JSON']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['JSON']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['JSON']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['JSON']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['JSON']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['JSON']['input']>>;
};

export type JobCall = Node & {
  __typename?: 'JobCall';
  /** Reads a single `Account` that is related to this `JobCall`. */
  caller?: Maybe<Account>;
  /** The caller of the Job. */
  callerId: Scalars['String']['output'];
  /** The creation block number of the Job Call. */
  createdAt: Scalars['Int']['output'];
  /** Unique identifier for the Job Call. */
  id: Scalars['String']['output'];
  /** The job ID of the Job Call. */
  jobId: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByJobResultJobCallIdAndOperatorId: JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyConnection;
  /** Reads a single `Service` that is related to this `JobCall`. */
  service?: Maybe<Service>;
  /** The Service associated with this Job Call. */
  serviceId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Service`. */
  servicesByJobResultJobCallIdAndServiceId: JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyConnection;
};


export type JobCallJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type JobCallOperatorsByJobResultJobCallIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type JobCallServicesByJobResultJobCallIdAndServiceIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type JobCallAggregates = {
  __typename?: 'JobCallAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<JobCallAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<JobCallDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<JobCallMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<JobCallMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<JobCallStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<JobCallStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<JobCallSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<JobCallVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<JobCallVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `JobCall` object types. */
export type JobCallAggregatesFilter = {
  /** Mean average aggregate over matching `JobCall` objects. */
  average?: InputMaybe<JobCallAverageAggregateFilter>;
  /** Distinct count aggregate over matching `JobCall` objects. */
  distinctCount?: InputMaybe<JobCallDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `JobCall` object to be included within the aggregate. */
  filter?: InputMaybe<JobCallFilter>;
  /** Maximum aggregate over matching `JobCall` objects. */
  max?: InputMaybe<JobCallMaxAggregateFilter>;
  /** Minimum aggregate over matching `JobCall` objects. */
  min?: InputMaybe<JobCallMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `JobCall` objects. */
  stddevPopulation?: InputMaybe<JobCallStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `JobCall` objects. */
  stddevSample?: InputMaybe<JobCallStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `JobCall` objects. */
  sum?: InputMaybe<JobCallSumAggregateFilter>;
  /** Population variance aggregate over matching `JobCall` objects. */
  variancePopulation?: InputMaybe<JobCallVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `JobCall` objects. */
  varianceSample?: InputMaybe<JobCallVarianceSampleAggregateFilter>;
};

export type JobCallAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  jobId?: InputMaybe<BigFloatFilter>;
};

export type JobCallAverageAggregates = {
  __typename?: 'JobCallAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of jobId across the matching connection */
  jobId?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobCallDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  callerId?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  jobId?: InputMaybe<BigIntFilter>;
  serviceId?: InputMaybe<BigIntFilter>;
};

export type JobCallDistinctCountAggregates = {
  __typename?: 'JobCallDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of callerId across the matching connection */
  callerId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of jobId across the matching connection */
  jobId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of serviceId across the matching connection */
  serviceId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `JobCall` object types. All fields are combined with a logical ‘and.’ */
export type JobCallFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<JobCallFilter>>;
  /** Filter by the object’s `caller` relation. */
  caller?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `callerId` field. */
  callerId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `jobId` field. */
  jobId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `jobResults` relation. */
  jobResults?: InputMaybe<JobCallToManyJobResultFilter>;
  /** Some related `jobResults` exist. */
  jobResultsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Negates the expression. */
  not?: InputMaybe<JobCallFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<JobCallFilter>>;
  /** Filter by the object’s `service` relation. */
  service?: InputMaybe<ServiceFilter>;
  /** Filter by the object’s `serviceId` field. */
  serviceId?: InputMaybe<StringFilter>;
};

export type JobCallMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  jobId?: InputMaybe<IntFilter>;
};

export type JobCallMaxAggregates = {
  __typename?: 'JobCallMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of jobId across the matching connection */
  jobId?: Maybe<Scalars['Int']['output']>;
};

export type JobCallMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  jobId?: InputMaybe<IntFilter>;
};

export type JobCallMinAggregates = {
  __typename?: 'JobCallMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of jobId across the matching connection */
  jobId?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of `Operator` values, with data from `JobResult`. */
export type JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyConnection = {
  __typename?: 'JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `JobResult`, and the cursor to aid in pagination. */
  edges: Array<JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `JobResult`. */
export type JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `JobResult`. */
export type JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyEdge = {
  __typename?: 'JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
};


/** A `Operator` edge in the connection, with data from `JobResult`. */
export type JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyEdgeJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Service` values, with data from `JobResult`. */
export type JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyConnection = {
  __typename?: 'JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceAggregates>;
  /** A list of edges which contains the `Service`, info from the `JobResult`, and the cursor to aid in pagination. */
  edges: Array<JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceAggregates>>;
  /** A list of `Service` objects. */
  nodes: Array<Maybe<Service>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Service` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Service` values, with data from `JobResult`. */
export type JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServicesGroupBy>;
  having?: InputMaybe<ServicesHavingInput>;
};

/** A `Service` edge in the connection, with data from `JobResult`. */
export type JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyEdge = {
  __typename?: 'JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** The `Service` at the end of the edge. */
  node?: Maybe<Service>;
};


/** A `Service` edge in the connection, with data from `JobResult`. */
export type JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyEdgeJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type JobCallStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  jobId?: InputMaybe<BigFloatFilter>;
};

export type JobCallStddevPopulationAggregates = {
  __typename?: 'JobCallStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of jobId across the matching connection */
  jobId?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobCallStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  jobId?: InputMaybe<BigFloatFilter>;
};

export type JobCallStddevSampleAggregates = {
  __typename?: 'JobCallStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of jobId across the matching connection */
  jobId?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobCallSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
  jobId?: InputMaybe<BigIntFilter>;
};

export type JobCallSumAggregates = {
  __typename?: 'JobCallSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
  /** Sum of jobId across the matching connection */
  jobId: Scalars['BigInt']['output'];
};

/** A filter to be used against many `JobResult` object types. All fields are combined with a logical ‘and.’ */
export type JobCallToManyJobResultFilter = {
  /** Aggregates across related `JobResult` match the filter criteria. */
  aggregates?: InputMaybe<JobResultAggregatesFilter>;
  /** Every related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<JobResultFilter>;
  /** No related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<JobResultFilter>;
  /** Some related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<JobResultFilter>;
};

export type JobCallVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  jobId?: InputMaybe<BigFloatFilter>;
};

export type JobCallVariancePopulationAggregates = {
  __typename?: 'JobCallVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of jobId across the matching connection */
  jobId?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobCallVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  jobId?: InputMaybe<BigFloatFilter>;
};

export type JobCallVarianceSampleAggregates = {
  __typename?: 'JobCallVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of jobId across the matching connection */
  jobId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `JobCall` values. */
export type JobCallsConnection = {
  __typename?: 'JobCallsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<JobCallAggregates>;
  /** A list of edges which contains the `JobCall` and cursor to aid in pagination. */
  edges: Array<JobCallsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<JobCallAggregates>>;
  /** A list of `JobCall` objects. */
  nodes: Array<Maybe<JobCall>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `JobCall` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `JobCall` values. */
export type JobCallsConnectionGroupedAggregatesArgs = {
  groupBy: Array<JobCallsGroupBy>;
  having?: InputMaybe<JobCallsHavingInput>;
};

/** A `JobCall` edge in the connection. */
export type JobCallsEdge = {
  __typename?: 'JobCallsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `JobCall` at the end of the edge. */
  node?: Maybe<JobCall>;
};

/** Grouping methods for `JobCall` for usage during aggregation. */
export enum JobCallsGroupBy {
  CallerId = 'CALLER_ID',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  JobId = 'JOB_ID',
  ServiceId = 'SERVICE_ID'
}

export type JobCallsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

export type JobCallsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `JobCall` aggregates. */
export type JobCallsHavingInput = {
  AND?: InputMaybe<Array<JobCallsHavingInput>>;
  OR?: InputMaybe<Array<JobCallsHavingInput>>;
  average?: InputMaybe<JobCallsHavingAverageInput>;
  distinctCount?: InputMaybe<JobCallsHavingDistinctCountInput>;
  max?: InputMaybe<JobCallsHavingMaxInput>;
  min?: InputMaybe<JobCallsHavingMinInput>;
  stddevPopulation?: InputMaybe<JobCallsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<JobCallsHavingStddevSampleInput>;
  sum?: InputMaybe<JobCallsHavingSumInput>;
  variancePopulation?: InputMaybe<JobCallsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<JobCallsHavingVarianceSampleInput>;
};

export type JobCallsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

export type JobCallsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

export type JobCallsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

export type JobCallsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

export type JobCallsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

export type JobCallsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

export type JobCallsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  jobId?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `JobCall`. */
export enum JobCallsOrderBy {
  AccountByCallerIdCreatedAtAsc = 'ACCOUNT_BY_CALLER_ID__CREATED_AT_ASC',
  AccountByCallerIdCreatedAtDesc = 'ACCOUNT_BY_CALLER_ID__CREATED_AT_DESC',
  AccountByCallerIdIdAsc = 'ACCOUNT_BY_CALLER_ID__ID_ASC',
  AccountByCallerIdIdDesc = 'ACCOUNT_BY_CALLER_ID__ID_DESC',
  AccountByCallerIdLastUpdateAtAsc = 'ACCOUNT_BY_CALLER_ID__LAST_UPDATE_AT_ASC',
  AccountByCallerIdLastUpdateAtDesc = 'ACCOUNT_BY_CALLER_ID__LAST_UPDATE_AT_DESC',
  AccountByCallerIdTotalPointsAsc = 'ACCOUNT_BY_CALLER_ID__TOTAL_POINTS_ASC',
  AccountByCallerIdTotalPointsDesc = 'ACCOUNT_BY_CALLER_ID__TOTAL_POINTS_DESC',
  CallerIdAsc = 'CALLER_ID_ASC',
  CallerIdDesc = 'CALLER_ID_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  JobIdAsc = 'JOB_ID_ASC',
  JobIdDesc = 'JOB_ID_DESC',
  JobResultsAverageBlockRangeAsc = 'JOB_RESULTS_AVERAGE_BLOCK_RANGE_ASC',
  JobResultsAverageBlockRangeDesc = 'JOB_RESULTS_AVERAGE_BLOCK_RANGE_DESC',
  JobResultsAverageCreatedAtAsc = 'JOB_RESULTS_AVERAGE_CREATED_AT_ASC',
  JobResultsAverageCreatedAtDesc = 'JOB_RESULTS_AVERAGE_CREATED_AT_DESC',
  JobResultsAverageIdAsc = 'JOB_RESULTS_AVERAGE_ID_ASC',
  JobResultsAverageIdDesc = 'JOB_RESULTS_AVERAGE_ID_DESC',
  JobResultsAverageJobCallIdAsc = 'JOB_RESULTS_AVERAGE_JOB_CALL_ID_ASC',
  JobResultsAverageJobCallIdDesc = 'JOB_RESULTS_AVERAGE_JOB_CALL_ID_DESC',
  JobResultsAverageOperatorIdAsc = 'JOB_RESULTS_AVERAGE_OPERATOR_ID_ASC',
  JobResultsAverageOperatorIdDesc = 'JOB_RESULTS_AVERAGE_OPERATOR_ID_DESC',
  JobResultsAverageServiceIdAsc = 'JOB_RESULTS_AVERAGE_SERVICE_ID_ASC',
  JobResultsAverageServiceIdDesc = 'JOB_RESULTS_AVERAGE_SERVICE_ID_DESC',
  JobResultsByJobCallIdCountAsc = 'JOB_RESULTS_BY_JOB_CALL_ID__COUNT_ASC',
  JobResultsByJobCallIdCountDesc = 'JOB_RESULTS_BY_JOB_CALL_ID__COUNT_DESC',
  JobResultsCountAsc = 'JOB_RESULTS_COUNT_ASC',
  JobResultsCountDesc = 'JOB_RESULTS_COUNT_DESC',
  JobResultsDistinctCountBlockRangeAsc = 'JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  JobResultsDistinctCountBlockRangeDesc = 'JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  JobResultsDistinctCountCreatedAtAsc = 'JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_ASC',
  JobResultsDistinctCountCreatedAtDesc = 'JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_DESC',
  JobResultsDistinctCountIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_ID_ASC',
  JobResultsDistinctCountIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_ID_DESC',
  JobResultsDistinctCountJobCallIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_ASC',
  JobResultsDistinctCountJobCallIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_DESC',
  JobResultsDistinctCountOperatorIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  JobResultsDistinctCountOperatorIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  JobResultsDistinctCountServiceIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_ASC',
  JobResultsDistinctCountServiceIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_DESC',
  JobResultsMaxBlockRangeAsc = 'JOB_RESULTS_MAX_BLOCK_RANGE_ASC',
  JobResultsMaxBlockRangeDesc = 'JOB_RESULTS_MAX_BLOCK_RANGE_DESC',
  JobResultsMaxCreatedAtAsc = 'JOB_RESULTS_MAX_CREATED_AT_ASC',
  JobResultsMaxCreatedAtDesc = 'JOB_RESULTS_MAX_CREATED_AT_DESC',
  JobResultsMaxIdAsc = 'JOB_RESULTS_MAX_ID_ASC',
  JobResultsMaxIdDesc = 'JOB_RESULTS_MAX_ID_DESC',
  JobResultsMaxJobCallIdAsc = 'JOB_RESULTS_MAX_JOB_CALL_ID_ASC',
  JobResultsMaxJobCallIdDesc = 'JOB_RESULTS_MAX_JOB_CALL_ID_DESC',
  JobResultsMaxOperatorIdAsc = 'JOB_RESULTS_MAX_OPERATOR_ID_ASC',
  JobResultsMaxOperatorIdDesc = 'JOB_RESULTS_MAX_OPERATOR_ID_DESC',
  JobResultsMaxServiceIdAsc = 'JOB_RESULTS_MAX_SERVICE_ID_ASC',
  JobResultsMaxServiceIdDesc = 'JOB_RESULTS_MAX_SERVICE_ID_DESC',
  JobResultsMinBlockRangeAsc = 'JOB_RESULTS_MIN_BLOCK_RANGE_ASC',
  JobResultsMinBlockRangeDesc = 'JOB_RESULTS_MIN_BLOCK_RANGE_DESC',
  JobResultsMinCreatedAtAsc = 'JOB_RESULTS_MIN_CREATED_AT_ASC',
  JobResultsMinCreatedAtDesc = 'JOB_RESULTS_MIN_CREATED_AT_DESC',
  JobResultsMinIdAsc = 'JOB_RESULTS_MIN_ID_ASC',
  JobResultsMinIdDesc = 'JOB_RESULTS_MIN_ID_DESC',
  JobResultsMinJobCallIdAsc = 'JOB_RESULTS_MIN_JOB_CALL_ID_ASC',
  JobResultsMinJobCallIdDesc = 'JOB_RESULTS_MIN_JOB_CALL_ID_DESC',
  JobResultsMinOperatorIdAsc = 'JOB_RESULTS_MIN_OPERATOR_ID_ASC',
  JobResultsMinOperatorIdDesc = 'JOB_RESULTS_MIN_OPERATOR_ID_DESC',
  JobResultsMinServiceIdAsc = 'JOB_RESULTS_MIN_SERVICE_ID_ASC',
  JobResultsMinServiceIdDesc = 'JOB_RESULTS_MIN_SERVICE_ID_DESC',
  JobResultsStddevPopulationBlockRangeAsc = 'JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  JobResultsStddevPopulationBlockRangeDesc = 'JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  JobResultsStddevPopulationCreatedAtAsc = 'JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_ASC',
  JobResultsStddevPopulationCreatedAtDesc = 'JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_DESC',
  JobResultsStddevPopulationIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_ID_ASC',
  JobResultsStddevPopulationIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_ID_DESC',
  JobResultsStddevPopulationJobCallIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_ASC',
  JobResultsStddevPopulationJobCallIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_DESC',
  JobResultsStddevPopulationOperatorIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  JobResultsStddevPopulationOperatorIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  JobResultsStddevPopulationServiceIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_ASC',
  JobResultsStddevPopulationServiceIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_DESC',
  JobResultsStddevSampleBlockRangeAsc = 'JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  JobResultsStddevSampleBlockRangeDesc = 'JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  JobResultsStddevSampleCreatedAtAsc = 'JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  JobResultsStddevSampleCreatedAtDesc = 'JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  JobResultsStddevSampleIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_ID_ASC',
  JobResultsStddevSampleIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_ID_DESC',
  JobResultsStddevSampleJobCallIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_ASC',
  JobResultsStddevSampleJobCallIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_DESC',
  JobResultsStddevSampleOperatorIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  JobResultsStddevSampleOperatorIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  JobResultsStddevSampleServiceIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_ASC',
  JobResultsStddevSampleServiceIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_DESC',
  JobResultsSumBlockRangeAsc = 'JOB_RESULTS_SUM_BLOCK_RANGE_ASC',
  JobResultsSumBlockRangeDesc = 'JOB_RESULTS_SUM_BLOCK_RANGE_DESC',
  JobResultsSumCreatedAtAsc = 'JOB_RESULTS_SUM_CREATED_AT_ASC',
  JobResultsSumCreatedAtDesc = 'JOB_RESULTS_SUM_CREATED_AT_DESC',
  JobResultsSumIdAsc = 'JOB_RESULTS_SUM_ID_ASC',
  JobResultsSumIdDesc = 'JOB_RESULTS_SUM_ID_DESC',
  JobResultsSumJobCallIdAsc = 'JOB_RESULTS_SUM_JOB_CALL_ID_ASC',
  JobResultsSumJobCallIdDesc = 'JOB_RESULTS_SUM_JOB_CALL_ID_DESC',
  JobResultsSumOperatorIdAsc = 'JOB_RESULTS_SUM_OPERATOR_ID_ASC',
  JobResultsSumOperatorIdDesc = 'JOB_RESULTS_SUM_OPERATOR_ID_DESC',
  JobResultsSumServiceIdAsc = 'JOB_RESULTS_SUM_SERVICE_ID_ASC',
  JobResultsSumServiceIdDesc = 'JOB_RESULTS_SUM_SERVICE_ID_DESC',
  JobResultsVariancePopulationBlockRangeAsc = 'JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  JobResultsVariancePopulationBlockRangeDesc = 'JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  JobResultsVariancePopulationCreatedAtAsc = 'JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  JobResultsVariancePopulationCreatedAtDesc = 'JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  JobResultsVariancePopulationIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_ID_ASC',
  JobResultsVariancePopulationIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_ID_DESC',
  JobResultsVariancePopulationJobCallIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_ASC',
  JobResultsVariancePopulationJobCallIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_DESC',
  JobResultsVariancePopulationOperatorIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  JobResultsVariancePopulationOperatorIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  JobResultsVariancePopulationServiceIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_ASC',
  JobResultsVariancePopulationServiceIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_DESC',
  JobResultsVarianceSampleBlockRangeAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  JobResultsVarianceSampleBlockRangeDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  JobResultsVarianceSampleCreatedAtAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  JobResultsVarianceSampleCreatedAtDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  JobResultsVarianceSampleIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_ID_ASC',
  JobResultsVarianceSampleIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_ID_DESC',
  JobResultsVarianceSampleJobCallIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_ASC',
  JobResultsVarianceSampleJobCallIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_DESC',
  JobResultsVarianceSampleOperatorIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  JobResultsVarianceSampleOperatorIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  JobResultsVarianceSampleServiceIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_ASC',
  JobResultsVarianceSampleServiceIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ServiceByServiceIdAssetIdsAsc = 'SERVICE_BY_SERVICE_ID__ASSET_IDS_ASC',
  ServiceByServiceIdAssetIdsDesc = 'SERVICE_BY_SERVICE_ID__ASSET_IDS_DESC',
  ServiceByServiceIdBlueprintIdAsc = 'SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_ASC',
  ServiceByServiceIdBlueprintIdDesc = 'SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_DESC',
  ServiceByServiceIdCreatedAtAsc = 'SERVICE_BY_SERVICE_ID__CREATED_AT_ASC',
  ServiceByServiceIdCreatedAtDesc = 'SERVICE_BY_SERVICE_ID__CREATED_AT_DESC',
  ServiceByServiceIdIdAsc = 'SERVICE_BY_SERVICE_ID__ID_ASC',
  ServiceByServiceIdIdDesc = 'SERVICE_BY_SERVICE_ID__ID_DESC',
  ServiceByServiceIdOwnerIdAsc = 'SERVICE_BY_SERVICE_ID__OWNER_ID_ASC',
  ServiceByServiceIdOwnerIdDesc = 'SERVICE_BY_SERVICE_ID__OWNER_ID_DESC',
  ServiceByServiceIdServiceRequestIdAsc = 'SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_ASC',
  ServiceByServiceIdServiceRequestIdDesc = 'SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_DESC',
  ServiceByServiceIdTerminatedAtAsc = 'SERVICE_BY_SERVICE_ID__TERMINATED_AT_ASC',
  ServiceByServiceIdTerminatedAtDesc = 'SERVICE_BY_SERVICE_ID__TERMINATED_AT_DESC',
  ServiceIdAsc = 'SERVICE_ID_ASC',
  ServiceIdDesc = 'SERVICE_ID_DESC'
}

export type JobResult = Node & {
  __typename?: 'JobResult';
  /** The creation block number of the Job Result. */
  createdAt: Scalars['Int']['output'];
  /** Unique identifier for the Job Result. Composite key: Service ID + Job Call ID */
  id: Scalars['String']['output'];
  /** Reads a single `JobCall` that is related to this `JobResult`. */
  jobCall?: Maybe<JobCall>;
  /** The Job Call associated with this Job Result. */
  jobCallId: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `JobResult`. */
  operator?: Maybe<Operator>;
  /** The operator that executed the Job. */
  operatorId: Scalars['String']['output'];
  /** Reads a single `Service` that is related to this `JobResult`. */
  service?: Maybe<Service>;
  /** The Service associated with this Job Result. */
  serviceId: Scalars['String']['output'];
};

export type JobResultAggregates = {
  __typename?: 'JobResultAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<JobResultAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<JobResultDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<JobResultMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<JobResultMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<JobResultStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<JobResultStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<JobResultSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<JobResultVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<JobResultVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `JobResult` object types. */
export type JobResultAggregatesFilter = {
  /** Mean average aggregate over matching `JobResult` objects. */
  average?: InputMaybe<JobResultAverageAggregateFilter>;
  /** Distinct count aggregate over matching `JobResult` objects. */
  distinctCount?: InputMaybe<JobResultDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `JobResult` object to be included within the aggregate. */
  filter?: InputMaybe<JobResultFilter>;
  /** Maximum aggregate over matching `JobResult` objects. */
  max?: InputMaybe<JobResultMaxAggregateFilter>;
  /** Minimum aggregate over matching `JobResult` objects. */
  min?: InputMaybe<JobResultMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `JobResult` objects. */
  stddevPopulation?: InputMaybe<JobResultStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `JobResult` objects. */
  stddevSample?: InputMaybe<JobResultStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `JobResult` objects. */
  sum?: InputMaybe<JobResultSumAggregateFilter>;
  /** Population variance aggregate over matching `JobResult` objects. */
  variancePopulation?: InputMaybe<JobResultVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `JobResult` objects. */
  varianceSample?: InputMaybe<JobResultVarianceSampleAggregateFilter>;
};

export type JobResultAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type JobResultAverageAggregates = {
  __typename?: 'JobResultAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobResultDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  jobCallId?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
  serviceId?: InputMaybe<BigIntFilter>;
};

export type JobResultDistinctCountAggregates = {
  __typename?: 'JobResultDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of jobCallId across the matching connection */
  jobCallId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of serviceId across the matching connection */
  serviceId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `JobResult` object types. All fields are combined with a logical ‘and.’ */
export type JobResultFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<JobResultFilter>>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `jobCall` relation. */
  jobCall?: InputMaybe<JobCallFilter>;
  /** Filter by the object’s `jobCallId` field. */
  jobCallId?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<JobResultFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<JobResultFilter>>;
  /** Filter by the object’s `service` relation. */
  service?: InputMaybe<ServiceFilter>;
  /** Filter by the object’s `serviceId` field. */
  serviceId?: InputMaybe<StringFilter>;
};

export type JobResultMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type JobResultMaxAggregates = {
  __typename?: 'JobResultMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type JobResultMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type JobResultMinAggregates = {
  __typename?: 'JobResultMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type JobResultStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type JobResultStddevPopulationAggregates = {
  __typename?: 'JobResultStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobResultStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type JobResultStddevSampleAggregates = {
  __typename?: 'JobResultStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobResultSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
};

export type JobResultSumAggregates = {
  __typename?: 'JobResultSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
};

export type JobResultVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type JobResultVariancePopulationAggregates = {
  __typename?: 'JobResultVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type JobResultVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type JobResultVarianceSampleAggregates = {
  __typename?: 'JobResultVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `JobResult` values. */
export type JobResultsConnection = {
  __typename?: 'JobResultsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<JobResultAggregates>;
  /** A list of edges which contains the `JobResult` and cursor to aid in pagination. */
  edges: Array<JobResultsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<JobResultAggregates>>;
  /** A list of `JobResult` objects. */
  nodes: Array<Maybe<JobResult>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `JobResult` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `JobResult` values. */
export type JobResultsConnectionGroupedAggregatesArgs = {
  groupBy: Array<JobResultsGroupBy>;
  having?: InputMaybe<JobResultsHavingInput>;
};

/** A `JobResult` edge in the connection. */
export type JobResultsEdge = {
  __typename?: 'JobResultsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `JobResult` at the end of the edge. */
  node?: Maybe<JobResult>;
};

/** Grouping methods for `JobResult` for usage during aggregation. */
export enum JobResultsGroupBy {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  JobCallId = 'JOB_CALL_ID',
  OperatorId = 'OPERATOR_ID',
  ServiceId = 'SERVICE_ID'
}

export type JobResultsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type JobResultsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `JobResult` aggregates. */
export type JobResultsHavingInput = {
  AND?: InputMaybe<Array<JobResultsHavingInput>>;
  OR?: InputMaybe<Array<JobResultsHavingInput>>;
  average?: InputMaybe<JobResultsHavingAverageInput>;
  distinctCount?: InputMaybe<JobResultsHavingDistinctCountInput>;
  max?: InputMaybe<JobResultsHavingMaxInput>;
  min?: InputMaybe<JobResultsHavingMinInput>;
  stddevPopulation?: InputMaybe<JobResultsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<JobResultsHavingStddevSampleInput>;
  sum?: InputMaybe<JobResultsHavingSumInput>;
  variancePopulation?: InputMaybe<JobResultsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<JobResultsHavingVarianceSampleInput>;
};

export type JobResultsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type JobResultsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type JobResultsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type JobResultsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type JobResultsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type JobResultsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type JobResultsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `JobResult`. */
export enum JobResultsOrderBy {
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  JobCallByJobCallIdCallerIdAsc = 'JOB_CALL_BY_JOB_CALL_ID__CALLER_ID_ASC',
  JobCallByJobCallIdCallerIdDesc = 'JOB_CALL_BY_JOB_CALL_ID__CALLER_ID_DESC',
  JobCallByJobCallIdCreatedAtAsc = 'JOB_CALL_BY_JOB_CALL_ID__CREATED_AT_ASC',
  JobCallByJobCallIdCreatedAtDesc = 'JOB_CALL_BY_JOB_CALL_ID__CREATED_AT_DESC',
  JobCallByJobCallIdIdAsc = 'JOB_CALL_BY_JOB_CALL_ID__ID_ASC',
  JobCallByJobCallIdIdDesc = 'JOB_CALL_BY_JOB_CALL_ID__ID_DESC',
  JobCallByJobCallIdJobIdAsc = 'JOB_CALL_BY_JOB_CALL_ID__JOB_ID_ASC',
  JobCallByJobCallIdJobIdDesc = 'JOB_CALL_BY_JOB_CALL_ID__JOB_ID_DESC',
  JobCallByJobCallIdServiceIdAsc = 'JOB_CALL_BY_JOB_CALL_ID__SERVICE_ID_ASC',
  JobCallByJobCallIdServiceIdDesc = 'JOB_CALL_BY_JOB_CALL_ID__SERVICE_ID_DESC',
  JobCallIdAsc = 'JOB_CALL_ID_ASC',
  JobCallIdDesc = 'JOB_CALL_ID_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ServiceByServiceIdAssetIdsAsc = 'SERVICE_BY_SERVICE_ID__ASSET_IDS_ASC',
  ServiceByServiceIdAssetIdsDesc = 'SERVICE_BY_SERVICE_ID__ASSET_IDS_DESC',
  ServiceByServiceIdBlueprintIdAsc = 'SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_ASC',
  ServiceByServiceIdBlueprintIdDesc = 'SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_DESC',
  ServiceByServiceIdCreatedAtAsc = 'SERVICE_BY_SERVICE_ID__CREATED_AT_ASC',
  ServiceByServiceIdCreatedAtDesc = 'SERVICE_BY_SERVICE_ID__CREATED_AT_DESC',
  ServiceByServiceIdIdAsc = 'SERVICE_BY_SERVICE_ID__ID_ASC',
  ServiceByServiceIdIdDesc = 'SERVICE_BY_SERVICE_ID__ID_DESC',
  ServiceByServiceIdOwnerIdAsc = 'SERVICE_BY_SERVICE_ID__OWNER_ID_ASC',
  ServiceByServiceIdOwnerIdDesc = 'SERVICE_BY_SERVICE_ID__OWNER_ID_DESC',
  ServiceByServiceIdServiceRequestIdAsc = 'SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_ASC',
  ServiceByServiceIdServiceRequestIdDesc = 'SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_DESC',
  ServiceByServiceIdTerminatedAtAsc = 'SERVICE_BY_SERVICE_ID__TERMINATED_AT_ASC',
  ServiceByServiceIdTerminatedAtDesc = 'SERVICE_BY_SERVICE_ID__TERMINATED_AT_DESC',
  ServiceIdAsc = 'SERVICE_ID_ASC',
  ServiceIdDesc = 'SERVICE_ID_DESC'
}

export type LstPool = Node & {
  __typename?: 'LstPool';
  /** Reads and enables pagination through a set of `Account`. */
  accountsByLstPoolMemberLstPoolIdAndAccountId: LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyConnection;
  /** The current state of the Lst Pool. */
  currentState: LstPoolState;
  /** Lst Pool's unique identifier. */
  id: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `LstPoolMember`. */
  members: LstPoolMembersConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `LstPoolStateChange`. */
  stateHistory: LstPoolStateChangesConnection;
  /** The total stake amount in the Lst Pool. */
  totalStake: Scalars['BigFloat']['output'];
};


export type LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Accounts_Distinct_Enum>>>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type LstPoolMembersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_Members_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolMemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolMembersOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type LstPoolStateHistoryArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_State_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolStateChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolStateChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Account` values, with data from `LstPoolMember`. */
export type LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyConnection = {
  __typename?: 'LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account`, info from the `LstPoolMember`, and the cursor to aid in pagination. */
  edges: Array<LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Maybe<Account>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values, with data from `LstPoolMember`. */
export type LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountsGroupBy>;
  having?: InputMaybe<AccountsHavingInput>;
};

/** A `Account` edge in the connection, with data from `LstPoolMember`. */
export type LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyEdge = {
  __typename?: 'LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `LstPoolMember`. */
  lstPoolMembers: LstPoolMembersConnection;
  /** The `Account` at the end of the edge. */
  node?: Maybe<Account>;
};


/** A `Account` edge in the connection, with data from `LstPoolMember`. */
export type LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyEdgeLstPoolMembersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_Members_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolMemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolMembersOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type LstPoolAggregates = {
  __typename?: 'LstPoolAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LstPoolAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LstPoolDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LstPoolMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LstPoolMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LstPoolStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LstPoolStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LstPoolSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LstPoolVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LstPoolVarianceSampleAggregates>;
};

export type LstPoolAverageAggregates = {
  __typename?: 'LstPoolAverageAggregates';
  /** Mean average of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolDistinctCountAggregates = {
  __typename?: 'LstPoolDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentState across the matching connection */
  currentState?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LstPool` object types. All fields are combined with a logical ‘and.’ */
export type LstPoolFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LstPoolFilter>>;
  /** Filter by the object’s `currentState` field. */
  currentState?: InputMaybe<LstPoolStateFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `members` relation. */
  members?: InputMaybe<LstPoolToManyLstPoolMemberFilter>;
  /** Some related `members` exist. */
  membersExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Negates the expression. */
  not?: InputMaybe<LstPoolFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LstPoolFilter>>;
  /** Filter by the object’s `stateHistory` relation. */
  stateHistory?: InputMaybe<LstPoolToManyLstPoolStateChangeFilter>;
  /** Some related `stateHistory` exist. */
  stateHistoryExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `totalStake` field. */
  totalStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMaxAggregates = {
  __typename?: 'LstPoolMaxAggregates';
  /** Maximum of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolMember = Node & {
  __typename?: 'LstPoolMember';
  /** Reads a single `Account` that is related to this `LstPoolMember`. */
  account?: Maybe<Account>;
  /** The account associated with this Lst Pool Member. */
  accountId: Scalars['String']['output'];
  /** The current stake amount of the member in the Lst Pool. */
  currentStake: Scalars['BigFloat']['output'];
  /** Unique identifier for the Lst Pool member. Composite key: LstPool ID + member ID */
  id: Scalars['String']['output'];
  /** Reads a single `LstPool` that is related to this `LstPoolMember`. */
  lstPool?: Maybe<LstPool>;
  /** The Lst Pool to which the member belongs. */
  lstPoolId: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `MemberStakeChange`. */
  stakeHistory: MemberStakeChangesConnection;
};


export type LstPoolMemberStakeHistoryArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Member_Stake_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<MemberStakeChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MemberStakeChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type LstPoolMemberAggregates = {
  __typename?: 'LstPoolMemberAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LstPoolMemberAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LstPoolMemberDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LstPoolMemberMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LstPoolMemberMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LstPoolMemberStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LstPoolMemberStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LstPoolMemberSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LstPoolMemberVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LstPoolMemberVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `LstPoolMember` object types. */
export type LstPoolMemberAggregatesFilter = {
  /** Mean average aggregate over matching `LstPoolMember` objects. */
  average?: InputMaybe<LstPoolMemberAverageAggregateFilter>;
  /** Distinct count aggregate over matching `LstPoolMember` objects. */
  distinctCount?: InputMaybe<LstPoolMemberDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `LstPoolMember` object to be included within the aggregate. */
  filter?: InputMaybe<LstPoolMemberFilter>;
  /** Maximum aggregate over matching `LstPoolMember` objects. */
  max?: InputMaybe<LstPoolMemberMaxAggregateFilter>;
  /** Minimum aggregate over matching `LstPoolMember` objects. */
  min?: InputMaybe<LstPoolMemberMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `LstPoolMember` objects. */
  stddevPopulation?: InputMaybe<LstPoolMemberStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `LstPoolMember` objects. */
  stddevSample?: InputMaybe<LstPoolMemberStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `LstPoolMember` objects. */
  sum?: InputMaybe<LstPoolMemberSumAggregateFilter>;
  /** Population variance aggregate over matching `LstPoolMember` objects. */
  variancePopulation?: InputMaybe<LstPoolMemberVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `LstPoolMember` objects. */
  varianceSample?: InputMaybe<LstPoolMemberVarianceSampleAggregateFilter>;
};

export type LstPoolMemberAverageAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberAverageAggregates = {
  __typename?: 'LstPoolMemberAverageAggregates';
  /** Mean average of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolMemberDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  accountId?: InputMaybe<BigIntFilter>;
  currentStake?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  lstPoolId?: InputMaybe<BigIntFilter>;
};

export type LstPoolMemberDistinctCountAggregates = {
  __typename?: 'LstPoolMemberDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lstPoolId across the matching connection */
  lstPoolId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LstPoolMember` object types. All fields are combined with a logical ‘and.’ */
export type LstPoolMemberFilter = {
  /** Filter by the object’s `account` relation. */
  account?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LstPoolMemberFilter>>;
  /** Filter by the object’s `currentStake` field. */
  currentStake?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `lstPool` relation. */
  lstPool?: InputMaybe<LstPoolFilter>;
  /** Filter by the object’s `lstPoolId` field. */
  lstPoolId?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LstPoolMemberFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LstPoolMemberFilter>>;
  /** Filter by the object’s `stakeHistory` relation. */
  stakeHistory?: InputMaybe<LstPoolMemberToManyMemberStakeChangeFilter>;
  /** Some related `stakeHistory` exist. */
  stakeHistoryExist?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LstPoolMemberMaxAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberMaxAggregates = {
  __typename?: 'LstPoolMemberMaxAggregates';
  /** Maximum of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolMemberMinAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberMinAggregates = {
  __typename?: 'LstPoolMemberMinAggregates';
  /** Minimum of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolMemberStddevPopulationAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberStddevPopulationAggregates = {
  __typename?: 'LstPoolMemberStddevPopulationAggregates';
  /** Population standard deviation of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolMemberStddevSampleAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberStddevSampleAggregates = {
  __typename?: 'LstPoolMemberStddevSampleAggregates';
  /** Sample standard deviation of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolMemberSumAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberSumAggregates = {
  __typename?: 'LstPoolMemberSumAggregates';
  /** Sum of currentStake across the matching connection */
  currentStake: Scalars['BigFloat']['output'];
};

/** A filter to be used against many `MemberStakeChange` object types. All fields are combined with a logical ‘and.’ */
export type LstPoolMemberToManyMemberStakeChangeFilter = {
  /** Aggregates across related `MemberStakeChange` match the filter criteria. */
  aggregates?: InputMaybe<MemberStakeChangeAggregatesFilter>;
  /** Every related `MemberStakeChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<MemberStakeChangeFilter>;
  /** No related `MemberStakeChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<MemberStakeChangeFilter>;
  /** Some related `MemberStakeChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<MemberStakeChangeFilter>;
};

export type LstPoolMemberVariancePopulationAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberVariancePopulationAggregates = {
  __typename?: 'LstPoolMemberVariancePopulationAggregates';
  /** Population variance of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolMemberVarianceSampleAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
};

export type LstPoolMemberVarianceSampleAggregates = {
  __typename?: 'LstPoolMemberVarianceSampleAggregates';
  /** Sample variance of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LstPoolMember` values. */
export type LstPoolMembersConnection = {
  __typename?: 'LstPoolMembersConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LstPoolMemberAggregates>;
  /** A list of edges which contains the `LstPoolMember` and cursor to aid in pagination. */
  edges: Array<LstPoolMembersEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LstPoolMemberAggregates>>;
  /** A list of `LstPoolMember` objects. */
  nodes: Array<Maybe<LstPoolMember>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LstPoolMember` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LstPoolMember` values. */
export type LstPoolMembersConnectionGroupedAggregatesArgs = {
  groupBy: Array<LstPoolMembersGroupBy>;
  having?: InputMaybe<LstPoolMembersHavingInput>;
};

/** A `LstPoolMember` edge in the connection. */
export type LstPoolMembersEdge = {
  __typename?: 'LstPoolMembersEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LstPoolMember` at the end of the edge. */
  node?: Maybe<LstPoolMember>;
};

/** Grouping methods for `LstPoolMember` for usage during aggregation. */
export enum LstPoolMembersGroupBy {
  AccountId = 'ACCOUNT_ID',
  CurrentStake = 'CURRENT_STAKE',
  Id = 'ID',
  LstPoolId = 'LST_POOL_ID'
}

export type LstPoolMembersHavingAverageInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolMembersHavingDistinctCountInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `LstPoolMember` aggregates. */
export type LstPoolMembersHavingInput = {
  AND?: InputMaybe<Array<LstPoolMembersHavingInput>>;
  OR?: InputMaybe<Array<LstPoolMembersHavingInput>>;
  average?: InputMaybe<LstPoolMembersHavingAverageInput>;
  distinctCount?: InputMaybe<LstPoolMembersHavingDistinctCountInput>;
  max?: InputMaybe<LstPoolMembersHavingMaxInput>;
  min?: InputMaybe<LstPoolMembersHavingMinInput>;
  stddevPopulation?: InputMaybe<LstPoolMembersHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LstPoolMembersHavingStddevSampleInput>;
  sum?: InputMaybe<LstPoolMembersHavingSumInput>;
  variancePopulation?: InputMaybe<LstPoolMembersHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LstPoolMembersHavingVarianceSampleInput>;
};

export type LstPoolMembersHavingMaxInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolMembersHavingMinInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolMembersHavingStddevPopulationInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolMembersHavingStddevSampleInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolMembersHavingSumInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolMembersHavingVariancePopulationInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolMembersHavingVarianceSampleInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
};

/** Methods to use when ordering `LstPoolMember`. */
export enum LstPoolMembersOrderBy {
  AccountByAccountIdCreatedAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC',
  AccountByAccountIdCreatedAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC',
  AccountByAccountIdIdAsc = 'ACCOUNT_BY_ACCOUNT_ID__ID_ASC',
  AccountByAccountIdIdDesc = 'ACCOUNT_BY_ACCOUNT_ID__ID_DESC',
  AccountByAccountIdLastUpdateAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC',
  AccountByAccountIdLastUpdateAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC',
  AccountByAccountIdTotalPointsAsc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC',
  AccountByAccountIdTotalPointsDesc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC',
  AccountIdAsc = 'ACCOUNT_ID_ASC',
  AccountIdDesc = 'ACCOUNT_ID_DESC',
  CurrentStakeAsc = 'CURRENT_STAKE_ASC',
  CurrentStakeDesc = 'CURRENT_STAKE_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  LstPoolByLstPoolIdCurrentStateAsc = 'LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_ASC',
  LstPoolByLstPoolIdCurrentStateDesc = 'LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_DESC',
  LstPoolByLstPoolIdIdAsc = 'LST_POOL_BY_LST_POOL_ID__ID_ASC',
  LstPoolByLstPoolIdIdDesc = 'LST_POOL_BY_LST_POOL_ID__ID_DESC',
  LstPoolByLstPoolIdTotalStakeAsc = 'LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_ASC',
  LstPoolByLstPoolIdTotalStakeDesc = 'LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_DESC',
  LstPoolIdAsc = 'LST_POOL_ID_ASC',
  LstPoolIdDesc = 'LST_POOL_ID_DESC',
  MemberStakeChangesByMemberIdCountAsc = 'MEMBER_STAKE_CHANGES_BY_MEMBER_ID__COUNT_ASC',
  MemberStakeChangesByMemberIdCountDesc = 'MEMBER_STAKE_CHANGES_BY_MEMBER_ID__COUNT_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  StakeHistoryAverageAmountAsc = 'STAKE_HISTORY_AVERAGE_AMOUNT_ASC',
  StakeHistoryAverageAmountDesc = 'STAKE_HISTORY_AVERAGE_AMOUNT_DESC',
  StakeHistoryAverageBlockNumberAsc = 'STAKE_HISTORY_AVERAGE_BLOCK_NUMBER_ASC',
  StakeHistoryAverageBlockNumberDesc = 'STAKE_HISTORY_AVERAGE_BLOCK_NUMBER_DESC',
  StakeHistoryAverageBlockRangeAsc = 'STAKE_HISTORY_AVERAGE_BLOCK_RANGE_ASC',
  StakeHistoryAverageBlockRangeDesc = 'STAKE_HISTORY_AVERAGE_BLOCK_RANGE_DESC',
  StakeHistoryAverageIdAsc = 'STAKE_HISTORY_AVERAGE_ID_ASC',
  StakeHistoryAverageIdDesc = 'STAKE_HISTORY_AVERAGE_ID_DESC',
  StakeHistoryAverageMemberIdAsc = 'STAKE_HISTORY_AVERAGE_MEMBER_ID_ASC',
  StakeHistoryAverageMemberIdDesc = 'STAKE_HISTORY_AVERAGE_MEMBER_ID_DESC',
  StakeHistoryCountAsc = 'STAKE_HISTORY_COUNT_ASC',
  StakeHistoryCountDesc = 'STAKE_HISTORY_COUNT_DESC',
  StakeHistoryDistinctCountAmountAsc = 'STAKE_HISTORY_DISTINCT_COUNT_AMOUNT_ASC',
  StakeHistoryDistinctCountAmountDesc = 'STAKE_HISTORY_DISTINCT_COUNT_AMOUNT_DESC',
  StakeHistoryDistinctCountBlockNumberAsc = 'STAKE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC',
  StakeHistoryDistinctCountBlockNumberDesc = 'STAKE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC',
  StakeHistoryDistinctCountBlockRangeAsc = 'STAKE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  StakeHistoryDistinctCountBlockRangeDesc = 'STAKE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  StakeHistoryDistinctCountIdAsc = 'STAKE_HISTORY_DISTINCT_COUNT_ID_ASC',
  StakeHistoryDistinctCountIdDesc = 'STAKE_HISTORY_DISTINCT_COUNT_ID_DESC',
  StakeHistoryDistinctCountMemberIdAsc = 'STAKE_HISTORY_DISTINCT_COUNT_MEMBER_ID_ASC',
  StakeHistoryDistinctCountMemberIdDesc = 'STAKE_HISTORY_DISTINCT_COUNT_MEMBER_ID_DESC',
  StakeHistoryMaxAmountAsc = 'STAKE_HISTORY_MAX_AMOUNT_ASC',
  StakeHistoryMaxAmountDesc = 'STAKE_HISTORY_MAX_AMOUNT_DESC',
  StakeHistoryMaxBlockNumberAsc = 'STAKE_HISTORY_MAX_BLOCK_NUMBER_ASC',
  StakeHistoryMaxBlockNumberDesc = 'STAKE_HISTORY_MAX_BLOCK_NUMBER_DESC',
  StakeHistoryMaxBlockRangeAsc = 'STAKE_HISTORY_MAX_BLOCK_RANGE_ASC',
  StakeHistoryMaxBlockRangeDesc = 'STAKE_HISTORY_MAX_BLOCK_RANGE_DESC',
  StakeHistoryMaxIdAsc = 'STAKE_HISTORY_MAX_ID_ASC',
  StakeHistoryMaxIdDesc = 'STAKE_HISTORY_MAX_ID_DESC',
  StakeHistoryMaxMemberIdAsc = 'STAKE_HISTORY_MAX_MEMBER_ID_ASC',
  StakeHistoryMaxMemberIdDesc = 'STAKE_HISTORY_MAX_MEMBER_ID_DESC',
  StakeHistoryMinAmountAsc = 'STAKE_HISTORY_MIN_AMOUNT_ASC',
  StakeHistoryMinAmountDesc = 'STAKE_HISTORY_MIN_AMOUNT_DESC',
  StakeHistoryMinBlockNumberAsc = 'STAKE_HISTORY_MIN_BLOCK_NUMBER_ASC',
  StakeHistoryMinBlockNumberDesc = 'STAKE_HISTORY_MIN_BLOCK_NUMBER_DESC',
  StakeHistoryMinBlockRangeAsc = 'STAKE_HISTORY_MIN_BLOCK_RANGE_ASC',
  StakeHistoryMinBlockRangeDesc = 'STAKE_HISTORY_MIN_BLOCK_RANGE_DESC',
  StakeHistoryMinIdAsc = 'STAKE_HISTORY_MIN_ID_ASC',
  StakeHistoryMinIdDesc = 'STAKE_HISTORY_MIN_ID_DESC',
  StakeHistoryMinMemberIdAsc = 'STAKE_HISTORY_MIN_MEMBER_ID_ASC',
  StakeHistoryMinMemberIdDesc = 'STAKE_HISTORY_MIN_MEMBER_ID_DESC',
  StakeHistoryStddevPopulationAmountAsc = 'STAKE_HISTORY_STDDEV_POPULATION_AMOUNT_ASC',
  StakeHistoryStddevPopulationAmountDesc = 'STAKE_HISTORY_STDDEV_POPULATION_AMOUNT_DESC',
  StakeHistoryStddevPopulationBlockNumberAsc = 'STAKE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC',
  StakeHistoryStddevPopulationBlockNumberDesc = 'STAKE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC',
  StakeHistoryStddevPopulationBlockRangeAsc = 'STAKE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  StakeHistoryStddevPopulationBlockRangeDesc = 'STAKE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  StakeHistoryStddevPopulationIdAsc = 'STAKE_HISTORY_STDDEV_POPULATION_ID_ASC',
  StakeHistoryStddevPopulationIdDesc = 'STAKE_HISTORY_STDDEV_POPULATION_ID_DESC',
  StakeHistoryStddevPopulationMemberIdAsc = 'STAKE_HISTORY_STDDEV_POPULATION_MEMBER_ID_ASC',
  StakeHistoryStddevPopulationMemberIdDesc = 'STAKE_HISTORY_STDDEV_POPULATION_MEMBER_ID_DESC',
  StakeHistoryStddevSampleAmountAsc = 'STAKE_HISTORY_STDDEV_SAMPLE_AMOUNT_ASC',
  StakeHistoryStddevSampleAmountDesc = 'STAKE_HISTORY_STDDEV_SAMPLE_AMOUNT_DESC',
  StakeHistoryStddevSampleBlockNumberAsc = 'STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',
  StakeHistoryStddevSampleBlockNumberDesc = 'STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',
  StakeHistoryStddevSampleBlockRangeAsc = 'STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  StakeHistoryStddevSampleBlockRangeDesc = 'STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  StakeHistoryStddevSampleIdAsc = 'STAKE_HISTORY_STDDEV_SAMPLE_ID_ASC',
  StakeHistoryStddevSampleIdDesc = 'STAKE_HISTORY_STDDEV_SAMPLE_ID_DESC',
  StakeHistoryStddevSampleMemberIdAsc = 'STAKE_HISTORY_STDDEV_SAMPLE_MEMBER_ID_ASC',
  StakeHistoryStddevSampleMemberIdDesc = 'STAKE_HISTORY_STDDEV_SAMPLE_MEMBER_ID_DESC',
  StakeHistorySumAmountAsc = 'STAKE_HISTORY_SUM_AMOUNT_ASC',
  StakeHistorySumAmountDesc = 'STAKE_HISTORY_SUM_AMOUNT_DESC',
  StakeHistorySumBlockNumberAsc = 'STAKE_HISTORY_SUM_BLOCK_NUMBER_ASC',
  StakeHistorySumBlockNumberDesc = 'STAKE_HISTORY_SUM_BLOCK_NUMBER_DESC',
  StakeHistorySumBlockRangeAsc = 'STAKE_HISTORY_SUM_BLOCK_RANGE_ASC',
  StakeHistorySumBlockRangeDesc = 'STAKE_HISTORY_SUM_BLOCK_RANGE_DESC',
  StakeHistorySumIdAsc = 'STAKE_HISTORY_SUM_ID_ASC',
  StakeHistorySumIdDesc = 'STAKE_HISTORY_SUM_ID_DESC',
  StakeHistorySumMemberIdAsc = 'STAKE_HISTORY_SUM_MEMBER_ID_ASC',
  StakeHistorySumMemberIdDesc = 'STAKE_HISTORY_SUM_MEMBER_ID_DESC',
  StakeHistoryVariancePopulationAmountAsc = 'STAKE_HISTORY_VARIANCE_POPULATION_AMOUNT_ASC',
  StakeHistoryVariancePopulationAmountDesc = 'STAKE_HISTORY_VARIANCE_POPULATION_AMOUNT_DESC',
  StakeHistoryVariancePopulationBlockNumberAsc = 'STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',
  StakeHistoryVariancePopulationBlockNumberDesc = 'STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',
  StakeHistoryVariancePopulationBlockRangeAsc = 'STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  StakeHistoryVariancePopulationBlockRangeDesc = 'STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  StakeHistoryVariancePopulationIdAsc = 'STAKE_HISTORY_VARIANCE_POPULATION_ID_ASC',
  StakeHistoryVariancePopulationIdDesc = 'STAKE_HISTORY_VARIANCE_POPULATION_ID_DESC',
  StakeHistoryVariancePopulationMemberIdAsc = 'STAKE_HISTORY_VARIANCE_POPULATION_MEMBER_ID_ASC',
  StakeHistoryVariancePopulationMemberIdDesc = 'STAKE_HISTORY_VARIANCE_POPULATION_MEMBER_ID_DESC',
  StakeHistoryVarianceSampleAmountAsc = 'STAKE_HISTORY_VARIANCE_SAMPLE_AMOUNT_ASC',
  StakeHistoryVarianceSampleAmountDesc = 'STAKE_HISTORY_VARIANCE_SAMPLE_AMOUNT_DESC',
  StakeHistoryVarianceSampleBlockNumberAsc = 'STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',
  StakeHistoryVarianceSampleBlockNumberDesc = 'STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',
  StakeHistoryVarianceSampleBlockRangeAsc = 'STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  StakeHistoryVarianceSampleBlockRangeDesc = 'STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  StakeHistoryVarianceSampleIdAsc = 'STAKE_HISTORY_VARIANCE_SAMPLE_ID_ASC',
  StakeHistoryVarianceSampleIdDesc = 'STAKE_HISTORY_VARIANCE_SAMPLE_ID_DESC',
  StakeHistoryVarianceSampleMemberIdAsc = 'STAKE_HISTORY_VARIANCE_SAMPLE_MEMBER_ID_ASC',
  StakeHistoryVarianceSampleMemberIdDesc = 'STAKE_HISTORY_VARIANCE_SAMPLE_MEMBER_ID_DESC'
}

export type LstPoolMinAggregates = {
  __typename?: 'LstPoolMinAggregates';
  /** Minimum of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigFloat']['output']>;
};

/**  Enum representing the current state of an Lst Pool. */
export enum LstPoolState {
  Closed = 'CLOSED',
  Destroying = 'DESTROYING',
  Open = 'OPEN'
}

export type LstPoolStateChange = Node & {
  __typename?: 'LstPoolStateChange';
  /** The block number at which the state change occurred. */
  blockNumber: Scalars['Int']['output'];
  /** Unique identifier for the state change. Composite key: LstPool ID + block number */
  id: Scalars['String']['output'];
  /** Reads a single `LstPool` that is related to this `LstPoolStateChange`. */
  lstPool?: Maybe<LstPool>;
  /** The Lst Pool whose state has changed. */
  lstPoolId: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** The new state of the Lst Pool. */
  state: LstPoolState;
};

export type LstPoolStateChangeAggregates = {
  __typename?: 'LstPoolStateChangeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LstPoolStateChangeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LstPoolStateChangeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LstPoolStateChangeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LstPoolStateChangeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LstPoolStateChangeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LstPoolStateChangeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LstPoolStateChangeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LstPoolStateChangeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LstPoolStateChangeVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `LstPoolStateChange` object types. */
export type LstPoolStateChangeAggregatesFilter = {
  /** Mean average aggregate over matching `LstPoolStateChange` objects. */
  average?: InputMaybe<LstPoolStateChangeAverageAggregateFilter>;
  /** Distinct count aggregate over matching `LstPoolStateChange` objects. */
  distinctCount?: InputMaybe<LstPoolStateChangeDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `LstPoolStateChange` object to be included within the aggregate. */
  filter?: InputMaybe<LstPoolStateChangeFilter>;
  /** Maximum aggregate over matching `LstPoolStateChange` objects. */
  max?: InputMaybe<LstPoolStateChangeMaxAggregateFilter>;
  /** Minimum aggregate over matching `LstPoolStateChange` objects. */
  min?: InputMaybe<LstPoolStateChangeMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `LstPoolStateChange` objects. */
  stddevPopulation?: InputMaybe<LstPoolStateChangeStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `LstPoolStateChange` objects. */
  stddevSample?: InputMaybe<LstPoolStateChangeStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `LstPoolStateChange` objects. */
  sum?: InputMaybe<LstPoolStateChangeSumAggregateFilter>;
  /** Population variance aggregate over matching `LstPoolStateChange` objects. */
  variancePopulation?: InputMaybe<LstPoolStateChangeVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `LstPoolStateChange` objects. */
  varianceSample?: InputMaybe<LstPoolStateChangeVarianceSampleAggregateFilter>;
};

export type LstPoolStateChangeAverageAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type LstPoolStateChangeAverageAggregates = {
  __typename?: 'LstPoolStateChangeAverageAggregates';
  /** Mean average of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolStateChangeDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  lstPoolId?: InputMaybe<BigIntFilter>;
  state?: InputMaybe<BigIntFilter>;
};

export type LstPoolStateChangeDistinctCountAggregates = {
  __typename?: 'LstPoolStateChangeDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lstPoolId across the matching connection */
  lstPoolId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of state across the matching connection */
  state?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LstPoolStateChange` object types. All fields are combined with a logical ‘and.’ */
export type LstPoolStateChangeFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LstPoolStateChangeFilter>>;
  /** Filter by the object’s `blockNumber` field. */
  blockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `lstPool` relation. */
  lstPool?: InputMaybe<LstPoolFilter>;
  /** Filter by the object’s `lstPoolId` field. */
  lstPoolId?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LstPoolStateChangeFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LstPoolStateChangeFilter>>;
  /** Filter by the object’s `state` field. */
  state?: InputMaybe<LstPoolStateFilter>;
};

export type LstPoolStateChangeMaxAggregateFilter = {
  blockNumber?: InputMaybe<IntFilter>;
};

export type LstPoolStateChangeMaxAggregates = {
  __typename?: 'LstPoolStateChangeMaxAggregates';
  /** Maximum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type LstPoolStateChangeMinAggregateFilter = {
  blockNumber?: InputMaybe<IntFilter>;
};

export type LstPoolStateChangeMinAggregates = {
  __typename?: 'LstPoolStateChangeMinAggregates';
  /** Minimum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type LstPoolStateChangeStddevPopulationAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type LstPoolStateChangeStddevPopulationAggregates = {
  __typename?: 'LstPoolStateChangeStddevPopulationAggregates';
  /** Population standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolStateChangeStddevSampleAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type LstPoolStateChangeStddevSampleAggregates = {
  __typename?: 'LstPoolStateChangeStddevSampleAggregates';
  /** Sample standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolStateChangeSumAggregateFilter = {
  blockNumber?: InputMaybe<BigIntFilter>;
};

export type LstPoolStateChangeSumAggregates = {
  __typename?: 'LstPoolStateChangeSumAggregates';
  /** Sum of blockNumber across the matching connection */
  blockNumber: Scalars['BigInt']['output'];
};

export type LstPoolStateChangeVariancePopulationAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type LstPoolStateChangeVariancePopulationAggregates = {
  __typename?: 'LstPoolStateChangeVariancePopulationAggregates';
  /** Population variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolStateChangeVarianceSampleAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type LstPoolStateChangeVarianceSampleAggregates = {
  __typename?: 'LstPoolStateChangeVarianceSampleAggregates';
  /** Sample variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LstPoolStateChange` values. */
export type LstPoolStateChangesConnection = {
  __typename?: 'LstPoolStateChangesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LstPoolStateChangeAggregates>;
  /** A list of edges which contains the `LstPoolStateChange` and cursor to aid in pagination. */
  edges: Array<LstPoolStateChangesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LstPoolStateChangeAggregates>>;
  /** A list of `LstPoolStateChange` objects. */
  nodes: Array<Maybe<LstPoolStateChange>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LstPoolStateChange` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LstPoolStateChange` values. */
export type LstPoolStateChangesConnectionGroupedAggregatesArgs = {
  groupBy: Array<LstPoolStateChangesGroupBy>;
  having?: InputMaybe<LstPoolStateChangesHavingInput>;
};

/** A `LstPoolStateChange` edge in the connection. */
export type LstPoolStateChangesEdge = {
  __typename?: 'LstPoolStateChangesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LstPoolStateChange` at the end of the edge. */
  node?: Maybe<LstPoolStateChange>;
};

/** Grouping methods for `LstPoolStateChange` for usage during aggregation. */
export enum LstPoolStateChangesGroupBy {
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  LstPoolId = 'LST_POOL_ID',
  State = 'STATE'
}

export type LstPoolStateChangesHavingAverageInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type LstPoolStateChangesHavingDistinctCountInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `LstPoolStateChange` aggregates. */
export type LstPoolStateChangesHavingInput = {
  AND?: InputMaybe<Array<LstPoolStateChangesHavingInput>>;
  OR?: InputMaybe<Array<LstPoolStateChangesHavingInput>>;
  average?: InputMaybe<LstPoolStateChangesHavingAverageInput>;
  distinctCount?: InputMaybe<LstPoolStateChangesHavingDistinctCountInput>;
  max?: InputMaybe<LstPoolStateChangesHavingMaxInput>;
  min?: InputMaybe<LstPoolStateChangesHavingMinInput>;
  stddevPopulation?: InputMaybe<LstPoolStateChangesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LstPoolStateChangesHavingStddevSampleInput>;
  sum?: InputMaybe<LstPoolStateChangesHavingSumInput>;
  variancePopulation?: InputMaybe<LstPoolStateChangesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LstPoolStateChangesHavingVarianceSampleInput>;
};

export type LstPoolStateChangesHavingMaxInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type LstPoolStateChangesHavingMinInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type LstPoolStateChangesHavingStddevPopulationInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type LstPoolStateChangesHavingStddevSampleInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type LstPoolStateChangesHavingSumInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type LstPoolStateChangesHavingVariancePopulationInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type LstPoolStateChangesHavingVarianceSampleInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `LstPoolStateChange`. */
export enum LstPoolStateChangesOrderBy {
  BlockNumberAsc = 'BLOCK_NUMBER_ASC',
  BlockNumberDesc = 'BLOCK_NUMBER_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  LstPoolByLstPoolIdCurrentStateAsc = 'LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_ASC',
  LstPoolByLstPoolIdCurrentStateDesc = 'LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_DESC',
  LstPoolByLstPoolIdIdAsc = 'LST_POOL_BY_LST_POOL_ID__ID_ASC',
  LstPoolByLstPoolIdIdDesc = 'LST_POOL_BY_LST_POOL_ID__ID_DESC',
  LstPoolByLstPoolIdTotalStakeAsc = 'LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_ASC',
  LstPoolByLstPoolIdTotalStakeDesc = 'LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_DESC',
  LstPoolIdAsc = 'LST_POOL_ID_ASC',
  LstPoolIdDesc = 'LST_POOL_ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  StateAsc = 'STATE_ASC',
  StateDesc = 'STATE_DESC'
}

/** A filter to be used against LstPoolState fields. All fields are combined with a logical ‘and.’ */
export type LstPoolStateFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<LstPoolState>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<LstPoolState>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<LstPoolState>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<LstPoolState>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<LstPoolState>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<LstPoolState>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<LstPoolState>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<LstPoolState>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<LstPoolState>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<LstPoolState>>;
};

export type LstPoolStddevPopulationAggregates = {
  __typename?: 'LstPoolStddevPopulationAggregates';
  /** Population standard deviation of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolStddevSampleAggregates = {
  __typename?: 'LstPoolStddevSampleAggregates';
  /** Sample standard deviation of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolSumAggregates = {
  __typename?: 'LstPoolSumAggregates';
  /** Sum of totalStake across the matching connection */
  totalStake: Scalars['BigFloat']['output'];
};

/** A filter to be used against many `LstPoolMember` object types. All fields are combined with a logical ‘and.’ */
export type LstPoolToManyLstPoolMemberFilter = {
  /** Aggregates across related `LstPoolMember` match the filter criteria. */
  aggregates?: InputMaybe<LstPoolMemberAggregatesFilter>;
  /** Every related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<LstPoolMemberFilter>;
  /** No related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<LstPoolMemberFilter>;
  /** Some related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<LstPoolMemberFilter>;
};

/** A filter to be used against many `LstPoolStateChange` object types. All fields are combined with a logical ‘and.’ */
export type LstPoolToManyLstPoolStateChangeFilter = {
  /** Aggregates across related `LstPoolStateChange` match the filter criteria. */
  aggregates?: InputMaybe<LstPoolStateChangeAggregatesFilter>;
  /** Every related `LstPoolStateChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<LstPoolStateChangeFilter>;
  /** No related `LstPoolStateChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<LstPoolStateChangeFilter>;
  /** Some related `LstPoolStateChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<LstPoolStateChangeFilter>;
};

export type LstPoolVariancePopulationAggregates = {
  __typename?: 'LstPoolVariancePopulationAggregates';
  /** Population variance of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigFloat']['output']>;
};

export type LstPoolVarianceSampleAggregates = {
  __typename?: 'LstPoolVarianceSampleAggregates';
  /** Sample variance of totalStake across the matching connection */
  totalStake?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LstPool` values. */
export type LstPoolsConnection = {
  __typename?: 'LstPoolsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LstPoolAggregates>;
  /** A list of edges which contains the `LstPool` and cursor to aid in pagination. */
  edges: Array<LstPoolsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LstPoolAggregates>>;
  /** A list of `LstPool` objects. */
  nodes: Array<Maybe<LstPool>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LstPool` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LstPool` values. */
export type LstPoolsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LstPoolsGroupBy>;
  having?: InputMaybe<LstPoolsHavingInput>;
};

/** A `LstPool` edge in the connection. */
export type LstPoolsEdge = {
  __typename?: 'LstPoolsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LstPool` at the end of the edge. */
  node?: Maybe<LstPool>;
};

/** Grouping methods for `LstPool` for usage during aggregation. */
export enum LstPoolsGroupBy {
  CurrentState = 'CURRENT_STATE',
  Id = 'ID',
  TotalStake = 'TOTAL_STAKE'
}

export type LstPoolsHavingAverageInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolsHavingDistinctCountInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `LstPool` aggregates. */
export type LstPoolsHavingInput = {
  AND?: InputMaybe<Array<LstPoolsHavingInput>>;
  OR?: InputMaybe<Array<LstPoolsHavingInput>>;
  average?: InputMaybe<LstPoolsHavingAverageInput>;
  distinctCount?: InputMaybe<LstPoolsHavingDistinctCountInput>;
  max?: InputMaybe<LstPoolsHavingMaxInput>;
  min?: InputMaybe<LstPoolsHavingMinInput>;
  stddevPopulation?: InputMaybe<LstPoolsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LstPoolsHavingStddevSampleInput>;
  sum?: InputMaybe<LstPoolsHavingSumInput>;
  variancePopulation?: InputMaybe<LstPoolsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LstPoolsHavingVarianceSampleInput>;
};

export type LstPoolsHavingMaxInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolsHavingMinInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolsHavingStddevPopulationInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolsHavingStddevSampleInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolsHavingSumInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolsHavingVariancePopulationInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

export type LstPoolsHavingVarianceSampleInput = {
  totalStake?: InputMaybe<HavingBigfloatFilter>;
};

/** Methods to use when ordering `LstPool`. */
export enum LstPoolsOrderBy {
  CurrentStateAsc = 'CURRENT_STATE_ASC',
  CurrentStateDesc = 'CURRENT_STATE_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  LstPoolMembersByLstPoolIdCountAsc = 'LST_POOL_MEMBERS_BY_LST_POOL_ID__COUNT_ASC',
  LstPoolMembersByLstPoolIdCountDesc = 'LST_POOL_MEMBERS_BY_LST_POOL_ID__COUNT_DESC',
  LstPoolStateChangesByLstPoolIdCountAsc = 'LST_POOL_STATE_CHANGES_BY_LST_POOL_ID__COUNT_ASC',
  LstPoolStateChangesByLstPoolIdCountDesc = 'LST_POOL_STATE_CHANGES_BY_LST_POOL_ID__COUNT_DESC',
  MembersAverageAccountIdAsc = 'MEMBERS_AVERAGE_ACCOUNT_ID_ASC',
  MembersAverageAccountIdDesc = 'MEMBERS_AVERAGE_ACCOUNT_ID_DESC',
  MembersAverageBlockRangeAsc = 'MEMBERS_AVERAGE_BLOCK_RANGE_ASC',
  MembersAverageBlockRangeDesc = 'MEMBERS_AVERAGE_BLOCK_RANGE_DESC',
  MembersAverageCurrentStakeAsc = 'MEMBERS_AVERAGE_CURRENT_STAKE_ASC',
  MembersAverageCurrentStakeDesc = 'MEMBERS_AVERAGE_CURRENT_STAKE_DESC',
  MembersAverageIdAsc = 'MEMBERS_AVERAGE_ID_ASC',
  MembersAverageIdDesc = 'MEMBERS_AVERAGE_ID_DESC',
  MembersAverageLstPoolIdAsc = 'MEMBERS_AVERAGE_LST_POOL_ID_ASC',
  MembersAverageLstPoolIdDesc = 'MEMBERS_AVERAGE_LST_POOL_ID_DESC',
  MembersCountAsc = 'MEMBERS_COUNT_ASC',
  MembersCountDesc = 'MEMBERS_COUNT_DESC',
  MembersDistinctCountAccountIdAsc = 'MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_ASC',
  MembersDistinctCountAccountIdDesc = 'MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_DESC',
  MembersDistinctCountBlockRangeAsc = 'MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  MembersDistinctCountBlockRangeDesc = 'MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  MembersDistinctCountCurrentStakeAsc = 'MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_ASC',
  MembersDistinctCountCurrentStakeDesc = 'MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_DESC',
  MembersDistinctCountIdAsc = 'MEMBERS_DISTINCT_COUNT_ID_ASC',
  MembersDistinctCountIdDesc = 'MEMBERS_DISTINCT_COUNT_ID_DESC',
  MembersDistinctCountLstPoolIdAsc = 'MEMBERS_DISTINCT_COUNT_LST_POOL_ID_ASC',
  MembersDistinctCountLstPoolIdDesc = 'MEMBERS_DISTINCT_COUNT_LST_POOL_ID_DESC',
  MembersMaxAccountIdAsc = 'MEMBERS_MAX_ACCOUNT_ID_ASC',
  MembersMaxAccountIdDesc = 'MEMBERS_MAX_ACCOUNT_ID_DESC',
  MembersMaxBlockRangeAsc = 'MEMBERS_MAX_BLOCK_RANGE_ASC',
  MembersMaxBlockRangeDesc = 'MEMBERS_MAX_BLOCK_RANGE_DESC',
  MembersMaxCurrentStakeAsc = 'MEMBERS_MAX_CURRENT_STAKE_ASC',
  MembersMaxCurrentStakeDesc = 'MEMBERS_MAX_CURRENT_STAKE_DESC',
  MembersMaxIdAsc = 'MEMBERS_MAX_ID_ASC',
  MembersMaxIdDesc = 'MEMBERS_MAX_ID_DESC',
  MembersMaxLstPoolIdAsc = 'MEMBERS_MAX_LST_POOL_ID_ASC',
  MembersMaxLstPoolIdDesc = 'MEMBERS_MAX_LST_POOL_ID_DESC',
  MembersMinAccountIdAsc = 'MEMBERS_MIN_ACCOUNT_ID_ASC',
  MembersMinAccountIdDesc = 'MEMBERS_MIN_ACCOUNT_ID_DESC',
  MembersMinBlockRangeAsc = 'MEMBERS_MIN_BLOCK_RANGE_ASC',
  MembersMinBlockRangeDesc = 'MEMBERS_MIN_BLOCK_RANGE_DESC',
  MembersMinCurrentStakeAsc = 'MEMBERS_MIN_CURRENT_STAKE_ASC',
  MembersMinCurrentStakeDesc = 'MEMBERS_MIN_CURRENT_STAKE_DESC',
  MembersMinIdAsc = 'MEMBERS_MIN_ID_ASC',
  MembersMinIdDesc = 'MEMBERS_MIN_ID_DESC',
  MembersMinLstPoolIdAsc = 'MEMBERS_MIN_LST_POOL_ID_ASC',
  MembersMinLstPoolIdDesc = 'MEMBERS_MIN_LST_POOL_ID_DESC',
  MembersStddevPopulationAccountIdAsc = 'MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_ASC',
  MembersStddevPopulationAccountIdDesc = 'MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_DESC',
  MembersStddevPopulationBlockRangeAsc = 'MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  MembersStddevPopulationBlockRangeDesc = 'MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  MembersStddevPopulationCurrentStakeAsc = 'MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_ASC',
  MembersStddevPopulationCurrentStakeDesc = 'MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_DESC',
  MembersStddevPopulationIdAsc = 'MEMBERS_STDDEV_POPULATION_ID_ASC',
  MembersStddevPopulationIdDesc = 'MEMBERS_STDDEV_POPULATION_ID_DESC',
  MembersStddevPopulationLstPoolIdAsc = 'MEMBERS_STDDEV_POPULATION_LST_POOL_ID_ASC',
  MembersStddevPopulationLstPoolIdDesc = 'MEMBERS_STDDEV_POPULATION_LST_POOL_ID_DESC',
  MembersStddevSampleAccountIdAsc = 'MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',
  MembersStddevSampleAccountIdDesc = 'MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',
  MembersStddevSampleBlockRangeAsc = 'MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  MembersStddevSampleBlockRangeDesc = 'MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  MembersStddevSampleCurrentStakeAsc = 'MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_ASC',
  MembersStddevSampleCurrentStakeDesc = 'MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_DESC',
  MembersStddevSampleIdAsc = 'MEMBERS_STDDEV_SAMPLE_ID_ASC',
  MembersStddevSampleIdDesc = 'MEMBERS_STDDEV_SAMPLE_ID_DESC',
  MembersStddevSampleLstPoolIdAsc = 'MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_ASC',
  MembersStddevSampleLstPoolIdDesc = 'MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_DESC',
  MembersSumAccountIdAsc = 'MEMBERS_SUM_ACCOUNT_ID_ASC',
  MembersSumAccountIdDesc = 'MEMBERS_SUM_ACCOUNT_ID_DESC',
  MembersSumBlockRangeAsc = 'MEMBERS_SUM_BLOCK_RANGE_ASC',
  MembersSumBlockRangeDesc = 'MEMBERS_SUM_BLOCK_RANGE_DESC',
  MembersSumCurrentStakeAsc = 'MEMBERS_SUM_CURRENT_STAKE_ASC',
  MembersSumCurrentStakeDesc = 'MEMBERS_SUM_CURRENT_STAKE_DESC',
  MembersSumIdAsc = 'MEMBERS_SUM_ID_ASC',
  MembersSumIdDesc = 'MEMBERS_SUM_ID_DESC',
  MembersSumLstPoolIdAsc = 'MEMBERS_SUM_LST_POOL_ID_ASC',
  MembersSumLstPoolIdDesc = 'MEMBERS_SUM_LST_POOL_ID_DESC',
  MembersVariancePopulationAccountIdAsc = 'MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',
  MembersVariancePopulationAccountIdDesc = 'MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',
  MembersVariancePopulationBlockRangeAsc = 'MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  MembersVariancePopulationBlockRangeDesc = 'MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  MembersVariancePopulationCurrentStakeAsc = 'MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_ASC',
  MembersVariancePopulationCurrentStakeDesc = 'MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_DESC',
  MembersVariancePopulationIdAsc = 'MEMBERS_VARIANCE_POPULATION_ID_ASC',
  MembersVariancePopulationIdDesc = 'MEMBERS_VARIANCE_POPULATION_ID_DESC',
  MembersVariancePopulationLstPoolIdAsc = 'MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_ASC',
  MembersVariancePopulationLstPoolIdDesc = 'MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_DESC',
  MembersVarianceSampleAccountIdAsc = 'MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',
  MembersVarianceSampleAccountIdDesc = 'MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',
  MembersVarianceSampleBlockRangeAsc = 'MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  MembersVarianceSampleBlockRangeDesc = 'MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  MembersVarianceSampleCurrentStakeAsc = 'MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_ASC',
  MembersVarianceSampleCurrentStakeDesc = 'MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_DESC',
  MembersVarianceSampleIdAsc = 'MEMBERS_VARIANCE_SAMPLE_ID_ASC',
  MembersVarianceSampleIdDesc = 'MEMBERS_VARIANCE_SAMPLE_ID_DESC',
  MembersVarianceSampleLstPoolIdAsc = 'MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_ASC',
  MembersVarianceSampleLstPoolIdDesc = 'MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  StateHistoryAverageBlockNumberAsc = 'STATE_HISTORY_AVERAGE_BLOCK_NUMBER_ASC',
  StateHistoryAverageBlockNumberDesc = 'STATE_HISTORY_AVERAGE_BLOCK_NUMBER_DESC',
  StateHistoryAverageBlockRangeAsc = 'STATE_HISTORY_AVERAGE_BLOCK_RANGE_ASC',
  StateHistoryAverageBlockRangeDesc = 'STATE_HISTORY_AVERAGE_BLOCK_RANGE_DESC',
  StateHistoryAverageIdAsc = 'STATE_HISTORY_AVERAGE_ID_ASC',
  StateHistoryAverageIdDesc = 'STATE_HISTORY_AVERAGE_ID_DESC',
  StateHistoryAverageLstPoolIdAsc = 'STATE_HISTORY_AVERAGE_LST_POOL_ID_ASC',
  StateHistoryAverageLstPoolIdDesc = 'STATE_HISTORY_AVERAGE_LST_POOL_ID_DESC',
  StateHistoryAverageStateAsc = 'STATE_HISTORY_AVERAGE_STATE_ASC',
  StateHistoryAverageStateDesc = 'STATE_HISTORY_AVERAGE_STATE_DESC',
  StateHistoryCountAsc = 'STATE_HISTORY_COUNT_ASC',
  StateHistoryCountDesc = 'STATE_HISTORY_COUNT_DESC',
  StateHistoryDistinctCountBlockNumberAsc = 'STATE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC',
  StateHistoryDistinctCountBlockNumberDesc = 'STATE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC',
  StateHistoryDistinctCountBlockRangeAsc = 'STATE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  StateHistoryDistinctCountBlockRangeDesc = 'STATE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  StateHistoryDistinctCountIdAsc = 'STATE_HISTORY_DISTINCT_COUNT_ID_ASC',
  StateHistoryDistinctCountIdDesc = 'STATE_HISTORY_DISTINCT_COUNT_ID_DESC',
  StateHistoryDistinctCountLstPoolIdAsc = 'STATE_HISTORY_DISTINCT_COUNT_LST_POOL_ID_ASC',
  StateHistoryDistinctCountLstPoolIdDesc = 'STATE_HISTORY_DISTINCT_COUNT_LST_POOL_ID_DESC',
  StateHistoryDistinctCountStateAsc = 'STATE_HISTORY_DISTINCT_COUNT_STATE_ASC',
  StateHistoryDistinctCountStateDesc = 'STATE_HISTORY_DISTINCT_COUNT_STATE_DESC',
  StateHistoryMaxBlockNumberAsc = 'STATE_HISTORY_MAX_BLOCK_NUMBER_ASC',
  StateHistoryMaxBlockNumberDesc = 'STATE_HISTORY_MAX_BLOCK_NUMBER_DESC',
  StateHistoryMaxBlockRangeAsc = 'STATE_HISTORY_MAX_BLOCK_RANGE_ASC',
  StateHistoryMaxBlockRangeDesc = 'STATE_HISTORY_MAX_BLOCK_RANGE_DESC',
  StateHistoryMaxIdAsc = 'STATE_HISTORY_MAX_ID_ASC',
  StateHistoryMaxIdDesc = 'STATE_HISTORY_MAX_ID_DESC',
  StateHistoryMaxLstPoolIdAsc = 'STATE_HISTORY_MAX_LST_POOL_ID_ASC',
  StateHistoryMaxLstPoolIdDesc = 'STATE_HISTORY_MAX_LST_POOL_ID_DESC',
  StateHistoryMaxStateAsc = 'STATE_HISTORY_MAX_STATE_ASC',
  StateHistoryMaxStateDesc = 'STATE_HISTORY_MAX_STATE_DESC',
  StateHistoryMinBlockNumberAsc = 'STATE_HISTORY_MIN_BLOCK_NUMBER_ASC',
  StateHistoryMinBlockNumberDesc = 'STATE_HISTORY_MIN_BLOCK_NUMBER_DESC',
  StateHistoryMinBlockRangeAsc = 'STATE_HISTORY_MIN_BLOCK_RANGE_ASC',
  StateHistoryMinBlockRangeDesc = 'STATE_HISTORY_MIN_BLOCK_RANGE_DESC',
  StateHistoryMinIdAsc = 'STATE_HISTORY_MIN_ID_ASC',
  StateHistoryMinIdDesc = 'STATE_HISTORY_MIN_ID_DESC',
  StateHistoryMinLstPoolIdAsc = 'STATE_HISTORY_MIN_LST_POOL_ID_ASC',
  StateHistoryMinLstPoolIdDesc = 'STATE_HISTORY_MIN_LST_POOL_ID_DESC',
  StateHistoryMinStateAsc = 'STATE_HISTORY_MIN_STATE_ASC',
  StateHistoryMinStateDesc = 'STATE_HISTORY_MIN_STATE_DESC',
  StateHistoryStddevPopulationBlockNumberAsc = 'STATE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC',
  StateHistoryStddevPopulationBlockNumberDesc = 'STATE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC',
  StateHistoryStddevPopulationBlockRangeAsc = 'STATE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  StateHistoryStddevPopulationBlockRangeDesc = 'STATE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  StateHistoryStddevPopulationIdAsc = 'STATE_HISTORY_STDDEV_POPULATION_ID_ASC',
  StateHistoryStddevPopulationIdDesc = 'STATE_HISTORY_STDDEV_POPULATION_ID_DESC',
  StateHistoryStddevPopulationLstPoolIdAsc = 'STATE_HISTORY_STDDEV_POPULATION_LST_POOL_ID_ASC',
  StateHistoryStddevPopulationLstPoolIdDesc = 'STATE_HISTORY_STDDEV_POPULATION_LST_POOL_ID_DESC',
  StateHistoryStddevPopulationStateAsc = 'STATE_HISTORY_STDDEV_POPULATION_STATE_ASC',
  StateHistoryStddevPopulationStateDesc = 'STATE_HISTORY_STDDEV_POPULATION_STATE_DESC',
  StateHistoryStddevSampleBlockNumberAsc = 'STATE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',
  StateHistoryStddevSampleBlockNumberDesc = 'STATE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',
  StateHistoryStddevSampleBlockRangeAsc = 'STATE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  StateHistoryStddevSampleBlockRangeDesc = 'STATE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  StateHistoryStddevSampleIdAsc = 'STATE_HISTORY_STDDEV_SAMPLE_ID_ASC',
  StateHistoryStddevSampleIdDesc = 'STATE_HISTORY_STDDEV_SAMPLE_ID_DESC',
  StateHistoryStddevSampleLstPoolIdAsc = 'STATE_HISTORY_STDDEV_SAMPLE_LST_POOL_ID_ASC',
  StateHistoryStddevSampleLstPoolIdDesc = 'STATE_HISTORY_STDDEV_SAMPLE_LST_POOL_ID_DESC',
  StateHistoryStddevSampleStateAsc = 'STATE_HISTORY_STDDEV_SAMPLE_STATE_ASC',
  StateHistoryStddevSampleStateDesc = 'STATE_HISTORY_STDDEV_SAMPLE_STATE_DESC',
  StateHistorySumBlockNumberAsc = 'STATE_HISTORY_SUM_BLOCK_NUMBER_ASC',
  StateHistorySumBlockNumberDesc = 'STATE_HISTORY_SUM_BLOCK_NUMBER_DESC',
  StateHistorySumBlockRangeAsc = 'STATE_HISTORY_SUM_BLOCK_RANGE_ASC',
  StateHistorySumBlockRangeDesc = 'STATE_HISTORY_SUM_BLOCK_RANGE_DESC',
  StateHistorySumIdAsc = 'STATE_HISTORY_SUM_ID_ASC',
  StateHistorySumIdDesc = 'STATE_HISTORY_SUM_ID_DESC',
  StateHistorySumLstPoolIdAsc = 'STATE_HISTORY_SUM_LST_POOL_ID_ASC',
  StateHistorySumLstPoolIdDesc = 'STATE_HISTORY_SUM_LST_POOL_ID_DESC',
  StateHistorySumStateAsc = 'STATE_HISTORY_SUM_STATE_ASC',
  StateHistorySumStateDesc = 'STATE_HISTORY_SUM_STATE_DESC',
  StateHistoryVariancePopulationBlockNumberAsc = 'STATE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',
  StateHistoryVariancePopulationBlockNumberDesc = 'STATE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',
  StateHistoryVariancePopulationBlockRangeAsc = 'STATE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  StateHistoryVariancePopulationBlockRangeDesc = 'STATE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  StateHistoryVariancePopulationIdAsc = 'STATE_HISTORY_VARIANCE_POPULATION_ID_ASC',
  StateHistoryVariancePopulationIdDesc = 'STATE_HISTORY_VARIANCE_POPULATION_ID_DESC',
  StateHistoryVariancePopulationLstPoolIdAsc = 'STATE_HISTORY_VARIANCE_POPULATION_LST_POOL_ID_ASC',
  StateHistoryVariancePopulationLstPoolIdDesc = 'STATE_HISTORY_VARIANCE_POPULATION_LST_POOL_ID_DESC',
  StateHistoryVariancePopulationStateAsc = 'STATE_HISTORY_VARIANCE_POPULATION_STATE_ASC',
  StateHistoryVariancePopulationStateDesc = 'STATE_HISTORY_VARIANCE_POPULATION_STATE_DESC',
  StateHistoryVarianceSampleBlockNumberAsc = 'STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',
  StateHistoryVarianceSampleBlockNumberDesc = 'STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',
  StateHistoryVarianceSampleBlockRangeAsc = 'STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  StateHistoryVarianceSampleBlockRangeDesc = 'STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  StateHistoryVarianceSampleIdAsc = 'STATE_HISTORY_VARIANCE_SAMPLE_ID_ASC',
  StateHistoryVarianceSampleIdDesc = 'STATE_HISTORY_VARIANCE_SAMPLE_ID_DESC',
  StateHistoryVarianceSampleLstPoolIdAsc = 'STATE_HISTORY_VARIANCE_SAMPLE_LST_POOL_ID_ASC',
  StateHistoryVarianceSampleLstPoolIdDesc = 'STATE_HISTORY_VARIANCE_SAMPLE_LST_POOL_ID_DESC',
  StateHistoryVarianceSampleStateAsc = 'STATE_HISTORY_VARIANCE_SAMPLE_STATE_ASC',
  StateHistoryVarianceSampleStateDesc = 'STATE_HISTORY_VARIANCE_SAMPLE_STATE_DESC',
  TotalStakeAsc = 'TOTAL_STAKE_ASC',
  TotalStakeDesc = 'TOTAL_STAKE_DESC'
}

export type MemberStakeChange = Node & {
  __typename?: 'MemberStakeChange';
  /** The amount of the stake change (positive for increase, negative for decrease). */
  amount: Scalars['BigFloat']['output'];
  /** The block number at which the stake change occurred. */
  blockNumber: Scalars['Int']['output'];
  /** Unique identifier for the stake change. Composite key: LstPool ID + account ID + block number */
  id: Scalars['String']['output'];
  /** Reads a single `LstPoolMember` that is related to this `MemberStakeChange`. */
  member?: Maybe<LstPoolMember>;
  /** The Lst Pool member whose stake has changed. */
  memberId: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type MemberStakeChangeAggregates = {
  __typename?: 'MemberStakeChangeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<MemberStakeChangeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<MemberStakeChangeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<MemberStakeChangeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<MemberStakeChangeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<MemberStakeChangeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<MemberStakeChangeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<MemberStakeChangeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<MemberStakeChangeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<MemberStakeChangeVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `MemberStakeChange` object types. */
export type MemberStakeChangeAggregatesFilter = {
  /** Mean average aggregate over matching `MemberStakeChange` objects. */
  average?: InputMaybe<MemberStakeChangeAverageAggregateFilter>;
  /** Distinct count aggregate over matching `MemberStakeChange` objects. */
  distinctCount?: InputMaybe<MemberStakeChangeDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `MemberStakeChange` object to be included within the aggregate. */
  filter?: InputMaybe<MemberStakeChangeFilter>;
  /** Maximum aggregate over matching `MemberStakeChange` objects. */
  max?: InputMaybe<MemberStakeChangeMaxAggregateFilter>;
  /** Minimum aggregate over matching `MemberStakeChange` objects. */
  min?: InputMaybe<MemberStakeChangeMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `MemberStakeChange` objects. */
  stddevPopulation?: InputMaybe<MemberStakeChangeStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `MemberStakeChange` objects. */
  stddevSample?: InputMaybe<MemberStakeChangeStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `MemberStakeChange` objects. */
  sum?: InputMaybe<MemberStakeChangeSumAggregateFilter>;
  /** Population variance aggregate over matching `MemberStakeChange` objects. */
  variancePopulation?: InputMaybe<MemberStakeChangeVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `MemberStakeChange` objects. */
  varianceSample?: InputMaybe<MemberStakeChangeVarianceSampleAggregateFilter>;
};

export type MemberStakeChangeAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type MemberStakeChangeAverageAggregates = {
  __typename?: 'MemberStakeChangeAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type MemberStakeChangeDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  amount?: InputMaybe<BigIntFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  memberId?: InputMaybe<BigIntFilter>;
};

export type MemberStakeChangeDistinctCountAggregates = {
  __typename?: 'MemberStakeChangeDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of memberId across the matching connection */
  memberId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `MemberStakeChange` object types. All fields are combined with a logical ‘and.’ */
export type MemberStakeChangeFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<MemberStakeChangeFilter>>;
  /** Filter by the object’s `blockNumber` field. */
  blockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `member` relation. */
  member?: InputMaybe<LstPoolMemberFilter>;
  /** Filter by the object’s `memberId` field. */
  memberId?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<MemberStakeChangeFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<MemberStakeChangeFilter>>;
};

export type MemberStakeChangeMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type MemberStakeChangeMaxAggregates = {
  __typename?: 'MemberStakeChangeMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type MemberStakeChangeMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type MemberStakeChangeMinAggregates = {
  __typename?: 'MemberStakeChangeMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type MemberStakeChangeStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type MemberStakeChangeStddevPopulationAggregates = {
  __typename?: 'MemberStakeChangeStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type MemberStakeChangeStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type MemberStakeChangeStddevSampleAggregates = {
  __typename?: 'MemberStakeChangeStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type MemberStakeChangeSumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
};

export type MemberStakeChangeSumAggregates = {
  __typename?: 'MemberStakeChangeSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of blockNumber across the matching connection */
  blockNumber: Scalars['BigInt']['output'];
};

export type MemberStakeChangeVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type MemberStakeChangeVariancePopulationAggregates = {
  __typename?: 'MemberStakeChangeVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type MemberStakeChangeVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type MemberStakeChangeVarianceSampleAggregates = {
  __typename?: 'MemberStakeChangeVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `MemberStakeChange` values. */
export type MemberStakeChangesConnection = {
  __typename?: 'MemberStakeChangesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<MemberStakeChangeAggregates>;
  /** A list of edges which contains the `MemberStakeChange` and cursor to aid in pagination. */
  edges: Array<MemberStakeChangesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<MemberStakeChangeAggregates>>;
  /** A list of `MemberStakeChange` objects. */
  nodes: Array<Maybe<MemberStakeChange>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `MemberStakeChange` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `MemberStakeChange` values. */
export type MemberStakeChangesConnectionGroupedAggregatesArgs = {
  groupBy: Array<MemberStakeChangesGroupBy>;
  having?: InputMaybe<MemberStakeChangesHavingInput>;
};

/** A `MemberStakeChange` edge in the connection. */
export type MemberStakeChangesEdge = {
  __typename?: 'MemberStakeChangesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `MemberStakeChange` at the end of the edge. */
  node?: Maybe<MemberStakeChange>;
};

/** Grouping methods for `MemberStakeChange` for usage during aggregation. */
export enum MemberStakeChangesGroupBy {
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  MemberId = 'MEMBER_ID'
}

export type MemberStakeChangesHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type MemberStakeChangesHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `MemberStakeChange` aggregates. */
export type MemberStakeChangesHavingInput = {
  AND?: InputMaybe<Array<MemberStakeChangesHavingInput>>;
  OR?: InputMaybe<Array<MemberStakeChangesHavingInput>>;
  average?: InputMaybe<MemberStakeChangesHavingAverageInput>;
  distinctCount?: InputMaybe<MemberStakeChangesHavingDistinctCountInput>;
  max?: InputMaybe<MemberStakeChangesHavingMaxInput>;
  min?: InputMaybe<MemberStakeChangesHavingMinInput>;
  stddevPopulation?: InputMaybe<MemberStakeChangesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<MemberStakeChangesHavingStddevSampleInput>;
  sum?: InputMaybe<MemberStakeChangesHavingSumInput>;
  variancePopulation?: InputMaybe<MemberStakeChangesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<MemberStakeChangesHavingVarianceSampleInput>;
};

export type MemberStakeChangesHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type MemberStakeChangesHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type MemberStakeChangesHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type MemberStakeChangesHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type MemberStakeChangesHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type MemberStakeChangesHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type MemberStakeChangesHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `MemberStakeChange`. */
export enum MemberStakeChangesOrderBy {
  AmountAsc = 'AMOUNT_ASC',
  AmountDesc = 'AMOUNT_DESC',
  BlockNumberAsc = 'BLOCK_NUMBER_ASC',
  BlockNumberDesc = 'BLOCK_NUMBER_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  LstPoolMemberByMemberIdAccountIdAsc = 'LST_POOL_MEMBER_BY_MEMBER_ID__ACCOUNT_ID_ASC',
  LstPoolMemberByMemberIdAccountIdDesc = 'LST_POOL_MEMBER_BY_MEMBER_ID__ACCOUNT_ID_DESC',
  LstPoolMemberByMemberIdCurrentStakeAsc = 'LST_POOL_MEMBER_BY_MEMBER_ID__CURRENT_STAKE_ASC',
  LstPoolMemberByMemberIdCurrentStakeDesc = 'LST_POOL_MEMBER_BY_MEMBER_ID__CURRENT_STAKE_DESC',
  LstPoolMemberByMemberIdIdAsc = 'LST_POOL_MEMBER_BY_MEMBER_ID__ID_ASC',
  LstPoolMemberByMemberIdIdDesc = 'LST_POOL_MEMBER_BY_MEMBER_ID__ID_DESC',
  LstPoolMemberByMemberIdLstPoolIdAsc = 'LST_POOL_MEMBER_BY_MEMBER_ID__LST_POOL_ID_ASC',
  LstPoolMemberByMemberIdLstPoolIdDesc = 'LST_POOL_MEMBER_BY_MEMBER_ID__LST_POOL_ID_DESC',
  MemberIdAsc = 'MEMBER_ID_ASC',
  MemberIdDesc = 'MEMBER_ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'
}

/** An object with a globally unique `ID`. */
export type Node = {
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

/** Options for ordering null values in a specific direction. */
export enum NullOrder {
  /** Order null values first. */
  NullsFirst = 'NULLS_FIRST',
  /** Order null values last. */
  NullsLast = 'NULLS_LAST'
}

export type Operator = Node & {
  __typename?: 'Operator';
  /** Reads a single `Account` that is related to this `Operator`. */
  account?: Maybe<Account>;
  /** The account associated with this Operator. */
  accountId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `BlueprintOperator`. */
  blueprintOperators: BlueprintOperatorsConnection;
  /** Reads and enables pagination through a set of `Blueprint`. */
  blueprintsByBlueprintOperatorOperatorIdAndBlueprintId: OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyConnection;
  /** Reads and enables pagination through a set of `OperatorBondChange`. */
  bondChanges: OperatorBondChangesConnection;
  /** The current stake amount of the Operator. */
  currentStake: Scalars['BigFloat']['output'];
  /** Current status of the Operator (ACTIVE, LEAVING, or OFFLINE). */
  currentStatus: OperatorStatus;
  /** Reads and enables pagination through a set of `Delegation`. */
  delegations: DelegationsConnection;
  /** Reads and enables pagination through a set of `Delegation`. */
  delegationsByUnstakeRequestOperatorIdAndDelegationId: OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Delegator`. */
  delegatorsByDelegationOperatorIdAndDelegatorId: OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Delegator`. */
  delegatorsByUnstakeRequestOperatorIdAndDelegatorId: OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyConnection;
  /** Operator's account ID, serves as the unique identifier. */
  id: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `JobCall`. */
  jobCallsByJobResultOperatorIdAndJobCallId: OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyConnection;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** The block number when the Operator joined the network. */
  joinedAt: Scalars['Int']['output'];
  /** The block number of the last update to the Operator's information. */
  lastUpdateAt: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /**
   * The amount of tokens scheduled to be unstaked by the Operator.
   * This represents the pending unstake amount that can be released after the unbonding period.
   */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Reads and enables pagination through a set of `ServiceOperator`. */
  serviceOperators: ServiceOperatorsConnection;
  /** Reads and enables pagination through a set of `ServiceRequestOperator`. */
  serviceRequestOperators: ServiceRequestOperatorsConnection;
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestId: OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Service`. */
  servicesByJobResultOperatorIdAndServiceId: OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Service`. */
  servicesByServiceOperatorOperatorIdAndServiceId: OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyConnection;
  /** Reads and enables pagination through a set of `OperatorStatusChange`. */
  statusHistory: OperatorStatusChangesConnection;
  /** Total number of Blueprints registered by this Operator. */
  totalBlueprints: Scalars['Int']['output'];
  /** Total number of Service Requests requested by this Operator. */
  totalServiceRequests: Scalars['Int']['output'];
  /** Total number of Services operated by this Operator. */
  totalServices: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


export type OperatorBlueprintOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprint_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprints_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorBondChangesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operator_Bond_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorBondChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorBondChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorDelegationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegators_Distinct_Enum>>>;
  filter?: InputMaybe<DelegatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegators_Distinct_Enum>>>;
  filter?: InputMaybe<DelegatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorJobCallsByJobResultOperatorIdAndJobCallIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  filter?: InputMaybe<JobCallFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobCallsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorServiceOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorServiceRequestOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Request_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorServicesByJobResultOperatorIdAndServiceIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorServicesByServiceOperatorOperatorIdAndServiceIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorStatusHistoryArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operator_Status_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorStatusChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorStatusChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type OperatorUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type OperatorAggregates = {
  __typename?: 'OperatorAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<OperatorAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<OperatorDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<OperatorMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<OperatorMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<OperatorStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<OperatorStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<OperatorSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<OperatorVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<OperatorVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `Operator` object types. */
export type OperatorAggregatesFilter = {
  /** Mean average aggregate over matching `Operator` objects. */
  average?: InputMaybe<OperatorAverageAggregateFilter>;
  /** Distinct count aggregate over matching `Operator` objects. */
  distinctCount?: InputMaybe<OperatorDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `Operator` object to be included within the aggregate. */
  filter?: InputMaybe<OperatorFilter>;
  /** Maximum aggregate over matching `Operator` objects. */
  max?: InputMaybe<OperatorMaxAggregateFilter>;
  /** Minimum aggregate over matching `Operator` objects. */
  min?: InputMaybe<OperatorMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `Operator` objects. */
  stddevPopulation?: InputMaybe<OperatorStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `Operator` objects. */
  stddevSample?: InputMaybe<OperatorStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `Operator` objects. */
  sum?: InputMaybe<OperatorSumAggregateFilter>;
  /** Population variance aggregate over matching `Operator` objects. */
  variancePopulation?: InputMaybe<OperatorVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `Operator` objects. */
  varianceSample?: InputMaybe<OperatorVarianceSampleAggregateFilter>;
};

export type OperatorAverageAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<BigFloatFilter>;
  totalServiceRequests?: InputMaybe<BigFloatFilter>;
  totalServices?: InputMaybe<BigFloatFilter>;
};

export type OperatorAverageAggregates = {
  __typename?: 'OperatorAverageAggregates';
  /** Mean average of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Blueprint` values, with data from `BlueprintOperator`. */
export type OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyConnection = {
  __typename?: 'OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BlueprintAggregates>;
  /** A list of edges which contains the `Blueprint`, info from the `BlueprintOperator`, and the cursor to aid in pagination. */
  edges: Array<OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BlueprintAggregates>>;
  /** A list of `Blueprint` objects. */
  nodes: Array<Maybe<Blueprint>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Blueprint` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Blueprint` values, with data from `BlueprintOperator`. */
export type OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<BlueprintsGroupBy>;
  having?: InputMaybe<BlueprintsHavingInput>;
};

/** A `Blueprint` edge in the connection, with data from `BlueprintOperator`. */
export type OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyEdge = {
  __typename?: 'OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyEdge';
  /** Reads and enables pagination through a set of `BlueprintOperator`. */
  blueprintOperators: BlueprintOperatorsConnection;
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Blueprint` at the end of the edge. */
  node?: Maybe<Blueprint>;
};


/** A `Blueprint` edge in the connection, with data from `BlueprintOperator`. */
export type OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyEdgeBlueprintOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprint_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type OperatorBondChange = Node & {
  __typename?: 'OperatorBondChange';
  /** The type of action that caused the bond change. */
  action: BondChangeAction;
  /** The amount of the bond change. */
  amount: Scalars['BigFloat']['output'];
  /** The block number at which the bond change occurred. */
  blockNumber: Scalars['Int']['output'];
  /** Unique identifier for the bond change. Composite key: operator ID + block number */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `OperatorBondChange`. */
  operator?: Maybe<Operator>;
  /** The Operator whose bond amount has changed. */
  operatorId: Scalars['String']['output'];
};

export type OperatorBondChangeAggregates = {
  __typename?: 'OperatorBondChangeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<OperatorBondChangeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<OperatorBondChangeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<OperatorBondChangeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<OperatorBondChangeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<OperatorBondChangeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<OperatorBondChangeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<OperatorBondChangeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<OperatorBondChangeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<OperatorBondChangeVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `OperatorBondChange` object types. */
export type OperatorBondChangeAggregatesFilter = {
  /** Mean average aggregate over matching `OperatorBondChange` objects. */
  average?: InputMaybe<OperatorBondChangeAverageAggregateFilter>;
  /** Distinct count aggregate over matching `OperatorBondChange` objects. */
  distinctCount?: InputMaybe<OperatorBondChangeDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `OperatorBondChange` object to be included within the aggregate. */
  filter?: InputMaybe<OperatorBondChangeFilter>;
  /** Maximum aggregate over matching `OperatorBondChange` objects. */
  max?: InputMaybe<OperatorBondChangeMaxAggregateFilter>;
  /** Minimum aggregate over matching `OperatorBondChange` objects. */
  min?: InputMaybe<OperatorBondChangeMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `OperatorBondChange` objects. */
  stddevPopulation?: InputMaybe<OperatorBondChangeStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `OperatorBondChange` objects. */
  stddevSample?: InputMaybe<OperatorBondChangeStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `OperatorBondChange` objects. */
  sum?: InputMaybe<OperatorBondChangeSumAggregateFilter>;
  /** Population variance aggregate over matching `OperatorBondChange` objects. */
  variancePopulation?: InputMaybe<OperatorBondChangeVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `OperatorBondChange` objects. */
  varianceSample?: InputMaybe<OperatorBondChangeVarianceSampleAggregateFilter>;
};

export type OperatorBondChangeAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorBondChangeAverageAggregates = {
  __typename?: 'OperatorBondChangeAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorBondChangeDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  action?: InputMaybe<BigIntFilter>;
  amount?: InputMaybe<BigIntFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
};

export type OperatorBondChangeDistinctCountAggregates = {
  __typename?: 'OperatorBondChangeDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of action across the matching connection */
  action?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `OperatorBondChange` object types. All fields are combined with a logical ‘and.’ */
export type OperatorBondChangeFilter = {
  /** Filter by the object’s `action` field. */
  action?: InputMaybe<BondChangeActionFilter>;
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<OperatorBondChangeFilter>>;
  /** Filter by the object’s `blockNumber` field. */
  blockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<OperatorBondChangeFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<OperatorBondChangeFilter>>;
};

export type OperatorBondChangeMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type OperatorBondChangeMaxAggregates = {
  __typename?: 'OperatorBondChangeMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type OperatorBondChangeMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<IntFilter>;
};

export type OperatorBondChangeMinAggregates = {
  __typename?: 'OperatorBondChangeMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type OperatorBondChangeStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorBondChangeStddevPopulationAggregates = {
  __typename?: 'OperatorBondChangeStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorBondChangeStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorBondChangeStddevSampleAggregates = {
  __typename?: 'OperatorBondChangeStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorBondChangeSumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
};

export type OperatorBondChangeSumAggregates = {
  __typename?: 'OperatorBondChangeSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of blockNumber across the matching connection */
  blockNumber: Scalars['BigInt']['output'];
};

export type OperatorBondChangeVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorBondChangeVariancePopulationAggregates = {
  __typename?: 'OperatorBondChangeVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorBondChangeVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorBondChangeVarianceSampleAggregates = {
  __typename?: 'OperatorBondChangeVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `OperatorBondChange` values. */
export type OperatorBondChangesConnection = {
  __typename?: 'OperatorBondChangesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorBondChangeAggregates>;
  /** A list of edges which contains the `OperatorBondChange` and cursor to aid in pagination. */
  edges: Array<OperatorBondChangesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorBondChangeAggregates>>;
  /** A list of `OperatorBondChange` objects. */
  nodes: Array<Maybe<OperatorBondChange>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `OperatorBondChange` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `OperatorBondChange` values. */
export type OperatorBondChangesConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorBondChangesGroupBy>;
  having?: InputMaybe<OperatorBondChangesHavingInput>;
};

/** A `OperatorBondChange` edge in the connection. */
export type OperatorBondChangesEdge = {
  __typename?: 'OperatorBondChangesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `OperatorBondChange` at the end of the edge. */
  node?: Maybe<OperatorBondChange>;
};

/** Grouping methods for `OperatorBondChange` for usage during aggregation. */
export enum OperatorBondChangesGroupBy {
  Action = 'ACTION',
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID'
}

export type OperatorBondChangesHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorBondChangesHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `OperatorBondChange` aggregates. */
export type OperatorBondChangesHavingInput = {
  AND?: InputMaybe<Array<OperatorBondChangesHavingInput>>;
  OR?: InputMaybe<Array<OperatorBondChangesHavingInput>>;
  average?: InputMaybe<OperatorBondChangesHavingAverageInput>;
  distinctCount?: InputMaybe<OperatorBondChangesHavingDistinctCountInput>;
  max?: InputMaybe<OperatorBondChangesHavingMaxInput>;
  min?: InputMaybe<OperatorBondChangesHavingMinInput>;
  stddevPopulation?: InputMaybe<OperatorBondChangesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<OperatorBondChangesHavingStddevSampleInput>;
  sum?: InputMaybe<OperatorBondChangesHavingSumInput>;
  variancePopulation?: InputMaybe<OperatorBondChangesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<OperatorBondChangesHavingVarianceSampleInput>;
};

export type OperatorBondChangesHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorBondChangesHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorBondChangesHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorBondChangesHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorBondChangesHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorBondChangesHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorBondChangesHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `OperatorBondChange`. */
export enum OperatorBondChangesOrderBy {
  ActionAsc = 'ACTION_ASC',
  ActionDesc = 'ACTION_DESC',
  AmountAsc = 'AMOUNT_ASC',
  AmountDesc = 'AMOUNT_DESC',
  BlockNumberAsc = 'BLOCK_NUMBER_ASC',
  BlockNumberDesc = 'BLOCK_NUMBER_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC'
}

/** A connection to a list of `Delegation` values, with data from `UnstakeRequest`. */
export type OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyConnection = {
  __typename?: 'OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegationAggregates>;
  /** A list of edges which contains the `Delegation`, info from the `UnstakeRequest`, and the cursor to aid in pagination. */
  edges: Array<OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegationAggregates>>;
  /** A list of `Delegation` objects. */
  nodes: Array<Maybe<Delegation>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegation` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegation` values, with data from `UnstakeRequest`. */
export type OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegationsGroupBy>;
  having?: InputMaybe<DelegationsHavingInput>;
};

/** A `Delegation` edge in the connection, with data from `UnstakeRequest`. */
export type OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyEdge = {
  __typename?: 'OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Delegation` at the end of the edge. */
  node?: Maybe<Delegation>;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


/** A `Delegation` edge in the connection, with data from `UnstakeRequest`. */
export type OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyEdgeUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Delegator` values, with data from `Delegation`. */
export type OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyConnection = {
  __typename?: 'OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegatorAggregates>;
  /** A list of edges which contains the `Delegator`, info from the `Delegation`, and the cursor to aid in pagination. */
  edges: Array<OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegatorAggregates>>;
  /** A list of `Delegator` objects. */
  nodes: Array<Maybe<Delegator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegator` values, with data from `Delegation`. */
export type OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegatorsGroupBy>;
  having?: InputMaybe<DelegatorsHavingInput>;
};

/** A `Delegator` edge in the connection, with data from `Delegation`. */
export type OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyEdge = {
  __typename?: 'OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `Delegation`. */
  delegations: DelegationsConnection;
  /** The `Delegator` at the end of the edge. */
  node?: Maybe<Delegator>;
};


/** A `Delegator` edge in the connection, with data from `Delegation`. */
export type OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyEdgeDelegationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Delegator` values, with data from `UnstakeRequest`. */
export type OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyConnection = {
  __typename?: 'OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DelegatorAggregates>;
  /** A list of edges which contains the `Delegator`, info from the `UnstakeRequest`, and the cursor to aid in pagination. */
  edges: Array<OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DelegatorAggregates>>;
  /** A list of `Delegator` objects. */
  nodes: Array<Maybe<Delegator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Delegator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Delegator` values, with data from `UnstakeRequest`. */
export type OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<DelegatorsGroupBy>;
  having?: InputMaybe<DelegatorsHavingInput>;
};

/** A `Delegator` edge in the connection, with data from `UnstakeRequest`. */
export type OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyEdge = {
  __typename?: 'OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Delegator` at the end of the edge. */
  node?: Maybe<Delegator>;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests: UnstakeRequestsConnection;
};


/** A `Delegator` edge in the connection, with data from `UnstakeRequest`. */
export type OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyEdgeUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type OperatorDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  accountId?: InputMaybe<BigIntFilter>;
  currentStake?: InputMaybe<BigIntFilter>;
  currentStatus?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  joinedAt?: InputMaybe<BigIntFilter>;
  lastUpdateAt?: InputMaybe<BigIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigIntFilter>;
  totalBlueprints?: InputMaybe<BigIntFilter>;
  totalServiceRequests?: InputMaybe<BigIntFilter>;
  totalServices?: InputMaybe<BigIntFilter>;
};

export type OperatorDistinctCountAggregates = {
  __typename?: 'OperatorDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentStatus across the matching connection */
  currentStatus?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Operator` object types. All fields are combined with a logical ‘and.’ */
export type OperatorFilter = {
  /** Filter by the object’s `account` relation. */
  account?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<OperatorFilter>>;
  /** Filter by the object’s `blueprintOperators` relation. */
  blueprintOperators?: InputMaybe<OperatorToManyBlueprintOperatorFilter>;
  /** Some related `blueprintOperators` exist. */
  blueprintOperatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `bondChanges` relation. */
  bondChanges?: InputMaybe<OperatorToManyOperatorBondChangeFilter>;
  /** Some related `bondChanges` exist. */
  bondChangesExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `currentStake` field. */
  currentStake?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `currentStatus` field. */
  currentStatus?: InputMaybe<OperatorStatusFilter>;
  /** Filter by the object’s `delegations` relation. */
  delegations?: InputMaybe<OperatorToManyDelegationFilter>;
  /** Some related `delegations` exist. */
  delegationsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `jobResults` relation. */
  jobResults?: InputMaybe<OperatorToManyJobResultFilter>;
  /** Some related `jobResults` exist. */
  jobResultsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `joinedAt` field. */
  joinedAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `lastUpdateAt` field. */
  lastUpdateAt?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<OperatorFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<OperatorFilter>>;
  /** Filter by the object’s `scheduledUnstakeAmount` field. */
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `serviceOperators` relation. */
  serviceOperators?: InputMaybe<OperatorToManyServiceOperatorFilter>;
  /** Some related `serviceOperators` exist. */
  serviceOperatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `serviceRequestOperators` relation. */
  serviceRequestOperators?: InputMaybe<OperatorToManyServiceRequestOperatorFilter>;
  /** Some related `serviceRequestOperators` exist. */
  serviceRequestOperatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `statusHistory` relation. */
  statusHistory?: InputMaybe<OperatorToManyOperatorStatusChangeFilter>;
  /** Some related `statusHistory` exist. */
  statusHistoryExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `totalBlueprints` field. */
  totalBlueprints?: InputMaybe<IntFilter>;
  /** Filter by the object’s `totalServiceRequests` field. */
  totalServiceRequests?: InputMaybe<IntFilter>;
  /** Filter by the object’s `totalServices` field. */
  totalServices?: InputMaybe<IntFilter>;
  /** Filter by the object’s `unstakeRequests` relation. */
  unstakeRequests?: InputMaybe<OperatorToManyUnstakeRequestFilter>;
  /** Some related `unstakeRequests` exist. */
  unstakeRequestsExist?: InputMaybe<Scalars['Boolean']['input']>;
};

/** A connection to a list of `JobCall` values, with data from `JobResult`. */
export type OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyConnection = {
  __typename?: 'OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<JobCallAggregates>;
  /** A list of edges which contains the `JobCall`, info from the `JobResult`, and the cursor to aid in pagination. */
  edges: Array<OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<JobCallAggregates>>;
  /** A list of `JobCall` objects. */
  nodes: Array<Maybe<JobCall>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `JobCall` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `JobCall` values, with data from `JobResult`. */
export type OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<JobCallsGroupBy>;
  having?: InputMaybe<JobCallsHavingInput>;
};

/** A `JobCall` edge in the connection, with data from `JobResult`. */
export type OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyEdge = {
  __typename?: 'OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** The `JobCall` at the end of the edge. */
  node?: Maybe<JobCall>;
};


/** A `JobCall` edge in the connection, with data from `JobResult`. */
export type OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyEdgeJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type OperatorMaxAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<IntFilter>;
  lastUpdateAt?: InputMaybe<IntFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<IntFilter>;
  totalServiceRequests?: InputMaybe<IntFilter>;
  totalServices?: InputMaybe<IntFilter>;
};

export type OperatorMaxAggregates = {
  __typename?: 'OperatorMaxAggregates';
  /** Maximum of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['Int']['output']>;
  /** Maximum of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['Int']['output']>;
  /** Maximum of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['Int']['output']>;
};

export type OperatorMinAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<IntFilter>;
  lastUpdateAt?: InputMaybe<IntFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<IntFilter>;
  totalServiceRequests?: InputMaybe<IntFilter>;
  totalServices?: InputMaybe<IntFilter>;
};

export type OperatorMinAggregates = {
  __typename?: 'OperatorMinAggregates';
  /** Minimum of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['Int']['output']>;
  /** Minimum of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['Int']['output']>;
  /** Minimum of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['Int']['output']>;
};

/** A connection to a list of `ServiceRequest` values, with data from `ServiceRequestOperator`. */
export type OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyConnection = {
  __typename?: 'OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceRequestAggregates>;
  /** A list of edges which contains the `ServiceRequest`, info from the `ServiceRequestOperator`, and the cursor to aid in pagination. */
  edges: Array<OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceRequestAggregates>>;
  /** A list of `ServiceRequest` objects. */
  nodes: Array<Maybe<ServiceRequest>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ServiceRequest` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ServiceRequest` values, with data from `ServiceRequestOperator`. */
export type OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServiceRequestsGroupBy>;
  having?: InputMaybe<ServiceRequestsHavingInput>;
};

/** A `ServiceRequest` edge in the connection, with data from `ServiceRequestOperator`. */
export type OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyEdge = {
  __typename?: 'OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ServiceRequest` at the end of the edge. */
  node?: Maybe<ServiceRequest>;
  /** Reads and enables pagination through a set of `ServiceRequestOperator`. */
  serviceRequestOperators: ServiceRequestOperatorsConnection;
};


/** A `ServiceRequest` edge in the connection, with data from `ServiceRequestOperator`. */
export type OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyEdgeServiceRequestOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Request_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Service` values, with data from `JobResult`. */
export type OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyConnection = {
  __typename?: 'OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceAggregates>;
  /** A list of edges which contains the `Service`, info from the `JobResult`, and the cursor to aid in pagination. */
  edges: Array<OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceAggregates>>;
  /** A list of `Service` objects. */
  nodes: Array<Maybe<Service>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Service` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Service` values, with data from `JobResult`. */
export type OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServicesGroupBy>;
  having?: InputMaybe<ServicesHavingInput>;
};

/** A `Service` edge in the connection, with data from `JobResult`. */
export type OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyEdge = {
  __typename?: 'OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** The `Service` at the end of the edge. */
  node?: Maybe<Service>;
};


/** A `Service` edge in the connection, with data from `JobResult`. */
export type OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyEdgeJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Service` values, with data from `ServiceOperator`. */
export type OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyConnection = {
  __typename?: 'OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceAggregates>;
  /** A list of edges which contains the `Service`, info from the `ServiceOperator`, and the cursor to aid in pagination. */
  edges: Array<OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceAggregates>>;
  /** A list of `Service` objects. */
  nodes: Array<Maybe<Service>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Service` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Service` values, with data from `ServiceOperator`. */
export type OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServicesGroupBy>;
  having?: InputMaybe<ServicesHavingInput>;
};

/** A `Service` edge in the connection, with data from `ServiceOperator`. */
export type OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyEdge = {
  __typename?: 'OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Service` at the end of the edge. */
  node?: Maybe<Service>;
  /** Reads and enables pagination through a set of `ServiceOperator`. */
  serviceOperators: ServiceOperatorsConnection;
};


/** A `Service` edge in the connection, with data from `ServiceOperator`. */
export type OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyEdgeServiceOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/**  Enum representing the current status of an Operator in the network. */
export enum OperatorStatus {
  Active = 'ACTIVE',
  Leaving = 'LEAVING',
  Offline = 'OFFLINE'
}

export type OperatorStatusChange = Node & {
  __typename?: 'OperatorStatusChange';
  /** The block number at which the status change occurred. */
  blockNumber: Scalars['Int']['output'];
  /** Unique identifier for the status change. Composite key: operator ID + block number */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `OperatorStatusChange`. */
  operator?: Maybe<Operator>;
  /** The Operator whose status has changed. */
  operatorId: Scalars['String']['output'];
  /** The new status of the Operator. */
  status: OperatorStatus;
};

export type OperatorStatusChangeAggregates = {
  __typename?: 'OperatorStatusChangeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<OperatorStatusChangeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<OperatorStatusChangeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<OperatorStatusChangeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<OperatorStatusChangeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<OperatorStatusChangeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<OperatorStatusChangeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<OperatorStatusChangeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<OperatorStatusChangeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<OperatorStatusChangeVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `OperatorStatusChange` object types. */
export type OperatorStatusChangeAggregatesFilter = {
  /** Mean average aggregate over matching `OperatorStatusChange` objects. */
  average?: InputMaybe<OperatorStatusChangeAverageAggregateFilter>;
  /** Distinct count aggregate over matching `OperatorStatusChange` objects. */
  distinctCount?: InputMaybe<OperatorStatusChangeDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `OperatorStatusChange` object to be included within the aggregate. */
  filter?: InputMaybe<OperatorStatusChangeFilter>;
  /** Maximum aggregate over matching `OperatorStatusChange` objects. */
  max?: InputMaybe<OperatorStatusChangeMaxAggregateFilter>;
  /** Minimum aggregate over matching `OperatorStatusChange` objects. */
  min?: InputMaybe<OperatorStatusChangeMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `OperatorStatusChange` objects. */
  stddevPopulation?: InputMaybe<OperatorStatusChangeStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `OperatorStatusChange` objects. */
  stddevSample?: InputMaybe<OperatorStatusChangeStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `OperatorStatusChange` objects. */
  sum?: InputMaybe<OperatorStatusChangeSumAggregateFilter>;
  /** Population variance aggregate over matching `OperatorStatusChange` objects. */
  variancePopulation?: InputMaybe<OperatorStatusChangeVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `OperatorStatusChange` objects. */
  varianceSample?: InputMaybe<OperatorStatusChangeVarianceSampleAggregateFilter>;
};

export type OperatorStatusChangeAverageAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorStatusChangeAverageAggregates = {
  __typename?: 'OperatorStatusChangeAverageAggregates';
  /** Mean average of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorStatusChangeDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
  status?: InputMaybe<BigIntFilter>;
};

export type OperatorStatusChangeDistinctCountAggregates = {
  __typename?: 'OperatorStatusChangeDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of status across the matching connection */
  status?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `OperatorStatusChange` object types. All fields are combined with a logical ‘and.’ */
export type OperatorStatusChangeFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<OperatorStatusChangeFilter>>;
  /** Filter by the object’s `blockNumber` field. */
  blockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<OperatorStatusChangeFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<OperatorStatusChangeFilter>>;
  /** Filter by the object’s `status` field. */
  status?: InputMaybe<OperatorStatusFilter>;
};

export type OperatorStatusChangeMaxAggregateFilter = {
  blockNumber?: InputMaybe<IntFilter>;
};

export type OperatorStatusChangeMaxAggregates = {
  __typename?: 'OperatorStatusChangeMaxAggregates';
  /** Maximum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type OperatorStatusChangeMinAggregateFilter = {
  blockNumber?: InputMaybe<IntFilter>;
};

export type OperatorStatusChangeMinAggregates = {
  __typename?: 'OperatorStatusChangeMinAggregates';
  /** Minimum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
};

export type OperatorStatusChangeStddevPopulationAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorStatusChangeStddevPopulationAggregates = {
  __typename?: 'OperatorStatusChangeStddevPopulationAggregates';
  /** Population standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorStatusChangeStddevSampleAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorStatusChangeStddevSampleAggregates = {
  __typename?: 'OperatorStatusChangeStddevSampleAggregates';
  /** Sample standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorStatusChangeSumAggregateFilter = {
  blockNumber?: InputMaybe<BigIntFilter>;
};

export type OperatorStatusChangeSumAggregates = {
  __typename?: 'OperatorStatusChangeSumAggregates';
  /** Sum of blockNumber across the matching connection */
  blockNumber: Scalars['BigInt']['output'];
};

export type OperatorStatusChangeVariancePopulationAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorStatusChangeVariancePopulationAggregates = {
  __typename?: 'OperatorStatusChangeVariancePopulationAggregates';
  /** Population variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorStatusChangeVarianceSampleAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
};

export type OperatorStatusChangeVarianceSampleAggregates = {
  __typename?: 'OperatorStatusChangeVarianceSampleAggregates';
  /** Sample variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `OperatorStatusChange` values. */
export type OperatorStatusChangesConnection = {
  __typename?: 'OperatorStatusChangesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorStatusChangeAggregates>;
  /** A list of edges which contains the `OperatorStatusChange` and cursor to aid in pagination. */
  edges: Array<OperatorStatusChangesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorStatusChangeAggregates>>;
  /** A list of `OperatorStatusChange` objects. */
  nodes: Array<Maybe<OperatorStatusChange>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `OperatorStatusChange` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `OperatorStatusChange` values. */
export type OperatorStatusChangesConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorStatusChangesGroupBy>;
  having?: InputMaybe<OperatorStatusChangesHavingInput>;
};

/** A `OperatorStatusChange` edge in the connection. */
export type OperatorStatusChangesEdge = {
  __typename?: 'OperatorStatusChangesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `OperatorStatusChange` at the end of the edge. */
  node?: Maybe<OperatorStatusChange>;
};

/** Grouping methods for `OperatorStatusChange` for usage during aggregation. */
export enum OperatorStatusChangesGroupBy {
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  Status = 'STATUS'
}

export type OperatorStatusChangesHavingAverageInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorStatusChangesHavingDistinctCountInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `OperatorStatusChange` aggregates. */
export type OperatorStatusChangesHavingInput = {
  AND?: InputMaybe<Array<OperatorStatusChangesHavingInput>>;
  OR?: InputMaybe<Array<OperatorStatusChangesHavingInput>>;
  average?: InputMaybe<OperatorStatusChangesHavingAverageInput>;
  distinctCount?: InputMaybe<OperatorStatusChangesHavingDistinctCountInput>;
  max?: InputMaybe<OperatorStatusChangesHavingMaxInput>;
  min?: InputMaybe<OperatorStatusChangesHavingMinInput>;
  stddevPopulation?: InputMaybe<OperatorStatusChangesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<OperatorStatusChangesHavingStddevSampleInput>;
  sum?: InputMaybe<OperatorStatusChangesHavingSumInput>;
  variancePopulation?: InputMaybe<OperatorStatusChangesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<OperatorStatusChangesHavingVarianceSampleInput>;
};

export type OperatorStatusChangesHavingMaxInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorStatusChangesHavingMinInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorStatusChangesHavingStddevPopulationInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorStatusChangesHavingStddevSampleInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorStatusChangesHavingSumInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorStatusChangesHavingVariancePopulationInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

export type OperatorStatusChangesHavingVarianceSampleInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `OperatorStatusChange`. */
export enum OperatorStatusChangesOrderBy {
  BlockNumberAsc = 'BLOCK_NUMBER_ASC',
  BlockNumberDesc = 'BLOCK_NUMBER_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  StatusAsc = 'STATUS_ASC',
  StatusDesc = 'STATUS_DESC'
}

/** A filter to be used against OperatorStatus fields. All fields are combined with a logical ‘and.’ */
export type OperatorStatusFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<OperatorStatus>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<OperatorStatus>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<OperatorStatus>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<OperatorStatus>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<OperatorStatus>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<OperatorStatus>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<OperatorStatus>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<OperatorStatus>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<OperatorStatus>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<OperatorStatus>>;
};

export type OperatorStddevPopulationAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<BigFloatFilter>;
  totalServiceRequests?: InputMaybe<BigFloatFilter>;
  totalServices?: InputMaybe<BigFloatFilter>;
};

export type OperatorStddevPopulationAggregates = {
  __typename?: 'OperatorStddevPopulationAggregates';
  /** Population standard deviation of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorStddevSampleAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<BigFloatFilter>;
  totalServiceRequests?: InputMaybe<BigFloatFilter>;
  totalServices?: InputMaybe<BigFloatFilter>;
};

export type OperatorStddevSampleAggregates = {
  __typename?: 'OperatorStddevSampleAggregates';
  /** Sample standard deviation of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorSumAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<BigIntFilter>;
  lastUpdateAt?: InputMaybe<BigIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<BigIntFilter>;
  totalServiceRequests?: InputMaybe<BigIntFilter>;
  totalServices?: InputMaybe<BigIntFilter>;
};

export type OperatorSumAggregates = {
  __typename?: 'OperatorSumAggregates';
  /** Sum of currentStake across the matching connection */
  currentStake: Scalars['BigFloat']['output'];
  /** Sum of joinedAt across the matching connection */
  joinedAt: Scalars['BigInt']['output'];
  /** Sum of lastUpdateAt across the matching connection */
  lastUpdateAt: Scalars['BigInt']['output'];
  /** Sum of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount: Scalars['BigFloat']['output'];
  /** Sum of totalBlueprints across the matching connection */
  totalBlueprints: Scalars['BigInt']['output'];
  /** Sum of totalServiceRequests across the matching connection */
  totalServiceRequests: Scalars['BigInt']['output'];
  /** Sum of totalServices across the matching connection */
  totalServices: Scalars['BigInt']['output'];
};

/** A filter to be used against many `BlueprintOperator` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyBlueprintOperatorFilter = {
  /** Aggregates across related `BlueprintOperator` match the filter criteria. */
  aggregates?: InputMaybe<BlueprintOperatorAggregatesFilter>;
  /** Every related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BlueprintOperatorFilter>;
  /** No related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BlueprintOperatorFilter>;
  /** Some related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BlueprintOperatorFilter>;
};

/** A filter to be used against many `Delegation` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyDelegationFilter = {
  /** Aggregates across related `Delegation` match the filter criteria. */
  aggregates?: InputMaybe<DelegationAggregatesFilter>;
  /** Every related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DelegationFilter>;
  /** No related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DelegationFilter>;
  /** Some related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DelegationFilter>;
};

/** A filter to be used against many `JobResult` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyJobResultFilter = {
  /** Aggregates across related `JobResult` match the filter criteria. */
  aggregates?: InputMaybe<JobResultAggregatesFilter>;
  /** Every related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<JobResultFilter>;
  /** No related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<JobResultFilter>;
  /** Some related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<JobResultFilter>;
};

/** A filter to be used against many `OperatorBondChange` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyOperatorBondChangeFilter = {
  /** Aggregates across related `OperatorBondChange` match the filter criteria. */
  aggregates?: InputMaybe<OperatorBondChangeAggregatesFilter>;
  /** Every related `OperatorBondChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<OperatorBondChangeFilter>;
  /** No related `OperatorBondChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<OperatorBondChangeFilter>;
  /** Some related `OperatorBondChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<OperatorBondChangeFilter>;
};

/** A filter to be used against many `OperatorStatusChange` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyOperatorStatusChangeFilter = {
  /** Aggregates across related `OperatorStatusChange` match the filter criteria. */
  aggregates?: InputMaybe<OperatorStatusChangeAggregatesFilter>;
  /** Every related `OperatorStatusChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<OperatorStatusChangeFilter>;
  /** No related `OperatorStatusChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<OperatorStatusChangeFilter>;
  /** Some related `OperatorStatusChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<OperatorStatusChangeFilter>;
};

/** A filter to be used against many `ServiceOperator` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyServiceOperatorFilter = {
  /** Aggregates across related `ServiceOperator` match the filter criteria. */
  aggregates?: InputMaybe<ServiceOperatorAggregatesFilter>;
  /** Every related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceOperatorFilter>;
  /** No related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceOperatorFilter>;
  /** Some related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceOperatorFilter>;
};

/** A filter to be used against many `ServiceRequestOperator` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyServiceRequestOperatorFilter = {
  /** Aggregates across related `ServiceRequestOperator` match the filter criteria. */
  aggregates?: InputMaybe<ServiceRequestOperatorAggregatesFilter>;
  /** Every related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceRequestOperatorFilter>;
  /** No related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceRequestOperatorFilter>;
  /** Some related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceRequestOperatorFilter>;
};

/** A filter to be used against many `UnstakeRequest` object types. All fields are combined with a logical ‘and.’ */
export type OperatorToManyUnstakeRequestFilter = {
  /** Aggregates across related `UnstakeRequest` match the filter criteria. */
  aggregates?: InputMaybe<UnstakeRequestAggregatesFilter>;
  /** Every related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<UnstakeRequestFilter>;
  /** No related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<UnstakeRequestFilter>;
  /** Some related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<UnstakeRequestFilter>;
};

export type OperatorVariancePopulationAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<BigFloatFilter>;
  totalServiceRequests?: InputMaybe<BigFloatFilter>;
  totalServices?: InputMaybe<BigFloatFilter>;
};

export type OperatorVariancePopulationAggregates = {
  __typename?: 'OperatorVariancePopulationAggregates';
  /** Population variance of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['BigFloat']['output']>;
};

export type OperatorVarianceSampleAggregateFilter = {
  currentStake?: InputMaybe<BigFloatFilter>;
  joinedAt?: InputMaybe<BigFloatFilter>;
  lastUpdateAt?: InputMaybe<BigFloatFilter>;
  scheduledUnstakeAmount?: InputMaybe<BigFloatFilter>;
  totalBlueprints?: InputMaybe<BigFloatFilter>;
  totalServiceRequests?: InputMaybe<BigFloatFilter>;
  totalServices?: InputMaybe<BigFloatFilter>;
};

export type OperatorVarianceSampleAggregates = {
  __typename?: 'OperatorVarianceSampleAggregates';
  /** Sample variance of currentStake across the matching connection */
  currentStake?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of joinedAt across the matching connection */
  joinedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lastUpdateAt across the matching connection */
  lastUpdateAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of scheduledUnstakeAmount across the matching connection */
  scheduledUnstakeAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalBlueprints across the matching connection */
  totalBlueprints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalServiceRequests across the matching connection */
  totalServiceRequests?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalServices across the matching connection */
  totalServices?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Operator` values. */
export type OperatorsConnection = {
  __typename?: 'OperatorsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator` and cursor to aid in pagination. */
  edges: Array<OperatorsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values. */
export type OperatorsConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection. */
export type OperatorsEdge = {
  __typename?: 'OperatorsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
};

/** Grouping methods for `Operator` for usage during aggregation. */
export enum OperatorsGroupBy {
  AccountId = 'ACCOUNT_ID',
  CurrentStake = 'CURRENT_STAKE',
  CurrentStatus = 'CURRENT_STATUS',
  Id = 'ID',
  JoinedAt = 'JOINED_AT',
  LastUpdateAt = 'LAST_UPDATE_AT',
  ScheduledUnstakeAmount = 'SCHEDULED_UNSTAKE_AMOUNT',
  TotalBlueprints = 'TOTAL_BLUEPRINTS',
  TotalServices = 'TOTAL_SERVICES',
  TotalServiceRequests = 'TOTAL_SERVICE_REQUESTS'
}

export type OperatorsHavingAverageInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

export type OperatorsHavingDistinctCountInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Operator` aggregates. */
export type OperatorsHavingInput = {
  AND?: InputMaybe<Array<OperatorsHavingInput>>;
  OR?: InputMaybe<Array<OperatorsHavingInput>>;
  average?: InputMaybe<OperatorsHavingAverageInput>;
  distinctCount?: InputMaybe<OperatorsHavingDistinctCountInput>;
  max?: InputMaybe<OperatorsHavingMaxInput>;
  min?: InputMaybe<OperatorsHavingMinInput>;
  stddevPopulation?: InputMaybe<OperatorsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<OperatorsHavingStddevSampleInput>;
  sum?: InputMaybe<OperatorsHavingSumInput>;
  variancePopulation?: InputMaybe<OperatorsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<OperatorsHavingVarianceSampleInput>;
};

export type OperatorsHavingMaxInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

export type OperatorsHavingMinInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

export type OperatorsHavingStddevPopulationInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

export type OperatorsHavingStddevSampleInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

export type OperatorsHavingSumInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

export type OperatorsHavingVariancePopulationInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

export type OperatorsHavingVarianceSampleInput = {
  currentStake?: InputMaybe<HavingBigfloatFilter>;
  joinedAt?: InputMaybe<HavingIntFilter>;
  lastUpdateAt?: InputMaybe<HavingIntFilter>;
  scheduledUnstakeAmount?: InputMaybe<HavingBigfloatFilter>;
  totalBlueprints?: InputMaybe<HavingIntFilter>;
  totalServiceRequests?: InputMaybe<HavingIntFilter>;
  totalServices?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `Operator`. */
export enum OperatorsOrderBy {
  AccountByAccountIdCreatedAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC',
  AccountByAccountIdCreatedAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC',
  AccountByAccountIdIdAsc = 'ACCOUNT_BY_ACCOUNT_ID__ID_ASC',
  AccountByAccountIdIdDesc = 'ACCOUNT_BY_ACCOUNT_ID__ID_DESC',
  AccountByAccountIdLastUpdateAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC',
  AccountByAccountIdLastUpdateAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC',
  AccountByAccountIdTotalPointsAsc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC',
  AccountByAccountIdTotalPointsDesc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC',
  AccountIdAsc = 'ACCOUNT_ID_ASC',
  AccountIdDesc = 'ACCOUNT_ID_DESC',
  BlueprintOperatorsAverageBlockRangeAsc = 'BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_ASC',
  BlueprintOperatorsAverageBlockRangeDesc = 'BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_DESC',
  BlueprintOperatorsAverageBlueprintIdAsc = 'BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_ASC',
  BlueprintOperatorsAverageBlueprintIdDesc = 'BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_DESC',
  BlueprintOperatorsAverageIdAsc = 'BLUEPRINT_OPERATORS_AVERAGE_ID_ASC',
  BlueprintOperatorsAverageIdDesc = 'BLUEPRINT_OPERATORS_AVERAGE_ID_DESC',
  BlueprintOperatorsAverageIsActiveAsc = 'BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_ASC',
  BlueprintOperatorsAverageIsActiveDesc = 'BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_DESC',
  BlueprintOperatorsAverageOperatorIdAsc = 'BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_ASC',
  BlueprintOperatorsAverageOperatorIdDesc = 'BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_DESC',
  BlueprintOperatorsAverageRegisteredAtAsc = 'BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_ASC',
  BlueprintOperatorsAverageRegisteredAtDesc = 'BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_DESC',
  BlueprintOperatorsAverageUpdatedAtAsc = 'BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_ASC',
  BlueprintOperatorsAverageUpdatedAtDesc = 'BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_DESC',
  BlueprintOperatorsByOperatorIdCountAsc = 'BLUEPRINT_OPERATORS_BY_OPERATOR_ID__COUNT_ASC',
  BlueprintOperatorsByOperatorIdCountDesc = 'BLUEPRINT_OPERATORS_BY_OPERATOR_ID__COUNT_DESC',
  BlueprintOperatorsCountAsc = 'BLUEPRINT_OPERATORS_COUNT_ASC',
  BlueprintOperatorsCountDesc = 'BLUEPRINT_OPERATORS_COUNT_DESC',
  BlueprintOperatorsDistinctCountBlockRangeAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  BlueprintOperatorsDistinctCountBlockRangeDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  BlueprintOperatorsDistinctCountBlueprintIdAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_ASC',
  BlueprintOperatorsDistinctCountBlueprintIdDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_DESC',
  BlueprintOperatorsDistinctCountIdAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_ASC',
  BlueprintOperatorsDistinctCountIdDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_DESC',
  BlueprintOperatorsDistinctCountIsActiveAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_ASC',
  BlueprintOperatorsDistinctCountIsActiveDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_DESC',
  BlueprintOperatorsDistinctCountOperatorIdAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  BlueprintOperatorsDistinctCountOperatorIdDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  BlueprintOperatorsDistinctCountRegisteredAtAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_ASC',
  BlueprintOperatorsDistinctCountRegisteredAtDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_DESC',
  BlueprintOperatorsDistinctCountUpdatedAtAsc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_ASC',
  BlueprintOperatorsDistinctCountUpdatedAtDesc = 'BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_DESC',
  BlueprintOperatorsMaxBlockRangeAsc = 'BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_ASC',
  BlueprintOperatorsMaxBlockRangeDesc = 'BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_DESC',
  BlueprintOperatorsMaxBlueprintIdAsc = 'BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_ASC',
  BlueprintOperatorsMaxBlueprintIdDesc = 'BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_DESC',
  BlueprintOperatorsMaxIdAsc = 'BLUEPRINT_OPERATORS_MAX_ID_ASC',
  BlueprintOperatorsMaxIdDesc = 'BLUEPRINT_OPERATORS_MAX_ID_DESC',
  BlueprintOperatorsMaxIsActiveAsc = 'BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_ASC',
  BlueprintOperatorsMaxIsActiveDesc = 'BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_DESC',
  BlueprintOperatorsMaxOperatorIdAsc = 'BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_ASC',
  BlueprintOperatorsMaxOperatorIdDesc = 'BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_DESC',
  BlueprintOperatorsMaxRegisteredAtAsc = 'BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_ASC',
  BlueprintOperatorsMaxRegisteredAtDesc = 'BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_DESC',
  BlueprintOperatorsMaxUpdatedAtAsc = 'BLUEPRINT_OPERATORS_MAX_UPDATED_AT_ASC',
  BlueprintOperatorsMaxUpdatedAtDesc = 'BLUEPRINT_OPERATORS_MAX_UPDATED_AT_DESC',
  BlueprintOperatorsMinBlockRangeAsc = 'BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_ASC',
  BlueprintOperatorsMinBlockRangeDesc = 'BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_DESC',
  BlueprintOperatorsMinBlueprintIdAsc = 'BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_ASC',
  BlueprintOperatorsMinBlueprintIdDesc = 'BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_DESC',
  BlueprintOperatorsMinIdAsc = 'BLUEPRINT_OPERATORS_MIN_ID_ASC',
  BlueprintOperatorsMinIdDesc = 'BLUEPRINT_OPERATORS_MIN_ID_DESC',
  BlueprintOperatorsMinIsActiveAsc = 'BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_ASC',
  BlueprintOperatorsMinIsActiveDesc = 'BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_DESC',
  BlueprintOperatorsMinOperatorIdAsc = 'BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_ASC',
  BlueprintOperatorsMinOperatorIdDesc = 'BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_DESC',
  BlueprintOperatorsMinRegisteredAtAsc = 'BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_ASC',
  BlueprintOperatorsMinRegisteredAtDesc = 'BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_DESC',
  BlueprintOperatorsMinUpdatedAtAsc = 'BLUEPRINT_OPERATORS_MIN_UPDATED_AT_ASC',
  BlueprintOperatorsMinUpdatedAtDesc = 'BLUEPRINT_OPERATORS_MIN_UPDATED_AT_DESC',
  BlueprintOperatorsStddevPopulationBlockRangeAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  BlueprintOperatorsStddevPopulationBlockRangeDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  BlueprintOperatorsStddevPopulationBlueprintIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_ASC',
  BlueprintOperatorsStddevPopulationBlueprintIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_DESC',
  BlueprintOperatorsStddevPopulationIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_ASC',
  BlueprintOperatorsStddevPopulationIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_DESC',
  BlueprintOperatorsStddevPopulationIsActiveAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_ASC',
  BlueprintOperatorsStddevPopulationIsActiveDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_DESC',
  BlueprintOperatorsStddevPopulationOperatorIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  BlueprintOperatorsStddevPopulationOperatorIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  BlueprintOperatorsStddevPopulationRegisteredAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_ASC',
  BlueprintOperatorsStddevPopulationRegisteredAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_DESC',
  BlueprintOperatorsStddevPopulationUpdatedAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_ASC',
  BlueprintOperatorsStddevPopulationUpdatedAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_DESC',
  BlueprintOperatorsStddevSampleBlockRangeAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  BlueprintOperatorsStddevSampleBlockRangeDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  BlueprintOperatorsStddevSampleBlueprintIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC',
  BlueprintOperatorsStddevSampleBlueprintIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC',
  BlueprintOperatorsStddevSampleIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_ASC',
  BlueprintOperatorsStddevSampleIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_DESC',
  BlueprintOperatorsStddevSampleIsActiveAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_ASC',
  BlueprintOperatorsStddevSampleIsActiveDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_DESC',
  BlueprintOperatorsStddevSampleOperatorIdAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  BlueprintOperatorsStddevSampleOperatorIdDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  BlueprintOperatorsStddevSampleRegisteredAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_ASC',
  BlueprintOperatorsStddevSampleRegisteredAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_DESC',
  BlueprintOperatorsStddevSampleUpdatedAtAsc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_ASC',
  BlueprintOperatorsStddevSampleUpdatedAtDesc = 'BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_DESC',
  BlueprintOperatorsSumBlockRangeAsc = 'BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_ASC',
  BlueprintOperatorsSumBlockRangeDesc = 'BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_DESC',
  BlueprintOperatorsSumBlueprintIdAsc = 'BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_ASC',
  BlueprintOperatorsSumBlueprintIdDesc = 'BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_DESC',
  BlueprintOperatorsSumIdAsc = 'BLUEPRINT_OPERATORS_SUM_ID_ASC',
  BlueprintOperatorsSumIdDesc = 'BLUEPRINT_OPERATORS_SUM_ID_DESC',
  BlueprintOperatorsSumIsActiveAsc = 'BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_ASC',
  BlueprintOperatorsSumIsActiveDesc = 'BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_DESC',
  BlueprintOperatorsSumOperatorIdAsc = 'BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_ASC',
  BlueprintOperatorsSumOperatorIdDesc = 'BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_DESC',
  BlueprintOperatorsSumRegisteredAtAsc = 'BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_ASC',
  BlueprintOperatorsSumRegisteredAtDesc = 'BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_DESC',
  BlueprintOperatorsSumUpdatedAtAsc = 'BLUEPRINT_OPERATORS_SUM_UPDATED_AT_ASC',
  BlueprintOperatorsSumUpdatedAtDesc = 'BLUEPRINT_OPERATORS_SUM_UPDATED_AT_DESC',
  BlueprintOperatorsVariancePopulationBlockRangeAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  BlueprintOperatorsVariancePopulationBlockRangeDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  BlueprintOperatorsVariancePopulationBlueprintIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC',
  BlueprintOperatorsVariancePopulationBlueprintIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC',
  BlueprintOperatorsVariancePopulationIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_ASC',
  BlueprintOperatorsVariancePopulationIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_DESC',
  BlueprintOperatorsVariancePopulationIsActiveAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_ASC',
  BlueprintOperatorsVariancePopulationIsActiveDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_DESC',
  BlueprintOperatorsVariancePopulationOperatorIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  BlueprintOperatorsVariancePopulationOperatorIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  BlueprintOperatorsVariancePopulationRegisteredAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_ASC',
  BlueprintOperatorsVariancePopulationRegisteredAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_DESC',
  BlueprintOperatorsVariancePopulationUpdatedAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_ASC',
  BlueprintOperatorsVariancePopulationUpdatedAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_DESC',
  BlueprintOperatorsVarianceSampleBlockRangeAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  BlueprintOperatorsVarianceSampleBlockRangeDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  BlueprintOperatorsVarianceSampleBlueprintIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC',
  BlueprintOperatorsVarianceSampleBlueprintIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC',
  BlueprintOperatorsVarianceSampleIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_ASC',
  BlueprintOperatorsVarianceSampleIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_DESC',
  BlueprintOperatorsVarianceSampleIsActiveAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_ASC',
  BlueprintOperatorsVarianceSampleIsActiveDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_DESC',
  BlueprintOperatorsVarianceSampleOperatorIdAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  BlueprintOperatorsVarianceSampleOperatorIdDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  BlueprintOperatorsVarianceSampleRegisteredAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_ASC',
  BlueprintOperatorsVarianceSampleRegisteredAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_DESC',
  BlueprintOperatorsVarianceSampleUpdatedAtAsc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_ASC',
  BlueprintOperatorsVarianceSampleUpdatedAtDesc = 'BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_DESC',
  BondChangesAverageActionAsc = 'BOND_CHANGES_AVERAGE_ACTION_ASC',
  BondChangesAverageActionDesc = 'BOND_CHANGES_AVERAGE_ACTION_DESC',
  BondChangesAverageAmountAsc = 'BOND_CHANGES_AVERAGE_AMOUNT_ASC',
  BondChangesAverageAmountDesc = 'BOND_CHANGES_AVERAGE_AMOUNT_DESC',
  BondChangesAverageBlockNumberAsc = 'BOND_CHANGES_AVERAGE_BLOCK_NUMBER_ASC',
  BondChangesAverageBlockNumberDesc = 'BOND_CHANGES_AVERAGE_BLOCK_NUMBER_DESC',
  BondChangesAverageBlockRangeAsc = 'BOND_CHANGES_AVERAGE_BLOCK_RANGE_ASC',
  BondChangesAverageBlockRangeDesc = 'BOND_CHANGES_AVERAGE_BLOCK_RANGE_DESC',
  BondChangesAverageIdAsc = 'BOND_CHANGES_AVERAGE_ID_ASC',
  BondChangesAverageIdDesc = 'BOND_CHANGES_AVERAGE_ID_DESC',
  BondChangesAverageOperatorIdAsc = 'BOND_CHANGES_AVERAGE_OPERATOR_ID_ASC',
  BondChangesAverageOperatorIdDesc = 'BOND_CHANGES_AVERAGE_OPERATOR_ID_DESC',
  BondChangesCountAsc = 'BOND_CHANGES_COUNT_ASC',
  BondChangesCountDesc = 'BOND_CHANGES_COUNT_DESC',
  BondChangesDistinctCountActionAsc = 'BOND_CHANGES_DISTINCT_COUNT_ACTION_ASC',
  BondChangesDistinctCountActionDesc = 'BOND_CHANGES_DISTINCT_COUNT_ACTION_DESC',
  BondChangesDistinctCountAmountAsc = 'BOND_CHANGES_DISTINCT_COUNT_AMOUNT_ASC',
  BondChangesDistinctCountAmountDesc = 'BOND_CHANGES_DISTINCT_COUNT_AMOUNT_DESC',
  BondChangesDistinctCountBlockNumberAsc = 'BOND_CHANGES_DISTINCT_COUNT_BLOCK_NUMBER_ASC',
  BondChangesDistinctCountBlockNumberDesc = 'BOND_CHANGES_DISTINCT_COUNT_BLOCK_NUMBER_DESC',
  BondChangesDistinctCountBlockRangeAsc = 'BOND_CHANGES_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  BondChangesDistinctCountBlockRangeDesc = 'BOND_CHANGES_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  BondChangesDistinctCountIdAsc = 'BOND_CHANGES_DISTINCT_COUNT_ID_ASC',
  BondChangesDistinctCountIdDesc = 'BOND_CHANGES_DISTINCT_COUNT_ID_DESC',
  BondChangesDistinctCountOperatorIdAsc = 'BOND_CHANGES_DISTINCT_COUNT_OPERATOR_ID_ASC',
  BondChangesDistinctCountOperatorIdDesc = 'BOND_CHANGES_DISTINCT_COUNT_OPERATOR_ID_DESC',
  BondChangesMaxActionAsc = 'BOND_CHANGES_MAX_ACTION_ASC',
  BondChangesMaxActionDesc = 'BOND_CHANGES_MAX_ACTION_DESC',
  BondChangesMaxAmountAsc = 'BOND_CHANGES_MAX_AMOUNT_ASC',
  BondChangesMaxAmountDesc = 'BOND_CHANGES_MAX_AMOUNT_DESC',
  BondChangesMaxBlockNumberAsc = 'BOND_CHANGES_MAX_BLOCK_NUMBER_ASC',
  BondChangesMaxBlockNumberDesc = 'BOND_CHANGES_MAX_BLOCK_NUMBER_DESC',
  BondChangesMaxBlockRangeAsc = 'BOND_CHANGES_MAX_BLOCK_RANGE_ASC',
  BondChangesMaxBlockRangeDesc = 'BOND_CHANGES_MAX_BLOCK_RANGE_DESC',
  BondChangesMaxIdAsc = 'BOND_CHANGES_MAX_ID_ASC',
  BondChangesMaxIdDesc = 'BOND_CHANGES_MAX_ID_DESC',
  BondChangesMaxOperatorIdAsc = 'BOND_CHANGES_MAX_OPERATOR_ID_ASC',
  BondChangesMaxOperatorIdDesc = 'BOND_CHANGES_MAX_OPERATOR_ID_DESC',
  BondChangesMinActionAsc = 'BOND_CHANGES_MIN_ACTION_ASC',
  BondChangesMinActionDesc = 'BOND_CHANGES_MIN_ACTION_DESC',
  BondChangesMinAmountAsc = 'BOND_CHANGES_MIN_AMOUNT_ASC',
  BondChangesMinAmountDesc = 'BOND_CHANGES_MIN_AMOUNT_DESC',
  BondChangesMinBlockNumberAsc = 'BOND_CHANGES_MIN_BLOCK_NUMBER_ASC',
  BondChangesMinBlockNumberDesc = 'BOND_CHANGES_MIN_BLOCK_NUMBER_DESC',
  BondChangesMinBlockRangeAsc = 'BOND_CHANGES_MIN_BLOCK_RANGE_ASC',
  BondChangesMinBlockRangeDesc = 'BOND_CHANGES_MIN_BLOCK_RANGE_DESC',
  BondChangesMinIdAsc = 'BOND_CHANGES_MIN_ID_ASC',
  BondChangesMinIdDesc = 'BOND_CHANGES_MIN_ID_DESC',
  BondChangesMinOperatorIdAsc = 'BOND_CHANGES_MIN_OPERATOR_ID_ASC',
  BondChangesMinOperatorIdDesc = 'BOND_CHANGES_MIN_OPERATOR_ID_DESC',
  BondChangesStddevPopulationActionAsc = 'BOND_CHANGES_STDDEV_POPULATION_ACTION_ASC',
  BondChangesStddevPopulationActionDesc = 'BOND_CHANGES_STDDEV_POPULATION_ACTION_DESC',
  BondChangesStddevPopulationAmountAsc = 'BOND_CHANGES_STDDEV_POPULATION_AMOUNT_ASC',
  BondChangesStddevPopulationAmountDesc = 'BOND_CHANGES_STDDEV_POPULATION_AMOUNT_DESC',
  BondChangesStddevPopulationBlockNumberAsc = 'BOND_CHANGES_STDDEV_POPULATION_BLOCK_NUMBER_ASC',
  BondChangesStddevPopulationBlockNumberDesc = 'BOND_CHANGES_STDDEV_POPULATION_BLOCK_NUMBER_DESC',
  BondChangesStddevPopulationBlockRangeAsc = 'BOND_CHANGES_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  BondChangesStddevPopulationBlockRangeDesc = 'BOND_CHANGES_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  BondChangesStddevPopulationIdAsc = 'BOND_CHANGES_STDDEV_POPULATION_ID_ASC',
  BondChangesStddevPopulationIdDesc = 'BOND_CHANGES_STDDEV_POPULATION_ID_DESC',
  BondChangesStddevPopulationOperatorIdAsc = 'BOND_CHANGES_STDDEV_POPULATION_OPERATOR_ID_ASC',
  BondChangesStddevPopulationOperatorIdDesc = 'BOND_CHANGES_STDDEV_POPULATION_OPERATOR_ID_DESC',
  BondChangesStddevSampleActionAsc = 'BOND_CHANGES_STDDEV_SAMPLE_ACTION_ASC',
  BondChangesStddevSampleActionDesc = 'BOND_CHANGES_STDDEV_SAMPLE_ACTION_DESC',
  BondChangesStddevSampleAmountAsc = 'BOND_CHANGES_STDDEV_SAMPLE_AMOUNT_ASC',
  BondChangesStddevSampleAmountDesc = 'BOND_CHANGES_STDDEV_SAMPLE_AMOUNT_DESC',
  BondChangesStddevSampleBlockNumberAsc = 'BOND_CHANGES_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',
  BondChangesStddevSampleBlockNumberDesc = 'BOND_CHANGES_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',
  BondChangesStddevSampleBlockRangeAsc = 'BOND_CHANGES_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  BondChangesStddevSampleBlockRangeDesc = 'BOND_CHANGES_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  BondChangesStddevSampleIdAsc = 'BOND_CHANGES_STDDEV_SAMPLE_ID_ASC',
  BondChangesStddevSampleIdDesc = 'BOND_CHANGES_STDDEV_SAMPLE_ID_DESC',
  BondChangesStddevSampleOperatorIdAsc = 'BOND_CHANGES_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  BondChangesStddevSampleOperatorIdDesc = 'BOND_CHANGES_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  BondChangesSumActionAsc = 'BOND_CHANGES_SUM_ACTION_ASC',
  BondChangesSumActionDesc = 'BOND_CHANGES_SUM_ACTION_DESC',
  BondChangesSumAmountAsc = 'BOND_CHANGES_SUM_AMOUNT_ASC',
  BondChangesSumAmountDesc = 'BOND_CHANGES_SUM_AMOUNT_DESC',
  BondChangesSumBlockNumberAsc = 'BOND_CHANGES_SUM_BLOCK_NUMBER_ASC',
  BondChangesSumBlockNumberDesc = 'BOND_CHANGES_SUM_BLOCK_NUMBER_DESC',
  BondChangesSumBlockRangeAsc = 'BOND_CHANGES_SUM_BLOCK_RANGE_ASC',
  BondChangesSumBlockRangeDesc = 'BOND_CHANGES_SUM_BLOCK_RANGE_DESC',
  BondChangesSumIdAsc = 'BOND_CHANGES_SUM_ID_ASC',
  BondChangesSumIdDesc = 'BOND_CHANGES_SUM_ID_DESC',
  BondChangesSumOperatorIdAsc = 'BOND_CHANGES_SUM_OPERATOR_ID_ASC',
  BondChangesSumOperatorIdDesc = 'BOND_CHANGES_SUM_OPERATOR_ID_DESC',
  BondChangesVariancePopulationActionAsc = 'BOND_CHANGES_VARIANCE_POPULATION_ACTION_ASC',
  BondChangesVariancePopulationActionDesc = 'BOND_CHANGES_VARIANCE_POPULATION_ACTION_DESC',
  BondChangesVariancePopulationAmountAsc = 'BOND_CHANGES_VARIANCE_POPULATION_AMOUNT_ASC',
  BondChangesVariancePopulationAmountDesc = 'BOND_CHANGES_VARIANCE_POPULATION_AMOUNT_DESC',
  BondChangesVariancePopulationBlockNumberAsc = 'BOND_CHANGES_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',
  BondChangesVariancePopulationBlockNumberDesc = 'BOND_CHANGES_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',
  BondChangesVariancePopulationBlockRangeAsc = 'BOND_CHANGES_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  BondChangesVariancePopulationBlockRangeDesc = 'BOND_CHANGES_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  BondChangesVariancePopulationIdAsc = 'BOND_CHANGES_VARIANCE_POPULATION_ID_ASC',
  BondChangesVariancePopulationIdDesc = 'BOND_CHANGES_VARIANCE_POPULATION_ID_DESC',
  BondChangesVariancePopulationOperatorIdAsc = 'BOND_CHANGES_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  BondChangesVariancePopulationOperatorIdDesc = 'BOND_CHANGES_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  BondChangesVarianceSampleActionAsc = 'BOND_CHANGES_VARIANCE_SAMPLE_ACTION_ASC',
  BondChangesVarianceSampleActionDesc = 'BOND_CHANGES_VARIANCE_SAMPLE_ACTION_DESC',
  BondChangesVarianceSampleAmountAsc = 'BOND_CHANGES_VARIANCE_SAMPLE_AMOUNT_ASC',
  BondChangesVarianceSampleAmountDesc = 'BOND_CHANGES_VARIANCE_SAMPLE_AMOUNT_DESC',
  BondChangesVarianceSampleBlockNumberAsc = 'BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',
  BondChangesVarianceSampleBlockNumberDesc = 'BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',
  BondChangesVarianceSampleBlockRangeAsc = 'BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  BondChangesVarianceSampleBlockRangeDesc = 'BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  BondChangesVarianceSampleIdAsc = 'BOND_CHANGES_VARIANCE_SAMPLE_ID_ASC',
  BondChangesVarianceSampleIdDesc = 'BOND_CHANGES_VARIANCE_SAMPLE_ID_DESC',
  BondChangesVarianceSampleOperatorIdAsc = 'BOND_CHANGES_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  BondChangesVarianceSampleOperatorIdDesc = 'BOND_CHANGES_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  CurrentStakeAsc = 'CURRENT_STAKE_ASC',
  CurrentStakeDesc = 'CURRENT_STAKE_DESC',
  CurrentStatusAsc = 'CURRENT_STATUS_ASC',
  CurrentStatusDesc = 'CURRENT_STATUS_DESC',
  DelegationsAverageAssetIdAsc = 'DELEGATIONS_AVERAGE_ASSET_ID_ASC',
  DelegationsAverageAssetIdDesc = 'DELEGATIONS_AVERAGE_ASSET_ID_DESC',
  DelegationsAverageBlockRangeAsc = 'DELEGATIONS_AVERAGE_BLOCK_RANGE_ASC',
  DelegationsAverageBlockRangeDesc = 'DELEGATIONS_AVERAGE_BLOCK_RANGE_DESC',
  DelegationsAverageDelegatorIdAsc = 'DELEGATIONS_AVERAGE_DELEGATOR_ID_ASC',
  DelegationsAverageDelegatorIdDesc = 'DELEGATIONS_AVERAGE_DELEGATOR_ID_DESC',
  DelegationsAverageHasActiveUnstakeRequestAsc = 'DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsAverageHasActiveUnstakeRequestDesc = 'DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsAverageIdAsc = 'DELEGATIONS_AVERAGE_ID_ASC',
  DelegationsAverageIdDesc = 'DELEGATIONS_AVERAGE_ID_DESC',
  DelegationsAverageOperatorIdAsc = 'DELEGATIONS_AVERAGE_OPERATOR_ID_ASC',
  DelegationsAverageOperatorIdDesc = 'DELEGATIONS_AVERAGE_OPERATOR_ID_DESC',
  DelegationsAverageTotalAmountAsc = 'DELEGATIONS_AVERAGE_TOTAL_AMOUNT_ASC',
  DelegationsAverageTotalAmountDesc = 'DELEGATIONS_AVERAGE_TOTAL_AMOUNT_DESC',
  DelegationsByOperatorIdCountAsc = 'DELEGATIONS_BY_OPERATOR_ID__COUNT_ASC',
  DelegationsByOperatorIdCountDesc = 'DELEGATIONS_BY_OPERATOR_ID__COUNT_DESC',
  DelegationsCountAsc = 'DELEGATIONS_COUNT_ASC',
  DelegationsCountDesc = 'DELEGATIONS_COUNT_DESC',
  DelegationsDistinctCountAssetIdAsc = 'DELEGATIONS_DISTINCT_COUNT_ASSET_ID_ASC',
  DelegationsDistinctCountAssetIdDesc = 'DELEGATIONS_DISTINCT_COUNT_ASSET_ID_DESC',
  DelegationsDistinctCountBlockRangeAsc = 'DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  DelegationsDistinctCountBlockRangeDesc = 'DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  DelegationsDistinctCountDelegatorIdAsc = 'DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  DelegationsDistinctCountDelegatorIdDesc = 'DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  DelegationsDistinctCountHasActiveUnstakeRequestAsc = 'DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsDistinctCountHasActiveUnstakeRequestDesc = 'DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsDistinctCountIdAsc = 'DELEGATIONS_DISTINCT_COUNT_ID_ASC',
  DelegationsDistinctCountIdDesc = 'DELEGATIONS_DISTINCT_COUNT_ID_DESC',
  DelegationsDistinctCountOperatorIdAsc = 'DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  DelegationsDistinctCountOperatorIdDesc = 'DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  DelegationsDistinctCountTotalAmountAsc = 'DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_ASC',
  DelegationsDistinctCountTotalAmountDesc = 'DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_DESC',
  DelegationsMaxAssetIdAsc = 'DELEGATIONS_MAX_ASSET_ID_ASC',
  DelegationsMaxAssetIdDesc = 'DELEGATIONS_MAX_ASSET_ID_DESC',
  DelegationsMaxBlockRangeAsc = 'DELEGATIONS_MAX_BLOCK_RANGE_ASC',
  DelegationsMaxBlockRangeDesc = 'DELEGATIONS_MAX_BLOCK_RANGE_DESC',
  DelegationsMaxDelegatorIdAsc = 'DELEGATIONS_MAX_DELEGATOR_ID_ASC',
  DelegationsMaxDelegatorIdDesc = 'DELEGATIONS_MAX_DELEGATOR_ID_DESC',
  DelegationsMaxHasActiveUnstakeRequestAsc = 'DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsMaxHasActiveUnstakeRequestDesc = 'DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsMaxIdAsc = 'DELEGATIONS_MAX_ID_ASC',
  DelegationsMaxIdDesc = 'DELEGATIONS_MAX_ID_DESC',
  DelegationsMaxOperatorIdAsc = 'DELEGATIONS_MAX_OPERATOR_ID_ASC',
  DelegationsMaxOperatorIdDesc = 'DELEGATIONS_MAX_OPERATOR_ID_DESC',
  DelegationsMaxTotalAmountAsc = 'DELEGATIONS_MAX_TOTAL_AMOUNT_ASC',
  DelegationsMaxTotalAmountDesc = 'DELEGATIONS_MAX_TOTAL_AMOUNT_DESC',
  DelegationsMinAssetIdAsc = 'DELEGATIONS_MIN_ASSET_ID_ASC',
  DelegationsMinAssetIdDesc = 'DELEGATIONS_MIN_ASSET_ID_DESC',
  DelegationsMinBlockRangeAsc = 'DELEGATIONS_MIN_BLOCK_RANGE_ASC',
  DelegationsMinBlockRangeDesc = 'DELEGATIONS_MIN_BLOCK_RANGE_DESC',
  DelegationsMinDelegatorIdAsc = 'DELEGATIONS_MIN_DELEGATOR_ID_ASC',
  DelegationsMinDelegatorIdDesc = 'DELEGATIONS_MIN_DELEGATOR_ID_DESC',
  DelegationsMinHasActiveUnstakeRequestAsc = 'DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsMinHasActiveUnstakeRequestDesc = 'DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsMinIdAsc = 'DELEGATIONS_MIN_ID_ASC',
  DelegationsMinIdDesc = 'DELEGATIONS_MIN_ID_DESC',
  DelegationsMinOperatorIdAsc = 'DELEGATIONS_MIN_OPERATOR_ID_ASC',
  DelegationsMinOperatorIdDesc = 'DELEGATIONS_MIN_OPERATOR_ID_DESC',
  DelegationsMinTotalAmountAsc = 'DELEGATIONS_MIN_TOTAL_AMOUNT_ASC',
  DelegationsMinTotalAmountDesc = 'DELEGATIONS_MIN_TOTAL_AMOUNT_DESC',
  DelegationsStddevPopulationAssetIdAsc = 'DELEGATIONS_STDDEV_POPULATION_ASSET_ID_ASC',
  DelegationsStddevPopulationAssetIdDesc = 'DELEGATIONS_STDDEV_POPULATION_ASSET_ID_DESC',
  DelegationsStddevPopulationBlockRangeAsc = 'DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  DelegationsStddevPopulationBlockRangeDesc = 'DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  DelegationsStddevPopulationDelegatorIdAsc = 'DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  DelegationsStddevPopulationDelegatorIdDesc = 'DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  DelegationsStddevPopulationHasActiveUnstakeRequestAsc = 'DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsStddevPopulationHasActiveUnstakeRequestDesc = 'DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsStddevPopulationIdAsc = 'DELEGATIONS_STDDEV_POPULATION_ID_ASC',
  DelegationsStddevPopulationIdDesc = 'DELEGATIONS_STDDEV_POPULATION_ID_DESC',
  DelegationsStddevPopulationOperatorIdAsc = 'DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  DelegationsStddevPopulationOperatorIdDesc = 'DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  DelegationsStddevPopulationTotalAmountAsc = 'DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_ASC',
  DelegationsStddevPopulationTotalAmountDesc = 'DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_DESC',
  DelegationsStddevSampleAssetIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_ASC',
  DelegationsStddevSampleAssetIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_DESC',
  DelegationsStddevSampleBlockRangeAsc = 'DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  DelegationsStddevSampleBlockRangeDesc = 'DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  DelegationsStddevSampleDelegatorIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  DelegationsStddevSampleDelegatorIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  DelegationsStddevSampleHasActiveUnstakeRequestAsc = 'DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsStddevSampleHasActiveUnstakeRequestDesc = 'DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsStddevSampleIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_ID_ASC',
  DelegationsStddevSampleIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_ID_DESC',
  DelegationsStddevSampleOperatorIdAsc = 'DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  DelegationsStddevSampleOperatorIdDesc = 'DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  DelegationsStddevSampleTotalAmountAsc = 'DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_ASC',
  DelegationsStddevSampleTotalAmountDesc = 'DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_DESC',
  DelegationsSumAssetIdAsc = 'DELEGATIONS_SUM_ASSET_ID_ASC',
  DelegationsSumAssetIdDesc = 'DELEGATIONS_SUM_ASSET_ID_DESC',
  DelegationsSumBlockRangeAsc = 'DELEGATIONS_SUM_BLOCK_RANGE_ASC',
  DelegationsSumBlockRangeDesc = 'DELEGATIONS_SUM_BLOCK_RANGE_DESC',
  DelegationsSumDelegatorIdAsc = 'DELEGATIONS_SUM_DELEGATOR_ID_ASC',
  DelegationsSumDelegatorIdDesc = 'DELEGATIONS_SUM_DELEGATOR_ID_DESC',
  DelegationsSumHasActiveUnstakeRequestAsc = 'DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsSumHasActiveUnstakeRequestDesc = 'DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsSumIdAsc = 'DELEGATIONS_SUM_ID_ASC',
  DelegationsSumIdDesc = 'DELEGATIONS_SUM_ID_DESC',
  DelegationsSumOperatorIdAsc = 'DELEGATIONS_SUM_OPERATOR_ID_ASC',
  DelegationsSumOperatorIdDesc = 'DELEGATIONS_SUM_OPERATOR_ID_DESC',
  DelegationsSumTotalAmountAsc = 'DELEGATIONS_SUM_TOTAL_AMOUNT_ASC',
  DelegationsSumTotalAmountDesc = 'DELEGATIONS_SUM_TOTAL_AMOUNT_DESC',
  DelegationsVariancePopulationAssetIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_ASC',
  DelegationsVariancePopulationAssetIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_DESC',
  DelegationsVariancePopulationBlockRangeAsc = 'DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  DelegationsVariancePopulationBlockRangeDesc = 'DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  DelegationsVariancePopulationDelegatorIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  DelegationsVariancePopulationDelegatorIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  DelegationsVariancePopulationHasActiveUnstakeRequestAsc = 'DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsVariancePopulationHasActiveUnstakeRequestDesc = 'DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsVariancePopulationIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_ID_ASC',
  DelegationsVariancePopulationIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_ID_DESC',
  DelegationsVariancePopulationOperatorIdAsc = 'DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  DelegationsVariancePopulationOperatorIdDesc = 'DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  DelegationsVariancePopulationTotalAmountAsc = 'DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_ASC',
  DelegationsVariancePopulationTotalAmountDesc = 'DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_DESC',
  DelegationsVarianceSampleAssetIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  DelegationsVarianceSampleAssetIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  DelegationsVarianceSampleBlockRangeAsc = 'DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  DelegationsVarianceSampleBlockRangeDesc = 'DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  DelegationsVarianceSampleDelegatorIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  DelegationsVarianceSampleDelegatorIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  DelegationsVarianceSampleHasActiveUnstakeRequestAsc = 'DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationsVarianceSampleHasActiveUnstakeRequestDesc = 'DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationsVarianceSampleIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_ID_ASC',
  DelegationsVarianceSampleIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_ID_DESC',
  DelegationsVarianceSampleOperatorIdAsc = 'DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  DelegationsVarianceSampleOperatorIdDesc = 'DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  DelegationsVarianceSampleTotalAmountAsc = 'DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_ASC',
  DelegationsVarianceSampleTotalAmountDesc = 'DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  JobResultsAverageBlockRangeAsc = 'JOB_RESULTS_AVERAGE_BLOCK_RANGE_ASC',
  JobResultsAverageBlockRangeDesc = 'JOB_RESULTS_AVERAGE_BLOCK_RANGE_DESC',
  JobResultsAverageCreatedAtAsc = 'JOB_RESULTS_AVERAGE_CREATED_AT_ASC',
  JobResultsAverageCreatedAtDesc = 'JOB_RESULTS_AVERAGE_CREATED_AT_DESC',
  JobResultsAverageIdAsc = 'JOB_RESULTS_AVERAGE_ID_ASC',
  JobResultsAverageIdDesc = 'JOB_RESULTS_AVERAGE_ID_DESC',
  JobResultsAverageJobCallIdAsc = 'JOB_RESULTS_AVERAGE_JOB_CALL_ID_ASC',
  JobResultsAverageJobCallIdDesc = 'JOB_RESULTS_AVERAGE_JOB_CALL_ID_DESC',
  JobResultsAverageOperatorIdAsc = 'JOB_RESULTS_AVERAGE_OPERATOR_ID_ASC',
  JobResultsAverageOperatorIdDesc = 'JOB_RESULTS_AVERAGE_OPERATOR_ID_DESC',
  JobResultsAverageServiceIdAsc = 'JOB_RESULTS_AVERAGE_SERVICE_ID_ASC',
  JobResultsAverageServiceIdDesc = 'JOB_RESULTS_AVERAGE_SERVICE_ID_DESC',
  JobResultsByOperatorIdCountAsc = 'JOB_RESULTS_BY_OPERATOR_ID__COUNT_ASC',
  JobResultsByOperatorIdCountDesc = 'JOB_RESULTS_BY_OPERATOR_ID__COUNT_DESC',
  JobResultsCountAsc = 'JOB_RESULTS_COUNT_ASC',
  JobResultsCountDesc = 'JOB_RESULTS_COUNT_DESC',
  JobResultsDistinctCountBlockRangeAsc = 'JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  JobResultsDistinctCountBlockRangeDesc = 'JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  JobResultsDistinctCountCreatedAtAsc = 'JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_ASC',
  JobResultsDistinctCountCreatedAtDesc = 'JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_DESC',
  JobResultsDistinctCountIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_ID_ASC',
  JobResultsDistinctCountIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_ID_DESC',
  JobResultsDistinctCountJobCallIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_ASC',
  JobResultsDistinctCountJobCallIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_DESC',
  JobResultsDistinctCountOperatorIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  JobResultsDistinctCountOperatorIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  JobResultsDistinctCountServiceIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_ASC',
  JobResultsDistinctCountServiceIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_DESC',
  JobResultsMaxBlockRangeAsc = 'JOB_RESULTS_MAX_BLOCK_RANGE_ASC',
  JobResultsMaxBlockRangeDesc = 'JOB_RESULTS_MAX_BLOCK_RANGE_DESC',
  JobResultsMaxCreatedAtAsc = 'JOB_RESULTS_MAX_CREATED_AT_ASC',
  JobResultsMaxCreatedAtDesc = 'JOB_RESULTS_MAX_CREATED_AT_DESC',
  JobResultsMaxIdAsc = 'JOB_RESULTS_MAX_ID_ASC',
  JobResultsMaxIdDesc = 'JOB_RESULTS_MAX_ID_DESC',
  JobResultsMaxJobCallIdAsc = 'JOB_RESULTS_MAX_JOB_CALL_ID_ASC',
  JobResultsMaxJobCallIdDesc = 'JOB_RESULTS_MAX_JOB_CALL_ID_DESC',
  JobResultsMaxOperatorIdAsc = 'JOB_RESULTS_MAX_OPERATOR_ID_ASC',
  JobResultsMaxOperatorIdDesc = 'JOB_RESULTS_MAX_OPERATOR_ID_DESC',
  JobResultsMaxServiceIdAsc = 'JOB_RESULTS_MAX_SERVICE_ID_ASC',
  JobResultsMaxServiceIdDesc = 'JOB_RESULTS_MAX_SERVICE_ID_DESC',
  JobResultsMinBlockRangeAsc = 'JOB_RESULTS_MIN_BLOCK_RANGE_ASC',
  JobResultsMinBlockRangeDesc = 'JOB_RESULTS_MIN_BLOCK_RANGE_DESC',
  JobResultsMinCreatedAtAsc = 'JOB_RESULTS_MIN_CREATED_AT_ASC',
  JobResultsMinCreatedAtDesc = 'JOB_RESULTS_MIN_CREATED_AT_DESC',
  JobResultsMinIdAsc = 'JOB_RESULTS_MIN_ID_ASC',
  JobResultsMinIdDesc = 'JOB_RESULTS_MIN_ID_DESC',
  JobResultsMinJobCallIdAsc = 'JOB_RESULTS_MIN_JOB_CALL_ID_ASC',
  JobResultsMinJobCallIdDesc = 'JOB_RESULTS_MIN_JOB_CALL_ID_DESC',
  JobResultsMinOperatorIdAsc = 'JOB_RESULTS_MIN_OPERATOR_ID_ASC',
  JobResultsMinOperatorIdDesc = 'JOB_RESULTS_MIN_OPERATOR_ID_DESC',
  JobResultsMinServiceIdAsc = 'JOB_RESULTS_MIN_SERVICE_ID_ASC',
  JobResultsMinServiceIdDesc = 'JOB_RESULTS_MIN_SERVICE_ID_DESC',
  JobResultsStddevPopulationBlockRangeAsc = 'JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  JobResultsStddevPopulationBlockRangeDesc = 'JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  JobResultsStddevPopulationCreatedAtAsc = 'JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_ASC',
  JobResultsStddevPopulationCreatedAtDesc = 'JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_DESC',
  JobResultsStddevPopulationIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_ID_ASC',
  JobResultsStddevPopulationIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_ID_DESC',
  JobResultsStddevPopulationJobCallIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_ASC',
  JobResultsStddevPopulationJobCallIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_DESC',
  JobResultsStddevPopulationOperatorIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  JobResultsStddevPopulationOperatorIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  JobResultsStddevPopulationServiceIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_ASC',
  JobResultsStddevPopulationServiceIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_DESC',
  JobResultsStddevSampleBlockRangeAsc = 'JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  JobResultsStddevSampleBlockRangeDesc = 'JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  JobResultsStddevSampleCreatedAtAsc = 'JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  JobResultsStddevSampleCreatedAtDesc = 'JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  JobResultsStddevSampleIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_ID_ASC',
  JobResultsStddevSampleIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_ID_DESC',
  JobResultsStddevSampleJobCallIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_ASC',
  JobResultsStddevSampleJobCallIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_DESC',
  JobResultsStddevSampleOperatorIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  JobResultsStddevSampleOperatorIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  JobResultsStddevSampleServiceIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_ASC',
  JobResultsStddevSampleServiceIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_DESC',
  JobResultsSumBlockRangeAsc = 'JOB_RESULTS_SUM_BLOCK_RANGE_ASC',
  JobResultsSumBlockRangeDesc = 'JOB_RESULTS_SUM_BLOCK_RANGE_DESC',
  JobResultsSumCreatedAtAsc = 'JOB_RESULTS_SUM_CREATED_AT_ASC',
  JobResultsSumCreatedAtDesc = 'JOB_RESULTS_SUM_CREATED_AT_DESC',
  JobResultsSumIdAsc = 'JOB_RESULTS_SUM_ID_ASC',
  JobResultsSumIdDesc = 'JOB_RESULTS_SUM_ID_DESC',
  JobResultsSumJobCallIdAsc = 'JOB_RESULTS_SUM_JOB_CALL_ID_ASC',
  JobResultsSumJobCallIdDesc = 'JOB_RESULTS_SUM_JOB_CALL_ID_DESC',
  JobResultsSumOperatorIdAsc = 'JOB_RESULTS_SUM_OPERATOR_ID_ASC',
  JobResultsSumOperatorIdDesc = 'JOB_RESULTS_SUM_OPERATOR_ID_DESC',
  JobResultsSumServiceIdAsc = 'JOB_RESULTS_SUM_SERVICE_ID_ASC',
  JobResultsSumServiceIdDesc = 'JOB_RESULTS_SUM_SERVICE_ID_DESC',
  JobResultsVariancePopulationBlockRangeAsc = 'JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  JobResultsVariancePopulationBlockRangeDesc = 'JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  JobResultsVariancePopulationCreatedAtAsc = 'JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  JobResultsVariancePopulationCreatedAtDesc = 'JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  JobResultsVariancePopulationIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_ID_ASC',
  JobResultsVariancePopulationIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_ID_DESC',
  JobResultsVariancePopulationJobCallIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_ASC',
  JobResultsVariancePopulationJobCallIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_DESC',
  JobResultsVariancePopulationOperatorIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  JobResultsVariancePopulationOperatorIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  JobResultsVariancePopulationServiceIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_ASC',
  JobResultsVariancePopulationServiceIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_DESC',
  JobResultsVarianceSampleBlockRangeAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  JobResultsVarianceSampleBlockRangeDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  JobResultsVarianceSampleCreatedAtAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  JobResultsVarianceSampleCreatedAtDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  JobResultsVarianceSampleIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_ID_ASC',
  JobResultsVarianceSampleIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_ID_DESC',
  JobResultsVarianceSampleJobCallIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_ASC',
  JobResultsVarianceSampleJobCallIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_DESC',
  JobResultsVarianceSampleOperatorIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  JobResultsVarianceSampleOperatorIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  JobResultsVarianceSampleServiceIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_ASC',
  JobResultsVarianceSampleServiceIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_DESC',
  JoinedAtAsc = 'JOINED_AT_ASC',
  JoinedAtDesc = 'JOINED_AT_DESC',
  LastUpdateAtAsc = 'LAST_UPDATE_AT_ASC',
  LastUpdateAtDesc = 'LAST_UPDATE_AT_DESC',
  Natural = 'NATURAL',
  OperatorBondChangesByOperatorIdCountAsc = 'OPERATOR_BOND_CHANGES_BY_OPERATOR_ID__COUNT_ASC',
  OperatorBondChangesByOperatorIdCountDesc = 'OPERATOR_BOND_CHANGES_BY_OPERATOR_ID__COUNT_DESC',
  OperatorStatusChangesByOperatorIdCountAsc = 'OPERATOR_STATUS_CHANGES_BY_OPERATOR_ID__COUNT_ASC',
  OperatorStatusChangesByOperatorIdCountDesc = 'OPERATOR_STATUS_CHANGES_BY_OPERATOR_ID__COUNT_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ScheduledUnstakeAmountAsc = 'SCHEDULED_UNSTAKE_AMOUNT_ASC',
  ScheduledUnstakeAmountDesc = 'SCHEDULED_UNSTAKE_AMOUNT_DESC',
  ServiceOperatorsAverageBlockRangeAsc = 'SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_ASC',
  ServiceOperatorsAverageBlockRangeDesc = 'SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_DESC',
  ServiceOperatorsAverageCreatedAtAsc = 'SERVICE_OPERATORS_AVERAGE_CREATED_AT_ASC',
  ServiceOperatorsAverageCreatedAtDesc = 'SERVICE_OPERATORS_AVERAGE_CREATED_AT_DESC',
  ServiceOperatorsAverageIdAsc = 'SERVICE_OPERATORS_AVERAGE_ID_ASC',
  ServiceOperatorsAverageIdDesc = 'SERVICE_OPERATORS_AVERAGE_ID_DESC',
  ServiceOperatorsAverageOperatorIdAsc = 'SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_ASC',
  ServiceOperatorsAverageOperatorIdDesc = 'SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_DESC',
  ServiceOperatorsAverageServiceIdAsc = 'SERVICE_OPERATORS_AVERAGE_SERVICE_ID_ASC',
  ServiceOperatorsAverageServiceIdDesc = 'SERVICE_OPERATORS_AVERAGE_SERVICE_ID_DESC',
  ServiceOperatorsByOperatorIdCountAsc = 'SERVICE_OPERATORS_BY_OPERATOR_ID__COUNT_ASC',
  ServiceOperatorsByOperatorIdCountDesc = 'SERVICE_OPERATORS_BY_OPERATOR_ID__COUNT_DESC',
  ServiceOperatorsCountAsc = 'SERVICE_OPERATORS_COUNT_ASC',
  ServiceOperatorsCountDesc = 'SERVICE_OPERATORS_COUNT_DESC',
  ServiceOperatorsDistinctCountBlockRangeAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServiceOperatorsDistinctCountBlockRangeDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServiceOperatorsDistinctCountCreatedAtAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC',
  ServiceOperatorsDistinctCountCreatedAtDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC',
  ServiceOperatorsDistinctCountIdAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_ID_ASC',
  ServiceOperatorsDistinctCountIdDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_ID_DESC',
  ServiceOperatorsDistinctCountOperatorIdAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  ServiceOperatorsDistinctCountOperatorIdDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  ServiceOperatorsDistinctCountServiceIdAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_ASC',
  ServiceOperatorsDistinctCountServiceIdDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_DESC',
  ServiceOperatorsMaxBlockRangeAsc = 'SERVICE_OPERATORS_MAX_BLOCK_RANGE_ASC',
  ServiceOperatorsMaxBlockRangeDesc = 'SERVICE_OPERATORS_MAX_BLOCK_RANGE_DESC',
  ServiceOperatorsMaxCreatedAtAsc = 'SERVICE_OPERATORS_MAX_CREATED_AT_ASC',
  ServiceOperatorsMaxCreatedAtDesc = 'SERVICE_OPERATORS_MAX_CREATED_AT_DESC',
  ServiceOperatorsMaxIdAsc = 'SERVICE_OPERATORS_MAX_ID_ASC',
  ServiceOperatorsMaxIdDesc = 'SERVICE_OPERATORS_MAX_ID_DESC',
  ServiceOperatorsMaxOperatorIdAsc = 'SERVICE_OPERATORS_MAX_OPERATOR_ID_ASC',
  ServiceOperatorsMaxOperatorIdDesc = 'SERVICE_OPERATORS_MAX_OPERATOR_ID_DESC',
  ServiceOperatorsMaxServiceIdAsc = 'SERVICE_OPERATORS_MAX_SERVICE_ID_ASC',
  ServiceOperatorsMaxServiceIdDesc = 'SERVICE_OPERATORS_MAX_SERVICE_ID_DESC',
  ServiceOperatorsMinBlockRangeAsc = 'SERVICE_OPERATORS_MIN_BLOCK_RANGE_ASC',
  ServiceOperatorsMinBlockRangeDesc = 'SERVICE_OPERATORS_MIN_BLOCK_RANGE_DESC',
  ServiceOperatorsMinCreatedAtAsc = 'SERVICE_OPERATORS_MIN_CREATED_AT_ASC',
  ServiceOperatorsMinCreatedAtDesc = 'SERVICE_OPERATORS_MIN_CREATED_AT_DESC',
  ServiceOperatorsMinIdAsc = 'SERVICE_OPERATORS_MIN_ID_ASC',
  ServiceOperatorsMinIdDesc = 'SERVICE_OPERATORS_MIN_ID_DESC',
  ServiceOperatorsMinOperatorIdAsc = 'SERVICE_OPERATORS_MIN_OPERATOR_ID_ASC',
  ServiceOperatorsMinOperatorIdDesc = 'SERVICE_OPERATORS_MIN_OPERATOR_ID_DESC',
  ServiceOperatorsMinServiceIdAsc = 'SERVICE_OPERATORS_MIN_SERVICE_ID_ASC',
  ServiceOperatorsMinServiceIdDesc = 'SERVICE_OPERATORS_MIN_SERVICE_ID_DESC',
  ServiceOperatorsStddevPopulationBlockRangeAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServiceOperatorsStddevPopulationBlockRangeDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServiceOperatorsStddevPopulationCreatedAtAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC',
  ServiceOperatorsStddevPopulationCreatedAtDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC',
  ServiceOperatorsStddevPopulationIdAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_ID_ASC',
  ServiceOperatorsStddevPopulationIdDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_ID_DESC',
  ServiceOperatorsStddevPopulationOperatorIdAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  ServiceOperatorsStddevPopulationOperatorIdDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  ServiceOperatorsStddevPopulationServiceIdAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_ASC',
  ServiceOperatorsStddevPopulationServiceIdDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_DESC',
  ServiceOperatorsStddevSampleBlockRangeAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServiceOperatorsStddevSampleBlockRangeDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServiceOperatorsStddevSampleCreatedAtAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServiceOperatorsStddevSampleCreatedAtDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServiceOperatorsStddevSampleIdAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_ID_ASC',
  ServiceOperatorsStddevSampleIdDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_ID_DESC',
  ServiceOperatorsStddevSampleOperatorIdAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  ServiceOperatorsStddevSampleOperatorIdDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  ServiceOperatorsStddevSampleServiceIdAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_ASC',
  ServiceOperatorsStddevSampleServiceIdDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_DESC',
  ServiceOperatorsSumBlockRangeAsc = 'SERVICE_OPERATORS_SUM_BLOCK_RANGE_ASC',
  ServiceOperatorsSumBlockRangeDesc = 'SERVICE_OPERATORS_SUM_BLOCK_RANGE_DESC',
  ServiceOperatorsSumCreatedAtAsc = 'SERVICE_OPERATORS_SUM_CREATED_AT_ASC',
  ServiceOperatorsSumCreatedAtDesc = 'SERVICE_OPERATORS_SUM_CREATED_AT_DESC',
  ServiceOperatorsSumIdAsc = 'SERVICE_OPERATORS_SUM_ID_ASC',
  ServiceOperatorsSumIdDesc = 'SERVICE_OPERATORS_SUM_ID_DESC',
  ServiceOperatorsSumOperatorIdAsc = 'SERVICE_OPERATORS_SUM_OPERATOR_ID_ASC',
  ServiceOperatorsSumOperatorIdDesc = 'SERVICE_OPERATORS_SUM_OPERATOR_ID_DESC',
  ServiceOperatorsSumServiceIdAsc = 'SERVICE_OPERATORS_SUM_SERVICE_ID_ASC',
  ServiceOperatorsSumServiceIdDesc = 'SERVICE_OPERATORS_SUM_SERVICE_ID_DESC',
  ServiceOperatorsVariancePopulationBlockRangeAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServiceOperatorsVariancePopulationBlockRangeDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServiceOperatorsVariancePopulationCreatedAtAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServiceOperatorsVariancePopulationCreatedAtDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServiceOperatorsVariancePopulationIdAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_ID_ASC',
  ServiceOperatorsVariancePopulationIdDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_ID_DESC',
  ServiceOperatorsVariancePopulationOperatorIdAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  ServiceOperatorsVariancePopulationOperatorIdDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  ServiceOperatorsVariancePopulationServiceIdAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_ASC',
  ServiceOperatorsVariancePopulationServiceIdDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_DESC',
  ServiceOperatorsVarianceSampleBlockRangeAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServiceOperatorsVarianceSampleBlockRangeDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServiceOperatorsVarianceSampleCreatedAtAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServiceOperatorsVarianceSampleCreatedAtDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServiceOperatorsVarianceSampleIdAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_ASC',
  ServiceOperatorsVarianceSampleIdDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_DESC',
  ServiceOperatorsVarianceSampleOperatorIdAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  ServiceOperatorsVarianceSampleOperatorIdDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  ServiceOperatorsVarianceSampleServiceIdAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_ASC',
  ServiceOperatorsVarianceSampleServiceIdDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_DESC',
  ServiceRequestOperatorsAverageApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_ASC',
  ServiceRequestOperatorsAverageApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_DESC',
  ServiceRequestOperatorsAverageBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsAverageBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsAverageCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_ASC',
  ServiceRequestOperatorsAverageCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_DESC',
  ServiceRequestOperatorsAverageIdAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_ID_ASC',
  ServiceRequestOperatorsAverageIdDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_ID_DESC',
  ServiceRequestOperatorsAverageOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_ASC',
  ServiceRequestOperatorsAverageOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_DESC',
  ServiceRequestOperatorsAverageRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_ASC',
  ServiceRequestOperatorsAverageRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_DESC',
  ServiceRequestOperatorsAverageServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsAverageServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsByOperatorIdCountAsc = 'SERVICE_REQUEST_OPERATORS_BY_OPERATOR_ID__COUNT_ASC',
  ServiceRequestOperatorsByOperatorIdCountDesc = 'SERVICE_REQUEST_OPERATORS_BY_OPERATOR_ID__COUNT_DESC',
  ServiceRequestOperatorsCountAsc = 'SERVICE_REQUEST_OPERATORS_COUNT_ASC',
  ServiceRequestOperatorsCountDesc = 'SERVICE_REQUEST_OPERATORS_COUNT_DESC',
  ServiceRequestOperatorsDistinctCountApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_ASC',
  ServiceRequestOperatorsDistinctCountApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_DESC',
  ServiceRequestOperatorsDistinctCountBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsDistinctCountBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsDistinctCountCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC',
  ServiceRequestOperatorsDistinctCountCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC',
  ServiceRequestOperatorsDistinctCountIdAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_ASC',
  ServiceRequestOperatorsDistinctCountIdDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_DESC',
  ServiceRequestOperatorsDistinctCountOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  ServiceRequestOperatorsDistinctCountOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  ServiceRequestOperatorsDistinctCountRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_ASC',
  ServiceRequestOperatorsDistinctCountRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_DESC',
  ServiceRequestOperatorsDistinctCountServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsDistinctCountServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsMaxApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_ASC',
  ServiceRequestOperatorsMaxApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_DESC',
  ServiceRequestOperatorsMaxBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsMaxBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsMaxCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_ASC',
  ServiceRequestOperatorsMaxCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_DESC',
  ServiceRequestOperatorsMaxIdAsc = 'SERVICE_REQUEST_OPERATORS_MAX_ID_ASC',
  ServiceRequestOperatorsMaxIdDesc = 'SERVICE_REQUEST_OPERATORS_MAX_ID_DESC',
  ServiceRequestOperatorsMaxOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_ASC',
  ServiceRequestOperatorsMaxOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_DESC',
  ServiceRequestOperatorsMaxRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_ASC',
  ServiceRequestOperatorsMaxRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_DESC',
  ServiceRequestOperatorsMaxServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsMaxServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsMinApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_ASC',
  ServiceRequestOperatorsMinApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_DESC',
  ServiceRequestOperatorsMinBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsMinBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsMinCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_ASC',
  ServiceRequestOperatorsMinCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_DESC',
  ServiceRequestOperatorsMinIdAsc = 'SERVICE_REQUEST_OPERATORS_MIN_ID_ASC',
  ServiceRequestOperatorsMinIdDesc = 'SERVICE_REQUEST_OPERATORS_MIN_ID_DESC',
  ServiceRequestOperatorsMinOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_ASC',
  ServiceRequestOperatorsMinOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_DESC',
  ServiceRequestOperatorsMinRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_ASC',
  ServiceRequestOperatorsMinRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_DESC',
  ServiceRequestOperatorsMinServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsMinServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsStddevPopulationApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_ASC',
  ServiceRequestOperatorsStddevPopulationApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_DESC',
  ServiceRequestOperatorsStddevPopulationBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsStddevPopulationBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsStddevPopulationCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC',
  ServiceRequestOperatorsStddevPopulationCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC',
  ServiceRequestOperatorsStddevPopulationIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_ASC',
  ServiceRequestOperatorsStddevPopulationIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_DESC',
  ServiceRequestOperatorsStddevPopulationOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  ServiceRequestOperatorsStddevPopulationOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  ServiceRequestOperatorsStddevPopulationRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_ASC',
  ServiceRequestOperatorsStddevPopulationRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_DESC',
  ServiceRequestOperatorsStddevPopulationServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsStddevPopulationServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsStddevSampleApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_ASC',
  ServiceRequestOperatorsStddevSampleApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_DESC',
  ServiceRequestOperatorsStddevSampleBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsStddevSampleBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsStddevSampleCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServiceRequestOperatorsStddevSampleCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServiceRequestOperatorsStddevSampleIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_ASC',
  ServiceRequestOperatorsStddevSampleIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_DESC',
  ServiceRequestOperatorsStddevSampleOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  ServiceRequestOperatorsStddevSampleOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  ServiceRequestOperatorsStddevSampleRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_ASC',
  ServiceRequestOperatorsStddevSampleRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_DESC',
  ServiceRequestOperatorsStddevSampleServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsStddevSampleServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsSumApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_ASC',
  ServiceRequestOperatorsSumApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_DESC',
  ServiceRequestOperatorsSumBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsSumBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsSumCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_ASC',
  ServiceRequestOperatorsSumCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_DESC',
  ServiceRequestOperatorsSumIdAsc = 'SERVICE_REQUEST_OPERATORS_SUM_ID_ASC',
  ServiceRequestOperatorsSumIdDesc = 'SERVICE_REQUEST_OPERATORS_SUM_ID_DESC',
  ServiceRequestOperatorsSumOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_ASC',
  ServiceRequestOperatorsSumOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_DESC',
  ServiceRequestOperatorsSumRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_ASC',
  ServiceRequestOperatorsSumRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_DESC',
  ServiceRequestOperatorsSumServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsSumServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsVariancePopulationApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_ASC',
  ServiceRequestOperatorsVariancePopulationApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_DESC',
  ServiceRequestOperatorsVariancePopulationBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsVariancePopulationBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsVariancePopulationCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServiceRequestOperatorsVariancePopulationCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServiceRequestOperatorsVariancePopulationIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_ASC',
  ServiceRequestOperatorsVariancePopulationIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_DESC',
  ServiceRequestOperatorsVariancePopulationOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  ServiceRequestOperatorsVariancePopulationOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  ServiceRequestOperatorsVariancePopulationRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_ASC',
  ServiceRequestOperatorsVariancePopulationRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_DESC',
  ServiceRequestOperatorsVariancePopulationServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsVariancePopulationServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsVarianceSampleApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_ASC',
  ServiceRequestOperatorsVarianceSampleApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_DESC',
  ServiceRequestOperatorsVarianceSampleBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsVarianceSampleBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsVarianceSampleCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServiceRequestOperatorsVarianceSampleCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServiceRequestOperatorsVarianceSampleIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_ASC',
  ServiceRequestOperatorsVarianceSampleIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_DESC',
  ServiceRequestOperatorsVarianceSampleOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  ServiceRequestOperatorsVarianceSampleOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  ServiceRequestOperatorsVarianceSampleRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_ASC',
  ServiceRequestOperatorsVarianceSampleRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_DESC',
  ServiceRequestOperatorsVarianceSampleServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsVarianceSampleServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC',
  StatusHistoryAverageBlockNumberAsc = 'STATUS_HISTORY_AVERAGE_BLOCK_NUMBER_ASC',
  StatusHistoryAverageBlockNumberDesc = 'STATUS_HISTORY_AVERAGE_BLOCK_NUMBER_DESC',
  StatusHistoryAverageBlockRangeAsc = 'STATUS_HISTORY_AVERAGE_BLOCK_RANGE_ASC',
  StatusHistoryAverageBlockRangeDesc = 'STATUS_HISTORY_AVERAGE_BLOCK_RANGE_DESC',
  StatusHistoryAverageIdAsc = 'STATUS_HISTORY_AVERAGE_ID_ASC',
  StatusHistoryAverageIdDesc = 'STATUS_HISTORY_AVERAGE_ID_DESC',
  StatusHistoryAverageOperatorIdAsc = 'STATUS_HISTORY_AVERAGE_OPERATOR_ID_ASC',
  StatusHistoryAverageOperatorIdDesc = 'STATUS_HISTORY_AVERAGE_OPERATOR_ID_DESC',
  StatusHistoryAverageStatusAsc = 'STATUS_HISTORY_AVERAGE_STATUS_ASC',
  StatusHistoryAverageStatusDesc = 'STATUS_HISTORY_AVERAGE_STATUS_DESC',
  StatusHistoryCountAsc = 'STATUS_HISTORY_COUNT_ASC',
  StatusHistoryCountDesc = 'STATUS_HISTORY_COUNT_DESC',
  StatusHistoryDistinctCountBlockNumberAsc = 'STATUS_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC',
  StatusHistoryDistinctCountBlockNumberDesc = 'STATUS_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC',
  StatusHistoryDistinctCountBlockRangeAsc = 'STATUS_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  StatusHistoryDistinctCountBlockRangeDesc = 'STATUS_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  StatusHistoryDistinctCountIdAsc = 'STATUS_HISTORY_DISTINCT_COUNT_ID_ASC',
  StatusHistoryDistinctCountIdDesc = 'STATUS_HISTORY_DISTINCT_COUNT_ID_DESC',
  StatusHistoryDistinctCountOperatorIdAsc = 'STATUS_HISTORY_DISTINCT_COUNT_OPERATOR_ID_ASC',
  StatusHistoryDistinctCountOperatorIdDesc = 'STATUS_HISTORY_DISTINCT_COUNT_OPERATOR_ID_DESC',
  StatusHistoryDistinctCountStatusAsc = 'STATUS_HISTORY_DISTINCT_COUNT_STATUS_ASC',
  StatusHistoryDistinctCountStatusDesc = 'STATUS_HISTORY_DISTINCT_COUNT_STATUS_DESC',
  StatusHistoryMaxBlockNumberAsc = 'STATUS_HISTORY_MAX_BLOCK_NUMBER_ASC',
  StatusHistoryMaxBlockNumberDesc = 'STATUS_HISTORY_MAX_BLOCK_NUMBER_DESC',
  StatusHistoryMaxBlockRangeAsc = 'STATUS_HISTORY_MAX_BLOCK_RANGE_ASC',
  StatusHistoryMaxBlockRangeDesc = 'STATUS_HISTORY_MAX_BLOCK_RANGE_DESC',
  StatusHistoryMaxIdAsc = 'STATUS_HISTORY_MAX_ID_ASC',
  StatusHistoryMaxIdDesc = 'STATUS_HISTORY_MAX_ID_DESC',
  StatusHistoryMaxOperatorIdAsc = 'STATUS_HISTORY_MAX_OPERATOR_ID_ASC',
  StatusHistoryMaxOperatorIdDesc = 'STATUS_HISTORY_MAX_OPERATOR_ID_DESC',
  StatusHistoryMaxStatusAsc = 'STATUS_HISTORY_MAX_STATUS_ASC',
  StatusHistoryMaxStatusDesc = 'STATUS_HISTORY_MAX_STATUS_DESC',
  StatusHistoryMinBlockNumberAsc = 'STATUS_HISTORY_MIN_BLOCK_NUMBER_ASC',
  StatusHistoryMinBlockNumberDesc = 'STATUS_HISTORY_MIN_BLOCK_NUMBER_DESC',
  StatusHistoryMinBlockRangeAsc = 'STATUS_HISTORY_MIN_BLOCK_RANGE_ASC',
  StatusHistoryMinBlockRangeDesc = 'STATUS_HISTORY_MIN_BLOCK_RANGE_DESC',
  StatusHistoryMinIdAsc = 'STATUS_HISTORY_MIN_ID_ASC',
  StatusHistoryMinIdDesc = 'STATUS_HISTORY_MIN_ID_DESC',
  StatusHistoryMinOperatorIdAsc = 'STATUS_HISTORY_MIN_OPERATOR_ID_ASC',
  StatusHistoryMinOperatorIdDesc = 'STATUS_HISTORY_MIN_OPERATOR_ID_DESC',
  StatusHistoryMinStatusAsc = 'STATUS_HISTORY_MIN_STATUS_ASC',
  StatusHistoryMinStatusDesc = 'STATUS_HISTORY_MIN_STATUS_DESC',
  StatusHistoryStddevPopulationBlockNumberAsc = 'STATUS_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC',
  StatusHistoryStddevPopulationBlockNumberDesc = 'STATUS_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC',
  StatusHistoryStddevPopulationBlockRangeAsc = 'STATUS_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  StatusHistoryStddevPopulationBlockRangeDesc = 'STATUS_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  StatusHistoryStddevPopulationIdAsc = 'STATUS_HISTORY_STDDEV_POPULATION_ID_ASC',
  StatusHistoryStddevPopulationIdDesc = 'STATUS_HISTORY_STDDEV_POPULATION_ID_DESC',
  StatusHistoryStddevPopulationOperatorIdAsc = 'STATUS_HISTORY_STDDEV_POPULATION_OPERATOR_ID_ASC',
  StatusHistoryStddevPopulationOperatorIdDesc = 'STATUS_HISTORY_STDDEV_POPULATION_OPERATOR_ID_DESC',
  StatusHistoryStddevPopulationStatusAsc = 'STATUS_HISTORY_STDDEV_POPULATION_STATUS_ASC',
  StatusHistoryStddevPopulationStatusDesc = 'STATUS_HISTORY_STDDEV_POPULATION_STATUS_DESC',
  StatusHistoryStddevSampleBlockNumberAsc = 'STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',
  StatusHistoryStddevSampleBlockNumberDesc = 'STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',
  StatusHistoryStddevSampleBlockRangeAsc = 'STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  StatusHistoryStddevSampleBlockRangeDesc = 'STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  StatusHistoryStddevSampleIdAsc = 'STATUS_HISTORY_STDDEV_SAMPLE_ID_ASC',
  StatusHistoryStddevSampleIdDesc = 'STATUS_HISTORY_STDDEV_SAMPLE_ID_DESC',
  StatusHistoryStddevSampleOperatorIdAsc = 'STATUS_HISTORY_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  StatusHistoryStddevSampleOperatorIdDesc = 'STATUS_HISTORY_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  StatusHistoryStddevSampleStatusAsc = 'STATUS_HISTORY_STDDEV_SAMPLE_STATUS_ASC',
  StatusHistoryStddevSampleStatusDesc = 'STATUS_HISTORY_STDDEV_SAMPLE_STATUS_DESC',
  StatusHistorySumBlockNumberAsc = 'STATUS_HISTORY_SUM_BLOCK_NUMBER_ASC',
  StatusHistorySumBlockNumberDesc = 'STATUS_HISTORY_SUM_BLOCK_NUMBER_DESC',
  StatusHistorySumBlockRangeAsc = 'STATUS_HISTORY_SUM_BLOCK_RANGE_ASC',
  StatusHistorySumBlockRangeDesc = 'STATUS_HISTORY_SUM_BLOCK_RANGE_DESC',
  StatusHistorySumIdAsc = 'STATUS_HISTORY_SUM_ID_ASC',
  StatusHistorySumIdDesc = 'STATUS_HISTORY_SUM_ID_DESC',
  StatusHistorySumOperatorIdAsc = 'STATUS_HISTORY_SUM_OPERATOR_ID_ASC',
  StatusHistorySumOperatorIdDesc = 'STATUS_HISTORY_SUM_OPERATOR_ID_DESC',
  StatusHistorySumStatusAsc = 'STATUS_HISTORY_SUM_STATUS_ASC',
  StatusHistorySumStatusDesc = 'STATUS_HISTORY_SUM_STATUS_DESC',
  StatusHistoryVariancePopulationBlockNumberAsc = 'STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',
  StatusHistoryVariancePopulationBlockNumberDesc = 'STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',
  StatusHistoryVariancePopulationBlockRangeAsc = 'STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  StatusHistoryVariancePopulationBlockRangeDesc = 'STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  StatusHistoryVariancePopulationIdAsc = 'STATUS_HISTORY_VARIANCE_POPULATION_ID_ASC',
  StatusHistoryVariancePopulationIdDesc = 'STATUS_HISTORY_VARIANCE_POPULATION_ID_DESC',
  StatusHistoryVariancePopulationOperatorIdAsc = 'STATUS_HISTORY_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  StatusHistoryVariancePopulationOperatorIdDesc = 'STATUS_HISTORY_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  StatusHistoryVariancePopulationStatusAsc = 'STATUS_HISTORY_VARIANCE_POPULATION_STATUS_ASC',
  StatusHistoryVariancePopulationStatusDesc = 'STATUS_HISTORY_VARIANCE_POPULATION_STATUS_DESC',
  StatusHistoryVarianceSampleBlockNumberAsc = 'STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',
  StatusHistoryVarianceSampleBlockNumberDesc = 'STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',
  StatusHistoryVarianceSampleBlockRangeAsc = 'STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  StatusHistoryVarianceSampleBlockRangeDesc = 'STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  StatusHistoryVarianceSampleIdAsc = 'STATUS_HISTORY_VARIANCE_SAMPLE_ID_ASC',
  StatusHistoryVarianceSampleIdDesc = 'STATUS_HISTORY_VARIANCE_SAMPLE_ID_DESC',
  StatusHistoryVarianceSampleOperatorIdAsc = 'STATUS_HISTORY_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  StatusHistoryVarianceSampleOperatorIdDesc = 'STATUS_HISTORY_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  StatusHistoryVarianceSampleStatusAsc = 'STATUS_HISTORY_VARIANCE_SAMPLE_STATUS_ASC',
  StatusHistoryVarianceSampleStatusDesc = 'STATUS_HISTORY_VARIANCE_SAMPLE_STATUS_DESC',
  TotalBlueprintsAsc = 'TOTAL_BLUEPRINTS_ASC',
  TotalBlueprintsDesc = 'TOTAL_BLUEPRINTS_DESC',
  TotalServicesAsc = 'TOTAL_SERVICES_ASC',
  TotalServicesDesc = 'TOTAL_SERVICES_DESC',
  TotalServiceRequestsAsc = 'TOTAL_SERVICE_REQUESTS_ASC',
  TotalServiceRequestsDesc = 'TOTAL_SERVICE_REQUESTS_DESC',
  UnstakeRequestsAverageAssetIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_ASC',
  UnstakeRequestsAverageAssetIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_DESC',
  UnstakeRequestsAverageBlockRangeAsc = 'UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC',
  UnstakeRequestsAverageBlockRangeDesc = 'UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC',
  UnstakeRequestsAverageCreatedAtAsc = 'UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_ASC',
  UnstakeRequestsAverageCreatedAtDesc = 'UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_DESC',
  UnstakeRequestsAverageCurrentAmountAsc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsAverageCurrentAmountDesc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsAverageCurrentStatusAsc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_ASC',
  UnstakeRequestsAverageCurrentStatusDesc = 'UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_DESC',
  UnstakeRequestsAverageDelegationIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_ASC',
  UnstakeRequestsAverageDelegationIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_DESC',
  UnstakeRequestsAverageDelegatorIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_ASC',
  UnstakeRequestsAverageDelegatorIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_DESC',
  UnstakeRequestsAverageIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_ID_ASC',
  UnstakeRequestsAverageIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_ID_DESC',
  UnstakeRequestsAverageOperatorIdAsc = 'UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_ASC',
  UnstakeRequestsAverageOperatorIdDesc = 'UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_DESC',
  UnstakeRequestsAverageRequestedRoundAsc = 'UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC',
  UnstakeRequestsAverageRequestedRoundDesc = 'UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC',
  UnstakeRequestsAverageUpdatedAtAsc = 'UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_ASC',
  UnstakeRequestsAverageUpdatedAtDesc = 'UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_DESC',
  UnstakeRequestsByOperatorIdCountAsc = 'UNSTAKE_REQUESTS_BY_OPERATOR_ID__COUNT_ASC',
  UnstakeRequestsByOperatorIdCountDesc = 'UNSTAKE_REQUESTS_BY_OPERATOR_ID__COUNT_DESC',
  UnstakeRequestsCountAsc = 'UNSTAKE_REQUESTS_COUNT_ASC',
  UnstakeRequestsCountDesc = 'UNSTAKE_REQUESTS_COUNT_DESC',
  UnstakeRequestsDistinctCountAssetIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC',
  UnstakeRequestsDistinctCountAssetIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC',
  UnstakeRequestsDistinctCountBlockRangeAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  UnstakeRequestsDistinctCountBlockRangeDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  UnstakeRequestsDistinctCountCreatedAtAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC',
  UnstakeRequestsDistinctCountCreatedAtDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC',
  UnstakeRequestsDistinctCountCurrentAmountAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC',
  UnstakeRequestsDistinctCountCurrentAmountDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC',
  UnstakeRequestsDistinctCountCurrentStatusAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC',
  UnstakeRequestsDistinctCountCurrentStatusDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC',
  UnstakeRequestsDistinctCountDelegationIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_ASC',
  UnstakeRequestsDistinctCountDelegationIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_DESC',
  UnstakeRequestsDistinctCountDelegatorIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC',
  UnstakeRequestsDistinctCountDelegatorIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC',
  UnstakeRequestsDistinctCountIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_ASC',
  UnstakeRequestsDistinctCountIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_DESC',
  UnstakeRequestsDistinctCountOperatorIdAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  UnstakeRequestsDistinctCountOperatorIdDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  UnstakeRequestsDistinctCountRequestedRoundAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC',
  UnstakeRequestsDistinctCountRequestedRoundDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC',
  UnstakeRequestsDistinctCountUpdatedAtAsc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC',
  UnstakeRequestsDistinctCountUpdatedAtDesc = 'UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC',
  UnstakeRequestsMaxAssetIdAsc = 'UNSTAKE_REQUESTS_MAX_ASSET_ID_ASC',
  UnstakeRequestsMaxAssetIdDesc = 'UNSTAKE_REQUESTS_MAX_ASSET_ID_DESC',
  UnstakeRequestsMaxBlockRangeAsc = 'UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_ASC',
  UnstakeRequestsMaxBlockRangeDesc = 'UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_DESC',
  UnstakeRequestsMaxCreatedAtAsc = 'UNSTAKE_REQUESTS_MAX_CREATED_AT_ASC',
  UnstakeRequestsMaxCreatedAtDesc = 'UNSTAKE_REQUESTS_MAX_CREATED_AT_DESC',
  UnstakeRequestsMaxCurrentAmountAsc = 'UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_ASC',
  UnstakeRequestsMaxCurrentAmountDesc = 'UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_DESC',
  UnstakeRequestsMaxCurrentStatusAsc = 'UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_ASC',
  UnstakeRequestsMaxCurrentStatusDesc = 'UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_DESC',
  UnstakeRequestsMaxDelegationIdAsc = 'UNSTAKE_REQUESTS_MAX_DELEGATION_ID_ASC',
  UnstakeRequestsMaxDelegationIdDesc = 'UNSTAKE_REQUESTS_MAX_DELEGATION_ID_DESC',
  UnstakeRequestsMaxDelegatorIdAsc = 'UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_ASC',
  UnstakeRequestsMaxDelegatorIdDesc = 'UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_DESC',
  UnstakeRequestsMaxIdAsc = 'UNSTAKE_REQUESTS_MAX_ID_ASC',
  UnstakeRequestsMaxIdDesc = 'UNSTAKE_REQUESTS_MAX_ID_DESC',
  UnstakeRequestsMaxOperatorIdAsc = 'UNSTAKE_REQUESTS_MAX_OPERATOR_ID_ASC',
  UnstakeRequestsMaxOperatorIdDesc = 'UNSTAKE_REQUESTS_MAX_OPERATOR_ID_DESC',
  UnstakeRequestsMaxRequestedRoundAsc = 'UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_ASC',
  UnstakeRequestsMaxRequestedRoundDesc = 'UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_DESC',
  UnstakeRequestsMaxUpdatedAtAsc = 'UNSTAKE_REQUESTS_MAX_UPDATED_AT_ASC',
  UnstakeRequestsMaxUpdatedAtDesc = 'UNSTAKE_REQUESTS_MAX_UPDATED_AT_DESC',
  UnstakeRequestsMinAssetIdAsc = 'UNSTAKE_REQUESTS_MIN_ASSET_ID_ASC',
  UnstakeRequestsMinAssetIdDesc = 'UNSTAKE_REQUESTS_MIN_ASSET_ID_DESC',
  UnstakeRequestsMinBlockRangeAsc = 'UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_ASC',
  UnstakeRequestsMinBlockRangeDesc = 'UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_DESC',
  UnstakeRequestsMinCreatedAtAsc = 'UNSTAKE_REQUESTS_MIN_CREATED_AT_ASC',
  UnstakeRequestsMinCreatedAtDesc = 'UNSTAKE_REQUESTS_MIN_CREATED_AT_DESC',
  UnstakeRequestsMinCurrentAmountAsc = 'UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_ASC',
  UnstakeRequestsMinCurrentAmountDesc = 'UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_DESC',
  UnstakeRequestsMinCurrentStatusAsc = 'UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_ASC',
  UnstakeRequestsMinCurrentStatusDesc = 'UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_DESC',
  UnstakeRequestsMinDelegationIdAsc = 'UNSTAKE_REQUESTS_MIN_DELEGATION_ID_ASC',
  UnstakeRequestsMinDelegationIdDesc = 'UNSTAKE_REQUESTS_MIN_DELEGATION_ID_DESC',
  UnstakeRequestsMinDelegatorIdAsc = 'UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_ASC',
  UnstakeRequestsMinDelegatorIdDesc = 'UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_DESC',
  UnstakeRequestsMinIdAsc = 'UNSTAKE_REQUESTS_MIN_ID_ASC',
  UnstakeRequestsMinIdDesc = 'UNSTAKE_REQUESTS_MIN_ID_DESC',
  UnstakeRequestsMinOperatorIdAsc = 'UNSTAKE_REQUESTS_MIN_OPERATOR_ID_ASC',
  UnstakeRequestsMinOperatorIdDesc = 'UNSTAKE_REQUESTS_MIN_OPERATOR_ID_DESC',
  UnstakeRequestsMinRequestedRoundAsc = 'UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_ASC',
  UnstakeRequestsMinRequestedRoundDesc = 'UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_DESC',
  UnstakeRequestsMinUpdatedAtAsc = 'UNSTAKE_REQUESTS_MIN_UPDATED_AT_ASC',
  UnstakeRequestsMinUpdatedAtDesc = 'UNSTAKE_REQUESTS_MIN_UPDATED_AT_DESC',
  UnstakeRequestsStddevPopulationAssetIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC',
  UnstakeRequestsStddevPopulationAssetIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC',
  UnstakeRequestsStddevPopulationBlockRangeAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  UnstakeRequestsStddevPopulationBlockRangeDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  UnstakeRequestsStddevPopulationCreatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC',
  UnstakeRequestsStddevPopulationCreatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC',
  UnstakeRequestsStddevPopulationCurrentAmountAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC',
  UnstakeRequestsStddevPopulationCurrentAmountDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC',
  UnstakeRequestsStddevPopulationCurrentStatusAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC',
  UnstakeRequestsStddevPopulationCurrentStatusDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC',
  UnstakeRequestsStddevPopulationDelegationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_ASC',
  UnstakeRequestsStddevPopulationDelegationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_DESC',
  UnstakeRequestsStddevPopulationDelegatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC',
  UnstakeRequestsStddevPopulationDelegatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC',
  UnstakeRequestsStddevPopulationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_ASC',
  UnstakeRequestsStddevPopulationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_DESC',
  UnstakeRequestsStddevPopulationOperatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  UnstakeRequestsStddevPopulationOperatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  UnstakeRequestsStddevPopulationRequestedRoundAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC',
  UnstakeRequestsStddevPopulationRequestedRoundDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC',
  UnstakeRequestsStddevPopulationUpdatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC',
  UnstakeRequestsStddevPopulationUpdatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC',
  UnstakeRequestsStddevSampleAssetIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC',
  UnstakeRequestsStddevSampleAssetIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC',
  UnstakeRequestsStddevSampleBlockRangeAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  UnstakeRequestsStddevSampleBlockRangeDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  UnstakeRequestsStddevSampleCreatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  UnstakeRequestsStddevSampleCreatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  UnstakeRequestsStddevSampleCurrentAmountAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsStddevSampleCurrentAmountDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsStddevSampleCurrentStatusAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC',
  UnstakeRequestsStddevSampleCurrentStatusDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC',
  UnstakeRequestsStddevSampleDelegationIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_ASC',
  UnstakeRequestsStddevSampleDelegationIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_DESC',
  UnstakeRequestsStddevSampleDelegatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC',
  UnstakeRequestsStddevSampleDelegatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC',
  UnstakeRequestsStddevSampleIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_ASC',
  UnstakeRequestsStddevSampleIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_DESC',
  UnstakeRequestsStddevSampleOperatorIdAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  UnstakeRequestsStddevSampleOperatorIdDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  UnstakeRequestsStddevSampleRequestedRoundAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC',
  UnstakeRequestsStddevSampleRequestedRoundDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC',
  UnstakeRequestsStddevSampleUpdatedAtAsc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC',
  UnstakeRequestsStddevSampleUpdatedAtDesc = 'UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC',
  UnstakeRequestsSumAssetIdAsc = 'UNSTAKE_REQUESTS_SUM_ASSET_ID_ASC',
  UnstakeRequestsSumAssetIdDesc = 'UNSTAKE_REQUESTS_SUM_ASSET_ID_DESC',
  UnstakeRequestsSumBlockRangeAsc = 'UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_ASC',
  UnstakeRequestsSumBlockRangeDesc = 'UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_DESC',
  UnstakeRequestsSumCreatedAtAsc = 'UNSTAKE_REQUESTS_SUM_CREATED_AT_ASC',
  UnstakeRequestsSumCreatedAtDesc = 'UNSTAKE_REQUESTS_SUM_CREATED_AT_DESC',
  UnstakeRequestsSumCurrentAmountAsc = 'UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_ASC',
  UnstakeRequestsSumCurrentAmountDesc = 'UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_DESC',
  UnstakeRequestsSumCurrentStatusAsc = 'UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_ASC',
  UnstakeRequestsSumCurrentStatusDesc = 'UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_DESC',
  UnstakeRequestsSumDelegationIdAsc = 'UNSTAKE_REQUESTS_SUM_DELEGATION_ID_ASC',
  UnstakeRequestsSumDelegationIdDesc = 'UNSTAKE_REQUESTS_SUM_DELEGATION_ID_DESC',
  UnstakeRequestsSumDelegatorIdAsc = 'UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_ASC',
  UnstakeRequestsSumDelegatorIdDesc = 'UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_DESC',
  UnstakeRequestsSumIdAsc = 'UNSTAKE_REQUESTS_SUM_ID_ASC',
  UnstakeRequestsSumIdDesc = 'UNSTAKE_REQUESTS_SUM_ID_DESC',
  UnstakeRequestsSumOperatorIdAsc = 'UNSTAKE_REQUESTS_SUM_OPERATOR_ID_ASC',
  UnstakeRequestsSumOperatorIdDesc = 'UNSTAKE_REQUESTS_SUM_OPERATOR_ID_DESC',
  UnstakeRequestsSumRequestedRoundAsc = 'UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_ASC',
  UnstakeRequestsSumRequestedRoundDesc = 'UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_DESC',
  UnstakeRequestsSumUpdatedAtAsc = 'UNSTAKE_REQUESTS_SUM_UPDATED_AT_ASC',
  UnstakeRequestsSumUpdatedAtDesc = 'UNSTAKE_REQUESTS_SUM_UPDATED_AT_DESC',
  UnstakeRequestsVariancePopulationAssetIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC',
  UnstakeRequestsVariancePopulationAssetIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC',
  UnstakeRequestsVariancePopulationBlockRangeAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  UnstakeRequestsVariancePopulationBlockRangeDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  UnstakeRequestsVariancePopulationCreatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  UnstakeRequestsVariancePopulationCreatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  UnstakeRequestsVariancePopulationCurrentAmountAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC',
  UnstakeRequestsVariancePopulationCurrentAmountDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC',
  UnstakeRequestsVariancePopulationCurrentStatusAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC',
  UnstakeRequestsVariancePopulationCurrentStatusDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC',
  UnstakeRequestsVariancePopulationDelegationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_ASC',
  UnstakeRequestsVariancePopulationDelegationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_DESC',
  UnstakeRequestsVariancePopulationDelegatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC',
  UnstakeRequestsVariancePopulationDelegatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC',
  UnstakeRequestsVariancePopulationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_ASC',
  UnstakeRequestsVariancePopulationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_DESC',
  UnstakeRequestsVariancePopulationOperatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  UnstakeRequestsVariancePopulationOperatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  UnstakeRequestsVariancePopulationRequestedRoundAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC',
  UnstakeRequestsVariancePopulationRequestedRoundDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC',
  UnstakeRequestsVariancePopulationUpdatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC',
  UnstakeRequestsVariancePopulationUpdatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC',
  UnstakeRequestsVarianceSampleAssetIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC',
  UnstakeRequestsVarianceSampleAssetIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC',
  UnstakeRequestsVarianceSampleBlockRangeAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  UnstakeRequestsVarianceSampleBlockRangeDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  UnstakeRequestsVarianceSampleCreatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  UnstakeRequestsVarianceSampleCreatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  UnstakeRequestsVarianceSampleCurrentAmountAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC',
  UnstakeRequestsVarianceSampleCurrentAmountDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC',
  UnstakeRequestsVarianceSampleCurrentStatusAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC',
  UnstakeRequestsVarianceSampleCurrentStatusDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC',
  UnstakeRequestsVarianceSampleDelegationIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_ASC',
  UnstakeRequestsVarianceSampleDelegationIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_DESC',
  UnstakeRequestsVarianceSampleDelegatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC',
  UnstakeRequestsVarianceSampleDelegatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC',
  UnstakeRequestsVarianceSampleIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_ASC',
  UnstakeRequestsVarianceSampleIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_DESC',
  UnstakeRequestsVarianceSampleOperatorIdAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  UnstakeRequestsVarianceSampleOperatorIdDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  UnstakeRequestsVarianceSampleRequestedRoundAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC',
  UnstakeRequestsVarianceSampleRequestedRoundDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC',
  UnstakeRequestsVarianceSampleUpdatedAtAsc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC',
  UnstakeRequestsVarianceSampleUpdatedAtDesc = 'UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC'
}

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type PointsAccrualRate = Node & {
  __typename?: 'PointsAccrualRate';
  /** Reads a single `Account` that is related to this `PointsAccrualRate`. */
  account?: Maybe<Account>;
  /** The account this rate belongs to */
  accountId: Scalars['String']['output'];
  /** Current amount */
  amount: Scalars['BigFloat']['output'];
  /** Unique identifier for the rate */
  id: Scalars['String']['output'];
  /** Last time this rate was updated */
  lastUpdateBlock: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Points earned per hour */
  ratePerHour: Scalars['Float']['output'];
  /** The source of points */
  source: PointsSource;
  /** When this rate started */
  startBlock: Scalars['Int']['output'];
};

export type PointsAccrualRateAggregates = {
  __typename?: 'PointsAccrualRateAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PointsAccrualRateAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PointsAccrualRateDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PointsAccrualRateMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PointsAccrualRateMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PointsAccrualRateStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PointsAccrualRateStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PointsAccrualRateSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PointsAccrualRateVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PointsAccrualRateVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `PointsAccrualRate` object types. */
export type PointsAccrualRateAggregatesFilter = {
  /** Mean average aggregate over matching `PointsAccrualRate` objects. */
  average?: InputMaybe<PointsAccrualRateAverageAggregateFilter>;
  /** Distinct count aggregate over matching `PointsAccrualRate` objects. */
  distinctCount?: InputMaybe<PointsAccrualRateDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `PointsAccrualRate` object to be included within the aggregate. */
  filter?: InputMaybe<PointsAccrualRateFilter>;
  /** Maximum aggregate over matching `PointsAccrualRate` objects. */
  max?: InputMaybe<PointsAccrualRateMaxAggregateFilter>;
  /** Minimum aggregate over matching `PointsAccrualRate` objects. */
  min?: InputMaybe<PointsAccrualRateMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `PointsAccrualRate` objects. */
  stddevPopulation?: InputMaybe<PointsAccrualRateStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `PointsAccrualRate` objects. */
  stddevSample?: InputMaybe<PointsAccrualRateStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `PointsAccrualRate` objects. */
  sum?: InputMaybe<PointsAccrualRateSumAggregateFilter>;
  /** Population variance aggregate over matching `PointsAccrualRate` objects. */
  variancePopulation?: InputMaybe<PointsAccrualRateVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `PointsAccrualRate` objects. */
  varianceSample?: InputMaybe<PointsAccrualRateVarianceSampleAggregateFilter>;
};

export type PointsAccrualRateAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<BigFloatFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<BigFloatFilter>;
};

export type PointsAccrualRateAverageAggregates = {
  __typename?: 'PointsAccrualRateAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['Float']['output']>;
  /** Mean average of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsAccrualRateDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  accountId?: InputMaybe<BigIntFilter>;
  amount?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  lastUpdateBlock?: InputMaybe<BigIntFilter>;
  ratePerHour?: InputMaybe<BigIntFilter>;
  source?: InputMaybe<BigIntFilter>;
  startBlock?: InputMaybe<BigIntFilter>;
};

export type PointsAccrualRateDistinctCountAggregates = {
  __typename?: 'PointsAccrualRateDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of source across the matching connection */
  source?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `PointsAccrualRate` object types. All fields are combined with a logical ‘and.’ */
export type PointsAccrualRateFilter = {
  /** Filter by the object’s `account` relation. */
  account?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PointsAccrualRateFilter>>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `lastUpdateBlock` field. */
  lastUpdateBlock?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PointsAccrualRateFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PointsAccrualRateFilter>>;
  /** Filter by the object’s `ratePerHour` field. */
  ratePerHour?: InputMaybe<FloatFilter>;
  /** Filter by the object’s `source` field. */
  source?: InputMaybe<PointsSourceFilter>;
  /** Filter by the object’s `startBlock` field. */
  startBlock?: InputMaybe<IntFilter>;
};

export type PointsAccrualRateMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<IntFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<IntFilter>;
};

export type PointsAccrualRateMaxAggregates = {
  __typename?: 'PointsAccrualRateMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['Int']['output']>;
  /** Maximum of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['Float']['output']>;
  /** Maximum of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['Int']['output']>;
};

export type PointsAccrualRateMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<IntFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<IntFilter>;
};

export type PointsAccrualRateMinAggregates = {
  __typename?: 'PointsAccrualRateMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['Int']['output']>;
  /** Minimum of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['Float']['output']>;
  /** Minimum of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['Int']['output']>;
};

export type PointsAccrualRateStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<BigFloatFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<BigFloatFilter>;
};

export type PointsAccrualRateStddevPopulationAggregates = {
  __typename?: 'PointsAccrualRateStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['Float']['output']>;
  /** Population standard deviation of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsAccrualRateStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<BigFloatFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<BigFloatFilter>;
};

export type PointsAccrualRateStddevSampleAggregates = {
  __typename?: 'PointsAccrualRateStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['Float']['output']>;
  /** Sample standard deviation of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsAccrualRateSumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<BigIntFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<BigIntFilter>;
};

export type PointsAccrualRateSumAggregates = {
  __typename?: 'PointsAccrualRateSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of lastUpdateBlock across the matching connection */
  lastUpdateBlock: Scalars['BigInt']['output'];
  /** Sum of ratePerHour across the matching connection */
  ratePerHour: Scalars['Float']['output'];
  /** Sum of startBlock across the matching connection */
  startBlock: Scalars['BigInt']['output'];
};

export type PointsAccrualRateVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<BigFloatFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<BigFloatFilter>;
};

export type PointsAccrualRateVariancePopulationAggregates = {
  __typename?: 'PointsAccrualRateVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['Float']['output']>;
  /** Population variance of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsAccrualRateVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  lastUpdateBlock?: InputMaybe<BigFloatFilter>;
  ratePerHour?: InputMaybe<FloatFilter>;
  startBlock?: InputMaybe<BigFloatFilter>;
};

export type PointsAccrualRateVarianceSampleAggregates = {
  __typename?: 'PointsAccrualRateVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lastUpdateBlock across the matching connection */
  lastUpdateBlock?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of ratePerHour across the matching connection */
  ratePerHour?: Maybe<Scalars['Float']['output']>;
  /** Sample variance of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `PointsAccrualRate` values. */
export type PointsAccrualRatesConnection = {
  __typename?: 'PointsAccrualRatesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PointsAccrualRateAggregates>;
  /** A list of edges which contains the `PointsAccrualRate` and cursor to aid in pagination. */
  edges: Array<PointsAccrualRatesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PointsAccrualRateAggregates>>;
  /** A list of `PointsAccrualRate` objects. */
  nodes: Array<Maybe<PointsAccrualRate>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `PointsAccrualRate` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `PointsAccrualRate` values. */
export type PointsAccrualRatesConnectionGroupedAggregatesArgs = {
  groupBy: Array<PointsAccrualRatesGroupBy>;
  having?: InputMaybe<PointsAccrualRatesHavingInput>;
};

/** A `PointsAccrualRate` edge in the connection. */
export type PointsAccrualRatesEdge = {
  __typename?: 'PointsAccrualRatesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `PointsAccrualRate` at the end of the edge. */
  node?: Maybe<PointsAccrualRate>;
};

/** Grouping methods for `PointsAccrualRate` for usage during aggregation. */
export enum PointsAccrualRatesGroupBy {
  AccountId = 'ACCOUNT_ID',
  Amount = 'AMOUNT',
  Id = 'ID',
  LastUpdateBlock = 'LAST_UPDATE_BLOCK',
  RatePerHour = 'RATE_PER_HOUR',
  Source = 'SOURCE',
  StartBlock = 'START_BLOCK'
}

export type PointsAccrualRatesHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

export type PointsAccrualRatesHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `PointsAccrualRate` aggregates. */
export type PointsAccrualRatesHavingInput = {
  AND?: InputMaybe<Array<PointsAccrualRatesHavingInput>>;
  OR?: InputMaybe<Array<PointsAccrualRatesHavingInput>>;
  average?: InputMaybe<PointsAccrualRatesHavingAverageInput>;
  distinctCount?: InputMaybe<PointsAccrualRatesHavingDistinctCountInput>;
  max?: InputMaybe<PointsAccrualRatesHavingMaxInput>;
  min?: InputMaybe<PointsAccrualRatesHavingMinInput>;
  stddevPopulation?: InputMaybe<PointsAccrualRatesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PointsAccrualRatesHavingStddevSampleInput>;
  sum?: InputMaybe<PointsAccrualRatesHavingSumInput>;
  variancePopulation?: InputMaybe<PointsAccrualRatesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PointsAccrualRatesHavingVarianceSampleInput>;
};

export type PointsAccrualRatesHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

export type PointsAccrualRatesHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

export type PointsAccrualRatesHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

export type PointsAccrualRatesHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

export type PointsAccrualRatesHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

export type PointsAccrualRatesHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

export type PointsAccrualRatesHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  lastUpdateBlock?: InputMaybe<HavingIntFilter>;
  ratePerHour?: InputMaybe<HavingFloatFilter>;
  startBlock?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `PointsAccrualRate`. */
export enum PointsAccrualRatesOrderBy {
  AccountByAccountIdCreatedAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC',
  AccountByAccountIdCreatedAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC',
  AccountByAccountIdIdAsc = 'ACCOUNT_BY_ACCOUNT_ID__ID_ASC',
  AccountByAccountIdIdDesc = 'ACCOUNT_BY_ACCOUNT_ID__ID_DESC',
  AccountByAccountIdLastUpdateAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC',
  AccountByAccountIdLastUpdateAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC',
  AccountByAccountIdTotalPointsAsc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC',
  AccountByAccountIdTotalPointsDesc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC',
  AccountIdAsc = 'ACCOUNT_ID_ASC',
  AccountIdDesc = 'ACCOUNT_ID_DESC',
  AmountAsc = 'AMOUNT_ASC',
  AmountDesc = 'AMOUNT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  LastUpdateBlockAsc = 'LAST_UPDATE_BLOCK_ASC',
  LastUpdateBlockDesc = 'LAST_UPDATE_BLOCK_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  RatePerHourAsc = 'RATE_PER_HOUR_ASC',
  RatePerHourDesc = 'RATE_PER_HOUR_DESC',
  SourceAsc = 'SOURCE_ASC',
  SourceDesc = 'SOURCE_DESC',
  StartBlockAsc = 'START_BLOCK_ASC',
  StartBlockDesc = 'START_BLOCK_DESC'
}

export type PointsSnapshot = Node & {
  __typename?: 'PointsSnapshot';
  /** Reads a single `Account` that is related to this `PointsSnapshot`. */
  account?: Maybe<Account>;
  /** The account this snapshot belongs to */
  accountId: Scalars['String']['output'];
  /** The block number when this snapshot was taken */
  blockNumber: Scalars['Int']['output'];
  /** Unique identifier for the points snapshot. */
  id: Scalars['String']['output'];
  liquidStakingPoints: Scalars['BigFloat']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  operatorRegistrationPoints: Scalars['BigFloat']['output'];
  restakingDelegationPoints: Scalars['BigFloat']['output'];
  /** Points breakdown by source */
  restakingDepositPoints: Scalars['BigFloat']['output'];
  /** The timestamp when this snapshot was taken */
  timestamp: Scalars['Datetime']['output'];
  /** Total points at time of snapshot */
  totalPoints: Scalars['BigFloat']['output'];
  validatorNominationPoints: Scalars['BigFloat']['output'];
  validatorRegistrationPoints: Scalars['BigFloat']['output'];
};

export type PointsSnapshotAggregates = {
  __typename?: 'PointsSnapshotAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PointsSnapshotAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PointsSnapshotDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PointsSnapshotMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PointsSnapshotMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PointsSnapshotStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PointsSnapshotStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PointsSnapshotSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PointsSnapshotVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PointsSnapshotVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `PointsSnapshot` object types. */
export type PointsSnapshotAggregatesFilter = {
  /** Mean average aggregate over matching `PointsSnapshot` objects. */
  average?: InputMaybe<PointsSnapshotAverageAggregateFilter>;
  /** Distinct count aggregate over matching `PointsSnapshot` objects. */
  distinctCount?: InputMaybe<PointsSnapshotDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `PointsSnapshot` object to be included within the aggregate. */
  filter?: InputMaybe<PointsSnapshotFilter>;
  /** Maximum aggregate over matching `PointsSnapshot` objects. */
  max?: InputMaybe<PointsSnapshotMaxAggregateFilter>;
  /** Minimum aggregate over matching `PointsSnapshot` objects. */
  min?: InputMaybe<PointsSnapshotMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `PointsSnapshot` objects. */
  stddevPopulation?: InputMaybe<PointsSnapshotStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `PointsSnapshot` objects. */
  stddevSample?: InputMaybe<PointsSnapshotStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `PointsSnapshot` objects. */
  sum?: InputMaybe<PointsSnapshotSumAggregateFilter>;
  /** Population variance aggregate over matching `PointsSnapshot` objects. */
  variancePopulation?: InputMaybe<PointsSnapshotVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `PointsSnapshot` objects. */
  varianceSample?: InputMaybe<PointsSnapshotVarianceSampleAggregateFilter>;
};

export type PointsSnapshotAverageAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotAverageAggregates = {
  __typename?: 'PointsSnapshotAverageAggregates';
  /** Mean average of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsSnapshotDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  accountId?: InputMaybe<BigIntFilter>;
  blockNumber?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidStakingPoints?: InputMaybe<BigIntFilter>;
  operatorRegistrationPoints?: InputMaybe<BigIntFilter>;
  restakingDelegationPoints?: InputMaybe<BigIntFilter>;
  restakingDepositPoints?: InputMaybe<BigIntFilter>;
  timestamp?: InputMaybe<BigIntFilter>;
  totalPoints?: InputMaybe<BigIntFilter>;
  validatorNominationPoints?: InputMaybe<BigIntFilter>;
  validatorRegistrationPoints?: InputMaybe<BigIntFilter>;
};

export type PointsSnapshotDistinctCountAggregates = {
  __typename?: 'PointsSnapshotDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of accountId across the matching connection */
  accountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `PointsSnapshot` object types. All fields are combined with a logical ‘and.’ */
export type PointsSnapshotFilter = {
  /** Filter by the object’s `account` relation. */
  account?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `accountId` field. */
  accountId?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PointsSnapshotFilter>>;
  /** Filter by the object’s `blockNumber` field. */
  blockNumber?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `liquidStakingPoints` field. */
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PointsSnapshotFilter>;
  /** Filter by the object’s `operatorRegistrationPoints` field. */
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PointsSnapshotFilter>>;
  /** Filter by the object’s `restakingDelegationPoints` field. */
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `restakingDepositPoints` field. */
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `totalPoints` field. */
  totalPoints?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `validatorNominationPoints` field. */
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `validatorRegistrationPoints` field. */
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotMaxAggregateFilter = {
  blockNumber?: InputMaybe<IntFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotMaxAggregates = {
  __typename?: 'PointsSnapshotMaxAggregates';
  /** Maximum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsSnapshotMinAggregateFilter = {
  blockNumber?: InputMaybe<IntFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotMinAggregates = {
  __typename?: 'PointsSnapshotMinAggregates';
  /** Minimum of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsSnapshotStddevPopulationAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotStddevPopulationAggregates = {
  __typename?: 'PointsSnapshotStddevPopulationAggregates';
  /** Population standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsSnapshotStddevSampleAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotStddevSampleAggregates = {
  __typename?: 'PointsSnapshotStddevSampleAggregates';
  /** Sample standard deviation of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsSnapshotSumAggregateFilter = {
  blockNumber?: InputMaybe<BigIntFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotSumAggregates = {
  __typename?: 'PointsSnapshotSumAggregates';
  /** Sum of blockNumber across the matching connection */
  blockNumber: Scalars['BigInt']['output'];
  /** Sum of liquidStakingPoints across the matching connection */
  liquidStakingPoints: Scalars['BigFloat']['output'];
  /** Sum of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints: Scalars['BigFloat']['output'];
  /** Sum of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints: Scalars['BigFloat']['output'];
  /** Sum of restakingDepositPoints across the matching connection */
  restakingDepositPoints: Scalars['BigFloat']['output'];
  /** Sum of totalPoints across the matching connection */
  totalPoints: Scalars['BigFloat']['output'];
  /** Sum of validatorNominationPoints across the matching connection */
  validatorNominationPoints: Scalars['BigFloat']['output'];
  /** Sum of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints: Scalars['BigFloat']['output'];
};

export type PointsSnapshotVariancePopulationAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotVariancePopulationAggregates = {
  __typename?: 'PointsSnapshotVariancePopulationAggregates';
  /** Population variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
};

export type PointsSnapshotVarianceSampleAggregateFilter = {
  blockNumber?: InputMaybe<BigFloatFilter>;
  liquidStakingPoints?: InputMaybe<BigFloatFilter>;
  operatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
  restakingDelegationPoints?: InputMaybe<BigFloatFilter>;
  restakingDepositPoints?: InputMaybe<BigFloatFilter>;
  totalPoints?: InputMaybe<BigFloatFilter>;
  validatorNominationPoints?: InputMaybe<BigFloatFilter>;
  validatorRegistrationPoints?: InputMaybe<BigFloatFilter>;
};

export type PointsSnapshotVarianceSampleAggregates = {
  __typename?: 'PointsSnapshotVarianceSampleAggregates';
  /** Sample variance of blockNumber across the matching connection */
  blockNumber?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidStakingPoints across the matching connection */
  liquidStakingPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of operatorRegistrationPoints across the matching connection */
  operatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of restakingDelegationPoints across the matching connection */
  restakingDelegationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of restakingDepositPoints across the matching connection */
  restakingDepositPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalPoints across the matching connection */
  totalPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of validatorNominationPoints across the matching connection */
  validatorNominationPoints?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of validatorRegistrationPoints across the matching connection */
  validatorRegistrationPoints?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `PointsSnapshot` values. */
export type PointsSnapshotsConnection = {
  __typename?: 'PointsSnapshotsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PointsSnapshotAggregates>;
  /** A list of edges which contains the `PointsSnapshot` and cursor to aid in pagination. */
  edges: Array<PointsSnapshotsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PointsSnapshotAggregates>>;
  /** A list of `PointsSnapshot` objects. */
  nodes: Array<Maybe<PointsSnapshot>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `PointsSnapshot` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `PointsSnapshot` values. */
export type PointsSnapshotsConnectionGroupedAggregatesArgs = {
  groupBy: Array<PointsSnapshotsGroupBy>;
  having?: InputMaybe<PointsSnapshotsHavingInput>;
};

/** A `PointsSnapshot` edge in the connection. */
export type PointsSnapshotsEdge = {
  __typename?: 'PointsSnapshotsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `PointsSnapshot` at the end of the edge. */
  node?: Maybe<PointsSnapshot>;
};

/** Grouping methods for `PointsSnapshot` for usage during aggregation. */
export enum PointsSnapshotsGroupBy {
  AccountId = 'ACCOUNT_ID',
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  LiquidStakingPoints = 'LIQUID_STAKING_POINTS',
  OperatorRegistrationPoints = 'OPERATOR_REGISTRATION_POINTS',
  RestakingDelegationPoints = 'RESTAKING_DELEGATION_POINTS',
  RestakingDepositPoints = 'RESTAKING_DEPOSIT_POINTS',
  Timestamp = 'TIMESTAMP',
  TimestampTruncatedToDay = 'TIMESTAMP_TRUNCATED_TO_DAY',
  TimestampTruncatedToHour = 'TIMESTAMP_TRUNCATED_TO_HOUR',
  TotalPoints = 'TOTAL_POINTS',
  ValidatorNominationPoints = 'VALIDATOR_NOMINATION_POINTS',
  ValidatorRegistrationPoints = 'VALIDATOR_REGISTRATION_POINTS'
}

export type PointsSnapshotsHavingAverageInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type PointsSnapshotsHavingDistinctCountInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `PointsSnapshot` aggregates. */
export type PointsSnapshotsHavingInput = {
  AND?: InputMaybe<Array<PointsSnapshotsHavingInput>>;
  OR?: InputMaybe<Array<PointsSnapshotsHavingInput>>;
  average?: InputMaybe<PointsSnapshotsHavingAverageInput>;
  distinctCount?: InputMaybe<PointsSnapshotsHavingDistinctCountInput>;
  max?: InputMaybe<PointsSnapshotsHavingMaxInput>;
  min?: InputMaybe<PointsSnapshotsHavingMinInput>;
  stddevPopulation?: InputMaybe<PointsSnapshotsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PointsSnapshotsHavingStddevSampleInput>;
  sum?: InputMaybe<PointsSnapshotsHavingSumInput>;
  variancePopulation?: InputMaybe<PointsSnapshotsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PointsSnapshotsHavingVarianceSampleInput>;
};

export type PointsSnapshotsHavingMaxInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type PointsSnapshotsHavingMinInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type PointsSnapshotsHavingStddevPopulationInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type PointsSnapshotsHavingStddevSampleInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type PointsSnapshotsHavingSumInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type PointsSnapshotsHavingVariancePopulationInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

export type PointsSnapshotsHavingVarianceSampleInput = {
  blockNumber?: InputMaybe<HavingIntFilter>;
  liquidStakingPoints?: InputMaybe<HavingBigfloatFilter>;
  operatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDelegationPoints?: InputMaybe<HavingBigfloatFilter>;
  restakingDepositPoints?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorNominationPoints?: InputMaybe<HavingBigfloatFilter>;
  validatorRegistrationPoints?: InputMaybe<HavingBigfloatFilter>;
};

/** Methods to use when ordering `PointsSnapshot`. */
export enum PointsSnapshotsOrderBy {
  AccountByAccountIdCreatedAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC',
  AccountByAccountIdCreatedAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC',
  AccountByAccountIdIdAsc = 'ACCOUNT_BY_ACCOUNT_ID__ID_ASC',
  AccountByAccountIdIdDesc = 'ACCOUNT_BY_ACCOUNT_ID__ID_DESC',
  AccountByAccountIdLastUpdateAtAsc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC',
  AccountByAccountIdLastUpdateAtDesc = 'ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC',
  AccountByAccountIdTotalPointsAsc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC',
  AccountByAccountIdTotalPointsDesc = 'ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC',
  AccountIdAsc = 'ACCOUNT_ID_ASC',
  AccountIdDesc = 'ACCOUNT_ID_DESC',
  BlockNumberAsc = 'BLOCK_NUMBER_ASC',
  BlockNumberDesc = 'BLOCK_NUMBER_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  LiquidStakingPointsAsc = 'LIQUID_STAKING_POINTS_ASC',
  LiquidStakingPointsDesc = 'LIQUID_STAKING_POINTS_DESC',
  Natural = 'NATURAL',
  OperatorRegistrationPointsAsc = 'OPERATOR_REGISTRATION_POINTS_ASC',
  OperatorRegistrationPointsDesc = 'OPERATOR_REGISTRATION_POINTS_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  RestakingDelegationPointsAsc = 'RESTAKING_DELEGATION_POINTS_ASC',
  RestakingDelegationPointsDesc = 'RESTAKING_DELEGATION_POINTS_DESC',
  RestakingDepositPointsAsc = 'RESTAKING_DEPOSIT_POINTS_ASC',
  RestakingDepositPointsDesc = 'RESTAKING_DEPOSIT_POINTS_DESC',
  TimestampAsc = 'TIMESTAMP_ASC',
  TimestampDesc = 'TIMESTAMP_DESC',
  TotalPointsAsc = 'TOTAL_POINTS_ASC',
  TotalPointsDesc = 'TOTAL_POINTS_DESC',
  ValidatorNominationPointsAsc = 'VALIDATOR_NOMINATION_POINTS_ASC',
  ValidatorNominationPointsDesc = 'VALIDATOR_NOMINATION_POINTS_DESC',
  ValidatorRegistrationPointsAsc = 'VALIDATOR_REGISTRATION_POINTS_ASC',
  ValidatorRegistrationPointsDesc = 'VALIDATOR_REGISTRATION_POINTS_DESC'
}

/**  Enum representing the source of points. */
export enum PointsSource {
  LiquidStaking = 'LIQUID_STAKING',
  OperatorRegistration = 'OPERATOR_REGISTRATION',
  RestakingDelegation = 'RESTAKING_DELEGATION',
  RestakingDeposit = 'RESTAKING_DEPOSIT',
  ValidatorNomination = 'VALIDATOR_NOMINATION',
  ValidatorRegistration = 'VALIDATOR_REGISTRATION'
}

/** A filter to be used against PointsSource fields. All fields are combined with a logical ‘and.’ */
export type PointsSourceFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<PointsSource>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<PointsSource>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<PointsSource>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<PointsSource>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<PointsSource>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<PointsSource>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<PointsSource>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<PointsSource>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<PointsSource>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<PointsSource>>;
};

/** The root query type which gives access points into the data universe. */
export type Query = Node & {
  __typename?: 'Query';
  _metadata?: Maybe<_Metadata>;
  _metadatas?: Maybe<_Metadatas>;
  account?: Maybe<Account>;
  /** Reads a single `Account` using its globally unique `ID`. */
  accountByNodeId?: Maybe<Account>;
  /** Reads and enables pagination through a set of `Account`. */
  accounts?: Maybe<AccountsConnection>;
  blueprint?: Maybe<Blueprint>;
  /** Reads a single `Blueprint` using its globally unique `ID`. */
  blueprintByNodeId?: Maybe<Blueprint>;
  blueprintOperator?: Maybe<BlueprintOperator>;
  /** Reads a single `BlueprintOperator` using its globally unique `ID`. */
  blueprintOperatorByNodeId?: Maybe<BlueprintOperator>;
  /** Reads and enables pagination through a set of `BlueprintOperator`. */
  blueprintOperators?: Maybe<BlueprintOperatorsConnection>;
  /** Reads and enables pagination through a set of `Blueprint`. */
  blueprints?: Maybe<BlueprintsConnection>;
  delegation?: Maybe<Delegation>;
  /** Reads a single `Delegation` using its globally unique `ID`. */
  delegationByNodeId?: Maybe<Delegation>;
  /** Reads and enables pagination through a set of `DelegationHistory`. */
  delegationHistories?: Maybe<DelegationHistoriesConnection>;
  delegationHistory?: Maybe<DelegationHistory>;
  /** Reads a single `DelegationHistory` using its globally unique `ID`. */
  delegationHistoryByNodeId?: Maybe<DelegationHistory>;
  /** Reads and enables pagination through a set of `Delegation`. */
  delegations?: Maybe<DelegationsConnection>;
  delegator?: Maybe<Delegator>;
  /** Reads a single `Delegator` using its globally unique `ID`. */
  delegatorByNodeId?: Maybe<Delegator>;
  /** Reads and enables pagination through a set of `Delegator`. */
  delegators?: Maybe<DelegatorsConnection>;
  deposit?: Maybe<Deposit>;
  /** Reads a single `Deposit` using its globally unique `ID`. */
  depositByNodeId?: Maybe<Deposit>;
  /** Reads and enables pagination through a set of `DepositHistory`. */
  depositHistories?: Maybe<DepositHistoriesConnection>;
  depositHistory?: Maybe<DepositHistory>;
  /** Reads a single `DepositHistory` using its globally unique `ID`. */
  depositHistoryByNodeId?: Maybe<DepositHistory>;
  /** Reads and enables pagination through a set of `Deposit`. */
  deposits?: Maybe<DepositsConnection>;
  jobCall?: Maybe<JobCall>;
  /** Reads a single `JobCall` using its globally unique `ID`. */
  jobCallByNodeId?: Maybe<JobCall>;
  /** Reads and enables pagination through a set of `JobCall`. */
  jobCalls?: Maybe<JobCallsConnection>;
  jobResult?: Maybe<JobResult>;
  /** Reads a single `JobResult` using its globally unique `ID`. */
  jobResultByNodeId?: Maybe<JobResult>;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults?: Maybe<JobResultsConnection>;
  lstPool?: Maybe<LstPool>;
  /** Reads a single `LstPool` using its globally unique `ID`. */
  lstPoolByNodeId?: Maybe<LstPool>;
  lstPoolMember?: Maybe<LstPoolMember>;
  /** Reads a single `LstPoolMember` using its globally unique `ID`. */
  lstPoolMemberByNodeId?: Maybe<LstPoolMember>;
  /** Reads and enables pagination through a set of `LstPoolMember`. */
  lstPoolMembers?: Maybe<LstPoolMembersConnection>;
  lstPoolStateChange?: Maybe<LstPoolStateChange>;
  /** Reads a single `LstPoolStateChange` using its globally unique `ID`. */
  lstPoolStateChangeByNodeId?: Maybe<LstPoolStateChange>;
  /** Reads and enables pagination through a set of `LstPoolStateChange`. */
  lstPoolStateChanges?: Maybe<LstPoolStateChangesConnection>;
  /** Reads and enables pagination through a set of `LstPool`. */
  lstPools?: Maybe<LstPoolsConnection>;
  memberStakeChange?: Maybe<MemberStakeChange>;
  /** Reads a single `MemberStakeChange` using its globally unique `ID`. */
  memberStakeChangeByNodeId?: Maybe<MemberStakeChange>;
  /** Reads and enables pagination through a set of `MemberStakeChange`. */
  memberStakeChanges?: Maybe<MemberStakeChangesConnection>;
  /** Fetches an object given its globally unique `ID`. */
  node?: Maybe<Node>;
  /** The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`. */
  nodeId: Scalars['ID']['output'];
  operator?: Maybe<Operator>;
  operatorBondChange?: Maybe<OperatorBondChange>;
  /** Reads a single `OperatorBondChange` using its globally unique `ID`. */
  operatorBondChangeByNodeId?: Maybe<OperatorBondChange>;
  /** Reads and enables pagination through a set of `OperatorBondChange`. */
  operatorBondChanges?: Maybe<OperatorBondChangesConnection>;
  /** Reads a single `Operator` using its globally unique `ID`. */
  operatorByNodeId?: Maybe<Operator>;
  operatorStatusChange?: Maybe<OperatorStatusChange>;
  /** Reads a single `OperatorStatusChange` using its globally unique `ID`. */
  operatorStatusChangeByNodeId?: Maybe<OperatorStatusChange>;
  /** Reads and enables pagination through a set of `OperatorStatusChange`. */
  operatorStatusChanges?: Maybe<OperatorStatusChangesConnection>;
  /** Reads and enables pagination through a set of `Operator`. */
  operators?: Maybe<OperatorsConnection>;
  pointsAccrualRate?: Maybe<PointsAccrualRate>;
  /** Reads a single `PointsAccrualRate` using its globally unique `ID`. */
  pointsAccrualRateByNodeId?: Maybe<PointsAccrualRate>;
  /** Reads and enables pagination through a set of `PointsAccrualRate`. */
  pointsAccrualRates?: Maybe<PointsAccrualRatesConnection>;
  pointsSnapshot?: Maybe<PointsSnapshot>;
  /** Reads a single `PointsSnapshot` using its globally unique `ID`. */
  pointsSnapshotByNodeId?: Maybe<PointsSnapshot>;
  /** Reads and enables pagination through a set of `PointsSnapshot`. */
  pointsSnapshots?: Maybe<PointsSnapshotsConnection>;
  /**
   * Exposes the root query type nested one level down. This is helpful for Relay 1
   * which can only query top level fields if they are in a particular form.
   */
  query: Query;
  service?: Maybe<Service>;
  /** Reads a single `Service` using its globally unique `ID`. */
  serviceByNodeId?: Maybe<Service>;
  serviceOperator?: Maybe<ServiceOperator>;
  /** Reads a single `ServiceOperator` using its globally unique `ID`. */
  serviceOperatorByNodeId?: Maybe<ServiceOperator>;
  /** Reads and enables pagination through a set of `ServiceOperator`. */
  serviceOperators?: Maybe<ServiceOperatorsConnection>;
  serviceRequest?: Maybe<ServiceRequest>;
  /** Reads a single `ServiceRequest` using its globally unique `ID`. */
  serviceRequestByNodeId?: Maybe<ServiceRequest>;
  serviceRequestOperator?: Maybe<ServiceRequestOperator>;
  /** Reads a single `ServiceRequestOperator` using its globally unique `ID`. */
  serviceRequestOperatorByNodeId?: Maybe<ServiceRequestOperator>;
  /** Reads and enables pagination through a set of `ServiceRequestOperator`. */
  serviceRequestOperators?: Maybe<ServiceRequestOperatorsConnection>;
  /** Reads and enables pagination through a set of `ServiceRequest`. */
  serviceRequests?: Maybe<ServiceRequestsConnection>;
  /** Reads and enables pagination through a set of `Service`. */
  services?: Maybe<ServicesConnection>;
  session?: Maybe<Session>;
  /** Reads a single `Session` using its globally unique `ID`. */
  sessionByNodeId?: Maybe<Session>;
  /** Reads and enables pagination through a set of `Session`. */
  sessions?: Maybe<SessionsConnection>;
  unstakeRequest?: Maybe<UnstakeRequest>;
  /** Reads a single `UnstakeRequest` using its globally unique `ID`. */
  unstakeRequestByNodeId?: Maybe<UnstakeRequest>;
  /** Reads and enables pagination through a set of `UnstakeRequest`. */
  unstakeRequests?: Maybe<UnstakeRequestsConnection>;
  withdrawRequest?: Maybe<WithdrawRequest>;
  /** Reads a single `WithdrawRequest` using its globally unique `ID`. */
  withdrawRequestByNodeId?: Maybe<WithdrawRequest>;
  /** Reads and enables pagination through a set of `WithdrawRequest`. */
  withdrawRequests?: Maybe<WithdrawRequestsConnection>;
};


/** The root query type which gives access points into the data universe. */
export type Query_MetadataArgs = {
  chainId?: InputMaybe<Scalars['String']['input']>;
};


/** The root query type which gives access points into the data universe. */
export type Query_MetadatasArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Accounts_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Accounts_Distinct_Enum>>>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryBlueprintArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBlueprintByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Blueprints_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBlueprintOperatorArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBlueprintOperatorByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Blueprint_Operators_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBlueprintOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprint_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryBlueprintsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprints_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegationArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegationByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegationHistoriesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegation_Histories_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationHistoryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationHistoriesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegationHistoryArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegationHistoryByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Delegation_Histories_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegations_Distinct_Enum>>>;
  filter?: InputMaybe<DelegationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegationsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegatorArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegatorByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Delegators_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDelegatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Delegators_Distinct_Enum>>>;
  filter?: InputMaybe<DelegatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DelegatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Deposits_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositHistoriesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Deposit_Histories_Distinct_Enum>>>;
  filter?: InputMaybe<DepositHistoryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositHistoriesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositHistoryArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositHistoryByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Deposit_Histories_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Deposits_Distinct_Enum>>>;
  filter?: InputMaybe<DepositFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryJobCallArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryJobCallByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryJobCallsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  filter?: InputMaybe<JobCallFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobCallsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryJobResultArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryJobResultByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pools_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolMemberArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolMemberByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_Members_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolMembersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_Members_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolMemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolMembersOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolStateChangeArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolStateChangeByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_State_Changes_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolStateChangesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pool_State_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolStateChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolStateChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryLstPoolsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Lst_Pools_Distinct_Enum>>>;
  filter?: InputMaybe<LstPoolFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LstPoolsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryMemberStakeChangeArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryMemberStakeChangeByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Member_Stake_Changes_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryMemberStakeChangesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Member_Stake_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<MemberStakeChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<MemberStakeChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryNodeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorBondChangeArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorBondChangeByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Operator_Bond_Changes_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorBondChangesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operator_Bond_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorBondChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorBondChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorStatusChangeArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorStatusChangeByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Operator_Status_Changes_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorStatusChangesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operator_Status_Changes_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorStatusChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorStatusChangesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryPointsAccrualRateArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPointsAccrualRateByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Points_Accrual_Rates_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPointsAccrualRatesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Points_Accrual_Rates_Distinct_Enum>>>;
  filter?: InputMaybe<PointsAccrualRateFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PointsAccrualRatesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryPointsSnapshotArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPointsSnapshotByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Points_Snapshots_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPointsSnapshotsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Points_Snapshots_Distinct_Enum>>>;
  filter?: InputMaybe<PointsSnapshotFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PointsSnapshotsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceOperatorArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceOperatorByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Service_Operators_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceRequestArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceRequestByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceRequestOperatorArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceRequestOperatorByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Service_Request_Operators_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceRequestOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Request_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryServiceRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QuerySessionArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySessionByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Sessions_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QuerySessionsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Sessions_Distinct_Enum>>>;
  filter?: InputMaybe<SessionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<SessionsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryUnstakeRequestArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryUnstakeRequestByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryUnstakeRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Unstake_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<UnstakeRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<UnstakeRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


/** The root query type which gives access points into the data universe. */
export type QueryWithdrawRequestArgs = {
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryWithdrawRequestByNodeIdArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Withdraw_Requests_Distinct_Enum>>>;
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryWithdrawRequestsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Withdraw_Requests_Distinct_Enum>>>;
  filter?: InputMaybe<WithdrawRequestFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<WithdrawRequestsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type Service = Node & {
  __typename?: 'Service';
  /** Reads and enables pagination through a set of `Account`. */
  accountsByJobCallServiceIdAndCallerId: ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyConnection;
  /** List of asset IDs associated with this Service. */
  assetIds: Scalars['JSON']['output'];
  /** Reads a single `Blueprint` that is related to this `Service`. */
  blueprint?: Maybe<Blueprint>;
  /** The blueprint associated with this Service. */
  blueprintId: Scalars['String']['output'];
  /** The creation block number of the Service. */
  createdAt: Scalars['Int']['output'];
  /** Unique identifier for the Service. */
  id: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `JobCall`. */
  jobCalls: JobCallsConnection;
  /** Reads and enables pagination through a set of `JobCall`. */
  jobCallsByJobResultServiceIdAndJobCallId: ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyConnection;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByJobResultServiceIdAndOperatorId: ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyConnection;
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByServiceOperatorServiceIdAndOperatorId: ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyConnection;
  /** Reads a single `Account` that is related to this `Service`. */
  owner?: Maybe<Account>;
  /** The owner of the Service. */
  ownerId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `ServiceOperator`. */
  serviceOperators: ServiceOperatorsConnection;
  /** Reads a single `ServiceRequest` that is related to this `Service`. */
  serviceRequest?: Maybe<ServiceRequest>;
  /** The Service Request associated with this Service. */
  serviceRequestId: Scalars['String']['output'];
  /** The block number when the Service was terminated. */
  terminatedAt?: Maybe<Scalars['Int']['output']>;
};


export type ServiceAccountsByJobCallServiceIdAndCallerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Accounts_Distinct_Enum>>>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceJobCallsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  filter?: InputMaybe<JobCallFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobCallsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceJobCallsByJobResultServiceIdAndJobCallIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  filter?: InputMaybe<JobCallFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobCallsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceOperatorsByJobResultServiceIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceServiceOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Account` values, with data from `JobCall`. */
export type ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyConnection = {
  __typename?: 'ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account`, info from the `JobCall`, and the cursor to aid in pagination. */
  edges: Array<ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Maybe<Account>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values, with data from `JobCall`. */
export type ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountsGroupBy>;
  having?: InputMaybe<AccountsHavingInput>;
};

/** A `Account` edge in the connection, with data from `JobCall`. */
export type ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyEdge = {
  __typename?: 'ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobCall`. */
  jobCalls: JobCallsConnection;
  /** The `Account` at the end of the edge. */
  node?: Maybe<Account>;
};


/** A `Account` edge in the connection, with data from `JobCall`. */
export type ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyEdgeJobCallsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Calls_Distinct_Enum>>>;
  filter?: InputMaybe<JobCallFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobCallsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type ServiceAggregates = {
  __typename?: 'ServiceAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ServiceAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ServiceDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ServiceMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ServiceMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ServiceStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ServiceStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ServiceSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ServiceVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ServiceVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `Service` object types. */
export type ServiceAggregatesFilter = {
  /** Mean average aggregate over matching `Service` objects. */
  average?: InputMaybe<ServiceAverageAggregateFilter>;
  /** Distinct count aggregate over matching `Service` objects. */
  distinctCount?: InputMaybe<ServiceDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `Service` object to be included within the aggregate. */
  filter?: InputMaybe<ServiceFilter>;
  /** Maximum aggregate over matching `Service` objects. */
  max?: InputMaybe<ServiceMaxAggregateFilter>;
  /** Minimum aggregate over matching `Service` objects. */
  min?: InputMaybe<ServiceMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `Service` objects. */
  stddevPopulation?: InputMaybe<ServiceStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `Service` objects. */
  stddevSample?: InputMaybe<ServiceStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `Service` objects. */
  sum?: InputMaybe<ServiceSumAggregateFilter>;
  /** Population variance aggregate over matching `Service` objects. */
  variancePopulation?: InputMaybe<ServiceVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `Service` objects. */
  varianceSample?: InputMaybe<ServiceVarianceSampleAggregateFilter>;
};

export type ServiceAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  terminatedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceAverageAggregates = {
  __typename?: 'ServiceAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  assetIds?: InputMaybe<BigIntFilter>;
  blueprintId?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  ownerId?: InputMaybe<BigIntFilter>;
  serviceRequestId?: InputMaybe<BigIntFilter>;
  terminatedAt?: InputMaybe<BigIntFilter>;
};

export type ServiceDistinctCountAggregates = {
  __typename?: 'ServiceDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of assetIds across the matching connection */
  assetIds?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blueprintId across the matching connection */
  blueprintId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ownerId across the matching connection */
  ownerId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of serviceRequestId across the matching connection */
  serviceRequestId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Service` object types. All fields are combined with a logical ‘and.’ */
export type ServiceFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ServiceFilter>>;
  /** Filter by the object’s `assetIds` field. */
  assetIds?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `blueprint` relation. */
  blueprint?: InputMaybe<BlueprintFilter>;
  /** Filter by the object’s `blueprintId` field. */
  blueprintId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `jobCalls` relation. */
  jobCalls?: InputMaybe<ServiceToManyJobCallFilter>;
  /** Some related `jobCalls` exist. */
  jobCallsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `jobResults` relation. */
  jobResults?: InputMaybe<ServiceToManyJobResultFilter>;
  /** Some related `jobResults` exist. */
  jobResultsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Negates the expression. */
  not?: InputMaybe<ServiceFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ServiceFilter>>;
  /** Filter by the object’s `owner` relation. */
  owner?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `ownerId` field. */
  ownerId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `serviceOperators` relation. */
  serviceOperators?: InputMaybe<ServiceToManyServiceOperatorFilter>;
  /** Some related `serviceOperators` exist. */
  serviceOperatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `serviceRequest` relation. */
  serviceRequest?: InputMaybe<ServiceRequestFilter>;
  /** Filter by the object’s `serviceRequestId` field. */
  serviceRequestId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `terminatedAt` field. */
  terminatedAt?: InputMaybe<IntFilter>;
};

/** A connection to a list of `JobCall` values, with data from `JobResult`. */
export type ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyConnection = {
  __typename?: 'ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<JobCallAggregates>;
  /** A list of edges which contains the `JobCall`, info from the `JobResult`, and the cursor to aid in pagination. */
  edges: Array<ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<JobCallAggregates>>;
  /** A list of `JobCall` objects. */
  nodes: Array<Maybe<JobCall>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `JobCall` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `JobCall` values, with data from `JobResult`. */
export type ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<JobCallsGroupBy>;
  having?: InputMaybe<JobCallsHavingInput>;
};

/** A `JobCall` edge in the connection, with data from `JobResult`. */
export type ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyEdge = {
  __typename?: 'ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** The `JobCall` at the end of the edge. */
  node?: Maybe<JobCall>;
};


/** A `JobCall` edge in the connection, with data from `JobResult`. */
export type ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyEdgeJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type ServiceMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  terminatedAt?: InputMaybe<IntFilter>;
};

export type ServiceMaxAggregates = {
  __typename?: 'ServiceMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  terminatedAt?: InputMaybe<IntFilter>;
};

export type ServiceMinAggregates = {
  __typename?: 'ServiceMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceOperator = Node & {
  __typename?: 'ServiceOperator';
  /** The creation block number of the relationship. */
  createdAt: Scalars['Int']['output'];
  /** Unique identifier for the relationship. Composite key: Service ID + Operator ID */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `ServiceOperator`. */
  operator?: Maybe<Operator>;
  /** The Operator associated with this relationship. */
  operatorId: Scalars['String']['output'];
  /** Reads a single `Service` that is related to this `ServiceOperator`. */
  service?: Maybe<Service>;
  /** The Service associated with this relationship. */
  serviceId: Scalars['String']['output'];
};

export type ServiceOperatorAggregates = {
  __typename?: 'ServiceOperatorAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ServiceOperatorAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ServiceOperatorDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ServiceOperatorMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ServiceOperatorMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ServiceOperatorStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ServiceOperatorStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ServiceOperatorSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ServiceOperatorVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ServiceOperatorVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `ServiceOperator` object types. */
export type ServiceOperatorAggregatesFilter = {
  /** Mean average aggregate over matching `ServiceOperator` objects. */
  average?: InputMaybe<ServiceOperatorAverageAggregateFilter>;
  /** Distinct count aggregate over matching `ServiceOperator` objects. */
  distinctCount?: InputMaybe<ServiceOperatorDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `ServiceOperator` object to be included within the aggregate. */
  filter?: InputMaybe<ServiceOperatorFilter>;
  /** Maximum aggregate over matching `ServiceOperator` objects. */
  max?: InputMaybe<ServiceOperatorMaxAggregateFilter>;
  /** Minimum aggregate over matching `ServiceOperator` objects. */
  min?: InputMaybe<ServiceOperatorMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `ServiceOperator` objects. */
  stddevPopulation?: InputMaybe<ServiceOperatorStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `ServiceOperator` objects. */
  stddevSample?: InputMaybe<ServiceOperatorStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `ServiceOperator` objects. */
  sum?: InputMaybe<ServiceOperatorSumAggregateFilter>;
  /** Population variance aggregate over matching `ServiceOperator` objects. */
  variancePopulation?: InputMaybe<ServiceOperatorVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `ServiceOperator` objects. */
  varianceSample?: InputMaybe<ServiceOperatorVarianceSampleAggregateFilter>;
};

export type ServiceOperatorAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceOperatorAverageAggregates = {
  __typename?: 'ServiceOperatorAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceOperatorDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
  serviceId?: InputMaybe<BigIntFilter>;
};

export type ServiceOperatorDistinctCountAggregates = {
  __typename?: 'ServiceOperatorDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of serviceId across the matching connection */
  serviceId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `ServiceOperator` object types. All fields are combined with a logical ‘and.’ */
export type ServiceOperatorFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ServiceOperatorFilter>>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<ServiceOperatorFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ServiceOperatorFilter>>;
  /** Filter by the object’s `service` relation. */
  service?: InputMaybe<ServiceFilter>;
  /** Filter by the object’s `serviceId` field. */
  serviceId?: InputMaybe<StringFilter>;
};

export type ServiceOperatorMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type ServiceOperatorMaxAggregates = {
  __typename?: 'ServiceOperatorMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceOperatorMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type ServiceOperatorMinAggregates = {
  __typename?: 'ServiceOperatorMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceOperatorStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceOperatorStddevPopulationAggregates = {
  __typename?: 'ServiceOperatorStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceOperatorStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceOperatorStddevSampleAggregates = {
  __typename?: 'ServiceOperatorStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceOperatorSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
};

export type ServiceOperatorSumAggregates = {
  __typename?: 'ServiceOperatorSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
};

export type ServiceOperatorVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceOperatorVariancePopulationAggregates = {
  __typename?: 'ServiceOperatorVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceOperatorVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceOperatorVarianceSampleAggregates = {
  __typename?: 'ServiceOperatorVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Operator` values, with data from `JobResult`. */
export type ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyConnection = {
  __typename?: 'ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `JobResult`, and the cursor to aid in pagination. */
  edges: Array<ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `JobResult`. */
export type ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `JobResult`. */
export type ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyEdge = {
  __typename?: 'ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** Reads and enables pagination through a set of `JobResult`. */
  jobResults: JobResultsConnection;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
};


/** A `Operator` edge in the connection, with data from `JobResult`. */
export type ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyEdgeJobResultsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Job_Results_Distinct_Enum>>>;
  filter?: InputMaybe<JobResultFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<JobResultsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Operator` values, with data from `ServiceOperator`. */
export type ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyConnection = {
  __typename?: 'ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `ServiceOperator`, and the cursor to aid in pagination. */
  edges: Array<ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `ServiceOperator`. */
export type ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `ServiceOperator`. */
export type ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyEdge = {
  __typename?: 'ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
  /** Reads and enables pagination through a set of `ServiceOperator`. */
  serviceOperators: ServiceOperatorsConnection;
};


/** A `Operator` edge in the connection, with data from `ServiceOperator`. */
export type ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyEdgeServiceOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `ServiceOperator` values. */
export type ServiceOperatorsConnection = {
  __typename?: 'ServiceOperatorsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceOperatorAggregates>;
  /** A list of edges which contains the `ServiceOperator` and cursor to aid in pagination. */
  edges: Array<ServiceOperatorsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceOperatorAggregates>>;
  /** A list of `ServiceOperator` objects. */
  nodes: Array<Maybe<ServiceOperator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ServiceOperator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ServiceOperator` values. */
export type ServiceOperatorsConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServiceOperatorsGroupBy>;
  having?: InputMaybe<ServiceOperatorsHavingInput>;
};

/** A `ServiceOperator` edge in the connection. */
export type ServiceOperatorsEdge = {
  __typename?: 'ServiceOperatorsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ServiceOperator` at the end of the edge. */
  node?: Maybe<ServiceOperator>;
};

/** Grouping methods for `ServiceOperator` for usage during aggregation. */
export enum ServiceOperatorsGroupBy {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  ServiceId = 'SERVICE_ID'
}

export type ServiceOperatorsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceOperatorsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `ServiceOperator` aggregates. */
export type ServiceOperatorsHavingInput = {
  AND?: InputMaybe<Array<ServiceOperatorsHavingInput>>;
  OR?: InputMaybe<Array<ServiceOperatorsHavingInput>>;
  average?: InputMaybe<ServiceOperatorsHavingAverageInput>;
  distinctCount?: InputMaybe<ServiceOperatorsHavingDistinctCountInput>;
  max?: InputMaybe<ServiceOperatorsHavingMaxInput>;
  min?: InputMaybe<ServiceOperatorsHavingMinInput>;
  stddevPopulation?: InputMaybe<ServiceOperatorsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ServiceOperatorsHavingStddevSampleInput>;
  sum?: InputMaybe<ServiceOperatorsHavingSumInput>;
  variancePopulation?: InputMaybe<ServiceOperatorsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ServiceOperatorsHavingVarianceSampleInput>;
};

export type ServiceOperatorsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceOperatorsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceOperatorsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceOperatorsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceOperatorsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceOperatorsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceOperatorsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `ServiceOperator`. */
export enum ServiceOperatorsOrderBy {
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ServiceByServiceIdAssetIdsAsc = 'SERVICE_BY_SERVICE_ID__ASSET_IDS_ASC',
  ServiceByServiceIdAssetIdsDesc = 'SERVICE_BY_SERVICE_ID__ASSET_IDS_DESC',
  ServiceByServiceIdBlueprintIdAsc = 'SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_ASC',
  ServiceByServiceIdBlueprintIdDesc = 'SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_DESC',
  ServiceByServiceIdCreatedAtAsc = 'SERVICE_BY_SERVICE_ID__CREATED_AT_ASC',
  ServiceByServiceIdCreatedAtDesc = 'SERVICE_BY_SERVICE_ID__CREATED_AT_DESC',
  ServiceByServiceIdIdAsc = 'SERVICE_BY_SERVICE_ID__ID_ASC',
  ServiceByServiceIdIdDesc = 'SERVICE_BY_SERVICE_ID__ID_DESC',
  ServiceByServiceIdOwnerIdAsc = 'SERVICE_BY_SERVICE_ID__OWNER_ID_ASC',
  ServiceByServiceIdOwnerIdDesc = 'SERVICE_BY_SERVICE_ID__OWNER_ID_DESC',
  ServiceByServiceIdServiceRequestIdAsc = 'SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_ASC',
  ServiceByServiceIdServiceRequestIdDesc = 'SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_DESC',
  ServiceByServiceIdTerminatedAtAsc = 'SERVICE_BY_SERVICE_ID__TERMINATED_AT_ASC',
  ServiceByServiceIdTerminatedAtDesc = 'SERVICE_BY_SERVICE_ID__TERMINATED_AT_DESC',
  ServiceIdAsc = 'SERVICE_ID_ASC',
  ServiceIdDesc = 'SERVICE_ID_DESC'
}

export type ServiceRequest = Node & {
  __typename?: 'ServiceRequest';
  /** Reads and enables pagination through a set of `Account`. */
  accountsByServiceServiceRequestIdAndOwnerId: ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyConnection;
  /** List of asset IDs associated with this Service Request. */
  assetIds: Scalars['JSON']['output'];
  /** Reads a single `Blueprint` that is related to this `ServiceRequest`. */
  blueprint?: Maybe<Blueprint>;
  /** The blueprint associated with this Service Request. */
  blueprintId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `Blueprint`. */
  blueprintsByServiceServiceRequestIdAndBlueprintId: ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyConnection;
  /** The creation block number of the Service Request. */
  createdAt: Scalars['Int']['output'];
  /** Unique identifier for the Service Request. */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `Operator`. */
  operatorsByServiceRequestOperatorServiceRequestIdAndOperatorId: ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyConnection;
  /** Reads a single `Account` that is related to this `ServiceRequest`. */
  owner?: Maybe<Account>;
  /** The owner of the Service Request. */
  ownerId: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `ServiceRequestOperator`. */
  serviceRequestOperators: ServiceRequestOperatorsConnection;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


export type ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Accounts_Distinct_Enum>>>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Blueprints_Distinct_Enum>>>;
  filter?: InputMaybe<BlueprintFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BlueprintsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
  filter?: InputMaybe<OperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<OperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceRequestServiceRequestOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Request_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};


export type ServiceRequestServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `Account` values, with data from `Service`. */
export type ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyConnection = {
  __typename?: 'ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account`, info from the `Service`, and the cursor to aid in pagination. */
  edges: Array<ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Maybe<Account>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values, with data from `Service`. */
export type ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountsGroupBy>;
  having?: InputMaybe<AccountsHavingInput>;
};

/** A `Account` edge in the connection, with data from `Service`. */
export type ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyEdge = {
  __typename?: 'ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Account` at the end of the edge. */
  node?: Maybe<Account>;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


/** A `Account` edge in the connection, with data from `Service`. */
export type ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyEdgeServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type ServiceRequestAggregates = {
  __typename?: 'ServiceRequestAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ServiceRequestAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ServiceRequestDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ServiceRequestMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ServiceRequestMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ServiceRequestStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ServiceRequestStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ServiceRequestSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ServiceRequestVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ServiceRequestVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `ServiceRequest` object types. */
export type ServiceRequestAggregatesFilter = {
  /** Mean average aggregate over matching `ServiceRequest` objects. */
  average?: InputMaybe<ServiceRequestAverageAggregateFilter>;
  /** Distinct count aggregate over matching `ServiceRequest` objects. */
  distinctCount?: InputMaybe<ServiceRequestDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `ServiceRequest` object to be included within the aggregate. */
  filter?: InputMaybe<ServiceRequestFilter>;
  /** Maximum aggregate over matching `ServiceRequest` objects. */
  max?: InputMaybe<ServiceRequestMaxAggregateFilter>;
  /** Minimum aggregate over matching `ServiceRequest` objects. */
  min?: InputMaybe<ServiceRequestMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `ServiceRequest` objects. */
  stddevPopulation?: InputMaybe<ServiceRequestStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `ServiceRequest` objects. */
  stddevSample?: InputMaybe<ServiceRequestStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `ServiceRequest` objects. */
  sum?: InputMaybe<ServiceRequestSumAggregateFilter>;
  /** Population variance aggregate over matching `ServiceRequest` objects. */
  variancePopulation?: InputMaybe<ServiceRequestVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `ServiceRequest` objects. */
  varianceSample?: InputMaybe<ServiceRequestVarianceSampleAggregateFilter>;
};

export type ServiceRequestAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestAverageAggregates = {
  __typename?: 'ServiceRequestAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Blueprint` values, with data from `Service`. */
export type ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyConnection = {
  __typename?: 'ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BlueprintAggregates>;
  /** A list of edges which contains the `Blueprint`, info from the `Service`, and the cursor to aid in pagination. */
  edges: Array<ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BlueprintAggregates>>;
  /** A list of `Blueprint` objects. */
  nodes: Array<Maybe<Blueprint>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Blueprint` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Blueprint` values, with data from `Service`. */
export type ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<BlueprintsGroupBy>;
  having?: InputMaybe<BlueprintsHavingInput>;
};

/** A `Blueprint` edge in the connection, with data from `Service`. */
export type ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyEdge = {
  __typename?: 'ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Blueprint` at the end of the edge. */
  node?: Maybe<Blueprint>;
  /** Reads and enables pagination through a set of `Service`. */
  services: ServicesConnection;
};


/** A `Blueprint` edge in the connection, with data from `Service`. */
export type ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyEdgeServicesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Services_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServicesOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

export type ServiceRequestDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  assetIds?: InputMaybe<BigIntFilter>;
  blueprintId?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  ownerId?: InputMaybe<BigIntFilter>;
};

export type ServiceRequestDistinctCountAggregates = {
  __typename?: 'ServiceRequestDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of assetIds across the matching connection */
  assetIds?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blueprintId across the matching connection */
  blueprintId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ownerId across the matching connection */
  ownerId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `ServiceRequest` object types. All fields are combined with a logical ‘and.’ */
export type ServiceRequestFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ServiceRequestFilter>>;
  /** Filter by the object’s `assetIds` field. */
  assetIds?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `blueprint` relation. */
  blueprint?: InputMaybe<BlueprintFilter>;
  /** Filter by the object’s `blueprintId` field. */
  blueprintId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<ServiceRequestFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ServiceRequestFilter>>;
  /** Filter by the object’s `owner` relation. */
  owner?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `ownerId` field. */
  ownerId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `serviceRequestOperators` relation. */
  serviceRequestOperators?: InputMaybe<ServiceRequestToManyServiceRequestOperatorFilter>;
  /** Some related `serviceRequestOperators` exist. */
  serviceRequestOperatorsExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `services` relation. */
  services?: InputMaybe<ServiceRequestToManyServiceFilter>;
  /** Some related `services` exist. */
  servicesExist?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ServiceRequestMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type ServiceRequestMaxAggregates = {
  __typename?: 'ServiceRequestMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceRequestMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
};

export type ServiceRequestMinAggregates = {
  __typename?: 'ServiceRequestMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceRequestOperator = Node & {
  __typename?: 'ServiceRequestOperator';
  /** The approval block number. */
  approvedAt?: Maybe<Scalars['Int']['output']>;
  /** The creation block number of the relationship. */
  createdAt: Scalars['Int']['output'];
  /** Unique identifier for the relationship. Composite key: Service Request ID + Operator ID */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `ServiceRequestOperator`. */
  operator?: Maybe<Operator>;
  /** The Operator associated with this relationship. */
  operatorId: Scalars['String']['output'];
  /** The rejection block number. */
  rejectedAt?: Maybe<Scalars['Int']['output']>;
  /** Reads a single `ServiceRequest` that is related to this `ServiceRequestOperator`. */
  serviceRequest?: Maybe<ServiceRequest>;
  /** The Service Request associated with this relationship. */
  serviceRequestId: Scalars['String']['output'];
};

export type ServiceRequestOperatorAggregates = {
  __typename?: 'ServiceRequestOperatorAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<ServiceRequestOperatorAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<ServiceRequestOperatorDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<ServiceRequestOperatorMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<ServiceRequestOperatorMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<ServiceRequestOperatorStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<ServiceRequestOperatorStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<ServiceRequestOperatorSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<ServiceRequestOperatorVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<ServiceRequestOperatorVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `ServiceRequestOperator` object types. */
export type ServiceRequestOperatorAggregatesFilter = {
  /** Mean average aggregate over matching `ServiceRequestOperator` objects. */
  average?: InputMaybe<ServiceRequestOperatorAverageAggregateFilter>;
  /** Distinct count aggregate over matching `ServiceRequestOperator` objects. */
  distinctCount?: InputMaybe<ServiceRequestOperatorDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `ServiceRequestOperator` object to be included within the aggregate. */
  filter?: InputMaybe<ServiceRequestOperatorFilter>;
  /** Maximum aggregate over matching `ServiceRequestOperator` objects. */
  max?: InputMaybe<ServiceRequestOperatorMaxAggregateFilter>;
  /** Minimum aggregate over matching `ServiceRequestOperator` objects. */
  min?: InputMaybe<ServiceRequestOperatorMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `ServiceRequestOperator` objects. */
  stddevPopulation?: InputMaybe<ServiceRequestOperatorStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `ServiceRequestOperator` objects. */
  stddevSample?: InputMaybe<ServiceRequestOperatorStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `ServiceRequestOperator` objects. */
  sum?: InputMaybe<ServiceRequestOperatorSumAggregateFilter>;
  /** Population variance aggregate over matching `ServiceRequestOperator` objects. */
  variancePopulation?: InputMaybe<ServiceRequestOperatorVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `ServiceRequestOperator` objects. */
  varianceSample?: InputMaybe<ServiceRequestOperatorVarianceSampleAggregateFilter>;
};

export type ServiceRequestOperatorAverageAggregateFilter = {
  approvedAt?: InputMaybe<BigFloatFilter>;
  createdAt?: InputMaybe<BigFloatFilter>;
  rejectedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestOperatorAverageAggregates = {
  __typename?: 'ServiceRequestOperatorAverageAggregates';
  /** Mean average of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceRequestOperatorDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  approvedAt?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
  rejectedAt?: InputMaybe<BigIntFilter>;
  serviceRequestId?: InputMaybe<BigIntFilter>;
};

export type ServiceRequestOperatorDistinctCountAggregates = {
  __typename?: 'ServiceRequestOperatorDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of serviceRequestId across the matching connection */
  serviceRequestId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `ServiceRequestOperator` object types. All fields are combined with a logical ‘and.’ */
export type ServiceRequestOperatorFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<ServiceRequestOperatorFilter>>;
  /** Filter by the object’s `approvedAt` field. */
  approvedAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<ServiceRequestOperatorFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<ServiceRequestOperatorFilter>>;
  /** Filter by the object’s `rejectedAt` field. */
  rejectedAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `serviceRequest` relation. */
  serviceRequest?: InputMaybe<ServiceRequestFilter>;
  /** Filter by the object’s `serviceRequestId` field. */
  serviceRequestId?: InputMaybe<StringFilter>;
};

export type ServiceRequestOperatorMaxAggregateFilter = {
  approvedAt?: InputMaybe<IntFilter>;
  createdAt?: InputMaybe<IntFilter>;
  rejectedAt?: InputMaybe<IntFilter>;
};

export type ServiceRequestOperatorMaxAggregates = {
  __typename?: 'ServiceRequestOperatorMaxAggregates';
  /** Maximum of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceRequestOperatorMinAggregateFilter = {
  approvedAt?: InputMaybe<IntFilter>;
  createdAt?: InputMaybe<IntFilter>;
  rejectedAt?: InputMaybe<IntFilter>;
};

export type ServiceRequestOperatorMinAggregates = {
  __typename?: 'ServiceRequestOperatorMinAggregates';
  /** Minimum of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['Int']['output']>;
};

export type ServiceRequestOperatorStddevPopulationAggregateFilter = {
  approvedAt?: InputMaybe<BigFloatFilter>;
  createdAt?: InputMaybe<BigFloatFilter>;
  rejectedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestOperatorStddevPopulationAggregates = {
  __typename?: 'ServiceRequestOperatorStddevPopulationAggregates';
  /** Population standard deviation of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceRequestOperatorStddevSampleAggregateFilter = {
  approvedAt?: InputMaybe<BigFloatFilter>;
  createdAt?: InputMaybe<BigFloatFilter>;
  rejectedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestOperatorStddevSampleAggregates = {
  __typename?: 'ServiceRequestOperatorStddevSampleAggregates';
  /** Sample standard deviation of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceRequestOperatorSumAggregateFilter = {
  approvedAt?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  rejectedAt?: InputMaybe<BigIntFilter>;
};

export type ServiceRequestOperatorSumAggregates = {
  __typename?: 'ServiceRequestOperatorSumAggregates';
  /** Sum of approvedAt across the matching connection */
  approvedAt: Scalars['BigInt']['output'];
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
  /** Sum of rejectedAt across the matching connection */
  rejectedAt: Scalars['BigInt']['output'];
};

export type ServiceRequestOperatorVariancePopulationAggregateFilter = {
  approvedAt?: InputMaybe<BigFloatFilter>;
  createdAt?: InputMaybe<BigFloatFilter>;
  rejectedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestOperatorVariancePopulationAggregates = {
  __typename?: 'ServiceRequestOperatorVariancePopulationAggregates';
  /** Population variance of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceRequestOperatorVarianceSampleAggregateFilter = {
  approvedAt?: InputMaybe<BigFloatFilter>;
  createdAt?: InputMaybe<BigFloatFilter>;
  rejectedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestOperatorVarianceSampleAggregates = {
  __typename?: 'ServiceRequestOperatorVarianceSampleAggregates';
  /** Sample variance of approvedAt across the matching connection */
  approvedAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of rejectedAt across the matching connection */
  rejectedAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Operator` values, with data from `ServiceRequestOperator`. */
export type ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyConnection = {
  __typename?: 'ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<OperatorAggregates>;
  /** A list of edges which contains the `Operator`, info from the `ServiceRequestOperator`, and the cursor to aid in pagination. */
  edges: Array<ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<OperatorAggregates>>;
  /** A list of `Operator` objects. */
  nodes: Array<Maybe<Operator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Operator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Operator` values, with data from `ServiceRequestOperator`. */
export type ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyConnectionGroupedAggregatesArgs = {
  groupBy: Array<OperatorsGroupBy>;
  having?: InputMaybe<OperatorsHavingInput>;
};

/** A `Operator` edge in the connection, with data from `ServiceRequestOperator`. */
export type ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyEdge = {
  __typename?: 'ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Operator` at the end of the edge. */
  node?: Maybe<Operator>;
  /** Reads and enables pagination through a set of `ServiceRequestOperator`. */
  serviceRequestOperators: ServiceRequestOperatorsConnection;
};


/** A `Operator` edge in the connection, with data from `ServiceRequestOperator`. */
export type ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyEdgeServiceRequestOperatorsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  blockHeight?: InputMaybe<Scalars['String']['input']>;
  distinct?: InputMaybe<Array<InputMaybe<Service_Request_Operators_Distinct_Enum>>>;
  filter?: InputMaybe<ServiceRequestOperatorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ServiceRequestOperatorsOrderBy>>;
  orderByNull?: InputMaybe<NullOrder>;
};

/** A connection to a list of `ServiceRequestOperator` values. */
export type ServiceRequestOperatorsConnection = {
  __typename?: 'ServiceRequestOperatorsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceRequestOperatorAggregates>;
  /** A list of edges which contains the `ServiceRequestOperator` and cursor to aid in pagination. */
  edges: Array<ServiceRequestOperatorsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceRequestOperatorAggregates>>;
  /** A list of `ServiceRequestOperator` objects. */
  nodes: Array<Maybe<ServiceRequestOperator>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ServiceRequestOperator` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ServiceRequestOperator` values. */
export type ServiceRequestOperatorsConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServiceRequestOperatorsGroupBy>;
  having?: InputMaybe<ServiceRequestOperatorsHavingInput>;
};

/** A `ServiceRequestOperator` edge in the connection. */
export type ServiceRequestOperatorsEdge = {
  __typename?: 'ServiceRequestOperatorsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ServiceRequestOperator` at the end of the edge. */
  node?: Maybe<ServiceRequestOperator>;
};

/** Grouping methods for `ServiceRequestOperator` for usage during aggregation. */
export enum ServiceRequestOperatorsGroupBy {
  ApprovedAt = 'APPROVED_AT',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  RejectedAt = 'REJECTED_AT',
  ServiceRequestId = 'SERVICE_REQUEST_ID'
}

export type ServiceRequestOperatorsHavingAverageInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestOperatorsHavingDistinctCountInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `ServiceRequestOperator` aggregates. */
export type ServiceRequestOperatorsHavingInput = {
  AND?: InputMaybe<Array<ServiceRequestOperatorsHavingInput>>;
  OR?: InputMaybe<Array<ServiceRequestOperatorsHavingInput>>;
  average?: InputMaybe<ServiceRequestOperatorsHavingAverageInput>;
  distinctCount?: InputMaybe<ServiceRequestOperatorsHavingDistinctCountInput>;
  max?: InputMaybe<ServiceRequestOperatorsHavingMaxInput>;
  min?: InputMaybe<ServiceRequestOperatorsHavingMinInput>;
  stddevPopulation?: InputMaybe<ServiceRequestOperatorsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ServiceRequestOperatorsHavingStddevSampleInput>;
  sum?: InputMaybe<ServiceRequestOperatorsHavingSumInput>;
  variancePopulation?: InputMaybe<ServiceRequestOperatorsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ServiceRequestOperatorsHavingVarianceSampleInput>;
};

export type ServiceRequestOperatorsHavingMaxInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestOperatorsHavingMinInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestOperatorsHavingStddevPopulationInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestOperatorsHavingStddevSampleInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestOperatorsHavingSumInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestOperatorsHavingVariancePopulationInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestOperatorsHavingVarianceSampleInput = {
  approvedAt?: InputMaybe<HavingIntFilter>;
  createdAt?: InputMaybe<HavingIntFilter>;
  rejectedAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `ServiceRequestOperator`. */
export enum ServiceRequestOperatorsOrderBy {
  ApprovedAtAsc = 'APPROVED_AT_ASC',
  ApprovedAtDesc = 'APPROVED_AT_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  RejectedAtAsc = 'REJECTED_AT_ASC',
  RejectedAtDesc = 'REJECTED_AT_DESC',
  ServiceRequestByServiceRequestIdAssetIdsAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_ASC',
  ServiceRequestByServiceRequestIdAssetIdsDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_DESC',
  ServiceRequestByServiceRequestIdBlueprintIdAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_ASC',
  ServiceRequestByServiceRequestIdBlueprintIdDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_DESC',
  ServiceRequestByServiceRequestIdCreatedAtAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_ASC',
  ServiceRequestByServiceRequestIdCreatedAtDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_DESC',
  ServiceRequestByServiceRequestIdIdAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_ASC',
  ServiceRequestByServiceRequestIdIdDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_DESC',
  ServiceRequestByServiceRequestIdOwnerIdAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_ASC',
  ServiceRequestByServiceRequestIdOwnerIdDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_DESC',
  ServiceRequestIdAsc = 'SERVICE_REQUEST_ID_ASC',
  ServiceRequestIdDesc = 'SERVICE_REQUEST_ID_DESC'
}

export type ServiceRequestStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestStddevPopulationAggregates = {
  __typename?: 'ServiceRequestStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceRequestStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestStddevSampleAggregates = {
  __typename?: 'ServiceRequestStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceRequestSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
};

export type ServiceRequestSumAggregates = {
  __typename?: 'ServiceRequestSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
};

/** A filter to be used against many `Service` object types. All fields are combined with a logical ‘and.’ */
export type ServiceRequestToManyServiceFilter = {
  /** Aggregates across related `Service` match the filter criteria. */
  aggregates?: InputMaybe<ServiceAggregatesFilter>;
  /** Every related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceFilter>;
  /** No related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceFilter>;
  /** Some related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceFilter>;
};

/** A filter to be used against many `ServiceRequestOperator` object types. All fields are combined with a logical ‘and.’ */
export type ServiceRequestToManyServiceRequestOperatorFilter = {
  /** Aggregates across related `ServiceRequestOperator` match the filter criteria. */
  aggregates?: InputMaybe<ServiceRequestOperatorAggregatesFilter>;
  /** Every related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceRequestOperatorFilter>;
  /** No related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceRequestOperatorFilter>;
  /** Some related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceRequestOperatorFilter>;
};

export type ServiceRequestVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestVariancePopulationAggregates = {
  __typename?: 'ServiceRequestVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceRequestVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceRequestVarianceSampleAggregates = {
  __typename?: 'ServiceRequestVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `ServiceRequest` values. */
export type ServiceRequestsConnection = {
  __typename?: 'ServiceRequestsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceRequestAggregates>;
  /** A list of edges which contains the `ServiceRequest` and cursor to aid in pagination. */
  edges: Array<ServiceRequestsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceRequestAggregates>>;
  /** A list of `ServiceRequest` objects. */
  nodes: Array<Maybe<ServiceRequest>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `ServiceRequest` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `ServiceRequest` values. */
export type ServiceRequestsConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServiceRequestsGroupBy>;
  having?: InputMaybe<ServiceRequestsHavingInput>;
};

/** A `ServiceRequest` edge in the connection. */
export type ServiceRequestsEdge = {
  __typename?: 'ServiceRequestsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `ServiceRequest` at the end of the edge. */
  node?: Maybe<ServiceRequest>;
};

/** Grouping methods for `ServiceRequest` for usage during aggregation. */
export enum ServiceRequestsGroupBy {
  AssetIds = 'ASSET_IDS',
  BlueprintId = 'BLUEPRINT_ID',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OwnerId = 'OWNER_ID'
}

export type ServiceRequestsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `ServiceRequest` aggregates. */
export type ServiceRequestsHavingInput = {
  AND?: InputMaybe<Array<ServiceRequestsHavingInput>>;
  OR?: InputMaybe<Array<ServiceRequestsHavingInput>>;
  average?: InputMaybe<ServiceRequestsHavingAverageInput>;
  distinctCount?: InputMaybe<ServiceRequestsHavingDistinctCountInput>;
  max?: InputMaybe<ServiceRequestsHavingMaxInput>;
  min?: InputMaybe<ServiceRequestsHavingMinInput>;
  stddevPopulation?: InputMaybe<ServiceRequestsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ServiceRequestsHavingStddevSampleInput>;
  sum?: InputMaybe<ServiceRequestsHavingSumInput>;
  variancePopulation?: InputMaybe<ServiceRequestsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ServiceRequestsHavingVarianceSampleInput>;
};

export type ServiceRequestsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

export type ServiceRequestsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `ServiceRequest`. */
export enum ServiceRequestsOrderBy {
  AccountByOwnerIdCreatedAtAsc = 'ACCOUNT_BY_OWNER_ID__CREATED_AT_ASC',
  AccountByOwnerIdCreatedAtDesc = 'ACCOUNT_BY_OWNER_ID__CREATED_AT_DESC',
  AccountByOwnerIdIdAsc = 'ACCOUNT_BY_OWNER_ID__ID_ASC',
  AccountByOwnerIdIdDesc = 'ACCOUNT_BY_OWNER_ID__ID_DESC',
  AccountByOwnerIdLastUpdateAtAsc = 'ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_ASC',
  AccountByOwnerIdLastUpdateAtDesc = 'ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_DESC',
  AccountByOwnerIdTotalPointsAsc = 'ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_ASC',
  AccountByOwnerIdTotalPointsDesc = 'ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_DESC',
  AssetIdsAsc = 'ASSET_IDS_ASC',
  AssetIdsDesc = 'ASSET_IDS_DESC',
  BlueprintByBlueprintIdCreatedAtAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_ASC',
  BlueprintByBlueprintIdCreatedAtDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_DESC',
  BlueprintByBlueprintIdIdAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__ID_ASC',
  BlueprintByBlueprintIdIdDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__ID_DESC',
  BlueprintByBlueprintIdOwnerIdAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_ASC',
  BlueprintByBlueprintIdOwnerIdDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_DESC',
  BlueprintIdAsc = 'BLUEPRINT_ID_ASC',
  BlueprintIdDesc = 'BLUEPRINT_ID_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OwnerIdAsc = 'OWNER_ID_ASC',
  OwnerIdDesc = 'OWNER_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ServicesAverageAssetIdsAsc = 'SERVICES_AVERAGE_ASSET_IDS_ASC',
  ServicesAverageAssetIdsDesc = 'SERVICES_AVERAGE_ASSET_IDS_DESC',
  ServicesAverageBlockRangeAsc = 'SERVICES_AVERAGE_BLOCK_RANGE_ASC',
  ServicesAverageBlockRangeDesc = 'SERVICES_AVERAGE_BLOCK_RANGE_DESC',
  ServicesAverageBlueprintIdAsc = 'SERVICES_AVERAGE_BLUEPRINT_ID_ASC',
  ServicesAverageBlueprintIdDesc = 'SERVICES_AVERAGE_BLUEPRINT_ID_DESC',
  ServicesAverageCreatedAtAsc = 'SERVICES_AVERAGE_CREATED_AT_ASC',
  ServicesAverageCreatedAtDesc = 'SERVICES_AVERAGE_CREATED_AT_DESC',
  ServicesAverageIdAsc = 'SERVICES_AVERAGE_ID_ASC',
  ServicesAverageIdDesc = 'SERVICES_AVERAGE_ID_DESC',
  ServicesAverageOwnerIdAsc = 'SERVICES_AVERAGE_OWNER_ID_ASC',
  ServicesAverageOwnerIdDesc = 'SERVICES_AVERAGE_OWNER_ID_DESC',
  ServicesAverageServiceRequestIdAsc = 'SERVICES_AVERAGE_SERVICE_REQUEST_ID_ASC',
  ServicesAverageServiceRequestIdDesc = 'SERVICES_AVERAGE_SERVICE_REQUEST_ID_DESC',
  ServicesAverageTerminatedAtAsc = 'SERVICES_AVERAGE_TERMINATED_AT_ASC',
  ServicesAverageTerminatedAtDesc = 'SERVICES_AVERAGE_TERMINATED_AT_DESC',
  ServicesByServiceRequestIdCountAsc = 'SERVICES_BY_SERVICE_REQUEST_ID__COUNT_ASC',
  ServicesByServiceRequestIdCountDesc = 'SERVICES_BY_SERVICE_REQUEST_ID__COUNT_DESC',
  ServicesCountAsc = 'SERVICES_COUNT_ASC',
  ServicesCountDesc = 'SERVICES_COUNT_DESC',
  ServicesDistinctCountAssetIdsAsc = 'SERVICES_DISTINCT_COUNT_ASSET_IDS_ASC',
  ServicesDistinctCountAssetIdsDesc = 'SERVICES_DISTINCT_COUNT_ASSET_IDS_DESC',
  ServicesDistinctCountBlockRangeAsc = 'SERVICES_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServicesDistinctCountBlockRangeDesc = 'SERVICES_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServicesDistinctCountBlueprintIdAsc = 'SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_ASC',
  ServicesDistinctCountBlueprintIdDesc = 'SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_DESC',
  ServicesDistinctCountCreatedAtAsc = 'SERVICES_DISTINCT_COUNT_CREATED_AT_ASC',
  ServicesDistinctCountCreatedAtDesc = 'SERVICES_DISTINCT_COUNT_CREATED_AT_DESC',
  ServicesDistinctCountIdAsc = 'SERVICES_DISTINCT_COUNT_ID_ASC',
  ServicesDistinctCountIdDesc = 'SERVICES_DISTINCT_COUNT_ID_DESC',
  ServicesDistinctCountOwnerIdAsc = 'SERVICES_DISTINCT_COUNT_OWNER_ID_ASC',
  ServicesDistinctCountOwnerIdDesc = 'SERVICES_DISTINCT_COUNT_OWNER_ID_DESC',
  ServicesDistinctCountServiceRequestIdAsc = 'SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC',
  ServicesDistinctCountServiceRequestIdDesc = 'SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC',
  ServicesDistinctCountTerminatedAtAsc = 'SERVICES_DISTINCT_COUNT_TERMINATED_AT_ASC',
  ServicesDistinctCountTerminatedAtDesc = 'SERVICES_DISTINCT_COUNT_TERMINATED_AT_DESC',
  ServicesMaxAssetIdsAsc = 'SERVICES_MAX_ASSET_IDS_ASC',
  ServicesMaxAssetIdsDesc = 'SERVICES_MAX_ASSET_IDS_DESC',
  ServicesMaxBlockRangeAsc = 'SERVICES_MAX_BLOCK_RANGE_ASC',
  ServicesMaxBlockRangeDesc = 'SERVICES_MAX_BLOCK_RANGE_DESC',
  ServicesMaxBlueprintIdAsc = 'SERVICES_MAX_BLUEPRINT_ID_ASC',
  ServicesMaxBlueprintIdDesc = 'SERVICES_MAX_BLUEPRINT_ID_DESC',
  ServicesMaxCreatedAtAsc = 'SERVICES_MAX_CREATED_AT_ASC',
  ServicesMaxCreatedAtDesc = 'SERVICES_MAX_CREATED_AT_DESC',
  ServicesMaxIdAsc = 'SERVICES_MAX_ID_ASC',
  ServicesMaxIdDesc = 'SERVICES_MAX_ID_DESC',
  ServicesMaxOwnerIdAsc = 'SERVICES_MAX_OWNER_ID_ASC',
  ServicesMaxOwnerIdDesc = 'SERVICES_MAX_OWNER_ID_DESC',
  ServicesMaxServiceRequestIdAsc = 'SERVICES_MAX_SERVICE_REQUEST_ID_ASC',
  ServicesMaxServiceRequestIdDesc = 'SERVICES_MAX_SERVICE_REQUEST_ID_DESC',
  ServicesMaxTerminatedAtAsc = 'SERVICES_MAX_TERMINATED_AT_ASC',
  ServicesMaxTerminatedAtDesc = 'SERVICES_MAX_TERMINATED_AT_DESC',
  ServicesMinAssetIdsAsc = 'SERVICES_MIN_ASSET_IDS_ASC',
  ServicesMinAssetIdsDesc = 'SERVICES_MIN_ASSET_IDS_DESC',
  ServicesMinBlockRangeAsc = 'SERVICES_MIN_BLOCK_RANGE_ASC',
  ServicesMinBlockRangeDesc = 'SERVICES_MIN_BLOCK_RANGE_DESC',
  ServicesMinBlueprintIdAsc = 'SERVICES_MIN_BLUEPRINT_ID_ASC',
  ServicesMinBlueprintIdDesc = 'SERVICES_MIN_BLUEPRINT_ID_DESC',
  ServicesMinCreatedAtAsc = 'SERVICES_MIN_CREATED_AT_ASC',
  ServicesMinCreatedAtDesc = 'SERVICES_MIN_CREATED_AT_DESC',
  ServicesMinIdAsc = 'SERVICES_MIN_ID_ASC',
  ServicesMinIdDesc = 'SERVICES_MIN_ID_DESC',
  ServicesMinOwnerIdAsc = 'SERVICES_MIN_OWNER_ID_ASC',
  ServicesMinOwnerIdDesc = 'SERVICES_MIN_OWNER_ID_DESC',
  ServicesMinServiceRequestIdAsc = 'SERVICES_MIN_SERVICE_REQUEST_ID_ASC',
  ServicesMinServiceRequestIdDesc = 'SERVICES_MIN_SERVICE_REQUEST_ID_DESC',
  ServicesMinTerminatedAtAsc = 'SERVICES_MIN_TERMINATED_AT_ASC',
  ServicesMinTerminatedAtDesc = 'SERVICES_MIN_TERMINATED_AT_DESC',
  ServicesStddevPopulationAssetIdsAsc = 'SERVICES_STDDEV_POPULATION_ASSET_IDS_ASC',
  ServicesStddevPopulationAssetIdsDesc = 'SERVICES_STDDEV_POPULATION_ASSET_IDS_DESC',
  ServicesStddevPopulationBlockRangeAsc = 'SERVICES_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServicesStddevPopulationBlockRangeDesc = 'SERVICES_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServicesStddevPopulationBlueprintIdAsc = 'SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_ASC',
  ServicesStddevPopulationBlueprintIdDesc = 'SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_DESC',
  ServicesStddevPopulationCreatedAtAsc = 'SERVICES_STDDEV_POPULATION_CREATED_AT_ASC',
  ServicesStddevPopulationCreatedAtDesc = 'SERVICES_STDDEV_POPULATION_CREATED_AT_DESC',
  ServicesStddevPopulationIdAsc = 'SERVICES_STDDEV_POPULATION_ID_ASC',
  ServicesStddevPopulationIdDesc = 'SERVICES_STDDEV_POPULATION_ID_DESC',
  ServicesStddevPopulationOwnerIdAsc = 'SERVICES_STDDEV_POPULATION_OWNER_ID_ASC',
  ServicesStddevPopulationOwnerIdDesc = 'SERVICES_STDDEV_POPULATION_OWNER_ID_DESC',
  ServicesStddevPopulationServiceRequestIdAsc = 'SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServicesStddevPopulationServiceRequestIdDesc = 'SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServicesStddevPopulationTerminatedAtAsc = 'SERVICES_STDDEV_POPULATION_TERMINATED_AT_ASC',
  ServicesStddevPopulationTerminatedAtDesc = 'SERVICES_STDDEV_POPULATION_TERMINATED_AT_DESC',
  ServicesStddevSampleAssetIdsAsc = 'SERVICES_STDDEV_SAMPLE_ASSET_IDS_ASC',
  ServicesStddevSampleAssetIdsDesc = 'SERVICES_STDDEV_SAMPLE_ASSET_IDS_DESC',
  ServicesStddevSampleBlockRangeAsc = 'SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServicesStddevSampleBlockRangeDesc = 'SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServicesStddevSampleBlueprintIdAsc = 'SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_ASC',
  ServicesStddevSampleBlueprintIdDesc = 'SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_DESC',
  ServicesStddevSampleCreatedAtAsc = 'SERVICES_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServicesStddevSampleCreatedAtDesc = 'SERVICES_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServicesStddevSampleIdAsc = 'SERVICES_STDDEV_SAMPLE_ID_ASC',
  ServicesStddevSampleIdDesc = 'SERVICES_STDDEV_SAMPLE_ID_DESC',
  ServicesStddevSampleOwnerIdAsc = 'SERVICES_STDDEV_SAMPLE_OWNER_ID_ASC',
  ServicesStddevSampleOwnerIdDesc = 'SERVICES_STDDEV_SAMPLE_OWNER_ID_DESC',
  ServicesStddevSampleServiceRequestIdAsc = 'SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServicesStddevSampleServiceRequestIdDesc = 'SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServicesStddevSampleTerminatedAtAsc = 'SERVICES_STDDEV_SAMPLE_TERMINATED_AT_ASC',
  ServicesStddevSampleTerminatedAtDesc = 'SERVICES_STDDEV_SAMPLE_TERMINATED_AT_DESC',
  ServicesSumAssetIdsAsc = 'SERVICES_SUM_ASSET_IDS_ASC',
  ServicesSumAssetIdsDesc = 'SERVICES_SUM_ASSET_IDS_DESC',
  ServicesSumBlockRangeAsc = 'SERVICES_SUM_BLOCK_RANGE_ASC',
  ServicesSumBlockRangeDesc = 'SERVICES_SUM_BLOCK_RANGE_DESC',
  ServicesSumBlueprintIdAsc = 'SERVICES_SUM_BLUEPRINT_ID_ASC',
  ServicesSumBlueprintIdDesc = 'SERVICES_SUM_BLUEPRINT_ID_DESC',
  ServicesSumCreatedAtAsc = 'SERVICES_SUM_CREATED_AT_ASC',
  ServicesSumCreatedAtDesc = 'SERVICES_SUM_CREATED_AT_DESC',
  ServicesSumIdAsc = 'SERVICES_SUM_ID_ASC',
  ServicesSumIdDesc = 'SERVICES_SUM_ID_DESC',
  ServicesSumOwnerIdAsc = 'SERVICES_SUM_OWNER_ID_ASC',
  ServicesSumOwnerIdDesc = 'SERVICES_SUM_OWNER_ID_DESC',
  ServicesSumServiceRequestIdAsc = 'SERVICES_SUM_SERVICE_REQUEST_ID_ASC',
  ServicesSumServiceRequestIdDesc = 'SERVICES_SUM_SERVICE_REQUEST_ID_DESC',
  ServicesSumTerminatedAtAsc = 'SERVICES_SUM_TERMINATED_AT_ASC',
  ServicesSumTerminatedAtDesc = 'SERVICES_SUM_TERMINATED_AT_DESC',
  ServicesVariancePopulationAssetIdsAsc = 'SERVICES_VARIANCE_POPULATION_ASSET_IDS_ASC',
  ServicesVariancePopulationAssetIdsDesc = 'SERVICES_VARIANCE_POPULATION_ASSET_IDS_DESC',
  ServicesVariancePopulationBlockRangeAsc = 'SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServicesVariancePopulationBlockRangeDesc = 'SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServicesVariancePopulationBlueprintIdAsc = 'SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_ASC',
  ServicesVariancePopulationBlueprintIdDesc = 'SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_DESC',
  ServicesVariancePopulationCreatedAtAsc = 'SERVICES_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServicesVariancePopulationCreatedAtDesc = 'SERVICES_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServicesVariancePopulationIdAsc = 'SERVICES_VARIANCE_POPULATION_ID_ASC',
  ServicesVariancePopulationIdDesc = 'SERVICES_VARIANCE_POPULATION_ID_DESC',
  ServicesVariancePopulationOwnerIdAsc = 'SERVICES_VARIANCE_POPULATION_OWNER_ID_ASC',
  ServicesVariancePopulationOwnerIdDesc = 'SERVICES_VARIANCE_POPULATION_OWNER_ID_DESC',
  ServicesVariancePopulationServiceRequestIdAsc = 'SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServicesVariancePopulationServiceRequestIdDesc = 'SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServicesVariancePopulationTerminatedAtAsc = 'SERVICES_VARIANCE_POPULATION_TERMINATED_AT_ASC',
  ServicesVariancePopulationTerminatedAtDesc = 'SERVICES_VARIANCE_POPULATION_TERMINATED_AT_DESC',
  ServicesVarianceSampleAssetIdsAsc = 'SERVICES_VARIANCE_SAMPLE_ASSET_IDS_ASC',
  ServicesVarianceSampleAssetIdsDesc = 'SERVICES_VARIANCE_SAMPLE_ASSET_IDS_DESC',
  ServicesVarianceSampleBlockRangeAsc = 'SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServicesVarianceSampleBlockRangeDesc = 'SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServicesVarianceSampleBlueprintIdAsc = 'SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC',
  ServicesVarianceSampleBlueprintIdDesc = 'SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC',
  ServicesVarianceSampleCreatedAtAsc = 'SERVICES_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServicesVarianceSampleCreatedAtDesc = 'SERVICES_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServicesVarianceSampleIdAsc = 'SERVICES_VARIANCE_SAMPLE_ID_ASC',
  ServicesVarianceSampleIdDesc = 'SERVICES_VARIANCE_SAMPLE_ID_DESC',
  ServicesVarianceSampleOwnerIdAsc = 'SERVICES_VARIANCE_SAMPLE_OWNER_ID_ASC',
  ServicesVarianceSampleOwnerIdDesc = 'SERVICES_VARIANCE_SAMPLE_OWNER_ID_DESC',
  ServicesVarianceSampleServiceRequestIdAsc = 'SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServicesVarianceSampleServiceRequestIdDesc = 'SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServicesVarianceSampleTerminatedAtAsc = 'SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_ASC',
  ServicesVarianceSampleTerminatedAtDesc = 'SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_DESC',
  ServiceRequestOperatorsAverageApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_ASC',
  ServiceRequestOperatorsAverageApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_DESC',
  ServiceRequestOperatorsAverageBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsAverageBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsAverageCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_ASC',
  ServiceRequestOperatorsAverageCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_DESC',
  ServiceRequestOperatorsAverageIdAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_ID_ASC',
  ServiceRequestOperatorsAverageIdDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_ID_DESC',
  ServiceRequestOperatorsAverageOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_ASC',
  ServiceRequestOperatorsAverageOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_DESC',
  ServiceRequestOperatorsAverageRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_ASC',
  ServiceRequestOperatorsAverageRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_DESC',
  ServiceRequestOperatorsAverageServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsAverageServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsByServiceRequestIdCountAsc = 'SERVICE_REQUEST_OPERATORS_BY_SERVICE_REQUEST_ID__COUNT_ASC',
  ServiceRequestOperatorsByServiceRequestIdCountDesc = 'SERVICE_REQUEST_OPERATORS_BY_SERVICE_REQUEST_ID__COUNT_DESC',
  ServiceRequestOperatorsCountAsc = 'SERVICE_REQUEST_OPERATORS_COUNT_ASC',
  ServiceRequestOperatorsCountDesc = 'SERVICE_REQUEST_OPERATORS_COUNT_DESC',
  ServiceRequestOperatorsDistinctCountApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_ASC',
  ServiceRequestOperatorsDistinctCountApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_DESC',
  ServiceRequestOperatorsDistinctCountBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsDistinctCountBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsDistinctCountCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC',
  ServiceRequestOperatorsDistinctCountCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC',
  ServiceRequestOperatorsDistinctCountIdAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_ASC',
  ServiceRequestOperatorsDistinctCountIdDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_DESC',
  ServiceRequestOperatorsDistinctCountOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  ServiceRequestOperatorsDistinctCountOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  ServiceRequestOperatorsDistinctCountRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_ASC',
  ServiceRequestOperatorsDistinctCountRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_DESC',
  ServiceRequestOperatorsDistinctCountServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsDistinctCountServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsMaxApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_ASC',
  ServiceRequestOperatorsMaxApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_DESC',
  ServiceRequestOperatorsMaxBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsMaxBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsMaxCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_ASC',
  ServiceRequestOperatorsMaxCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_DESC',
  ServiceRequestOperatorsMaxIdAsc = 'SERVICE_REQUEST_OPERATORS_MAX_ID_ASC',
  ServiceRequestOperatorsMaxIdDesc = 'SERVICE_REQUEST_OPERATORS_MAX_ID_DESC',
  ServiceRequestOperatorsMaxOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_ASC',
  ServiceRequestOperatorsMaxOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_DESC',
  ServiceRequestOperatorsMaxRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_ASC',
  ServiceRequestOperatorsMaxRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_DESC',
  ServiceRequestOperatorsMaxServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsMaxServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsMinApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_ASC',
  ServiceRequestOperatorsMinApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_DESC',
  ServiceRequestOperatorsMinBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsMinBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsMinCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_ASC',
  ServiceRequestOperatorsMinCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_DESC',
  ServiceRequestOperatorsMinIdAsc = 'SERVICE_REQUEST_OPERATORS_MIN_ID_ASC',
  ServiceRequestOperatorsMinIdDesc = 'SERVICE_REQUEST_OPERATORS_MIN_ID_DESC',
  ServiceRequestOperatorsMinOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_ASC',
  ServiceRequestOperatorsMinOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_DESC',
  ServiceRequestOperatorsMinRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_ASC',
  ServiceRequestOperatorsMinRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_DESC',
  ServiceRequestOperatorsMinServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsMinServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsStddevPopulationApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_ASC',
  ServiceRequestOperatorsStddevPopulationApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_DESC',
  ServiceRequestOperatorsStddevPopulationBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsStddevPopulationBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsStddevPopulationCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC',
  ServiceRequestOperatorsStddevPopulationCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC',
  ServiceRequestOperatorsStddevPopulationIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_ASC',
  ServiceRequestOperatorsStddevPopulationIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_DESC',
  ServiceRequestOperatorsStddevPopulationOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  ServiceRequestOperatorsStddevPopulationOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  ServiceRequestOperatorsStddevPopulationRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_ASC',
  ServiceRequestOperatorsStddevPopulationRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_DESC',
  ServiceRequestOperatorsStddevPopulationServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsStddevPopulationServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsStddevSampleApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_ASC',
  ServiceRequestOperatorsStddevSampleApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_DESC',
  ServiceRequestOperatorsStddevSampleBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsStddevSampleBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsStddevSampleCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServiceRequestOperatorsStddevSampleCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServiceRequestOperatorsStddevSampleIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_ASC',
  ServiceRequestOperatorsStddevSampleIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_DESC',
  ServiceRequestOperatorsStddevSampleOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  ServiceRequestOperatorsStddevSampleOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  ServiceRequestOperatorsStddevSampleRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_ASC',
  ServiceRequestOperatorsStddevSampleRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_DESC',
  ServiceRequestOperatorsStddevSampleServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsStddevSampleServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsSumApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_ASC',
  ServiceRequestOperatorsSumApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_DESC',
  ServiceRequestOperatorsSumBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsSumBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsSumCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_ASC',
  ServiceRequestOperatorsSumCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_DESC',
  ServiceRequestOperatorsSumIdAsc = 'SERVICE_REQUEST_OPERATORS_SUM_ID_ASC',
  ServiceRequestOperatorsSumIdDesc = 'SERVICE_REQUEST_OPERATORS_SUM_ID_DESC',
  ServiceRequestOperatorsSumOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_ASC',
  ServiceRequestOperatorsSumOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_DESC',
  ServiceRequestOperatorsSumRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_ASC',
  ServiceRequestOperatorsSumRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_DESC',
  ServiceRequestOperatorsSumServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsSumServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsVariancePopulationApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_ASC',
  ServiceRequestOperatorsVariancePopulationApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_DESC',
  ServiceRequestOperatorsVariancePopulationBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsVariancePopulationBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsVariancePopulationCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServiceRequestOperatorsVariancePopulationCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServiceRequestOperatorsVariancePopulationIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_ASC',
  ServiceRequestOperatorsVariancePopulationIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_DESC',
  ServiceRequestOperatorsVariancePopulationOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  ServiceRequestOperatorsVariancePopulationOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  ServiceRequestOperatorsVariancePopulationRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_ASC',
  ServiceRequestOperatorsVariancePopulationRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_DESC',
  ServiceRequestOperatorsVariancePopulationServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsVariancePopulationServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC',
  ServiceRequestOperatorsVarianceSampleApprovedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_ASC',
  ServiceRequestOperatorsVarianceSampleApprovedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_DESC',
  ServiceRequestOperatorsVarianceSampleBlockRangeAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServiceRequestOperatorsVarianceSampleBlockRangeDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServiceRequestOperatorsVarianceSampleCreatedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServiceRequestOperatorsVarianceSampleCreatedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServiceRequestOperatorsVarianceSampleIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_ASC',
  ServiceRequestOperatorsVarianceSampleIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_DESC',
  ServiceRequestOperatorsVarianceSampleOperatorIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  ServiceRequestOperatorsVarianceSampleOperatorIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  ServiceRequestOperatorsVarianceSampleRejectedAtAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_ASC',
  ServiceRequestOperatorsVarianceSampleRejectedAtDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_DESC',
  ServiceRequestOperatorsVarianceSampleServiceRequestIdAsc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC',
  ServiceRequestOperatorsVarianceSampleServiceRequestIdDesc = 'SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC'
}

export type ServiceStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  terminatedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceStddevPopulationAggregates = {
  __typename?: 'ServiceStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  terminatedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceStddevSampleAggregates = {
  __typename?: 'ServiceStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
  terminatedAt?: InputMaybe<BigIntFilter>;
};

export type ServiceSumAggregates = {
  __typename?: 'ServiceSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
  /** Sum of terminatedAt across the matching connection */
  terminatedAt: Scalars['BigInt']['output'];
};

/** A filter to be used against many `JobCall` object types. All fields are combined with a logical ‘and.’ */
export type ServiceToManyJobCallFilter = {
  /** Aggregates across related `JobCall` match the filter criteria. */
  aggregates?: InputMaybe<JobCallAggregatesFilter>;
  /** Every related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<JobCallFilter>;
  /** No related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<JobCallFilter>;
  /** Some related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<JobCallFilter>;
};

/** A filter to be used against many `JobResult` object types. All fields are combined with a logical ‘and.’ */
export type ServiceToManyJobResultFilter = {
  /** Aggregates across related `JobResult` match the filter criteria. */
  aggregates?: InputMaybe<JobResultAggregatesFilter>;
  /** Every related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<JobResultFilter>;
  /** No related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<JobResultFilter>;
  /** Some related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<JobResultFilter>;
};

/** A filter to be used against many `ServiceOperator` object types. All fields are combined with a logical ‘and.’ */
export type ServiceToManyServiceOperatorFilter = {
  /** Aggregates across related `ServiceOperator` match the filter criteria. */
  aggregates?: InputMaybe<ServiceOperatorAggregatesFilter>;
  /** Every related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<ServiceOperatorFilter>;
  /** No related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<ServiceOperatorFilter>;
  /** Some related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<ServiceOperatorFilter>;
};

export type ServiceVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  terminatedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceVariancePopulationAggregates = {
  __typename?: 'ServiceVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type ServiceVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  terminatedAt?: InputMaybe<BigFloatFilter>;
};

export type ServiceVarianceSampleAggregates = {
  __typename?: 'ServiceVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of terminatedAt across the matching connection */
  terminatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Service` values. */
export type ServicesConnection = {
  __typename?: 'ServicesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<ServiceAggregates>;
  /** A list of edges which contains the `Service` and cursor to aid in pagination. */
  edges: Array<ServicesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<ServiceAggregates>>;
  /** A list of `Service` objects. */
  nodes: Array<Maybe<Service>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Service` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Service` values. */
export type ServicesConnectionGroupedAggregatesArgs = {
  groupBy: Array<ServicesGroupBy>;
  having?: InputMaybe<ServicesHavingInput>;
};

/** A `Service` edge in the connection. */
export type ServicesEdge = {
  __typename?: 'ServicesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Service` at the end of the edge. */
  node?: Maybe<Service>;
};

/** Grouping methods for `Service` for usage during aggregation. */
export enum ServicesGroupBy {
  AssetIds = 'ASSET_IDS',
  BlueprintId = 'BLUEPRINT_ID',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OwnerId = 'OWNER_ID',
  ServiceRequestId = 'SERVICE_REQUEST_ID',
  TerminatedAt = 'TERMINATED_AT'
}

export type ServicesHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

export type ServicesHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Service` aggregates. */
export type ServicesHavingInput = {
  AND?: InputMaybe<Array<ServicesHavingInput>>;
  OR?: InputMaybe<Array<ServicesHavingInput>>;
  average?: InputMaybe<ServicesHavingAverageInput>;
  distinctCount?: InputMaybe<ServicesHavingDistinctCountInput>;
  max?: InputMaybe<ServicesHavingMaxInput>;
  min?: InputMaybe<ServicesHavingMinInput>;
  stddevPopulation?: InputMaybe<ServicesHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<ServicesHavingStddevSampleInput>;
  sum?: InputMaybe<ServicesHavingSumInput>;
  variancePopulation?: InputMaybe<ServicesHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<ServicesHavingVarianceSampleInput>;
};

export type ServicesHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

export type ServicesHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

export type ServicesHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

export type ServicesHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

export type ServicesHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

export type ServicesHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

export type ServicesHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  terminatedAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `Service`. */
export enum ServicesOrderBy {
  AccountByOwnerIdCreatedAtAsc = 'ACCOUNT_BY_OWNER_ID__CREATED_AT_ASC',
  AccountByOwnerIdCreatedAtDesc = 'ACCOUNT_BY_OWNER_ID__CREATED_AT_DESC',
  AccountByOwnerIdIdAsc = 'ACCOUNT_BY_OWNER_ID__ID_ASC',
  AccountByOwnerIdIdDesc = 'ACCOUNT_BY_OWNER_ID__ID_DESC',
  AccountByOwnerIdLastUpdateAtAsc = 'ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_ASC',
  AccountByOwnerIdLastUpdateAtDesc = 'ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_DESC',
  AccountByOwnerIdTotalPointsAsc = 'ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_ASC',
  AccountByOwnerIdTotalPointsDesc = 'ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_DESC',
  AssetIdsAsc = 'ASSET_IDS_ASC',
  AssetIdsDesc = 'ASSET_IDS_DESC',
  BlueprintByBlueprintIdCreatedAtAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_ASC',
  BlueprintByBlueprintIdCreatedAtDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_DESC',
  BlueprintByBlueprintIdIdAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__ID_ASC',
  BlueprintByBlueprintIdIdDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__ID_DESC',
  BlueprintByBlueprintIdOwnerIdAsc = 'BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_ASC',
  BlueprintByBlueprintIdOwnerIdDesc = 'BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_DESC',
  BlueprintIdAsc = 'BLUEPRINT_ID_ASC',
  BlueprintIdDesc = 'BLUEPRINT_ID_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  JobCallsAverageBlockRangeAsc = 'JOB_CALLS_AVERAGE_BLOCK_RANGE_ASC',
  JobCallsAverageBlockRangeDesc = 'JOB_CALLS_AVERAGE_BLOCK_RANGE_DESC',
  JobCallsAverageCallerIdAsc = 'JOB_CALLS_AVERAGE_CALLER_ID_ASC',
  JobCallsAverageCallerIdDesc = 'JOB_CALLS_AVERAGE_CALLER_ID_DESC',
  JobCallsAverageCreatedAtAsc = 'JOB_CALLS_AVERAGE_CREATED_AT_ASC',
  JobCallsAverageCreatedAtDesc = 'JOB_CALLS_AVERAGE_CREATED_AT_DESC',
  JobCallsAverageIdAsc = 'JOB_CALLS_AVERAGE_ID_ASC',
  JobCallsAverageIdDesc = 'JOB_CALLS_AVERAGE_ID_DESC',
  JobCallsAverageJobIdAsc = 'JOB_CALLS_AVERAGE_JOB_ID_ASC',
  JobCallsAverageJobIdDesc = 'JOB_CALLS_AVERAGE_JOB_ID_DESC',
  JobCallsAverageServiceIdAsc = 'JOB_CALLS_AVERAGE_SERVICE_ID_ASC',
  JobCallsAverageServiceIdDesc = 'JOB_CALLS_AVERAGE_SERVICE_ID_DESC',
  JobCallsByServiceIdCountAsc = 'JOB_CALLS_BY_SERVICE_ID__COUNT_ASC',
  JobCallsByServiceIdCountDesc = 'JOB_CALLS_BY_SERVICE_ID__COUNT_DESC',
  JobCallsCountAsc = 'JOB_CALLS_COUNT_ASC',
  JobCallsCountDesc = 'JOB_CALLS_COUNT_DESC',
  JobCallsDistinctCountBlockRangeAsc = 'JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  JobCallsDistinctCountBlockRangeDesc = 'JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  JobCallsDistinctCountCallerIdAsc = 'JOB_CALLS_DISTINCT_COUNT_CALLER_ID_ASC',
  JobCallsDistinctCountCallerIdDesc = 'JOB_CALLS_DISTINCT_COUNT_CALLER_ID_DESC',
  JobCallsDistinctCountCreatedAtAsc = 'JOB_CALLS_DISTINCT_COUNT_CREATED_AT_ASC',
  JobCallsDistinctCountCreatedAtDesc = 'JOB_CALLS_DISTINCT_COUNT_CREATED_AT_DESC',
  JobCallsDistinctCountIdAsc = 'JOB_CALLS_DISTINCT_COUNT_ID_ASC',
  JobCallsDistinctCountIdDesc = 'JOB_CALLS_DISTINCT_COUNT_ID_DESC',
  JobCallsDistinctCountJobIdAsc = 'JOB_CALLS_DISTINCT_COUNT_JOB_ID_ASC',
  JobCallsDistinctCountJobIdDesc = 'JOB_CALLS_DISTINCT_COUNT_JOB_ID_DESC',
  JobCallsDistinctCountServiceIdAsc = 'JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_ASC',
  JobCallsDistinctCountServiceIdDesc = 'JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_DESC',
  JobCallsMaxBlockRangeAsc = 'JOB_CALLS_MAX_BLOCK_RANGE_ASC',
  JobCallsMaxBlockRangeDesc = 'JOB_CALLS_MAX_BLOCK_RANGE_DESC',
  JobCallsMaxCallerIdAsc = 'JOB_CALLS_MAX_CALLER_ID_ASC',
  JobCallsMaxCallerIdDesc = 'JOB_CALLS_MAX_CALLER_ID_DESC',
  JobCallsMaxCreatedAtAsc = 'JOB_CALLS_MAX_CREATED_AT_ASC',
  JobCallsMaxCreatedAtDesc = 'JOB_CALLS_MAX_CREATED_AT_DESC',
  JobCallsMaxIdAsc = 'JOB_CALLS_MAX_ID_ASC',
  JobCallsMaxIdDesc = 'JOB_CALLS_MAX_ID_DESC',
  JobCallsMaxJobIdAsc = 'JOB_CALLS_MAX_JOB_ID_ASC',
  JobCallsMaxJobIdDesc = 'JOB_CALLS_MAX_JOB_ID_DESC',
  JobCallsMaxServiceIdAsc = 'JOB_CALLS_MAX_SERVICE_ID_ASC',
  JobCallsMaxServiceIdDesc = 'JOB_CALLS_MAX_SERVICE_ID_DESC',
  JobCallsMinBlockRangeAsc = 'JOB_CALLS_MIN_BLOCK_RANGE_ASC',
  JobCallsMinBlockRangeDesc = 'JOB_CALLS_MIN_BLOCK_RANGE_DESC',
  JobCallsMinCallerIdAsc = 'JOB_CALLS_MIN_CALLER_ID_ASC',
  JobCallsMinCallerIdDesc = 'JOB_CALLS_MIN_CALLER_ID_DESC',
  JobCallsMinCreatedAtAsc = 'JOB_CALLS_MIN_CREATED_AT_ASC',
  JobCallsMinCreatedAtDesc = 'JOB_CALLS_MIN_CREATED_AT_DESC',
  JobCallsMinIdAsc = 'JOB_CALLS_MIN_ID_ASC',
  JobCallsMinIdDesc = 'JOB_CALLS_MIN_ID_DESC',
  JobCallsMinJobIdAsc = 'JOB_CALLS_MIN_JOB_ID_ASC',
  JobCallsMinJobIdDesc = 'JOB_CALLS_MIN_JOB_ID_DESC',
  JobCallsMinServiceIdAsc = 'JOB_CALLS_MIN_SERVICE_ID_ASC',
  JobCallsMinServiceIdDesc = 'JOB_CALLS_MIN_SERVICE_ID_DESC',
  JobCallsStddevPopulationBlockRangeAsc = 'JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  JobCallsStddevPopulationBlockRangeDesc = 'JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  JobCallsStddevPopulationCallerIdAsc = 'JOB_CALLS_STDDEV_POPULATION_CALLER_ID_ASC',
  JobCallsStddevPopulationCallerIdDesc = 'JOB_CALLS_STDDEV_POPULATION_CALLER_ID_DESC',
  JobCallsStddevPopulationCreatedAtAsc = 'JOB_CALLS_STDDEV_POPULATION_CREATED_AT_ASC',
  JobCallsStddevPopulationCreatedAtDesc = 'JOB_CALLS_STDDEV_POPULATION_CREATED_AT_DESC',
  JobCallsStddevPopulationIdAsc = 'JOB_CALLS_STDDEV_POPULATION_ID_ASC',
  JobCallsStddevPopulationIdDesc = 'JOB_CALLS_STDDEV_POPULATION_ID_DESC',
  JobCallsStddevPopulationJobIdAsc = 'JOB_CALLS_STDDEV_POPULATION_JOB_ID_ASC',
  JobCallsStddevPopulationJobIdDesc = 'JOB_CALLS_STDDEV_POPULATION_JOB_ID_DESC',
  JobCallsStddevPopulationServiceIdAsc = 'JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_ASC',
  JobCallsStddevPopulationServiceIdDesc = 'JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_DESC',
  JobCallsStddevSampleBlockRangeAsc = 'JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  JobCallsStddevSampleBlockRangeDesc = 'JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  JobCallsStddevSampleCallerIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_ASC',
  JobCallsStddevSampleCallerIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_DESC',
  JobCallsStddevSampleCreatedAtAsc = 'JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_ASC',
  JobCallsStddevSampleCreatedAtDesc = 'JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_DESC',
  JobCallsStddevSampleIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_ID_ASC',
  JobCallsStddevSampleIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_ID_DESC',
  JobCallsStddevSampleJobIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_JOB_ID_ASC',
  JobCallsStddevSampleJobIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_JOB_ID_DESC',
  JobCallsStddevSampleServiceIdAsc = 'JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_ASC',
  JobCallsStddevSampleServiceIdDesc = 'JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_DESC',
  JobCallsSumBlockRangeAsc = 'JOB_CALLS_SUM_BLOCK_RANGE_ASC',
  JobCallsSumBlockRangeDesc = 'JOB_CALLS_SUM_BLOCK_RANGE_DESC',
  JobCallsSumCallerIdAsc = 'JOB_CALLS_SUM_CALLER_ID_ASC',
  JobCallsSumCallerIdDesc = 'JOB_CALLS_SUM_CALLER_ID_DESC',
  JobCallsSumCreatedAtAsc = 'JOB_CALLS_SUM_CREATED_AT_ASC',
  JobCallsSumCreatedAtDesc = 'JOB_CALLS_SUM_CREATED_AT_DESC',
  JobCallsSumIdAsc = 'JOB_CALLS_SUM_ID_ASC',
  JobCallsSumIdDesc = 'JOB_CALLS_SUM_ID_DESC',
  JobCallsSumJobIdAsc = 'JOB_CALLS_SUM_JOB_ID_ASC',
  JobCallsSumJobIdDesc = 'JOB_CALLS_SUM_JOB_ID_DESC',
  JobCallsSumServiceIdAsc = 'JOB_CALLS_SUM_SERVICE_ID_ASC',
  JobCallsSumServiceIdDesc = 'JOB_CALLS_SUM_SERVICE_ID_DESC',
  JobCallsVariancePopulationBlockRangeAsc = 'JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  JobCallsVariancePopulationBlockRangeDesc = 'JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  JobCallsVariancePopulationCallerIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_ASC',
  JobCallsVariancePopulationCallerIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_DESC',
  JobCallsVariancePopulationCreatedAtAsc = 'JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_ASC',
  JobCallsVariancePopulationCreatedAtDesc = 'JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_DESC',
  JobCallsVariancePopulationIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_ID_ASC',
  JobCallsVariancePopulationIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_ID_DESC',
  JobCallsVariancePopulationJobIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_JOB_ID_ASC',
  JobCallsVariancePopulationJobIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_JOB_ID_DESC',
  JobCallsVariancePopulationServiceIdAsc = 'JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_ASC',
  JobCallsVariancePopulationServiceIdDesc = 'JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_DESC',
  JobCallsVarianceSampleBlockRangeAsc = 'JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  JobCallsVarianceSampleBlockRangeDesc = 'JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  JobCallsVarianceSampleCallerIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_ASC',
  JobCallsVarianceSampleCallerIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_DESC',
  JobCallsVarianceSampleCreatedAtAsc = 'JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  JobCallsVarianceSampleCreatedAtDesc = 'JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  JobCallsVarianceSampleIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_ID_ASC',
  JobCallsVarianceSampleIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_ID_DESC',
  JobCallsVarianceSampleJobIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_ASC',
  JobCallsVarianceSampleJobIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_DESC',
  JobCallsVarianceSampleServiceIdAsc = 'JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_ASC',
  JobCallsVarianceSampleServiceIdDesc = 'JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_DESC',
  JobResultsAverageBlockRangeAsc = 'JOB_RESULTS_AVERAGE_BLOCK_RANGE_ASC',
  JobResultsAverageBlockRangeDesc = 'JOB_RESULTS_AVERAGE_BLOCK_RANGE_DESC',
  JobResultsAverageCreatedAtAsc = 'JOB_RESULTS_AVERAGE_CREATED_AT_ASC',
  JobResultsAverageCreatedAtDesc = 'JOB_RESULTS_AVERAGE_CREATED_AT_DESC',
  JobResultsAverageIdAsc = 'JOB_RESULTS_AVERAGE_ID_ASC',
  JobResultsAverageIdDesc = 'JOB_RESULTS_AVERAGE_ID_DESC',
  JobResultsAverageJobCallIdAsc = 'JOB_RESULTS_AVERAGE_JOB_CALL_ID_ASC',
  JobResultsAverageJobCallIdDesc = 'JOB_RESULTS_AVERAGE_JOB_CALL_ID_DESC',
  JobResultsAverageOperatorIdAsc = 'JOB_RESULTS_AVERAGE_OPERATOR_ID_ASC',
  JobResultsAverageOperatorIdDesc = 'JOB_RESULTS_AVERAGE_OPERATOR_ID_DESC',
  JobResultsAverageServiceIdAsc = 'JOB_RESULTS_AVERAGE_SERVICE_ID_ASC',
  JobResultsAverageServiceIdDesc = 'JOB_RESULTS_AVERAGE_SERVICE_ID_DESC',
  JobResultsByServiceIdCountAsc = 'JOB_RESULTS_BY_SERVICE_ID__COUNT_ASC',
  JobResultsByServiceIdCountDesc = 'JOB_RESULTS_BY_SERVICE_ID__COUNT_DESC',
  JobResultsCountAsc = 'JOB_RESULTS_COUNT_ASC',
  JobResultsCountDesc = 'JOB_RESULTS_COUNT_DESC',
  JobResultsDistinctCountBlockRangeAsc = 'JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  JobResultsDistinctCountBlockRangeDesc = 'JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  JobResultsDistinctCountCreatedAtAsc = 'JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_ASC',
  JobResultsDistinctCountCreatedAtDesc = 'JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_DESC',
  JobResultsDistinctCountIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_ID_ASC',
  JobResultsDistinctCountIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_ID_DESC',
  JobResultsDistinctCountJobCallIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_ASC',
  JobResultsDistinctCountJobCallIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_DESC',
  JobResultsDistinctCountOperatorIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  JobResultsDistinctCountOperatorIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  JobResultsDistinctCountServiceIdAsc = 'JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_ASC',
  JobResultsDistinctCountServiceIdDesc = 'JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_DESC',
  JobResultsMaxBlockRangeAsc = 'JOB_RESULTS_MAX_BLOCK_RANGE_ASC',
  JobResultsMaxBlockRangeDesc = 'JOB_RESULTS_MAX_BLOCK_RANGE_DESC',
  JobResultsMaxCreatedAtAsc = 'JOB_RESULTS_MAX_CREATED_AT_ASC',
  JobResultsMaxCreatedAtDesc = 'JOB_RESULTS_MAX_CREATED_AT_DESC',
  JobResultsMaxIdAsc = 'JOB_RESULTS_MAX_ID_ASC',
  JobResultsMaxIdDesc = 'JOB_RESULTS_MAX_ID_DESC',
  JobResultsMaxJobCallIdAsc = 'JOB_RESULTS_MAX_JOB_CALL_ID_ASC',
  JobResultsMaxJobCallIdDesc = 'JOB_RESULTS_MAX_JOB_CALL_ID_DESC',
  JobResultsMaxOperatorIdAsc = 'JOB_RESULTS_MAX_OPERATOR_ID_ASC',
  JobResultsMaxOperatorIdDesc = 'JOB_RESULTS_MAX_OPERATOR_ID_DESC',
  JobResultsMaxServiceIdAsc = 'JOB_RESULTS_MAX_SERVICE_ID_ASC',
  JobResultsMaxServiceIdDesc = 'JOB_RESULTS_MAX_SERVICE_ID_DESC',
  JobResultsMinBlockRangeAsc = 'JOB_RESULTS_MIN_BLOCK_RANGE_ASC',
  JobResultsMinBlockRangeDesc = 'JOB_RESULTS_MIN_BLOCK_RANGE_DESC',
  JobResultsMinCreatedAtAsc = 'JOB_RESULTS_MIN_CREATED_AT_ASC',
  JobResultsMinCreatedAtDesc = 'JOB_RESULTS_MIN_CREATED_AT_DESC',
  JobResultsMinIdAsc = 'JOB_RESULTS_MIN_ID_ASC',
  JobResultsMinIdDesc = 'JOB_RESULTS_MIN_ID_DESC',
  JobResultsMinJobCallIdAsc = 'JOB_RESULTS_MIN_JOB_CALL_ID_ASC',
  JobResultsMinJobCallIdDesc = 'JOB_RESULTS_MIN_JOB_CALL_ID_DESC',
  JobResultsMinOperatorIdAsc = 'JOB_RESULTS_MIN_OPERATOR_ID_ASC',
  JobResultsMinOperatorIdDesc = 'JOB_RESULTS_MIN_OPERATOR_ID_DESC',
  JobResultsMinServiceIdAsc = 'JOB_RESULTS_MIN_SERVICE_ID_ASC',
  JobResultsMinServiceIdDesc = 'JOB_RESULTS_MIN_SERVICE_ID_DESC',
  JobResultsStddevPopulationBlockRangeAsc = 'JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  JobResultsStddevPopulationBlockRangeDesc = 'JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  JobResultsStddevPopulationCreatedAtAsc = 'JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_ASC',
  JobResultsStddevPopulationCreatedAtDesc = 'JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_DESC',
  JobResultsStddevPopulationIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_ID_ASC',
  JobResultsStddevPopulationIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_ID_DESC',
  JobResultsStddevPopulationJobCallIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_ASC',
  JobResultsStddevPopulationJobCallIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_DESC',
  JobResultsStddevPopulationOperatorIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  JobResultsStddevPopulationOperatorIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  JobResultsStddevPopulationServiceIdAsc = 'JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_ASC',
  JobResultsStddevPopulationServiceIdDesc = 'JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_DESC',
  JobResultsStddevSampleBlockRangeAsc = 'JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  JobResultsStddevSampleBlockRangeDesc = 'JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  JobResultsStddevSampleCreatedAtAsc = 'JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_ASC',
  JobResultsStddevSampleCreatedAtDesc = 'JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_DESC',
  JobResultsStddevSampleIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_ID_ASC',
  JobResultsStddevSampleIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_ID_DESC',
  JobResultsStddevSampleJobCallIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_ASC',
  JobResultsStddevSampleJobCallIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_DESC',
  JobResultsStddevSampleOperatorIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  JobResultsStddevSampleOperatorIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  JobResultsStddevSampleServiceIdAsc = 'JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_ASC',
  JobResultsStddevSampleServiceIdDesc = 'JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_DESC',
  JobResultsSumBlockRangeAsc = 'JOB_RESULTS_SUM_BLOCK_RANGE_ASC',
  JobResultsSumBlockRangeDesc = 'JOB_RESULTS_SUM_BLOCK_RANGE_DESC',
  JobResultsSumCreatedAtAsc = 'JOB_RESULTS_SUM_CREATED_AT_ASC',
  JobResultsSumCreatedAtDesc = 'JOB_RESULTS_SUM_CREATED_AT_DESC',
  JobResultsSumIdAsc = 'JOB_RESULTS_SUM_ID_ASC',
  JobResultsSumIdDesc = 'JOB_RESULTS_SUM_ID_DESC',
  JobResultsSumJobCallIdAsc = 'JOB_RESULTS_SUM_JOB_CALL_ID_ASC',
  JobResultsSumJobCallIdDesc = 'JOB_RESULTS_SUM_JOB_CALL_ID_DESC',
  JobResultsSumOperatorIdAsc = 'JOB_RESULTS_SUM_OPERATOR_ID_ASC',
  JobResultsSumOperatorIdDesc = 'JOB_RESULTS_SUM_OPERATOR_ID_DESC',
  JobResultsSumServiceIdAsc = 'JOB_RESULTS_SUM_SERVICE_ID_ASC',
  JobResultsSumServiceIdDesc = 'JOB_RESULTS_SUM_SERVICE_ID_DESC',
  JobResultsVariancePopulationBlockRangeAsc = 'JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  JobResultsVariancePopulationBlockRangeDesc = 'JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  JobResultsVariancePopulationCreatedAtAsc = 'JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_ASC',
  JobResultsVariancePopulationCreatedAtDesc = 'JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_DESC',
  JobResultsVariancePopulationIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_ID_ASC',
  JobResultsVariancePopulationIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_ID_DESC',
  JobResultsVariancePopulationJobCallIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_ASC',
  JobResultsVariancePopulationJobCallIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_DESC',
  JobResultsVariancePopulationOperatorIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  JobResultsVariancePopulationOperatorIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  JobResultsVariancePopulationServiceIdAsc = 'JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_ASC',
  JobResultsVariancePopulationServiceIdDesc = 'JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_DESC',
  JobResultsVarianceSampleBlockRangeAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  JobResultsVarianceSampleBlockRangeDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  JobResultsVarianceSampleCreatedAtAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  JobResultsVarianceSampleCreatedAtDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  JobResultsVarianceSampleIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_ID_ASC',
  JobResultsVarianceSampleIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_ID_DESC',
  JobResultsVarianceSampleJobCallIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_ASC',
  JobResultsVarianceSampleJobCallIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_DESC',
  JobResultsVarianceSampleOperatorIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  JobResultsVarianceSampleOperatorIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  JobResultsVarianceSampleServiceIdAsc = 'JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_ASC',
  JobResultsVarianceSampleServiceIdDesc = 'JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_DESC',
  Natural = 'NATURAL',
  OwnerIdAsc = 'OWNER_ID_ASC',
  OwnerIdDesc = 'OWNER_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  ServiceOperatorsAverageBlockRangeAsc = 'SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_ASC',
  ServiceOperatorsAverageBlockRangeDesc = 'SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_DESC',
  ServiceOperatorsAverageCreatedAtAsc = 'SERVICE_OPERATORS_AVERAGE_CREATED_AT_ASC',
  ServiceOperatorsAverageCreatedAtDesc = 'SERVICE_OPERATORS_AVERAGE_CREATED_AT_DESC',
  ServiceOperatorsAverageIdAsc = 'SERVICE_OPERATORS_AVERAGE_ID_ASC',
  ServiceOperatorsAverageIdDesc = 'SERVICE_OPERATORS_AVERAGE_ID_DESC',
  ServiceOperatorsAverageOperatorIdAsc = 'SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_ASC',
  ServiceOperatorsAverageOperatorIdDesc = 'SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_DESC',
  ServiceOperatorsAverageServiceIdAsc = 'SERVICE_OPERATORS_AVERAGE_SERVICE_ID_ASC',
  ServiceOperatorsAverageServiceIdDesc = 'SERVICE_OPERATORS_AVERAGE_SERVICE_ID_DESC',
  ServiceOperatorsByServiceIdCountAsc = 'SERVICE_OPERATORS_BY_SERVICE_ID__COUNT_ASC',
  ServiceOperatorsByServiceIdCountDesc = 'SERVICE_OPERATORS_BY_SERVICE_ID__COUNT_DESC',
  ServiceOperatorsCountAsc = 'SERVICE_OPERATORS_COUNT_ASC',
  ServiceOperatorsCountDesc = 'SERVICE_OPERATORS_COUNT_DESC',
  ServiceOperatorsDistinctCountBlockRangeAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC',
  ServiceOperatorsDistinctCountBlockRangeDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC',
  ServiceOperatorsDistinctCountCreatedAtAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC',
  ServiceOperatorsDistinctCountCreatedAtDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC',
  ServiceOperatorsDistinctCountIdAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_ID_ASC',
  ServiceOperatorsDistinctCountIdDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_ID_DESC',
  ServiceOperatorsDistinctCountOperatorIdAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC',
  ServiceOperatorsDistinctCountOperatorIdDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC',
  ServiceOperatorsDistinctCountServiceIdAsc = 'SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_ASC',
  ServiceOperatorsDistinctCountServiceIdDesc = 'SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_DESC',
  ServiceOperatorsMaxBlockRangeAsc = 'SERVICE_OPERATORS_MAX_BLOCK_RANGE_ASC',
  ServiceOperatorsMaxBlockRangeDesc = 'SERVICE_OPERATORS_MAX_BLOCK_RANGE_DESC',
  ServiceOperatorsMaxCreatedAtAsc = 'SERVICE_OPERATORS_MAX_CREATED_AT_ASC',
  ServiceOperatorsMaxCreatedAtDesc = 'SERVICE_OPERATORS_MAX_CREATED_AT_DESC',
  ServiceOperatorsMaxIdAsc = 'SERVICE_OPERATORS_MAX_ID_ASC',
  ServiceOperatorsMaxIdDesc = 'SERVICE_OPERATORS_MAX_ID_DESC',
  ServiceOperatorsMaxOperatorIdAsc = 'SERVICE_OPERATORS_MAX_OPERATOR_ID_ASC',
  ServiceOperatorsMaxOperatorIdDesc = 'SERVICE_OPERATORS_MAX_OPERATOR_ID_DESC',
  ServiceOperatorsMaxServiceIdAsc = 'SERVICE_OPERATORS_MAX_SERVICE_ID_ASC',
  ServiceOperatorsMaxServiceIdDesc = 'SERVICE_OPERATORS_MAX_SERVICE_ID_DESC',
  ServiceOperatorsMinBlockRangeAsc = 'SERVICE_OPERATORS_MIN_BLOCK_RANGE_ASC',
  ServiceOperatorsMinBlockRangeDesc = 'SERVICE_OPERATORS_MIN_BLOCK_RANGE_DESC',
  ServiceOperatorsMinCreatedAtAsc = 'SERVICE_OPERATORS_MIN_CREATED_AT_ASC',
  ServiceOperatorsMinCreatedAtDesc = 'SERVICE_OPERATORS_MIN_CREATED_AT_DESC',
  ServiceOperatorsMinIdAsc = 'SERVICE_OPERATORS_MIN_ID_ASC',
  ServiceOperatorsMinIdDesc = 'SERVICE_OPERATORS_MIN_ID_DESC',
  ServiceOperatorsMinOperatorIdAsc = 'SERVICE_OPERATORS_MIN_OPERATOR_ID_ASC',
  ServiceOperatorsMinOperatorIdDesc = 'SERVICE_OPERATORS_MIN_OPERATOR_ID_DESC',
  ServiceOperatorsMinServiceIdAsc = 'SERVICE_OPERATORS_MIN_SERVICE_ID_ASC',
  ServiceOperatorsMinServiceIdDesc = 'SERVICE_OPERATORS_MIN_SERVICE_ID_DESC',
  ServiceOperatorsStddevPopulationBlockRangeAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC',
  ServiceOperatorsStddevPopulationBlockRangeDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC',
  ServiceOperatorsStddevPopulationCreatedAtAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC',
  ServiceOperatorsStddevPopulationCreatedAtDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC',
  ServiceOperatorsStddevPopulationIdAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_ID_ASC',
  ServiceOperatorsStddevPopulationIdDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_ID_DESC',
  ServiceOperatorsStddevPopulationOperatorIdAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC',
  ServiceOperatorsStddevPopulationOperatorIdDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC',
  ServiceOperatorsStddevPopulationServiceIdAsc = 'SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_ASC',
  ServiceOperatorsStddevPopulationServiceIdDesc = 'SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_DESC',
  ServiceOperatorsStddevSampleBlockRangeAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC',
  ServiceOperatorsStddevSampleBlockRangeDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC',
  ServiceOperatorsStddevSampleCreatedAtAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC',
  ServiceOperatorsStddevSampleCreatedAtDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC',
  ServiceOperatorsStddevSampleIdAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_ID_ASC',
  ServiceOperatorsStddevSampleIdDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_ID_DESC',
  ServiceOperatorsStddevSampleOperatorIdAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC',
  ServiceOperatorsStddevSampleOperatorIdDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC',
  ServiceOperatorsStddevSampleServiceIdAsc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_ASC',
  ServiceOperatorsStddevSampleServiceIdDesc = 'SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_DESC',
  ServiceOperatorsSumBlockRangeAsc = 'SERVICE_OPERATORS_SUM_BLOCK_RANGE_ASC',
  ServiceOperatorsSumBlockRangeDesc = 'SERVICE_OPERATORS_SUM_BLOCK_RANGE_DESC',
  ServiceOperatorsSumCreatedAtAsc = 'SERVICE_OPERATORS_SUM_CREATED_AT_ASC',
  ServiceOperatorsSumCreatedAtDesc = 'SERVICE_OPERATORS_SUM_CREATED_AT_DESC',
  ServiceOperatorsSumIdAsc = 'SERVICE_OPERATORS_SUM_ID_ASC',
  ServiceOperatorsSumIdDesc = 'SERVICE_OPERATORS_SUM_ID_DESC',
  ServiceOperatorsSumOperatorIdAsc = 'SERVICE_OPERATORS_SUM_OPERATOR_ID_ASC',
  ServiceOperatorsSumOperatorIdDesc = 'SERVICE_OPERATORS_SUM_OPERATOR_ID_DESC',
  ServiceOperatorsSumServiceIdAsc = 'SERVICE_OPERATORS_SUM_SERVICE_ID_ASC',
  ServiceOperatorsSumServiceIdDesc = 'SERVICE_OPERATORS_SUM_SERVICE_ID_DESC',
  ServiceOperatorsVariancePopulationBlockRangeAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC',
  ServiceOperatorsVariancePopulationBlockRangeDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC',
  ServiceOperatorsVariancePopulationCreatedAtAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC',
  ServiceOperatorsVariancePopulationCreatedAtDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC',
  ServiceOperatorsVariancePopulationIdAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_ID_ASC',
  ServiceOperatorsVariancePopulationIdDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_ID_DESC',
  ServiceOperatorsVariancePopulationOperatorIdAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC',
  ServiceOperatorsVariancePopulationOperatorIdDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC',
  ServiceOperatorsVariancePopulationServiceIdAsc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_ASC',
  ServiceOperatorsVariancePopulationServiceIdDesc = 'SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_DESC',
  ServiceOperatorsVarianceSampleBlockRangeAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC',
  ServiceOperatorsVarianceSampleBlockRangeDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC',
  ServiceOperatorsVarianceSampleCreatedAtAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC',
  ServiceOperatorsVarianceSampleCreatedAtDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC',
  ServiceOperatorsVarianceSampleIdAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_ASC',
  ServiceOperatorsVarianceSampleIdDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_DESC',
  ServiceOperatorsVarianceSampleOperatorIdAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC',
  ServiceOperatorsVarianceSampleOperatorIdDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC',
  ServiceOperatorsVarianceSampleServiceIdAsc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_ASC',
  ServiceOperatorsVarianceSampleServiceIdDesc = 'SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_DESC',
  ServiceRequestByServiceRequestIdAssetIdsAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_ASC',
  ServiceRequestByServiceRequestIdAssetIdsDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_DESC',
  ServiceRequestByServiceRequestIdBlueprintIdAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_ASC',
  ServiceRequestByServiceRequestIdBlueprintIdDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_DESC',
  ServiceRequestByServiceRequestIdCreatedAtAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_ASC',
  ServiceRequestByServiceRequestIdCreatedAtDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_DESC',
  ServiceRequestByServiceRequestIdIdAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_ASC',
  ServiceRequestByServiceRequestIdIdDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_DESC',
  ServiceRequestByServiceRequestIdOwnerIdAsc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_ASC',
  ServiceRequestByServiceRequestIdOwnerIdDesc = 'SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_DESC',
  ServiceRequestIdAsc = 'SERVICE_REQUEST_ID_ASC',
  ServiceRequestIdDesc = 'SERVICE_REQUEST_ID_DESC',
  TerminatedAtAsc = 'TERMINATED_AT_ASC',
  TerminatedAtDesc = 'TERMINATED_AT_DESC'
}

export type Session = Node & {
  __typename?: 'Session';
  /** Session index as ID */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** List of operators active in this session */
  operators: Scalars['JSON']['output'];
  /** Block number when session started */
  startBlock: Scalars['Int']['output'];
  /** Timestamp when session started */
  timestamp: Scalars['Datetime']['output'];
  /** List of validators in this session */
  validators: Scalars['JSON']['output'];
};


export type SessionOperatorsArgs = {
  distinct?: InputMaybe<Array<InputMaybe<Operators_Distinct_Enum>>>;
};

export type SessionAggregates = {
  __typename?: 'SessionAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<SessionAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<SessionDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<SessionMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<SessionMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<SessionStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<SessionStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<SessionSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<SessionVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<SessionVarianceSampleAggregates>;
};

export type SessionAverageAggregates = {
  __typename?: 'SessionAverageAggregates';
  /** Mean average of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type SessionDistinctCountAggregates = {
  __typename?: 'SessionDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operators across the matching connection */
  operators?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of validators across the matching connection */
  validators?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Session` object types. All fields are combined with a logical ‘and.’ */
export type SessionFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<SessionFilter>>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<SessionFilter>;
  /** Filter by the object’s `operators` field. */
  operators?: InputMaybe<JsonFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<SessionFilter>>;
  /** Filter by the object’s `startBlock` field. */
  startBlock?: InputMaybe<IntFilter>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `validators` field. */
  validators?: InputMaybe<JsonFilter>;
};

export type SessionMaxAggregates = {
  __typename?: 'SessionMaxAggregates';
  /** Maximum of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['Int']['output']>;
};

export type SessionMinAggregates = {
  __typename?: 'SessionMinAggregates';
  /** Minimum of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['Int']['output']>;
};

export type SessionStddevPopulationAggregates = {
  __typename?: 'SessionStddevPopulationAggregates';
  /** Population standard deviation of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type SessionStddevSampleAggregates = {
  __typename?: 'SessionStddevSampleAggregates';
  /** Sample standard deviation of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type SessionSumAggregates = {
  __typename?: 'SessionSumAggregates';
  /** Sum of startBlock across the matching connection */
  startBlock: Scalars['BigInt']['output'];
};

export type SessionVariancePopulationAggregates = {
  __typename?: 'SessionVariancePopulationAggregates';
  /** Population variance of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type SessionVarianceSampleAggregates = {
  __typename?: 'SessionVarianceSampleAggregates';
  /** Sample variance of startBlock across the matching connection */
  startBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Session` values. */
export type SessionsConnection = {
  __typename?: 'SessionsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<SessionAggregates>;
  /** A list of edges which contains the `Session` and cursor to aid in pagination. */
  edges: Array<SessionsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<SessionAggregates>>;
  /** A list of `Session` objects. */
  nodes: Array<Maybe<Session>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Session` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Session` values. */
export type SessionsConnectionGroupedAggregatesArgs = {
  groupBy: Array<SessionsGroupBy>;
  having?: InputMaybe<SessionsHavingInput>;
};

/** A `Session` edge in the connection. */
export type SessionsEdge = {
  __typename?: 'SessionsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Session` at the end of the edge. */
  node?: Maybe<Session>;
};

/** Grouping methods for `Session` for usage during aggregation. */
export enum SessionsGroupBy {
  Id = 'ID',
  Operators = 'OPERATORS',
  StartBlock = 'START_BLOCK',
  Timestamp = 'TIMESTAMP',
  TimestampTruncatedToDay = 'TIMESTAMP_TRUNCATED_TO_DAY',
  TimestampTruncatedToHour = 'TIMESTAMP_TRUNCATED_TO_HOUR',
  Validators = 'VALIDATORS'
}

export type SessionsHavingAverageInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type SessionsHavingDistinctCountInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `Session` aggregates. */
export type SessionsHavingInput = {
  AND?: InputMaybe<Array<SessionsHavingInput>>;
  OR?: InputMaybe<Array<SessionsHavingInput>>;
  average?: InputMaybe<SessionsHavingAverageInput>;
  distinctCount?: InputMaybe<SessionsHavingDistinctCountInput>;
  max?: InputMaybe<SessionsHavingMaxInput>;
  min?: InputMaybe<SessionsHavingMinInput>;
  stddevPopulation?: InputMaybe<SessionsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<SessionsHavingStddevSampleInput>;
  sum?: InputMaybe<SessionsHavingSumInput>;
  variancePopulation?: InputMaybe<SessionsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<SessionsHavingVarianceSampleInput>;
};

export type SessionsHavingMaxInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type SessionsHavingMinInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type SessionsHavingStddevPopulationInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type SessionsHavingStddevSampleInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type SessionsHavingSumInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type SessionsHavingVariancePopulationInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type SessionsHavingVarianceSampleInput = {
  startBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

/** Methods to use when ordering `Session`. */
export enum SessionsOrderBy {
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OperatorsAsc = 'OPERATORS_ASC',
  OperatorsDesc = 'OPERATORS_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  StartBlockAsc = 'START_BLOCK_ASC',
  StartBlockDesc = 'START_BLOCK_DESC',
  TimestampAsc = 'TIMESTAMP_ASC',
  TimestampDesc = 'TIMESTAMP_DESC',
  ValidatorsAsc = 'VALIDATORS_ASC',
  ValidatorsDesc = 'VALIDATORS_DESC'
}

/** A filter to be used against String fields. All fields are combined with a logical ‘and.’ */
export type StringFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value, treating null like an ordinary value (case-insensitive). */
  distinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Ends with the specified string (case-sensitive). */
  endsWith?: InputMaybe<Scalars['String']['input']>;
  /** Ends with the specified string (case-insensitive). */
  endsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value (case-insensitive). */
  equalToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['String']['input']>;
  /** Greater than the specified value (case-insensitive). */
  greaterThanInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Greater than or equal to the specified value (case-insensitive). */
  greaterThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Included in the specified list (case-insensitive). */
  inInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Contains the specified string (case-sensitive). */
  includes?: InputMaybe<Scalars['String']['input']>;
  /** Contains the specified string (case-insensitive). */
  includesInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['String']['input']>;
  /** Less than the specified value (case-insensitive). */
  lessThanInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Less than or equal to the specified value (case-insensitive). */
  lessThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  like?: InputMaybe<Scalars['String']['input']>;
  /** Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  likeInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value, treating null like an ordinary value (case-insensitive). */
  notDistinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not end with the specified string (case-sensitive). */
  notEndsWith?: InputMaybe<Scalars['String']['input']>;
  /** Does not end with the specified string (case-insensitive). */
  notEndsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value (case-insensitive). */
  notEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Not included in the specified list (case-insensitive). */
  notInInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Does not contain the specified string (case-sensitive). */
  notIncludes?: InputMaybe<Scalars['String']['input']>;
  /** Does not contain the specified string (case-insensitive). */
  notIncludesInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  notLike?: InputMaybe<Scalars['String']['input']>;
  /** Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  notLikeInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not start with the specified string (case-sensitive). */
  notStartsWith?: InputMaybe<Scalars['String']['input']>;
  /** Does not start with the specified string (case-insensitive). */
  notStartsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Starts with the specified string (case-sensitive). */
  startsWith?: InputMaybe<Scalars['String']['input']>;
  /** Starts with the specified string (case-insensitive). */
  startsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
};

export type TableEstimate = {
  __typename?: 'TableEstimate';
  estimate?: Maybe<Scalars['Int']['output']>;
  table?: Maybe<Scalars['String']['output']>;
};

export type UnstakeRequest = Node & {
  __typename?: 'UnstakeRequest';
  /** The asset ID of the tokens being unstaked. */
  assetId: Scalars['JSON']['output'];
  /** The block number when the unstake request was created. */
  createdAt: Scalars['Int']['output'];
  /** The current amount of tokens in the unstake request. */
  currentAmount: Scalars['BigFloat']['output'];
  /** The current status of the unstake request. */
  currentStatus: UnstakeRequestStatus;
  /** Reads a single `Delegation` that is related to this `UnstakeRequest`. */
  delegation?: Maybe<Delegation>;
  /** The associated delegation for this unstake request. */
  delegationId: Scalars['String']['output'];
  /** Reads a single `Delegator` that is related to this `UnstakeRequest`. */
  delegator?: Maybe<Delegator>;
  /** The Delegator who made the unstake request. */
  delegatorId: Scalars['String']['output'];
  /** Unique identifier for the unstake request. */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `Operator` that is related to this `UnstakeRequest`. */
  operator?: Maybe<Operator>;
  /** The Operator from whom the tokens are being unstaked. */
  operatorId: Scalars['String']['output'];
  /** The round number when the unstake request was requested. */
  requestedRound: Scalars['Int']['output'];
  /** The block number when the unstake request was last updated. */
  updatedAt: Scalars['Int']['output'];
};

export type UnstakeRequestAggregates = {
  __typename?: 'UnstakeRequestAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<UnstakeRequestAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<UnstakeRequestDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<UnstakeRequestMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<UnstakeRequestMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<UnstakeRequestStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<UnstakeRequestStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<UnstakeRequestSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<UnstakeRequestVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<UnstakeRequestVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `UnstakeRequest` object types. */
export type UnstakeRequestAggregatesFilter = {
  /** Mean average aggregate over matching `UnstakeRequest` objects. */
  average?: InputMaybe<UnstakeRequestAverageAggregateFilter>;
  /** Distinct count aggregate over matching `UnstakeRequest` objects. */
  distinctCount?: InputMaybe<UnstakeRequestDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `UnstakeRequest` object to be included within the aggregate. */
  filter?: InputMaybe<UnstakeRequestFilter>;
  /** Maximum aggregate over matching `UnstakeRequest` objects. */
  max?: InputMaybe<UnstakeRequestMaxAggregateFilter>;
  /** Minimum aggregate over matching `UnstakeRequest` objects. */
  min?: InputMaybe<UnstakeRequestMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `UnstakeRequest` objects. */
  stddevPopulation?: InputMaybe<UnstakeRequestStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `UnstakeRequest` objects. */
  stddevSample?: InputMaybe<UnstakeRequestStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `UnstakeRequest` objects. */
  sum?: InputMaybe<UnstakeRequestSumAggregateFilter>;
  /** Population variance aggregate over matching `UnstakeRequest` objects. */
  variancePopulation?: InputMaybe<UnstakeRequestVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `UnstakeRequest` objects. */
  varianceSample?: InputMaybe<UnstakeRequestVarianceSampleAggregateFilter>;
};

export type UnstakeRequestAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type UnstakeRequestAverageAggregates = {
  __typename?: 'UnstakeRequestAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type UnstakeRequestDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  assetId?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  currentAmount?: InputMaybe<BigIntFilter>;
  currentStatus?: InputMaybe<BigIntFilter>;
  delegationId?: InputMaybe<BigIntFilter>;
  delegatorId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  operatorId?: InputMaybe<BigIntFilter>;
  requestedRound?: InputMaybe<BigIntFilter>;
  updatedAt?: InputMaybe<BigIntFilter>;
};

export type UnstakeRequestDistinctCountAggregates = {
  __typename?: 'UnstakeRequestDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of assetId across the matching connection */
  assetId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentStatus across the matching connection */
  currentStatus?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of delegationId across the matching connection */
  delegationId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of delegatorId across the matching connection */
  delegatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of operatorId across the matching connection */
  operatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `UnstakeRequest` object types. All fields are combined with a logical ‘and.’ */
export type UnstakeRequestFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<UnstakeRequestFilter>>;
  /** Filter by the object’s `assetId` field. */
  assetId?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `currentAmount` field. */
  currentAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `currentStatus` field. */
  currentStatus?: InputMaybe<UnstakeRequestStatusFilter>;
  /** Filter by the object’s `delegation` relation. */
  delegation?: InputMaybe<DelegationFilter>;
  /** Filter by the object’s `delegationId` field. */
  delegationId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `delegator` relation. */
  delegator?: InputMaybe<DelegatorFilter>;
  /** Filter by the object’s `delegatorId` field. */
  delegatorId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<UnstakeRequestFilter>;
  /** Filter by the object’s `operator` relation. */
  operator?: InputMaybe<OperatorFilter>;
  /** Filter by the object’s `operatorId` field. */
  operatorId?: InputMaybe<StringFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<UnstakeRequestFilter>>;
  /** Filter by the object’s `requestedRound` field. */
  requestedRound?: InputMaybe<IntFilter>;
  /** Filter by the object’s `updatedAt` field. */
  updatedAt?: InputMaybe<IntFilter>;
};

export type UnstakeRequestMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<IntFilter>;
};

export type UnstakeRequestMaxAggregates = {
  __typename?: 'UnstakeRequestMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['Int']['output']>;
  /** Maximum of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['Int']['output']>;
};

export type UnstakeRequestMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<IntFilter>;
};

export type UnstakeRequestMinAggregates = {
  __typename?: 'UnstakeRequestMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['Int']['output']>;
  /** Minimum of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['Int']['output']>;
};

/**  Enum representing the status of an unstake request. */
export enum UnstakeRequestStatus {
  Cancelled = 'CANCELLED',
  Executed = 'EXECUTED',
  Scheduled = 'SCHEDULED'
}

/** A filter to be used against UnstakeRequestStatus fields. All fields are combined with a logical ‘and.’ */
export type UnstakeRequestStatusFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<UnstakeRequestStatus>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<UnstakeRequestStatus>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<UnstakeRequestStatus>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<UnstakeRequestStatus>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<UnstakeRequestStatus>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<UnstakeRequestStatus>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<UnstakeRequestStatus>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<UnstakeRequestStatus>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<UnstakeRequestStatus>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<UnstakeRequestStatus>>;
};

export type UnstakeRequestStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type UnstakeRequestStddevPopulationAggregates = {
  __typename?: 'UnstakeRequestStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type UnstakeRequestStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type UnstakeRequestStddevSampleAggregates = {
  __typename?: 'UnstakeRequestStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type UnstakeRequestSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigIntFilter>;
  updatedAt?: InputMaybe<BigIntFilter>;
};

export type UnstakeRequestSumAggregates = {
  __typename?: 'UnstakeRequestSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
  /** Sum of currentAmount across the matching connection */
  currentAmount: Scalars['BigFloat']['output'];
  /** Sum of requestedRound across the matching connection */
  requestedRound: Scalars['BigInt']['output'];
  /** Sum of updatedAt across the matching connection */
  updatedAt: Scalars['BigInt']['output'];
};

export type UnstakeRequestVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type UnstakeRequestVariancePopulationAggregates = {
  __typename?: 'UnstakeRequestVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type UnstakeRequestVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type UnstakeRequestVarianceSampleAggregates = {
  __typename?: 'UnstakeRequestVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `UnstakeRequest` values. */
export type UnstakeRequestsConnection = {
  __typename?: 'UnstakeRequestsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<UnstakeRequestAggregates>;
  /** A list of edges which contains the `UnstakeRequest` and cursor to aid in pagination. */
  edges: Array<UnstakeRequestsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<UnstakeRequestAggregates>>;
  /** A list of `UnstakeRequest` objects. */
  nodes: Array<Maybe<UnstakeRequest>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `UnstakeRequest` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `UnstakeRequest` values. */
export type UnstakeRequestsConnectionGroupedAggregatesArgs = {
  groupBy: Array<UnstakeRequestsGroupBy>;
  having?: InputMaybe<UnstakeRequestsHavingInput>;
};

/** A `UnstakeRequest` edge in the connection. */
export type UnstakeRequestsEdge = {
  __typename?: 'UnstakeRequestsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `UnstakeRequest` at the end of the edge. */
  node?: Maybe<UnstakeRequest>;
};

/** Grouping methods for `UnstakeRequest` for usage during aggregation. */
export enum UnstakeRequestsGroupBy {
  AssetId = 'ASSET_ID',
  CreatedAt = 'CREATED_AT',
  CurrentAmount = 'CURRENT_AMOUNT',
  CurrentStatus = 'CURRENT_STATUS',
  DelegationId = 'DELEGATION_ID',
  DelegatorId = 'DELEGATOR_ID',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  RequestedRound = 'REQUESTED_ROUND',
  UpdatedAt = 'UPDATED_AT'
}

export type UnstakeRequestsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type UnstakeRequestsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `UnstakeRequest` aggregates. */
export type UnstakeRequestsHavingInput = {
  AND?: InputMaybe<Array<UnstakeRequestsHavingInput>>;
  OR?: InputMaybe<Array<UnstakeRequestsHavingInput>>;
  average?: InputMaybe<UnstakeRequestsHavingAverageInput>;
  distinctCount?: InputMaybe<UnstakeRequestsHavingDistinctCountInput>;
  max?: InputMaybe<UnstakeRequestsHavingMaxInput>;
  min?: InputMaybe<UnstakeRequestsHavingMinInput>;
  stddevPopulation?: InputMaybe<UnstakeRequestsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<UnstakeRequestsHavingStddevSampleInput>;
  sum?: InputMaybe<UnstakeRequestsHavingSumInput>;
  variancePopulation?: InputMaybe<UnstakeRequestsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<UnstakeRequestsHavingVarianceSampleInput>;
};

export type UnstakeRequestsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type UnstakeRequestsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type UnstakeRequestsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type UnstakeRequestsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type UnstakeRequestsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type UnstakeRequestsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type UnstakeRequestsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `UnstakeRequest`. */
export enum UnstakeRequestsOrderBy {
  AssetIdAsc = 'ASSET_ID_ASC',
  AssetIdDesc = 'ASSET_ID_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  CurrentAmountAsc = 'CURRENT_AMOUNT_ASC',
  CurrentAmountDesc = 'CURRENT_AMOUNT_DESC',
  CurrentStatusAsc = 'CURRENT_STATUS_ASC',
  CurrentStatusDesc = 'CURRENT_STATUS_DESC',
  DelegationByDelegationIdAssetIdAsc = 'DELEGATION_BY_DELEGATION_ID__ASSET_ID_ASC',
  DelegationByDelegationIdAssetIdDesc = 'DELEGATION_BY_DELEGATION_ID__ASSET_ID_DESC',
  DelegationByDelegationIdDelegatorIdAsc = 'DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_ASC',
  DelegationByDelegationIdDelegatorIdDesc = 'DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_DESC',
  DelegationByDelegationIdHasActiveUnstakeRequestAsc = 'DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_ASC',
  DelegationByDelegationIdHasActiveUnstakeRequestDesc = 'DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_DESC',
  DelegationByDelegationIdIdAsc = 'DELEGATION_BY_DELEGATION_ID__ID_ASC',
  DelegationByDelegationIdIdDesc = 'DELEGATION_BY_DELEGATION_ID__ID_DESC',
  DelegationByDelegationIdOperatorIdAsc = 'DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_ASC',
  DelegationByDelegationIdOperatorIdDesc = 'DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_DESC',
  DelegationByDelegationIdTotalAmountAsc = 'DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_ASC',
  DelegationByDelegationIdTotalAmountDesc = 'DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_DESC',
  DelegationIdAsc = 'DELEGATION_ID_ASC',
  DelegationIdDesc = 'DELEGATION_ID_DESC',
  DelegatorByDelegatorIdAccountIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC',
  DelegatorByDelegatorIdAccountIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC',
  DelegatorByDelegatorIdIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ID_ASC',
  DelegatorByDelegatorIdIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ID_DESC',
  DelegatorByDelegatorIdJoinedAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC',
  DelegatorByDelegatorIdJoinedAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC',
  DelegatorByDelegatorIdLastUpdateAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC',
  DelegatorByDelegatorIdLastUpdateAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC',
  DelegatorIdAsc = 'DELEGATOR_ID_ASC',
  DelegatorIdDesc = 'DELEGATOR_ID_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  OperatorByOperatorIdAccountIdAsc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC',
  OperatorByOperatorIdAccountIdDesc = 'OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC',
  OperatorByOperatorIdCurrentStakeAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC',
  OperatorByOperatorIdCurrentStakeDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC',
  OperatorByOperatorIdCurrentStatusAsc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC',
  OperatorByOperatorIdCurrentStatusDesc = 'OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC',
  OperatorByOperatorIdIdAsc = 'OPERATOR_BY_OPERATOR_ID__ID_ASC',
  OperatorByOperatorIdIdDesc = 'OPERATOR_BY_OPERATOR_ID__ID_DESC',
  OperatorByOperatorIdJoinedAtAsc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC',
  OperatorByOperatorIdJoinedAtDesc = 'OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC',
  OperatorByOperatorIdLastUpdateAtAsc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC',
  OperatorByOperatorIdLastUpdateAtDesc = 'OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC',
  OperatorByOperatorIdScheduledUnstakeAmountAsc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC',
  OperatorByOperatorIdScheduledUnstakeAmountDesc = 'OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC',
  OperatorByOperatorIdTotalBlueprintsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC',
  OperatorByOperatorIdTotalBlueprintsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC',
  OperatorByOperatorIdTotalServicesAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC',
  OperatorByOperatorIdTotalServicesDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC',
  OperatorByOperatorIdTotalServiceRequestsAsc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC',
  OperatorByOperatorIdTotalServiceRequestsDesc = 'OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC',
  OperatorIdAsc = 'OPERATOR_ID_ASC',
  OperatorIdDesc = 'OPERATOR_ID_DESC',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  RequestedRoundAsc = 'REQUESTED_ROUND_ASC',
  RequestedRoundDesc = 'REQUESTED_ROUND_DESC',
  UpdatedAtAsc = 'UPDATED_AT_ASC',
  UpdatedAtDesc = 'UPDATED_AT_DESC'
}

export type WithdrawRequest = Node & {
  __typename?: 'WithdrawRequest';
  /** The asset ID of the tokens being withdrawn. */
  assetId: Scalars['JSON']['output'];
  /** The block number when the withdraw request was created. */
  createdAt: Scalars['Int']['output'];
  /** The amount of tokens requested for withdrawal. */
  currentAmount: Scalars['BigFloat']['output'];
  /** The current status of the withdraw request. */
  currentStatus: WithdrawRequestStatus;
  /** Reads a single `Delegator` that is related to this `WithdrawRequest`. */
  delegator?: Maybe<Delegator>;
  /** The Delegator who made the withdraw request. */
  delegatorId: Scalars['String']['output'];
  /** Reads a single `Deposit` that is related to this `WithdrawRequest`. */
  deposit?: Maybe<Deposit>;
  /** The deposit associated with this withdraw request. */
  depositId: Scalars['String']['output'];
  /** Unique identifier for the withdraw request. */
  id: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** The round number when the unstake request was requested. */
  requestedRound: Scalars['Int']['output'];
  /** The block number when the withdraw request was last updated. */
  updatedAt: Scalars['Int']['output'];
};

export type WithdrawRequestAggregates = {
  __typename?: 'WithdrawRequestAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<WithdrawRequestAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<WithdrawRequestDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<WithdrawRequestMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<WithdrawRequestMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<WithdrawRequestStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<WithdrawRequestStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<WithdrawRequestSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<WithdrawRequestVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<WithdrawRequestVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `WithdrawRequest` object types. */
export type WithdrawRequestAggregatesFilter = {
  /** Mean average aggregate over matching `WithdrawRequest` objects. */
  average?: InputMaybe<WithdrawRequestAverageAggregateFilter>;
  /** Distinct count aggregate over matching `WithdrawRequest` objects. */
  distinctCount?: InputMaybe<WithdrawRequestDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `WithdrawRequest` object to be included within the aggregate. */
  filter?: InputMaybe<WithdrawRequestFilter>;
  /** Maximum aggregate over matching `WithdrawRequest` objects. */
  max?: InputMaybe<WithdrawRequestMaxAggregateFilter>;
  /** Minimum aggregate over matching `WithdrawRequest` objects. */
  min?: InputMaybe<WithdrawRequestMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `WithdrawRequest` objects. */
  stddevPopulation?: InputMaybe<WithdrawRequestStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `WithdrawRequest` objects. */
  stddevSample?: InputMaybe<WithdrawRequestStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `WithdrawRequest` objects. */
  sum?: InputMaybe<WithdrawRequestSumAggregateFilter>;
  /** Population variance aggregate over matching `WithdrawRequest` objects. */
  variancePopulation?: InputMaybe<WithdrawRequestVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `WithdrawRequest` objects. */
  varianceSample?: InputMaybe<WithdrawRequestVarianceSampleAggregateFilter>;
};

export type WithdrawRequestAverageAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type WithdrawRequestAverageAggregates = {
  __typename?: 'WithdrawRequestAverageAggregates';
  /** Mean average of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type WithdrawRequestDistinctCountAggregateFilter = {
  _blockRange?: InputMaybe<BigIntFilter>;
  _id?: InputMaybe<BigIntFilter>;
  assetId?: InputMaybe<BigIntFilter>;
  createdAt?: InputMaybe<BigIntFilter>;
  currentAmount?: InputMaybe<BigIntFilter>;
  currentStatus?: InputMaybe<BigIntFilter>;
  delegatorId?: InputMaybe<BigIntFilter>;
  depositId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  requestedRound?: InputMaybe<BigIntFilter>;
  updatedAt?: InputMaybe<BigIntFilter>;
};

export type WithdrawRequestDistinctCountAggregates = {
  __typename?: 'WithdrawRequestDistinctCountAggregates';
  /** Distinct count of _blockRange across the matching connection */
  _blockRange?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of _id across the matching connection */
  _id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of assetId across the matching connection */
  assetId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of currentStatus across the matching connection */
  currentStatus?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of delegatorId across the matching connection */
  delegatorId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositId across the matching connection */
  depositId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `WithdrawRequest` object types. All fields are combined with a logical ‘and.’ */
export type WithdrawRequestFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<WithdrawRequestFilter>>;
  /** Filter by the object’s `assetId` field. */
  assetId?: InputMaybe<JsonFilter>;
  /** Filter by the object’s `createdAt` field. */
  createdAt?: InputMaybe<IntFilter>;
  /** Filter by the object’s `currentAmount` field. */
  currentAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `currentStatus` field. */
  currentStatus?: InputMaybe<WithdrawRequestStatusFilter>;
  /** Filter by the object’s `delegator` relation. */
  delegator?: InputMaybe<DelegatorFilter>;
  /** Filter by the object’s `delegatorId` field. */
  delegatorId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `deposit` relation. */
  deposit?: InputMaybe<DepositFilter>;
  /** Filter by the object’s `depositId` field. */
  depositId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<WithdrawRequestFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<WithdrawRequestFilter>>;
  /** Filter by the object’s `requestedRound` field. */
  requestedRound?: InputMaybe<IntFilter>;
  /** Filter by the object’s `updatedAt` field. */
  updatedAt?: InputMaybe<IntFilter>;
};

export type WithdrawRequestMaxAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<IntFilter>;
};

export type WithdrawRequestMaxAggregates = {
  __typename?: 'WithdrawRequestMaxAggregates';
  /** Maximum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Maximum of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['Int']['output']>;
  /** Maximum of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['Int']['output']>;
};

export type WithdrawRequestMinAggregateFilter = {
  createdAt?: InputMaybe<IntFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<IntFilter>;
};

export type WithdrawRequestMinAggregates = {
  __typename?: 'WithdrawRequestMinAggregates';
  /** Minimum of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['Int']['output']>;
  /** Minimum of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['Int']['output']>;
  /** Minimum of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['Int']['output']>;
};

/**  Enum representing the status of an withdraw request. */
export enum WithdrawRequestStatus {
  Cancelled = 'CANCELLED',
  Executed = 'EXECUTED',
  Scheduled = 'SCHEDULED'
}

/** A filter to be used against WithdrawRequestStatus fields. All fields are combined with a logical ‘and.’ */
export type WithdrawRequestStatusFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<WithdrawRequestStatus>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<WithdrawRequestStatus>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<WithdrawRequestStatus>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<WithdrawRequestStatus>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<WithdrawRequestStatus>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<WithdrawRequestStatus>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<WithdrawRequestStatus>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<WithdrawRequestStatus>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<WithdrawRequestStatus>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<WithdrawRequestStatus>>;
};

export type WithdrawRequestStddevPopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type WithdrawRequestStddevPopulationAggregates = {
  __typename?: 'WithdrawRequestStddevPopulationAggregates';
  /** Population standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type WithdrawRequestStddevSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type WithdrawRequestStddevSampleAggregates = {
  __typename?: 'WithdrawRequestStddevSampleAggregates';
  /** Sample standard deviation of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type WithdrawRequestSumAggregateFilter = {
  createdAt?: InputMaybe<BigIntFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigIntFilter>;
  updatedAt?: InputMaybe<BigIntFilter>;
};

export type WithdrawRequestSumAggregates = {
  __typename?: 'WithdrawRequestSumAggregates';
  /** Sum of createdAt across the matching connection */
  createdAt: Scalars['BigInt']['output'];
  /** Sum of currentAmount across the matching connection */
  currentAmount: Scalars['BigFloat']['output'];
  /** Sum of requestedRound across the matching connection */
  requestedRound: Scalars['BigInt']['output'];
  /** Sum of updatedAt across the matching connection */
  updatedAt: Scalars['BigInt']['output'];
};

export type WithdrawRequestVariancePopulationAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type WithdrawRequestVariancePopulationAggregates = {
  __typename?: 'WithdrawRequestVariancePopulationAggregates';
  /** Population variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

export type WithdrawRequestVarianceSampleAggregateFilter = {
  createdAt?: InputMaybe<BigFloatFilter>;
  currentAmount?: InputMaybe<BigFloatFilter>;
  requestedRound?: InputMaybe<BigFloatFilter>;
  updatedAt?: InputMaybe<BigFloatFilter>;
};

export type WithdrawRequestVarianceSampleAggregates = {
  __typename?: 'WithdrawRequestVarianceSampleAggregates';
  /** Sample variance of createdAt across the matching connection */
  createdAt?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of currentAmount across the matching connection */
  currentAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of requestedRound across the matching connection */
  requestedRound?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of updatedAt across the matching connection */
  updatedAt?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `WithdrawRequest` values. */
export type WithdrawRequestsConnection = {
  __typename?: 'WithdrawRequestsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<WithdrawRequestAggregates>;
  /** A list of edges which contains the `WithdrawRequest` and cursor to aid in pagination. */
  edges: Array<WithdrawRequestsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<WithdrawRequestAggregates>>;
  /** A list of `WithdrawRequest` objects. */
  nodes: Array<Maybe<WithdrawRequest>>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `WithdrawRequest` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `WithdrawRequest` values. */
export type WithdrawRequestsConnectionGroupedAggregatesArgs = {
  groupBy: Array<WithdrawRequestsGroupBy>;
  having?: InputMaybe<WithdrawRequestsHavingInput>;
};

/** A `WithdrawRequest` edge in the connection. */
export type WithdrawRequestsEdge = {
  __typename?: 'WithdrawRequestsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `WithdrawRequest` at the end of the edge. */
  node?: Maybe<WithdrawRequest>;
};

/** Grouping methods for `WithdrawRequest` for usage during aggregation. */
export enum WithdrawRequestsGroupBy {
  AssetId = 'ASSET_ID',
  CreatedAt = 'CREATED_AT',
  CurrentAmount = 'CURRENT_AMOUNT',
  CurrentStatus = 'CURRENT_STATUS',
  DelegatorId = 'DELEGATOR_ID',
  DepositId = 'DEPOSIT_ID',
  Id = 'ID',
  RequestedRound = 'REQUESTED_ROUND',
  UpdatedAt = 'UPDATED_AT'
}

export type WithdrawRequestsHavingAverageInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type WithdrawRequestsHavingDistinctCountInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `WithdrawRequest` aggregates. */
export type WithdrawRequestsHavingInput = {
  AND?: InputMaybe<Array<WithdrawRequestsHavingInput>>;
  OR?: InputMaybe<Array<WithdrawRequestsHavingInput>>;
  average?: InputMaybe<WithdrawRequestsHavingAverageInput>;
  distinctCount?: InputMaybe<WithdrawRequestsHavingDistinctCountInput>;
  max?: InputMaybe<WithdrawRequestsHavingMaxInput>;
  min?: InputMaybe<WithdrawRequestsHavingMinInput>;
  stddevPopulation?: InputMaybe<WithdrawRequestsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<WithdrawRequestsHavingStddevSampleInput>;
  sum?: InputMaybe<WithdrawRequestsHavingSumInput>;
  variancePopulation?: InputMaybe<WithdrawRequestsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<WithdrawRequestsHavingVarianceSampleInput>;
};

export type WithdrawRequestsHavingMaxInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type WithdrawRequestsHavingMinInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type WithdrawRequestsHavingStddevPopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type WithdrawRequestsHavingStddevSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type WithdrawRequestsHavingSumInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type WithdrawRequestsHavingVariancePopulationInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

export type WithdrawRequestsHavingVarianceSampleInput = {
  createdAt?: InputMaybe<HavingIntFilter>;
  currentAmount?: InputMaybe<HavingBigfloatFilter>;
  requestedRound?: InputMaybe<HavingIntFilter>;
  updatedAt?: InputMaybe<HavingIntFilter>;
};

/** Methods to use when ordering `WithdrawRequest`. */
export enum WithdrawRequestsOrderBy {
  AssetIdAsc = 'ASSET_ID_ASC',
  AssetIdDesc = 'ASSET_ID_DESC',
  CreatedAtAsc = 'CREATED_AT_ASC',
  CreatedAtDesc = 'CREATED_AT_DESC',
  CurrentAmountAsc = 'CURRENT_AMOUNT_ASC',
  CurrentAmountDesc = 'CURRENT_AMOUNT_DESC',
  CurrentStatusAsc = 'CURRENT_STATUS_ASC',
  CurrentStatusDesc = 'CURRENT_STATUS_DESC',
  DelegatorByDelegatorIdAccountIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC',
  DelegatorByDelegatorIdAccountIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC',
  DelegatorByDelegatorIdIdAsc = 'DELEGATOR_BY_DELEGATOR_ID__ID_ASC',
  DelegatorByDelegatorIdIdDesc = 'DELEGATOR_BY_DELEGATOR_ID__ID_DESC',
  DelegatorByDelegatorIdJoinedAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC',
  DelegatorByDelegatorIdJoinedAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC',
  DelegatorByDelegatorIdLastUpdateAtAsc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC',
  DelegatorByDelegatorIdLastUpdateAtDesc = 'DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC',
  DelegatorIdAsc = 'DELEGATOR_ID_ASC',
  DelegatorIdDesc = 'DELEGATOR_ID_DESC',
  DepositByDepositIdAssetIdAsc = 'DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_ASC',
  DepositByDepositIdAssetIdDesc = 'DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_DESC',
  DepositByDepositIdDelegatorIdAsc = 'DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_ASC',
  DepositByDepositIdDelegatorIdDesc = 'DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_DESC',
  DepositByDepositIdHasActiveWithdrawRequestAsc = 'DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_ASC',
  DepositByDepositIdHasActiveWithdrawRequestDesc = 'DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_DESC',
  DepositByDepositIdIdAsc = 'DEPOSIT_BY_DEPOSIT_ID__ID_ASC',
  DepositByDepositIdIdDesc = 'DEPOSIT_BY_DEPOSIT_ID__ID_DESC',
  DepositByDepositIdTotalAmountAsc = 'DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_ASC',
  DepositByDepositIdTotalAmountDesc = 'DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_DESC',
  DepositIdAsc = 'DEPOSIT_ID_ASC',
  DepositIdDesc = 'DEPOSIT_ID_DESC',
  IdAsc = 'ID_ASC',
  IdDesc = 'ID_DESC',
  Natural = 'NATURAL',
  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',
  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',
  RequestedRoundAsc = 'REQUESTED_ROUND_ASC',
  RequestedRoundDesc = 'REQUESTED_ROUND_DESC',
  UpdatedAtAsc = 'UPDATED_AT_ASC',
  UpdatedAtDesc = 'UPDATED_AT_DESC'
}

export type _Metadata = {
  __typename?: '_Metadata';
  chain?: Maybe<Scalars['String']['output']>;
  dbSize?: Maybe<Scalars['BigInt']['output']>;
  deployments?: Maybe<Scalars['JSON']['output']>;
  dynamicDatasources?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  evmChainId?: Maybe<Scalars['String']['output']>;
  genesisHash?: Maybe<Scalars['String']['output']>;
  indexerHealthy?: Maybe<Scalars['Boolean']['output']>;
  indexerNodeVersion?: Maybe<Scalars['String']['output']>;
  lastCreatedPoiHeight?: Maybe<Scalars['Int']['output']>;
  lastFinalizedVerifiedHeight?: Maybe<Scalars['Int']['output']>;
  lastProcessedHeight?: Maybe<Scalars['Int']['output']>;
  lastProcessedTimestamp?: Maybe<Scalars['Date']['output']>;
  latestSyncedPoiHeight?: Maybe<Scalars['Int']['output']>;
  queryNodeVersion?: Maybe<Scalars['String']['output']>;
  rowCountEstimate?: Maybe<Array<Maybe<TableEstimate>>>;
  specName?: Maybe<Scalars['String']['output']>;
  startHeight?: Maybe<Scalars['Int']['output']>;
  targetHeight?: Maybe<Scalars['Int']['output']>;
  unfinalizedBlocks?: Maybe<Scalars['String']['output']>;
};

export type _Metadatas = {
  __typename?: '_Metadatas';
  nodes: Array<Maybe<_Metadata>>;
  totalCount: Scalars['Int']['output'];
};

export enum Accounts_Distinct_Enum {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  LastUpdateAt = 'LAST_UPDATE_AT',
  TotalPoints = 'TOTAL_POINTS'
}

export enum Blueprint_Operators_Distinct_Enum {
  BlueprintId = 'BLUEPRINT_ID',
  Id = 'ID',
  IsActive = 'IS_ACTIVE',
  OperatorId = 'OPERATOR_ID',
  RegisteredAt = 'REGISTERED_AT',
  UpdatedAt = 'UPDATED_AT'
}

export enum Blueprints_Distinct_Enum {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OwnerId = 'OWNER_ID'
}

export enum Delegation_Histories_Distinct_Enum {
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  DelegationId = 'DELEGATION_ID',
  Id = 'ID'
}

export enum Delegations_Distinct_Enum {
  AssetId = 'ASSET_ID',
  DelegatorId = 'DELEGATOR_ID',
  HasActiveUnstakeRequest = 'HAS_ACTIVE_UNSTAKE_REQUEST',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  TotalAmount = 'TOTAL_AMOUNT'
}

export enum Delegators_Distinct_Enum {
  AccountId = 'ACCOUNT_ID',
  Id = 'ID',
  JoinedAt = 'JOINED_AT',
  LastUpdateAt = 'LAST_UPDATE_AT'
}

export enum Deposit_Histories_Distinct_Enum {
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  DepositId = 'DEPOSIT_ID',
  Id = 'ID'
}

export enum Deposits_Distinct_Enum {
  AssetId = 'ASSET_ID',
  DelegatorId = 'DELEGATOR_ID',
  HasActiveWithdrawRequest = 'HAS_ACTIVE_WITHDRAW_REQUEST',
  Id = 'ID',
  TotalAmount = 'TOTAL_AMOUNT'
}

export enum Job_Calls_Distinct_Enum {
  CallerId = 'CALLER_ID',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  JobId = 'JOB_ID',
  ServiceId = 'SERVICE_ID'
}

export enum Job_Results_Distinct_Enum {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  JobCallId = 'JOB_CALL_ID',
  OperatorId = 'OPERATOR_ID',
  ServiceId = 'SERVICE_ID'
}

export enum Lst_Pool_Members_Distinct_Enum {
  AccountId = 'ACCOUNT_ID',
  CurrentStake = 'CURRENT_STAKE',
  Id = 'ID',
  LstPoolId = 'LST_POOL_ID'
}

export enum Lst_Pool_State_Changes_Distinct_Enum {
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  LstPoolId = 'LST_POOL_ID',
  State = 'STATE'
}

export enum Lst_Pools_Distinct_Enum {
  CurrentState = 'CURRENT_STATE',
  Id = 'ID',
  TotalStake = 'TOTAL_STAKE'
}

export enum Member_Stake_Changes_Distinct_Enum {
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  MemberId = 'MEMBER_ID'
}

export enum Operator_Bond_Changes_Distinct_Enum {
  Action = 'ACTION',
  Amount = 'AMOUNT',
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID'
}

export enum Operator_Status_Changes_Distinct_Enum {
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  Status = 'STATUS'
}

export enum Operators_Distinct_Enum {
  AccountId = 'ACCOUNT_ID',
  CurrentStake = 'CURRENT_STAKE',
  CurrentStatus = 'CURRENT_STATUS',
  Id = 'ID',
  JoinedAt = 'JOINED_AT',
  LastUpdateAt = 'LAST_UPDATE_AT',
  ScheduledUnstakeAmount = 'SCHEDULED_UNSTAKE_AMOUNT',
  TotalBlueprints = 'TOTAL_BLUEPRINTS',
  TotalServices = 'TOTAL_SERVICES',
  TotalServiceRequests = 'TOTAL_SERVICE_REQUESTS'
}

export enum Points_Accrual_Rates_Distinct_Enum {
  AccountId = 'ACCOUNT_ID',
  Amount = 'AMOUNT',
  Id = 'ID',
  LastUpdateBlock = 'LAST_UPDATE_BLOCK',
  RatePerHour = 'RATE_PER_HOUR',
  Source = 'SOURCE',
  StartBlock = 'START_BLOCK'
}

export enum Points_Snapshots_Distinct_Enum {
  AccountId = 'ACCOUNT_ID',
  BlockNumber = 'BLOCK_NUMBER',
  Id = 'ID',
  LiquidStakingPoints = 'LIQUID_STAKING_POINTS',
  OperatorRegistrationPoints = 'OPERATOR_REGISTRATION_POINTS',
  RestakingDelegationPoints = 'RESTAKING_DELEGATION_POINTS',
  RestakingDepositPoints = 'RESTAKING_DEPOSIT_POINTS',
  Timestamp = 'TIMESTAMP',
  TotalPoints = 'TOTAL_POINTS',
  ValidatorNominationPoints = 'VALIDATOR_NOMINATION_POINTS',
  ValidatorRegistrationPoints = 'VALIDATOR_REGISTRATION_POINTS'
}

export enum Service_Operators_Distinct_Enum {
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  ServiceId = 'SERVICE_ID'
}

export enum Service_Request_Operators_Distinct_Enum {
  ApprovedAt = 'APPROVED_AT',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  RejectedAt = 'REJECTED_AT',
  ServiceRequestId = 'SERVICE_REQUEST_ID'
}

export enum Service_Requests_Distinct_Enum {
  AssetIds = 'ASSET_IDS',
  BlueprintId = 'BLUEPRINT_ID',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OwnerId = 'OWNER_ID'
}

export enum Services_Distinct_Enum {
  AssetIds = 'ASSET_IDS',
  BlueprintId = 'BLUEPRINT_ID',
  CreatedAt = 'CREATED_AT',
  Id = 'ID',
  OwnerId = 'OWNER_ID',
  ServiceRequestId = 'SERVICE_REQUEST_ID',
  TerminatedAt = 'TERMINATED_AT'
}

export enum Sessions_Distinct_Enum {
  Id = 'ID',
  Operators = 'OPERATORS',
  StartBlock = 'START_BLOCK',
  Timestamp = 'TIMESTAMP',
  Validators = 'VALIDATORS'
}

export enum Unstake_Requests_Distinct_Enum {
  AssetId = 'ASSET_ID',
  CreatedAt = 'CREATED_AT',
  CurrentAmount = 'CURRENT_AMOUNT',
  CurrentStatus = 'CURRENT_STATUS',
  DelegationId = 'DELEGATION_ID',
  DelegatorId = 'DELEGATOR_ID',
  Id = 'ID',
  OperatorId = 'OPERATOR_ID',
  RequestedRound = 'REQUESTED_ROUND',
  UpdatedAt = 'UPDATED_AT'
}

export enum Withdraw_Requests_Distinct_Enum {
  AssetId = 'ASSET_ID',
  CreatedAt = 'CREATED_AT',
  CurrentAmount = 'CURRENT_AMOUNT',
  CurrentStatus = 'CURRENT_STATUS',
  DelegatorId = 'DELEGATOR_ID',
  DepositId = 'DEPOSIT_ID',
  Id = 'ID',
  RequestedRound = 'REQUESTED_ROUND',
  UpdatedAt = 'UPDATED_AT'
}

export type GetAccountPointsQueryVariables = Exact<{
  account: Scalars['String']['input'];
}>;


export type GetAccountPointsQuery = { __typename?: 'Query', account?: { __typename?: 'Account', id: string, totalPoints: string } | null };

export class TypedDocumentString<TResult, TVariables>
  extends String
  implements DocumentTypeDecoration<TResult, TVariables>
{
  __apiType?: DocumentTypeDecoration<TResult, TVariables>['__apiType'];

  constructor(private value: string, public __meta__?: Record<string, any> | undefined) {
    super(value);
  }

  toString(): string & DocumentTypeDecoration<TResult, TVariables> {
    return this.value;
  }
}

export const GetAccountPointsDocument = new TypedDocumentString(`
    query GetAccountPoints($account: String!) {
  account(id: $account) {
    id
    totalPoints
  }
}
    `) as unknown as TypedDocumentString<GetAccountPointsQuery, GetAccountPointsQueryVariables>;