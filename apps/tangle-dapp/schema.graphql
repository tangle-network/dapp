schema {
  query: Query
}

type Account implements Node {
  """Reads and enables pagination through a set of `Blueprint`."""
  blueprints(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprints_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Blueprint`."""
    orderBy: [BlueprintsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintsConnection!
  """Reads and enables pagination through a set of `Blueprint`."""
  blueprintsByServiceOwnerIdAndBlueprintId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprints_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Blueprint`."""
    orderBy: [BlueprintsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyConnection!
  """Reads and enables pagination through a set of `Blueprint`."""
  blueprintsByServiceRequestOwnerIdAndBlueprintId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprints_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Blueprint`."""
    orderBy: [BlueprintsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyConnection!
  """The block number when the account was created."""
  createdAt: Int!
  """Reads and enables pagination through a set of `Delegator`."""
  delegators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegator`."""
    orderBy: [DelegatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegatorsConnection!
  """Account's account ID, serves as the unique identifier."""
  id: String!
  """Reads and enables pagination through a set of `JobCall`."""
  jobCalls(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobCallFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobCall`."""
    orderBy: [JobCallsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobCallsConnection!
  """The block number of the last update to the account's information."""
  lastUpdateAt: Int!
  """Reads and enables pagination through a set of `LstPoolMember`."""
  lstPoolMembers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pool_members_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolMemberFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPoolMember`."""
    orderBy: [LstPoolMembersOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolMembersConnection!
  """Reads and enables pagination through a set of `LstPool`."""
  lstPoolsByLstPoolMemberAccountIdAndLstPoolId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pools_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPool`."""
    orderBy: [LstPoolsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyConnection!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `Operator`."""
  operators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorsConnection!
  """Reads and enables pagination through a set of `PointsAccrualRate`."""
  pointsAccruals(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [points_accrual_rates_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: PointsAccrualRateFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `PointsAccrualRate`."""
    orderBy: [PointsAccrualRatesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): PointsAccrualRatesConnection!
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestsConnection!
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequestsByServiceOwnerIdAndServiceRequestId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyConnection!
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
  """Reads and enables pagination through a set of `Service`."""
  servicesByJobCallCallerIdAndServiceId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): AccountServicesByJobCallCallerIdAndServiceIdManyToManyConnection!
  """Reads and enables pagination through a set of `PointsSnapshot`."""
  snapshots(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [points_snapshots_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: PointsSnapshotFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `PointsSnapshot`."""
    orderBy: [PointsSnapshotsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): PointsSnapshotsConnection!
  """Total points associated with this account."""
  totalPoints: BigFloat!
}

type AccountAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: AccountAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: AccountDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: AccountMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: AccountMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: AccountStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: AccountStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: AccountSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: AccountVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: AccountVarianceSampleAggregates
}

type AccountAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
  """Mean average of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
  """Mean average of totalPoints across the matching connection"""
  totalPoints: BigFloat
}

"""
A connection to a list of `Blueprint` values, with data from `Service`.
"""
type AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: BlueprintAggregates
  """
  A list of edges which contains the `Blueprint`, info from the `Service`, and the cursor to aid in pagination.
  """
  edges: [AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Blueprint` for these aggregates."""
    groupBy: [BlueprintsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: BlueprintsHavingInput
  ): [BlueprintAggregates!]
  """A list of `Blueprint` objects."""
  nodes: [Blueprint]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Blueprint` you could get from the connection."""
  totalCount: Int!
}

"""A `Blueprint` edge in the connection, with data from `Service`."""
type AccountBlueprintsByServiceOwnerIdAndBlueprintIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Blueprint` at the end of the edge."""
  node: Blueprint
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

"""
A connection to a list of `Blueprint` values, with data from `ServiceRequest`.
"""
type AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: BlueprintAggregates
  """
  A list of edges which contains the `Blueprint`, info from the `ServiceRequest`, and the cursor to aid in pagination.
  """
  edges: [AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Blueprint` for these aggregates."""
    groupBy: [BlueprintsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: BlueprintsHavingInput
  ): [BlueprintAggregates!]
  """A list of `Blueprint` objects."""
  nodes: [Blueprint]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Blueprint` you could get from the connection."""
  totalCount: Int!
}

"""A `Blueprint` edge in the connection, with data from `ServiceRequest`."""
type AccountBlueprintsByServiceRequestOwnerIdAndBlueprintIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Blueprint` at the end of the edge."""
  node: Blueprint
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestsConnection!
}

type AccountDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigInt
  """Distinct count of totalPoints across the matching connection"""
  totalPoints: BigInt
}

"""
A filter to be used against `Account` object types. All fields are combined with a logical ‘and.’
"""
input AccountFilter {
  """Checks for all expressions in this list."""
  and: [AccountFilter!]
  """Filter by the object’s `blueprints` relation."""
  blueprints: AccountToManyBlueprintFilter
  """Some related `blueprints` exist."""
  blueprintsExist: Boolean
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `delegators` relation."""
  delegators: AccountToManyDelegatorFilter
  """Some related `delegators` exist."""
  delegatorsExist: Boolean
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `jobCalls` relation."""
  jobCalls: AccountToManyJobCallFilter
  """Some related `jobCalls` exist."""
  jobCallsExist: Boolean
  """Filter by the object’s `lastUpdateAt` field."""
  lastUpdateAt: IntFilter
  """Filter by the object’s `lstPoolMembers` relation."""
  lstPoolMembers: AccountToManyLstPoolMemberFilter
  """Some related `lstPoolMembers` exist."""
  lstPoolMembersExist: Boolean
  """Negates the expression."""
  not: AccountFilter
  """Filter by the object’s `operators` relation."""
  operators: AccountToManyOperatorFilter
  """Some related `operators` exist."""
  operatorsExist: Boolean
  """Checks for any expressions in this list."""
  or: [AccountFilter!]
  """Filter by the object’s `pointsAccruals` relation."""
  pointsAccruals: AccountToManyPointsAccrualRateFilter
  """Some related `pointsAccruals` exist."""
  pointsAccrualsExist: Boolean
  """Filter by the object’s `serviceRequests` relation."""
  serviceRequests: AccountToManyServiceRequestFilter
  """Some related `serviceRequests` exist."""
  serviceRequestsExist: Boolean
  """Filter by the object’s `services` relation."""
  services: AccountToManyServiceFilter
  """Some related `services` exist."""
  servicesExist: Boolean
  """Filter by the object’s `snapshots` relation."""
  snapshots: AccountToManyPointsSnapshotFilter
  """Some related `snapshots` exist."""
  snapshotsExist: Boolean
  """Filter by the object’s `totalPoints` field."""
  totalPoints: BigFloatFilter
}

"""
A connection to a list of `LstPool` values, with data from `LstPoolMember`.
"""
type AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: LstPoolAggregates
  """
  A list of edges which contains the `LstPool`, info from the `LstPoolMember`, and the cursor to aid in pagination.
  """
  edges: [AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `LstPool` for these aggregates."""
    groupBy: [LstPoolsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: LstPoolsHavingInput
  ): [LstPoolAggregates!]
  """A list of `LstPool` objects."""
  nodes: [LstPool]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `LstPool` you could get from the connection."""
  totalCount: Int!
}

"""A `LstPool` edge in the connection, with data from `LstPoolMember`."""
type AccountLstPoolsByLstPoolMemberAccountIdAndLstPoolIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `LstPoolMember`."""
  members(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pool_members_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolMemberFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPoolMember`."""
    orderBy: [LstPoolMembersOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolMembersConnection!
  """The `LstPool` at the end of the edge."""
  node: LstPool
}

type AccountMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
  """Maximum of lastUpdateAt across the matching connection"""
  lastUpdateAt: Int
  """Maximum of totalPoints across the matching connection"""
  totalPoints: BigFloat
}

type AccountMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
  """Minimum of lastUpdateAt across the matching connection"""
  lastUpdateAt: Int
  """Minimum of totalPoints across the matching connection"""
  totalPoints: BigFloat
}

"""
A connection to a list of `ServiceRequest` values, with data from `Service`.
"""
type AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceRequestAggregates
  """
  A list of edges which contains the `ServiceRequest`, info from the `Service`, and the cursor to aid in pagination.
  """
  edges: [AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `ServiceRequest` for these aggregates."""
    groupBy: [ServiceRequestsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServiceRequestsHavingInput
  ): [ServiceRequestAggregates!]
  """A list of `ServiceRequest` objects."""
  nodes: [ServiceRequest]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `ServiceRequest` you could get from the connection."""
  totalCount: Int!
}

"""A `ServiceRequest` edge in the connection, with data from `Service`."""
type AccountServiceRequestsByServiceOwnerIdAndServiceRequestIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `ServiceRequest` at the end of the edge."""
  node: ServiceRequest
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

"""A connection to a list of `Service` values, with data from `JobCall`."""
type AccountServicesByJobCallCallerIdAndServiceIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceAggregates
  """
  A list of edges which contains the `Service`, info from the `JobCall`, and the cursor to aid in pagination.
  """
  edges: [AccountServicesByJobCallCallerIdAndServiceIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Service` for these aggregates."""
    groupBy: [ServicesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServicesHavingInput
  ): [ServiceAggregates!]
  """A list of `Service` objects."""
  nodes: [Service]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Service` you could get from the connection."""
  totalCount: Int!
}

"""A `Service` edge in the connection, with data from `JobCall`."""
type AccountServicesByJobCallCallerIdAndServiceIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobCall`."""
  jobCalls(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobCallFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobCall`."""
    orderBy: [JobCallsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobCallsConnection!
  """The `Service` at the end of the edge."""
  node: Service
}

type AccountStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
  """
  Population standard deviation of lastUpdateAt across the matching connection
  """
  lastUpdateAt: BigFloat
  """
  Population standard deviation of totalPoints across the matching connection
  """
  totalPoints: BigFloat
}

type AccountStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
  """
  Sample standard deviation of lastUpdateAt across the matching connection
  """
  lastUpdateAt: BigFloat
  """
  Sample standard deviation of totalPoints across the matching connection
  """
  totalPoints: BigFloat
}

type AccountSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
  """Sum of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigInt!
  """Sum of totalPoints across the matching connection"""
  totalPoints: BigFloat!
}

"""
A filter to be used against many `Blueprint` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyBlueprintFilter {
  """Aggregates across related `Blueprint` match the filter criteria."""
  aggregates: BlueprintAggregatesFilter
  """
  Every related `Blueprint` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: BlueprintFilter
  """
  No related `Blueprint` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: BlueprintFilter
  """
  Some related `Blueprint` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: BlueprintFilter
}

"""
A filter to be used against many `Delegator` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyDelegatorFilter {
  """Aggregates across related `Delegator` match the filter criteria."""
  aggregates: DelegatorAggregatesFilter
  """
  Every related `Delegator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: DelegatorFilter
  """
  No related `Delegator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: DelegatorFilter
  """
  Some related `Delegator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: DelegatorFilter
}

"""
A filter to be used against many `JobCall` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyJobCallFilter {
  """Aggregates across related `JobCall` match the filter criteria."""
  aggregates: JobCallAggregatesFilter
  """
  Every related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: JobCallFilter
  """
  No related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: JobCallFilter
  """
  Some related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: JobCallFilter
}

"""
A filter to be used against many `LstPoolMember` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyLstPoolMemberFilter {
  """Aggregates across related `LstPoolMember` match the filter criteria."""
  aggregates: LstPoolMemberAggregatesFilter
  """
  Every related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: LstPoolMemberFilter
  """
  No related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: LstPoolMemberFilter
  """
  Some related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: LstPoolMemberFilter
}

"""
A filter to be used against many `Operator` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyOperatorFilter {
  """Aggregates across related `Operator` match the filter criteria."""
  aggregates: OperatorAggregatesFilter
  """
  Every related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: OperatorFilter
  """
  No related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: OperatorFilter
  """
  Some related `Operator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: OperatorFilter
}

"""
A filter to be used against many `PointsAccrualRate` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyPointsAccrualRateFilter {
  """
  Aggregates across related `PointsAccrualRate` match the filter criteria.
  """
  aggregates: PointsAccrualRateAggregatesFilter
  """
  Every related `PointsAccrualRate` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: PointsAccrualRateFilter
  """
  No related `PointsAccrualRate` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: PointsAccrualRateFilter
  """
  Some related `PointsAccrualRate` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: PointsAccrualRateFilter
}

"""
A filter to be used against many `PointsSnapshot` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyPointsSnapshotFilter {
  """Aggregates across related `PointsSnapshot` match the filter criteria."""
  aggregates: PointsSnapshotAggregatesFilter
  """
  Every related `PointsSnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: PointsSnapshotFilter
  """
  No related `PointsSnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: PointsSnapshotFilter
  """
  Some related `PointsSnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: PointsSnapshotFilter
}

"""
A filter to be used against many `Service` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyServiceFilter {
  """Aggregates across related `Service` match the filter criteria."""
  aggregates: ServiceAggregatesFilter
  """
  Every related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceFilter
  """
  No related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceFilter
  """
  Some related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceFilter
}

"""
A filter to be used against many `ServiceRequest` object types. All fields are combined with a logical ‘and.’
"""
input AccountToManyServiceRequestFilter {
  """Aggregates across related `ServiceRequest` match the filter criteria."""
  aggregates: ServiceRequestAggregatesFilter
  """
  Every related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceRequestFilter
  """
  No related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceRequestFilter
  """
  Some related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceRequestFilter
}

type AccountVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Population variance of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
  """Population variance of totalPoints across the matching connection"""
  totalPoints: BigFloat
}

type AccountVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample variance of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
  """Sample variance of totalPoints across the matching connection"""
  totalPoints: BigFloat
}

"""A connection to a list of `Account` values."""
type AccountsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: AccountAggregates
  """
  A list of edges which contains the `Account` and cursor to aid in pagination.
  """
  edges: [AccountsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Account` for these aggregates."""
    groupBy: [AccountsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: AccountsHavingInput
  ): [AccountAggregates!]
  """A list of `Account` objects."""
  nodes: [Account]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection."""
type AccountsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Account` at the end of the edge."""
  node: Account
}

"""Grouping methods for `Account` for usage during aggregation."""
enum AccountsGroupBy {
  CREATED_AT
  ID
  LAST_UPDATE_AT
  TOTAL_POINTS
}

input AccountsHavingAverageInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

input AccountsHavingDistinctCountInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

"""Conditions for `Account` aggregates."""
input AccountsHavingInput {
  AND: [AccountsHavingInput!]
  OR: [AccountsHavingInput!]
  average: AccountsHavingAverageInput
  distinctCount: AccountsHavingDistinctCountInput
  max: AccountsHavingMaxInput
  min: AccountsHavingMinInput
  stddevPopulation: AccountsHavingStddevPopulationInput
  stddevSample: AccountsHavingStddevSampleInput
  sum: AccountsHavingSumInput
  variancePopulation: AccountsHavingVariancePopulationInput
  varianceSample: AccountsHavingVarianceSampleInput
}

input AccountsHavingMaxInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

input AccountsHavingMinInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

input AccountsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

input AccountsHavingStddevSampleInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

input AccountsHavingSumInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

input AccountsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

input AccountsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  totalPoints: HavingBigfloatFilter
}

"""Methods to use when ordering `Account`."""
enum AccountsOrderBy {
  BLUEPRINTS_AVERAGE_BLOCK_RANGE_ASC
  BLUEPRINTS_AVERAGE_BLOCK_RANGE_DESC
  BLUEPRINTS_AVERAGE_CREATED_AT_ASC
  BLUEPRINTS_AVERAGE_CREATED_AT_DESC
  BLUEPRINTS_AVERAGE_ID_ASC
  BLUEPRINTS_AVERAGE_ID_DESC
  BLUEPRINTS_AVERAGE_OWNER_ID_ASC
  BLUEPRINTS_AVERAGE_OWNER_ID_DESC
  BLUEPRINTS_BY_OWNER_ID__COUNT_ASC
  BLUEPRINTS_BY_OWNER_ID__COUNT_DESC
  BLUEPRINTS_COUNT_ASC
  BLUEPRINTS_COUNT_DESC
  BLUEPRINTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  BLUEPRINTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  BLUEPRINTS_DISTINCT_COUNT_CREATED_AT_ASC
  BLUEPRINTS_DISTINCT_COUNT_CREATED_AT_DESC
  BLUEPRINTS_DISTINCT_COUNT_ID_ASC
  BLUEPRINTS_DISTINCT_COUNT_ID_DESC
  BLUEPRINTS_DISTINCT_COUNT_OWNER_ID_ASC
  BLUEPRINTS_DISTINCT_COUNT_OWNER_ID_DESC
  BLUEPRINTS_MAX_BLOCK_RANGE_ASC
  BLUEPRINTS_MAX_BLOCK_RANGE_DESC
  BLUEPRINTS_MAX_CREATED_AT_ASC
  BLUEPRINTS_MAX_CREATED_AT_DESC
  BLUEPRINTS_MAX_ID_ASC
  BLUEPRINTS_MAX_ID_DESC
  BLUEPRINTS_MAX_OWNER_ID_ASC
  BLUEPRINTS_MAX_OWNER_ID_DESC
  BLUEPRINTS_MIN_BLOCK_RANGE_ASC
  BLUEPRINTS_MIN_BLOCK_RANGE_DESC
  BLUEPRINTS_MIN_CREATED_AT_ASC
  BLUEPRINTS_MIN_CREATED_AT_DESC
  BLUEPRINTS_MIN_ID_ASC
  BLUEPRINTS_MIN_ID_DESC
  BLUEPRINTS_MIN_OWNER_ID_ASC
  BLUEPRINTS_MIN_OWNER_ID_DESC
  BLUEPRINTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  BLUEPRINTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  BLUEPRINTS_STDDEV_POPULATION_CREATED_AT_ASC
  BLUEPRINTS_STDDEV_POPULATION_CREATED_AT_DESC
  BLUEPRINTS_STDDEV_POPULATION_ID_ASC
  BLUEPRINTS_STDDEV_POPULATION_ID_DESC
  BLUEPRINTS_STDDEV_POPULATION_OWNER_ID_ASC
  BLUEPRINTS_STDDEV_POPULATION_OWNER_ID_DESC
  BLUEPRINTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  BLUEPRINTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  BLUEPRINTS_STDDEV_SAMPLE_CREATED_AT_ASC
  BLUEPRINTS_STDDEV_SAMPLE_CREATED_AT_DESC
  BLUEPRINTS_STDDEV_SAMPLE_ID_ASC
  BLUEPRINTS_STDDEV_SAMPLE_ID_DESC
  BLUEPRINTS_STDDEV_SAMPLE_OWNER_ID_ASC
  BLUEPRINTS_STDDEV_SAMPLE_OWNER_ID_DESC
  BLUEPRINTS_SUM_BLOCK_RANGE_ASC
  BLUEPRINTS_SUM_BLOCK_RANGE_DESC
  BLUEPRINTS_SUM_CREATED_AT_ASC
  BLUEPRINTS_SUM_CREATED_AT_DESC
  BLUEPRINTS_SUM_ID_ASC
  BLUEPRINTS_SUM_ID_DESC
  BLUEPRINTS_SUM_OWNER_ID_ASC
  BLUEPRINTS_SUM_OWNER_ID_DESC
  BLUEPRINTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  BLUEPRINTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  BLUEPRINTS_VARIANCE_POPULATION_CREATED_AT_ASC
  BLUEPRINTS_VARIANCE_POPULATION_CREATED_AT_DESC
  BLUEPRINTS_VARIANCE_POPULATION_ID_ASC
  BLUEPRINTS_VARIANCE_POPULATION_ID_DESC
  BLUEPRINTS_VARIANCE_POPULATION_OWNER_ID_ASC
  BLUEPRINTS_VARIANCE_POPULATION_OWNER_ID_DESC
  BLUEPRINTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  BLUEPRINTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  BLUEPRINTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  BLUEPRINTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  BLUEPRINTS_VARIANCE_SAMPLE_ID_ASC
  BLUEPRINTS_VARIANCE_SAMPLE_ID_DESC
  BLUEPRINTS_VARIANCE_SAMPLE_OWNER_ID_ASC
  BLUEPRINTS_VARIANCE_SAMPLE_OWNER_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  DELEGATORS_AVERAGE_ACCOUNT_ID_ASC
  DELEGATORS_AVERAGE_ACCOUNT_ID_DESC
  DELEGATORS_AVERAGE_BLOCK_RANGE_ASC
  DELEGATORS_AVERAGE_BLOCK_RANGE_DESC
  DELEGATORS_AVERAGE_ID_ASC
  DELEGATORS_AVERAGE_ID_DESC
  DELEGATORS_AVERAGE_JOINED_AT_ASC
  DELEGATORS_AVERAGE_JOINED_AT_DESC
  DELEGATORS_AVERAGE_LAST_UPDATE_AT_ASC
  DELEGATORS_AVERAGE_LAST_UPDATE_AT_DESC
  DELEGATORS_BY_ACCOUNT_ID__COUNT_ASC
  DELEGATORS_BY_ACCOUNT_ID__COUNT_DESC
  DELEGATORS_COUNT_ASC
  DELEGATORS_COUNT_DESC
  DELEGATORS_DISTINCT_COUNT_ACCOUNT_ID_ASC
  DELEGATORS_DISTINCT_COUNT_ACCOUNT_ID_DESC
  DELEGATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  DELEGATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  DELEGATORS_DISTINCT_COUNT_ID_ASC
  DELEGATORS_DISTINCT_COUNT_ID_DESC
  DELEGATORS_DISTINCT_COUNT_JOINED_AT_ASC
  DELEGATORS_DISTINCT_COUNT_JOINED_AT_DESC
  DELEGATORS_DISTINCT_COUNT_LAST_UPDATE_AT_ASC
  DELEGATORS_DISTINCT_COUNT_LAST_UPDATE_AT_DESC
  DELEGATORS_MAX_ACCOUNT_ID_ASC
  DELEGATORS_MAX_ACCOUNT_ID_DESC
  DELEGATORS_MAX_BLOCK_RANGE_ASC
  DELEGATORS_MAX_BLOCK_RANGE_DESC
  DELEGATORS_MAX_ID_ASC
  DELEGATORS_MAX_ID_DESC
  DELEGATORS_MAX_JOINED_AT_ASC
  DELEGATORS_MAX_JOINED_AT_DESC
  DELEGATORS_MAX_LAST_UPDATE_AT_ASC
  DELEGATORS_MAX_LAST_UPDATE_AT_DESC
  DELEGATORS_MIN_ACCOUNT_ID_ASC
  DELEGATORS_MIN_ACCOUNT_ID_DESC
  DELEGATORS_MIN_BLOCK_RANGE_ASC
  DELEGATORS_MIN_BLOCK_RANGE_DESC
  DELEGATORS_MIN_ID_ASC
  DELEGATORS_MIN_ID_DESC
  DELEGATORS_MIN_JOINED_AT_ASC
  DELEGATORS_MIN_JOINED_AT_DESC
  DELEGATORS_MIN_LAST_UPDATE_AT_ASC
  DELEGATORS_MIN_LAST_UPDATE_AT_DESC
  DELEGATORS_STDDEV_POPULATION_ACCOUNT_ID_ASC
  DELEGATORS_STDDEV_POPULATION_ACCOUNT_ID_DESC
  DELEGATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  DELEGATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  DELEGATORS_STDDEV_POPULATION_ID_ASC
  DELEGATORS_STDDEV_POPULATION_ID_DESC
  DELEGATORS_STDDEV_POPULATION_JOINED_AT_ASC
  DELEGATORS_STDDEV_POPULATION_JOINED_AT_DESC
  DELEGATORS_STDDEV_POPULATION_LAST_UPDATE_AT_ASC
  DELEGATORS_STDDEV_POPULATION_LAST_UPDATE_AT_DESC
  DELEGATORS_STDDEV_SAMPLE_ACCOUNT_ID_ASC
  DELEGATORS_STDDEV_SAMPLE_ACCOUNT_ID_DESC
  DELEGATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  DELEGATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  DELEGATORS_STDDEV_SAMPLE_ID_ASC
  DELEGATORS_STDDEV_SAMPLE_ID_DESC
  DELEGATORS_STDDEV_SAMPLE_JOINED_AT_ASC
  DELEGATORS_STDDEV_SAMPLE_JOINED_AT_DESC
  DELEGATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_ASC
  DELEGATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_DESC
  DELEGATORS_SUM_ACCOUNT_ID_ASC
  DELEGATORS_SUM_ACCOUNT_ID_DESC
  DELEGATORS_SUM_BLOCK_RANGE_ASC
  DELEGATORS_SUM_BLOCK_RANGE_DESC
  DELEGATORS_SUM_ID_ASC
  DELEGATORS_SUM_ID_DESC
  DELEGATORS_SUM_JOINED_AT_ASC
  DELEGATORS_SUM_JOINED_AT_DESC
  DELEGATORS_SUM_LAST_UPDATE_AT_ASC
  DELEGATORS_SUM_LAST_UPDATE_AT_DESC
  DELEGATORS_VARIANCE_POPULATION_ACCOUNT_ID_ASC
  DELEGATORS_VARIANCE_POPULATION_ACCOUNT_ID_DESC
  DELEGATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  DELEGATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  DELEGATORS_VARIANCE_POPULATION_ID_ASC
  DELEGATORS_VARIANCE_POPULATION_ID_DESC
  DELEGATORS_VARIANCE_POPULATION_JOINED_AT_ASC
  DELEGATORS_VARIANCE_POPULATION_JOINED_AT_DESC
  DELEGATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_ASC
  DELEGATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_DESC
  DELEGATORS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC
  DELEGATORS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC
  DELEGATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  DELEGATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  DELEGATORS_VARIANCE_SAMPLE_ID_ASC
  DELEGATORS_VARIANCE_SAMPLE_ID_DESC
  DELEGATORS_VARIANCE_SAMPLE_JOINED_AT_ASC
  DELEGATORS_VARIANCE_SAMPLE_JOINED_AT_DESC
  DELEGATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_ASC
  DELEGATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_DESC
  ID_ASC
  ID_DESC
  JOB_CALLS_AVERAGE_BLOCK_RANGE_ASC
  JOB_CALLS_AVERAGE_BLOCK_RANGE_DESC
  JOB_CALLS_AVERAGE_CALLER_ID_ASC
  JOB_CALLS_AVERAGE_CALLER_ID_DESC
  JOB_CALLS_AVERAGE_CREATED_AT_ASC
  JOB_CALLS_AVERAGE_CREATED_AT_DESC
  JOB_CALLS_AVERAGE_ID_ASC
  JOB_CALLS_AVERAGE_ID_DESC
  JOB_CALLS_AVERAGE_JOB_ID_ASC
  JOB_CALLS_AVERAGE_JOB_ID_DESC
  JOB_CALLS_AVERAGE_SERVICE_ID_ASC
  JOB_CALLS_AVERAGE_SERVICE_ID_DESC
  JOB_CALLS_BY_CALLER_ID__COUNT_ASC
  JOB_CALLS_BY_CALLER_ID__COUNT_DESC
  JOB_CALLS_COUNT_ASC
  JOB_CALLS_COUNT_DESC
  JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  JOB_CALLS_DISTINCT_COUNT_CALLER_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_CALLER_ID_DESC
  JOB_CALLS_DISTINCT_COUNT_CREATED_AT_ASC
  JOB_CALLS_DISTINCT_COUNT_CREATED_AT_DESC
  JOB_CALLS_DISTINCT_COUNT_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_ID_DESC
  JOB_CALLS_DISTINCT_COUNT_JOB_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_JOB_ID_DESC
  JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_DESC
  JOB_CALLS_MAX_BLOCK_RANGE_ASC
  JOB_CALLS_MAX_BLOCK_RANGE_DESC
  JOB_CALLS_MAX_CALLER_ID_ASC
  JOB_CALLS_MAX_CALLER_ID_DESC
  JOB_CALLS_MAX_CREATED_AT_ASC
  JOB_CALLS_MAX_CREATED_AT_DESC
  JOB_CALLS_MAX_ID_ASC
  JOB_CALLS_MAX_ID_DESC
  JOB_CALLS_MAX_JOB_ID_ASC
  JOB_CALLS_MAX_JOB_ID_DESC
  JOB_CALLS_MAX_SERVICE_ID_ASC
  JOB_CALLS_MAX_SERVICE_ID_DESC
  JOB_CALLS_MIN_BLOCK_RANGE_ASC
  JOB_CALLS_MIN_BLOCK_RANGE_DESC
  JOB_CALLS_MIN_CALLER_ID_ASC
  JOB_CALLS_MIN_CALLER_ID_DESC
  JOB_CALLS_MIN_CREATED_AT_ASC
  JOB_CALLS_MIN_CREATED_AT_DESC
  JOB_CALLS_MIN_ID_ASC
  JOB_CALLS_MIN_ID_DESC
  JOB_CALLS_MIN_JOB_ID_ASC
  JOB_CALLS_MIN_JOB_ID_DESC
  JOB_CALLS_MIN_SERVICE_ID_ASC
  JOB_CALLS_MIN_SERVICE_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  JOB_CALLS_STDDEV_POPULATION_CALLER_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_CALLER_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_CREATED_AT_ASC
  JOB_CALLS_STDDEV_POPULATION_CREATED_AT_DESC
  JOB_CALLS_STDDEV_POPULATION_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_JOB_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_JOB_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_ASC
  JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_DESC
  JOB_CALLS_STDDEV_SAMPLE_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_JOB_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_JOB_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_DESC
  JOB_CALLS_SUM_BLOCK_RANGE_ASC
  JOB_CALLS_SUM_BLOCK_RANGE_DESC
  JOB_CALLS_SUM_CALLER_ID_ASC
  JOB_CALLS_SUM_CALLER_ID_DESC
  JOB_CALLS_SUM_CREATED_AT_ASC
  JOB_CALLS_SUM_CREATED_AT_DESC
  JOB_CALLS_SUM_ID_ASC
  JOB_CALLS_SUM_ID_DESC
  JOB_CALLS_SUM_JOB_ID_ASC
  JOB_CALLS_SUM_JOB_ID_DESC
  JOB_CALLS_SUM_SERVICE_ID_ASC
  JOB_CALLS_SUM_SERVICE_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_ASC
  JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_DESC
  JOB_CALLS_VARIANCE_POPULATION_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_JOB_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_JOB_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_ASC
  JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_DESC
  JOB_CALLS_VARIANCE_SAMPLE_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_DESC
  LAST_UPDATE_AT_ASC
  LAST_UPDATE_AT_DESC
  LST_POOL_MEMBERS_AVERAGE_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_AVERAGE_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_AVERAGE_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_AVERAGE_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_AVERAGE_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_AVERAGE_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_AVERAGE_ID_ASC
  LST_POOL_MEMBERS_AVERAGE_ID_DESC
  LST_POOL_MEMBERS_AVERAGE_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_AVERAGE_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_BY_ACCOUNT_ID__COUNT_ASC
  LST_POOL_MEMBERS_BY_ACCOUNT_ID__COUNT_DESC
  LST_POOL_MEMBERS_COUNT_ASC
  LST_POOL_MEMBERS_COUNT_DESC
  LST_POOL_MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_DISTINCT_COUNT_ID_ASC
  LST_POOL_MEMBERS_DISTINCT_COUNT_ID_DESC
  LST_POOL_MEMBERS_DISTINCT_COUNT_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_DISTINCT_COUNT_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_MAX_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_MAX_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_MAX_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_MAX_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_MAX_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_MAX_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_MAX_ID_ASC
  LST_POOL_MEMBERS_MAX_ID_DESC
  LST_POOL_MEMBERS_MAX_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_MAX_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_MIN_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_MIN_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_MIN_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_MIN_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_MIN_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_MIN_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_MIN_ID_ASC
  LST_POOL_MEMBERS_MIN_ID_DESC
  LST_POOL_MEMBERS_MIN_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_MIN_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_STDDEV_POPULATION_ID_ASC
  LST_POOL_MEMBERS_STDDEV_POPULATION_ID_DESC
  LST_POOL_MEMBERS_STDDEV_POPULATION_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_STDDEV_POPULATION_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_ID_ASC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_ID_DESC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_SUM_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_SUM_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_SUM_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_SUM_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_SUM_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_SUM_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_SUM_ID_ASC
  LST_POOL_MEMBERS_SUM_ID_DESC
  LST_POOL_MEMBERS_SUM_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_SUM_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_ID_ASC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_ID_DESC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_DESC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_ASC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_DESC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_ID_ASC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_ID_DESC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_ASC
  LST_POOL_MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_DESC
  NATURAL
  OPERATORS_AVERAGE_ACCOUNT_ID_ASC
  OPERATORS_AVERAGE_ACCOUNT_ID_DESC
  OPERATORS_AVERAGE_BLOCK_RANGE_ASC
  OPERATORS_AVERAGE_BLOCK_RANGE_DESC
  OPERATORS_AVERAGE_CURRENT_STAKE_ASC
  OPERATORS_AVERAGE_CURRENT_STAKE_DESC
  OPERATORS_AVERAGE_CURRENT_STATUS_ASC
  OPERATORS_AVERAGE_CURRENT_STATUS_DESC
  OPERATORS_AVERAGE_ID_ASC
  OPERATORS_AVERAGE_ID_DESC
  OPERATORS_AVERAGE_JOINED_AT_ASC
  OPERATORS_AVERAGE_JOINED_AT_DESC
  OPERATORS_AVERAGE_LAST_UPDATE_AT_ASC
  OPERATORS_AVERAGE_LAST_UPDATE_AT_DESC
  OPERATORS_AVERAGE_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_AVERAGE_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_AVERAGE_TOTAL_BLUEPRINTS_ASC
  OPERATORS_AVERAGE_TOTAL_BLUEPRINTS_DESC
  OPERATORS_AVERAGE_TOTAL_SERVICES_ASC
  OPERATORS_AVERAGE_TOTAL_SERVICES_DESC
  OPERATORS_AVERAGE_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_AVERAGE_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_BY_ACCOUNT_ID__COUNT_ASC
  OPERATORS_BY_ACCOUNT_ID__COUNT_DESC
  OPERATORS_COUNT_ASC
  OPERATORS_COUNT_DESC
  OPERATORS_DISTINCT_COUNT_ACCOUNT_ID_ASC
  OPERATORS_DISTINCT_COUNT_ACCOUNT_ID_DESC
  OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  OPERATORS_DISTINCT_COUNT_CURRENT_STAKE_ASC
  OPERATORS_DISTINCT_COUNT_CURRENT_STAKE_DESC
  OPERATORS_DISTINCT_COUNT_CURRENT_STATUS_ASC
  OPERATORS_DISTINCT_COUNT_CURRENT_STATUS_DESC
  OPERATORS_DISTINCT_COUNT_ID_ASC
  OPERATORS_DISTINCT_COUNT_ID_DESC
  OPERATORS_DISTINCT_COUNT_JOINED_AT_ASC
  OPERATORS_DISTINCT_COUNT_JOINED_AT_DESC
  OPERATORS_DISTINCT_COUNT_LAST_UPDATE_AT_ASC
  OPERATORS_DISTINCT_COUNT_LAST_UPDATE_AT_DESC
  OPERATORS_DISTINCT_COUNT_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_DISTINCT_COUNT_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_DISTINCT_COUNT_TOTAL_BLUEPRINTS_ASC
  OPERATORS_DISTINCT_COUNT_TOTAL_BLUEPRINTS_DESC
  OPERATORS_DISTINCT_COUNT_TOTAL_SERVICES_ASC
  OPERATORS_DISTINCT_COUNT_TOTAL_SERVICES_DESC
  OPERATORS_DISTINCT_COUNT_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_DISTINCT_COUNT_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_MAX_ACCOUNT_ID_ASC
  OPERATORS_MAX_ACCOUNT_ID_DESC
  OPERATORS_MAX_BLOCK_RANGE_ASC
  OPERATORS_MAX_BLOCK_RANGE_DESC
  OPERATORS_MAX_CURRENT_STAKE_ASC
  OPERATORS_MAX_CURRENT_STAKE_DESC
  OPERATORS_MAX_CURRENT_STATUS_ASC
  OPERATORS_MAX_CURRENT_STATUS_DESC
  OPERATORS_MAX_ID_ASC
  OPERATORS_MAX_ID_DESC
  OPERATORS_MAX_JOINED_AT_ASC
  OPERATORS_MAX_JOINED_AT_DESC
  OPERATORS_MAX_LAST_UPDATE_AT_ASC
  OPERATORS_MAX_LAST_UPDATE_AT_DESC
  OPERATORS_MAX_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_MAX_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_MAX_TOTAL_BLUEPRINTS_ASC
  OPERATORS_MAX_TOTAL_BLUEPRINTS_DESC
  OPERATORS_MAX_TOTAL_SERVICES_ASC
  OPERATORS_MAX_TOTAL_SERVICES_DESC
  OPERATORS_MAX_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_MAX_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_MIN_ACCOUNT_ID_ASC
  OPERATORS_MIN_ACCOUNT_ID_DESC
  OPERATORS_MIN_BLOCK_RANGE_ASC
  OPERATORS_MIN_BLOCK_RANGE_DESC
  OPERATORS_MIN_CURRENT_STAKE_ASC
  OPERATORS_MIN_CURRENT_STAKE_DESC
  OPERATORS_MIN_CURRENT_STATUS_ASC
  OPERATORS_MIN_CURRENT_STATUS_DESC
  OPERATORS_MIN_ID_ASC
  OPERATORS_MIN_ID_DESC
  OPERATORS_MIN_JOINED_AT_ASC
  OPERATORS_MIN_JOINED_AT_DESC
  OPERATORS_MIN_LAST_UPDATE_AT_ASC
  OPERATORS_MIN_LAST_UPDATE_AT_DESC
  OPERATORS_MIN_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_MIN_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_MIN_TOTAL_BLUEPRINTS_ASC
  OPERATORS_MIN_TOTAL_BLUEPRINTS_DESC
  OPERATORS_MIN_TOTAL_SERVICES_ASC
  OPERATORS_MIN_TOTAL_SERVICES_DESC
  OPERATORS_MIN_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_MIN_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_STDDEV_POPULATION_ACCOUNT_ID_ASC
  OPERATORS_STDDEV_POPULATION_ACCOUNT_ID_DESC
  OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  OPERATORS_STDDEV_POPULATION_CURRENT_STAKE_ASC
  OPERATORS_STDDEV_POPULATION_CURRENT_STAKE_DESC
  OPERATORS_STDDEV_POPULATION_CURRENT_STATUS_ASC
  OPERATORS_STDDEV_POPULATION_CURRENT_STATUS_DESC
  OPERATORS_STDDEV_POPULATION_ID_ASC
  OPERATORS_STDDEV_POPULATION_ID_DESC
  OPERATORS_STDDEV_POPULATION_JOINED_AT_ASC
  OPERATORS_STDDEV_POPULATION_JOINED_AT_DESC
  OPERATORS_STDDEV_POPULATION_LAST_UPDATE_AT_ASC
  OPERATORS_STDDEV_POPULATION_LAST_UPDATE_AT_DESC
  OPERATORS_STDDEV_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_STDDEV_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_STDDEV_POPULATION_TOTAL_BLUEPRINTS_ASC
  OPERATORS_STDDEV_POPULATION_TOTAL_BLUEPRINTS_DESC
  OPERATORS_STDDEV_POPULATION_TOTAL_SERVICES_ASC
  OPERATORS_STDDEV_POPULATION_TOTAL_SERVICES_DESC
  OPERATORS_STDDEV_POPULATION_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_STDDEV_POPULATION_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_STDDEV_SAMPLE_ACCOUNT_ID_ASC
  OPERATORS_STDDEV_SAMPLE_ACCOUNT_ID_DESC
  OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  OPERATORS_STDDEV_SAMPLE_CURRENT_STAKE_ASC
  OPERATORS_STDDEV_SAMPLE_CURRENT_STAKE_DESC
  OPERATORS_STDDEV_SAMPLE_CURRENT_STATUS_ASC
  OPERATORS_STDDEV_SAMPLE_CURRENT_STATUS_DESC
  OPERATORS_STDDEV_SAMPLE_ID_ASC
  OPERATORS_STDDEV_SAMPLE_ID_DESC
  OPERATORS_STDDEV_SAMPLE_JOINED_AT_ASC
  OPERATORS_STDDEV_SAMPLE_JOINED_AT_DESC
  OPERATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_ASC
  OPERATORS_STDDEV_SAMPLE_LAST_UPDATE_AT_DESC
  OPERATORS_STDDEV_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_STDDEV_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_STDDEV_SAMPLE_TOTAL_BLUEPRINTS_ASC
  OPERATORS_STDDEV_SAMPLE_TOTAL_BLUEPRINTS_DESC
  OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICES_ASC
  OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICES_DESC
  OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_STDDEV_SAMPLE_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_SUM_ACCOUNT_ID_ASC
  OPERATORS_SUM_ACCOUNT_ID_DESC
  OPERATORS_SUM_BLOCK_RANGE_ASC
  OPERATORS_SUM_BLOCK_RANGE_DESC
  OPERATORS_SUM_CURRENT_STAKE_ASC
  OPERATORS_SUM_CURRENT_STAKE_DESC
  OPERATORS_SUM_CURRENT_STATUS_ASC
  OPERATORS_SUM_CURRENT_STATUS_DESC
  OPERATORS_SUM_ID_ASC
  OPERATORS_SUM_ID_DESC
  OPERATORS_SUM_JOINED_AT_ASC
  OPERATORS_SUM_JOINED_AT_DESC
  OPERATORS_SUM_LAST_UPDATE_AT_ASC
  OPERATORS_SUM_LAST_UPDATE_AT_DESC
  OPERATORS_SUM_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_SUM_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_SUM_TOTAL_BLUEPRINTS_ASC
  OPERATORS_SUM_TOTAL_BLUEPRINTS_DESC
  OPERATORS_SUM_TOTAL_SERVICES_ASC
  OPERATORS_SUM_TOTAL_SERVICES_DESC
  OPERATORS_SUM_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_SUM_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_VARIANCE_POPULATION_ACCOUNT_ID_ASC
  OPERATORS_VARIANCE_POPULATION_ACCOUNT_ID_DESC
  OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  OPERATORS_VARIANCE_POPULATION_CURRENT_STAKE_ASC
  OPERATORS_VARIANCE_POPULATION_CURRENT_STAKE_DESC
  OPERATORS_VARIANCE_POPULATION_CURRENT_STATUS_ASC
  OPERATORS_VARIANCE_POPULATION_CURRENT_STATUS_DESC
  OPERATORS_VARIANCE_POPULATION_ID_ASC
  OPERATORS_VARIANCE_POPULATION_ID_DESC
  OPERATORS_VARIANCE_POPULATION_JOINED_AT_ASC
  OPERATORS_VARIANCE_POPULATION_JOINED_AT_DESC
  OPERATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_ASC
  OPERATORS_VARIANCE_POPULATION_LAST_UPDATE_AT_DESC
  OPERATORS_VARIANCE_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_VARIANCE_POPULATION_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_VARIANCE_POPULATION_TOTAL_BLUEPRINTS_ASC
  OPERATORS_VARIANCE_POPULATION_TOTAL_BLUEPRINTS_DESC
  OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICES_ASC
  OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICES_DESC
  OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_VARIANCE_POPULATION_TOTAL_SERVICE_REQUESTS_DESC
  OPERATORS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC
  OPERATORS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC
  OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  OPERATORS_VARIANCE_SAMPLE_CURRENT_STAKE_ASC
  OPERATORS_VARIANCE_SAMPLE_CURRENT_STAKE_DESC
  OPERATORS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC
  OPERATORS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC
  OPERATORS_VARIANCE_SAMPLE_ID_ASC
  OPERATORS_VARIANCE_SAMPLE_ID_DESC
  OPERATORS_VARIANCE_SAMPLE_JOINED_AT_ASC
  OPERATORS_VARIANCE_SAMPLE_JOINED_AT_DESC
  OPERATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_ASC
  OPERATORS_VARIANCE_SAMPLE_LAST_UPDATE_AT_DESC
  OPERATORS_VARIANCE_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATORS_VARIANCE_SAMPLE_SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATORS_VARIANCE_SAMPLE_TOTAL_BLUEPRINTS_ASC
  OPERATORS_VARIANCE_SAMPLE_TOTAL_BLUEPRINTS_DESC
  OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICES_ASC
  OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICES_DESC
  OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICE_REQUESTS_ASC
  OPERATORS_VARIANCE_SAMPLE_TOTAL_SERVICE_REQUESTS_DESC
  POINTS_ACCRUALS_AVERAGE_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_AVERAGE_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_AVERAGE_AMOUNT_ASC
  POINTS_ACCRUALS_AVERAGE_AMOUNT_DESC
  POINTS_ACCRUALS_AVERAGE_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_AVERAGE_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_AVERAGE_ID_ASC
  POINTS_ACCRUALS_AVERAGE_ID_DESC
  POINTS_ACCRUALS_AVERAGE_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_AVERAGE_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_AVERAGE_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_AVERAGE_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_AVERAGE_SOURCE_ASC
  POINTS_ACCRUALS_AVERAGE_SOURCE_DESC
  POINTS_ACCRUALS_AVERAGE_START_BLOCK_ASC
  POINTS_ACCRUALS_AVERAGE_START_BLOCK_DESC
  POINTS_ACCRUALS_COUNT_ASC
  POINTS_ACCRUALS_COUNT_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_AMOUNT_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_AMOUNT_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_ID_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_ID_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_SOURCE_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_SOURCE_DESC
  POINTS_ACCRUALS_DISTINCT_COUNT_START_BLOCK_ASC
  POINTS_ACCRUALS_DISTINCT_COUNT_START_BLOCK_DESC
  POINTS_ACCRUALS_MAX_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_MAX_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_MAX_AMOUNT_ASC
  POINTS_ACCRUALS_MAX_AMOUNT_DESC
  POINTS_ACCRUALS_MAX_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_MAX_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_MAX_ID_ASC
  POINTS_ACCRUALS_MAX_ID_DESC
  POINTS_ACCRUALS_MAX_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_MAX_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_MAX_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_MAX_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_MAX_SOURCE_ASC
  POINTS_ACCRUALS_MAX_SOURCE_DESC
  POINTS_ACCRUALS_MAX_START_BLOCK_ASC
  POINTS_ACCRUALS_MAX_START_BLOCK_DESC
  POINTS_ACCRUALS_MIN_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_MIN_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_MIN_AMOUNT_ASC
  POINTS_ACCRUALS_MIN_AMOUNT_DESC
  POINTS_ACCRUALS_MIN_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_MIN_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_MIN_ID_ASC
  POINTS_ACCRUALS_MIN_ID_DESC
  POINTS_ACCRUALS_MIN_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_MIN_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_MIN_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_MIN_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_MIN_SOURCE_ASC
  POINTS_ACCRUALS_MIN_SOURCE_DESC
  POINTS_ACCRUALS_MIN_START_BLOCK_ASC
  POINTS_ACCRUALS_MIN_START_BLOCK_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_AMOUNT_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_AMOUNT_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_ID_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_ID_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_SOURCE_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_SOURCE_DESC
  POINTS_ACCRUALS_STDDEV_POPULATION_START_BLOCK_ASC
  POINTS_ACCRUALS_STDDEV_POPULATION_START_BLOCK_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_AMOUNT_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_AMOUNT_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_ID_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_ID_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_SOURCE_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_SOURCE_DESC
  POINTS_ACCRUALS_STDDEV_SAMPLE_START_BLOCK_ASC
  POINTS_ACCRUALS_STDDEV_SAMPLE_START_BLOCK_DESC
  POINTS_ACCRUALS_SUM_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_SUM_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_SUM_AMOUNT_ASC
  POINTS_ACCRUALS_SUM_AMOUNT_DESC
  POINTS_ACCRUALS_SUM_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_SUM_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_SUM_ID_ASC
  POINTS_ACCRUALS_SUM_ID_DESC
  POINTS_ACCRUALS_SUM_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_SUM_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_SUM_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_SUM_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_SUM_SOURCE_ASC
  POINTS_ACCRUALS_SUM_SOURCE_DESC
  POINTS_ACCRUALS_SUM_START_BLOCK_ASC
  POINTS_ACCRUALS_SUM_START_BLOCK_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_AMOUNT_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_AMOUNT_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_ID_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_ID_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_SOURCE_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_SOURCE_DESC
  POINTS_ACCRUALS_VARIANCE_POPULATION_START_BLOCK_ASC
  POINTS_ACCRUALS_VARIANCE_POPULATION_START_BLOCK_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_AMOUNT_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_AMOUNT_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_ID_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_ID_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_LAST_UPDATE_BLOCK_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_LAST_UPDATE_BLOCK_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_RATE_PER_HOUR_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_RATE_PER_HOUR_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_SOURCE_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_SOURCE_DESC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_START_BLOCK_ASC
  POINTS_ACCRUALS_VARIANCE_SAMPLE_START_BLOCK_DESC
  POINTS_ACCRUAL_RATES_BY_ACCOUNT_ID__COUNT_ASC
  POINTS_ACCRUAL_RATES_BY_ACCOUNT_ID__COUNT_DESC
  POINTS_SNAPSHOTS_BY_ACCOUNT_ID__COUNT_ASC
  POINTS_SNAPSHOTS_BY_ACCOUNT_ID__COUNT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICES_AVERAGE_ASSET_IDS_ASC
  SERVICES_AVERAGE_ASSET_IDS_DESC
  SERVICES_AVERAGE_BLOCK_RANGE_ASC
  SERVICES_AVERAGE_BLOCK_RANGE_DESC
  SERVICES_AVERAGE_BLUEPRINT_ID_ASC
  SERVICES_AVERAGE_BLUEPRINT_ID_DESC
  SERVICES_AVERAGE_CREATED_AT_ASC
  SERVICES_AVERAGE_CREATED_AT_DESC
  SERVICES_AVERAGE_ID_ASC
  SERVICES_AVERAGE_ID_DESC
  SERVICES_AVERAGE_OWNER_ID_ASC
  SERVICES_AVERAGE_OWNER_ID_DESC
  SERVICES_AVERAGE_SERVICE_REQUEST_ID_ASC
  SERVICES_AVERAGE_SERVICE_REQUEST_ID_DESC
  SERVICES_AVERAGE_TERMINATED_AT_ASC
  SERVICES_AVERAGE_TERMINATED_AT_DESC
  SERVICES_BY_OWNER_ID__COUNT_ASC
  SERVICES_BY_OWNER_ID__COUNT_DESC
  SERVICES_COUNT_ASC
  SERVICES_COUNT_DESC
  SERVICES_DISTINCT_COUNT_ASSET_IDS_ASC
  SERVICES_DISTINCT_COUNT_ASSET_IDS_DESC
  SERVICES_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICES_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_ASC
  SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_DESC
  SERVICES_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICES_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICES_DISTINCT_COUNT_ID_ASC
  SERVICES_DISTINCT_COUNT_ID_DESC
  SERVICES_DISTINCT_COUNT_OWNER_ID_ASC
  SERVICES_DISTINCT_COUNT_OWNER_ID_DESC
  SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC
  SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC
  SERVICES_DISTINCT_COUNT_TERMINATED_AT_ASC
  SERVICES_DISTINCT_COUNT_TERMINATED_AT_DESC
  SERVICES_MAX_ASSET_IDS_ASC
  SERVICES_MAX_ASSET_IDS_DESC
  SERVICES_MAX_BLOCK_RANGE_ASC
  SERVICES_MAX_BLOCK_RANGE_DESC
  SERVICES_MAX_BLUEPRINT_ID_ASC
  SERVICES_MAX_BLUEPRINT_ID_DESC
  SERVICES_MAX_CREATED_AT_ASC
  SERVICES_MAX_CREATED_AT_DESC
  SERVICES_MAX_ID_ASC
  SERVICES_MAX_ID_DESC
  SERVICES_MAX_OWNER_ID_ASC
  SERVICES_MAX_OWNER_ID_DESC
  SERVICES_MAX_SERVICE_REQUEST_ID_ASC
  SERVICES_MAX_SERVICE_REQUEST_ID_DESC
  SERVICES_MAX_TERMINATED_AT_ASC
  SERVICES_MAX_TERMINATED_AT_DESC
  SERVICES_MIN_ASSET_IDS_ASC
  SERVICES_MIN_ASSET_IDS_DESC
  SERVICES_MIN_BLOCK_RANGE_ASC
  SERVICES_MIN_BLOCK_RANGE_DESC
  SERVICES_MIN_BLUEPRINT_ID_ASC
  SERVICES_MIN_BLUEPRINT_ID_DESC
  SERVICES_MIN_CREATED_AT_ASC
  SERVICES_MIN_CREATED_AT_DESC
  SERVICES_MIN_ID_ASC
  SERVICES_MIN_ID_DESC
  SERVICES_MIN_OWNER_ID_ASC
  SERVICES_MIN_OWNER_ID_DESC
  SERVICES_MIN_SERVICE_REQUEST_ID_ASC
  SERVICES_MIN_SERVICE_REQUEST_ID_DESC
  SERVICES_MIN_TERMINATED_AT_ASC
  SERVICES_MIN_TERMINATED_AT_DESC
  SERVICES_STDDEV_POPULATION_ASSET_IDS_ASC
  SERVICES_STDDEV_POPULATION_ASSET_IDS_DESC
  SERVICES_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICES_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_ASC
  SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_DESC
  SERVICES_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICES_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICES_STDDEV_POPULATION_ID_ASC
  SERVICES_STDDEV_POPULATION_ID_DESC
  SERVICES_STDDEV_POPULATION_OWNER_ID_ASC
  SERVICES_STDDEV_POPULATION_OWNER_ID_DESC
  SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICES_STDDEV_POPULATION_TERMINATED_AT_ASC
  SERVICES_STDDEV_POPULATION_TERMINATED_AT_DESC
  SERVICES_STDDEV_SAMPLE_ASSET_IDS_ASC
  SERVICES_STDDEV_SAMPLE_ASSET_IDS_DESC
  SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_ASC
  SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_DESC
  SERVICES_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICES_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICES_STDDEV_SAMPLE_ID_ASC
  SERVICES_STDDEV_SAMPLE_ID_DESC
  SERVICES_STDDEV_SAMPLE_OWNER_ID_ASC
  SERVICES_STDDEV_SAMPLE_OWNER_ID_DESC
  SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICES_STDDEV_SAMPLE_TERMINATED_AT_ASC
  SERVICES_STDDEV_SAMPLE_TERMINATED_AT_DESC
  SERVICES_SUM_ASSET_IDS_ASC
  SERVICES_SUM_ASSET_IDS_DESC
  SERVICES_SUM_BLOCK_RANGE_ASC
  SERVICES_SUM_BLOCK_RANGE_DESC
  SERVICES_SUM_BLUEPRINT_ID_ASC
  SERVICES_SUM_BLUEPRINT_ID_DESC
  SERVICES_SUM_CREATED_AT_ASC
  SERVICES_SUM_CREATED_AT_DESC
  SERVICES_SUM_ID_ASC
  SERVICES_SUM_ID_DESC
  SERVICES_SUM_OWNER_ID_ASC
  SERVICES_SUM_OWNER_ID_DESC
  SERVICES_SUM_SERVICE_REQUEST_ID_ASC
  SERVICES_SUM_SERVICE_REQUEST_ID_DESC
  SERVICES_SUM_TERMINATED_AT_ASC
  SERVICES_SUM_TERMINATED_AT_DESC
  SERVICES_VARIANCE_POPULATION_ASSET_IDS_ASC
  SERVICES_VARIANCE_POPULATION_ASSET_IDS_DESC
  SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_ASC
  SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_DESC
  SERVICES_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICES_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICES_VARIANCE_POPULATION_ID_ASC
  SERVICES_VARIANCE_POPULATION_ID_DESC
  SERVICES_VARIANCE_POPULATION_OWNER_ID_ASC
  SERVICES_VARIANCE_POPULATION_OWNER_ID_DESC
  SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICES_VARIANCE_POPULATION_TERMINATED_AT_ASC
  SERVICES_VARIANCE_POPULATION_TERMINATED_AT_DESC
  SERVICES_VARIANCE_SAMPLE_ASSET_IDS_ASC
  SERVICES_VARIANCE_SAMPLE_ASSET_IDS_DESC
  SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC
  SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC
  SERVICES_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICES_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICES_VARIANCE_SAMPLE_ID_ASC
  SERVICES_VARIANCE_SAMPLE_ID_DESC
  SERVICES_VARIANCE_SAMPLE_OWNER_ID_ASC
  SERVICES_VARIANCE_SAMPLE_OWNER_ID_DESC
  SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_ASC
  SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_DESC
  SERVICE_REQUESTS_AVERAGE_ASSET_IDS_ASC
  SERVICE_REQUESTS_AVERAGE_ASSET_IDS_DESC
  SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_AVERAGE_CREATED_AT_ASC
  SERVICE_REQUESTS_AVERAGE_CREATED_AT_DESC
  SERVICE_REQUESTS_AVERAGE_ID_ASC
  SERVICE_REQUESTS_AVERAGE_ID_DESC
  SERVICE_REQUESTS_AVERAGE_OWNER_ID_ASC
  SERVICE_REQUESTS_AVERAGE_OWNER_ID_DESC
  SERVICE_REQUESTS_BY_OWNER_ID__COUNT_ASC
  SERVICE_REQUESTS_BY_OWNER_ID__COUNT_DESC
  SERVICE_REQUESTS_COUNT_ASC
  SERVICE_REQUESTS_COUNT_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_ID_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_ID_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_DESC
  SERVICE_REQUESTS_MAX_ASSET_IDS_ASC
  SERVICE_REQUESTS_MAX_ASSET_IDS_DESC
  SERVICE_REQUESTS_MAX_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_MAX_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_MAX_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_MAX_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_MAX_CREATED_AT_ASC
  SERVICE_REQUESTS_MAX_CREATED_AT_DESC
  SERVICE_REQUESTS_MAX_ID_ASC
  SERVICE_REQUESTS_MAX_ID_DESC
  SERVICE_REQUESTS_MAX_OWNER_ID_ASC
  SERVICE_REQUESTS_MAX_OWNER_ID_DESC
  SERVICE_REQUESTS_MIN_ASSET_IDS_ASC
  SERVICE_REQUESTS_MIN_ASSET_IDS_DESC
  SERVICE_REQUESTS_MIN_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_MIN_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_MIN_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_MIN_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_MIN_CREATED_AT_ASC
  SERVICE_REQUESTS_MIN_CREATED_AT_DESC
  SERVICE_REQUESTS_MIN_ID_ASC
  SERVICE_REQUESTS_MIN_ID_DESC
  SERVICE_REQUESTS_MIN_OWNER_ID_ASC
  SERVICE_REQUESTS_MIN_OWNER_ID_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_ID_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_ID_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ID_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ID_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_DESC
  SERVICE_REQUESTS_SUM_ASSET_IDS_ASC
  SERVICE_REQUESTS_SUM_ASSET_IDS_DESC
  SERVICE_REQUESTS_SUM_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_SUM_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_SUM_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_SUM_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_SUM_CREATED_AT_ASC
  SERVICE_REQUESTS_SUM_CREATED_AT_DESC
  SERVICE_REQUESTS_SUM_ID_ASC
  SERVICE_REQUESTS_SUM_ID_DESC
  SERVICE_REQUESTS_SUM_OWNER_ID_ASC
  SERVICE_REQUESTS_SUM_OWNER_ID_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ID_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ID_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_DESC
  SNAPSHOTS_AVERAGE_ACCOUNT_ID_ASC
  SNAPSHOTS_AVERAGE_ACCOUNT_ID_DESC
  SNAPSHOTS_AVERAGE_BLOCK_NUMBER_ASC
  SNAPSHOTS_AVERAGE_BLOCK_NUMBER_DESC
  SNAPSHOTS_AVERAGE_BLOCK_RANGE_ASC
  SNAPSHOTS_AVERAGE_BLOCK_RANGE_DESC
  SNAPSHOTS_AVERAGE_ID_ASC
  SNAPSHOTS_AVERAGE_ID_DESC
  SNAPSHOTS_AVERAGE_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_AVERAGE_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_AVERAGE_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_AVERAGE_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_AVERAGE_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_AVERAGE_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_AVERAGE_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_AVERAGE_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_AVERAGE_TIMESTAMP_ASC
  SNAPSHOTS_AVERAGE_TIMESTAMP_DESC
  SNAPSHOTS_AVERAGE_TOTAL_POINTS_ASC
  SNAPSHOTS_AVERAGE_TOTAL_POINTS_DESC
  SNAPSHOTS_AVERAGE_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_AVERAGE_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_AVERAGE_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_AVERAGE_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_COUNT_ASC
  SNAPSHOTS_COUNT_DESC
  SNAPSHOTS_DISTINCT_COUNT_ACCOUNT_ID_ASC
  SNAPSHOTS_DISTINCT_COUNT_ACCOUNT_ID_DESC
  SNAPSHOTS_DISTINCT_COUNT_BLOCK_NUMBER_ASC
  SNAPSHOTS_DISTINCT_COUNT_BLOCK_NUMBER_DESC
  SNAPSHOTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SNAPSHOTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SNAPSHOTS_DISTINCT_COUNT_ID_ASC
  SNAPSHOTS_DISTINCT_COUNT_ID_DESC
  SNAPSHOTS_DISTINCT_COUNT_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_DISTINCT_COUNT_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_DISTINCT_COUNT_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_DISTINCT_COUNT_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_DISTINCT_COUNT_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_DISTINCT_COUNT_TIMESTAMP_ASC
  SNAPSHOTS_DISTINCT_COUNT_TIMESTAMP_DESC
  SNAPSHOTS_DISTINCT_COUNT_TOTAL_POINTS_ASC
  SNAPSHOTS_DISTINCT_COUNT_TOTAL_POINTS_DESC
  SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_DISTINCT_COUNT_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_MAX_ACCOUNT_ID_ASC
  SNAPSHOTS_MAX_ACCOUNT_ID_DESC
  SNAPSHOTS_MAX_BLOCK_NUMBER_ASC
  SNAPSHOTS_MAX_BLOCK_NUMBER_DESC
  SNAPSHOTS_MAX_BLOCK_RANGE_ASC
  SNAPSHOTS_MAX_BLOCK_RANGE_DESC
  SNAPSHOTS_MAX_ID_ASC
  SNAPSHOTS_MAX_ID_DESC
  SNAPSHOTS_MAX_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_MAX_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_MAX_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_MAX_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_MAX_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_MAX_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_MAX_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_MAX_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_MAX_TIMESTAMP_ASC
  SNAPSHOTS_MAX_TIMESTAMP_DESC
  SNAPSHOTS_MAX_TOTAL_POINTS_ASC
  SNAPSHOTS_MAX_TOTAL_POINTS_DESC
  SNAPSHOTS_MAX_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_MAX_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_MAX_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_MAX_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_MIN_ACCOUNT_ID_ASC
  SNAPSHOTS_MIN_ACCOUNT_ID_DESC
  SNAPSHOTS_MIN_BLOCK_NUMBER_ASC
  SNAPSHOTS_MIN_BLOCK_NUMBER_DESC
  SNAPSHOTS_MIN_BLOCK_RANGE_ASC
  SNAPSHOTS_MIN_BLOCK_RANGE_DESC
  SNAPSHOTS_MIN_ID_ASC
  SNAPSHOTS_MIN_ID_DESC
  SNAPSHOTS_MIN_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_MIN_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_MIN_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_MIN_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_MIN_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_MIN_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_MIN_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_MIN_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_MIN_TIMESTAMP_ASC
  SNAPSHOTS_MIN_TIMESTAMP_DESC
  SNAPSHOTS_MIN_TOTAL_POINTS_ASC
  SNAPSHOTS_MIN_TOTAL_POINTS_DESC
  SNAPSHOTS_MIN_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_MIN_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_MIN_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_MIN_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_STDDEV_POPULATION_ACCOUNT_ID_ASC
  SNAPSHOTS_STDDEV_POPULATION_ACCOUNT_ID_DESC
  SNAPSHOTS_STDDEV_POPULATION_BLOCK_NUMBER_ASC
  SNAPSHOTS_STDDEV_POPULATION_BLOCK_NUMBER_DESC
  SNAPSHOTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SNAPSHOTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SNAPSHOTS_STDDEV_POPULATION_ID_ASC
  SNAPSHOTS_STDDEV_POPULATION_ID_DESC
  SNAPSHOTS_STDDEV_POPULATION_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_STDDEV_POPULATION_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_STDDEV_POPULATION_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_STDDEV_POPULATION_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_STDDEV_POPULATION_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_STDDEV_POPULATION_TIMESTAMP_ASC
  SNAPSHOTS_STDDEV_POPULATION_TIMESTAMP_DESC
  SNAPSHOTS_STDDEV_POPULATION_TOTAL_POINTS_ASC
  SNAPSHOTS_STDDEV_POPULATION_TOTAL_POINTS_DESC
  SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_STDDEV_POPULATION_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_STDDEV_SAMPLE_ACCOUNT_ID_ASC
  SNAPSHOTS_STDDEV_SAMPLE_ACCOUNT_ID_DESC
  SNAPSHOTS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC
  SNAPSHOTS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC
  SNAPSHOTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SNAPSHOTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SNAPSHOTS_STDDEV_SAMPLE_ID_ASC
  SNAPSHOTS_STDDEV_SAMPLE_ID_DESC
  SNAPSHOTS_STDDEV_SAMPLE_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_STDDEV_SAMPLE_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_STDDEV_SAMPLE_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_STDDEV_SAMPLE_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_STDDEV_SAMPLE_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_STDDEV_SAMPLE_TIMESTAMP_ASC
  SNAPSHOTS_STDDEV_SAMPLE_TIMESTAMP_DESC
  SNAPSHOTS_STDDEV_SAMPLE_TOTAL_POINTS_ASC
  SNAPSHOTS_STDDEV_SAMPLE_TOTAL_POINTS_DESC
  SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_STDDEV_SAMPLE_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_SUM_ACCOUNT_ID_ASC
  SNAPSHOTS_SUM_ACCOUNT_ID_DESC
  SNAPSHOTS_SUM_BLOCK_NUMBER_ASC
  SNAPSHOTS_SUM_BLOCK_NUMBER_DESC
  SNAPSHOTS_SUM_BLOCK_RANGE_ASC
  SNAPSHOTS_SUM_BLOCK_RANGE_DESC
  SNAPSHOTS_SUM_ID_ASC
  SNAPSHOTS_SUM_ID_DESC
  SNAPSHOTS_SUM_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_SUM_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_SUM_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_SUM_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_SUM_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_SUM_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_SUM_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_SUM_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_SUM_TIMESTAMP_ASC
  SNAPSHOTS_SUM_TIMESTAMP_DESC
  SNAPSHOTS_SUM_TOTAL_POINTS_ASC
  SNAPSHOTS_SUM_TOTAL_POINTS_DESC
  SNAPSHOTS_SUM_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_SUM_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_SUM_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_SUM_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_POPULATION_ACCOUNT_ID_ASC
  SNAPSHOTS_VARIANCE_POPULATION_ACCOUNT_ID_DESC
  SNAPSHOTS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC
  SNAPSHOTS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC
  SNAPSHOTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SNAPSHOTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SNAPSHOTS_VARIANCE_POPULATION_ID_ASC
  SNAPSHOTS_VARIANCE_POPULATION_ID_DESC
  SNAPSHOTS_VARIANCE_POPULATION_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_VARIANCE_POPULATION_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_VARIANCE_POPULATION_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_POPULATION_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_VARIANCE_POPULATION_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_VARIANCE_POPULATION_TIMESTAMP_ASC
  SNAPSHOTS_VARIANCE_POPULATION_TIMESTAMP_DESC
  SNAPSHOTS_VARIANCE_POPULATION_TOTAL_POINTS_ASC
  SNAPSHOTS_VARIANCE_POPULATION_TOTAL_POINTS_DESC
  SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_POPULATION_VALIDATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_ID_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_ID_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_LIQUID_STAKING_POINTS_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_LIQUID_STAKING_POINTS_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_OPERATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_OPERATOR_REGISTRATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DELEGATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DELEGATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DEPOSIT_POINTS_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_RESTAKING_DEPOSIT_POINTS_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_TIMESTAMP_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_TIMESTAMP_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_TOTAL_POINTS_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_TOTAL_POINTS_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_NOMINATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_NOMINATION_POINTS_DESC
  SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_REGISTRATION_POINTS_ASC
  SNAPSHOTS_VARIANCE_SAMPLE_VALIDATOR_REGISTRATION_POINTS_DESC
  TOTAL_POINTS_ASC
  TOTAL_POINTS_DESC
}

"""
A floating point number that requires more precision than IEEE 754 binary 64
"""
scalar BigFloat

"""
A filter to be used against BigFloat fields. All fields are combined with a logical ‘and.’
"""
input BigFloatFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: BigFloat
  """Equal to the specified value."""
  equalTo: BigFloat
  """Greater than the specified value."""
  greaterThan: BigFloat
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: BigFloat
  """Included in the specified list."""
  in: [BigFloat!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: BigFloat
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: BigFloat
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: BigFloat
  """Not equal to the specified value."""
  notEqualTo: BigFloat
  """Not included in the specified list."""
  notIn: [BigFloat!]
}

"""
A signed eight-byte integer. The upper big integer values are greater than the
max value for a JavaScript number. Therefore all big integers will be output as
strings and not numbers.
"""
scalar BigInt

"""
A filter to be used against BigInt fields. All fields are combined with a logical ‘and.’
"""
input BigIntFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: BigInt
  """Equal to the specified value."""
  equalTo: BigInt
  """Greater than the specified value."""
  greaterThan: BigInt
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: BigInt
  """Included in the specified list."""
  in: [BigInt!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: BigInt
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: BigInt
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: BigInt
  """Not equal to the specified value."""
  notEqualTo: BigInt
  """Not included in the specified list."""
  notIn: [BigInt!]
}

type Blueprint implements Node {
  """Reads and enables pagination through a set of `Account`."""
  accountsByServiceBlueprintIdAndOwnerId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [accounts_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AccountFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyConnection!
  """Reads and enables pagination through a set of `Account`."""
  accountsByServiceRequestBlueprintIdAndOwnerId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [accounts_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AccountFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyConnection!
  """Reads and enables pagination through a set of `BlueprintOperator`."""
  blueprintOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprint_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `BlueprintOperator`."""
    orderBy: [BlueprintOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintOperatorsConnection!
  """The creation block number of the Blueprint."""
  createdAt: Int!
  """Unique identifier for the Blueprint."""
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByBlueprintOperatorBlueprintIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyConnection!
  """Reads a single `Account` that is related to this `Blueprint`."""
  owner: Account
  """The owner of the Blueprint."""
  ownerId: String!
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestsConnection!
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequestsByServiceBlueprintIdAndServiceRequestId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyConnection!
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

"""A connection to a list of `Account` values, with data from `Service`."""
type BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: AccountAggregates
  """
  A list of edges which contains the `Account`, info from the `Service`, and the cursor to aid in pagination.
  """
  edges: [BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Account` for these aggregates."""
    groupBy: [AccountsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: AccountsHavingInput
  ): [AccountAggregates!]
  """A list of `Account` objects."""
  nodes: [Account]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection, with data from `Service`."""
type BlueprintAccountsByServiceBlueprintIdAndOwnerIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Account` at the end of the edge."""
  node: Account
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

"""
A connection to a list of `Account` values, with data from `ServiceRequest`.
"""
type BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: AccountAggregates
  """
  A list of edges which contains the `Account`, info from the `ServiceRequest`, and the cursor to aid in pagination.
  """
  edges: [BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Account` for these aggregates."""
    groupBy: [AccountsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: AccountsHavingInput
  ): [AccountAggregates!]
  """A list of `Account` objects."""
  nodes: [Account]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection, with data from `ServiceRequest`."""
type BlueprintAccountsByServiceRequestBlueprintIdAndOwnerIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Account` at the end of the edge."""
  node: Account
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestsConnection!
}

type BlueprintAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: BlueprintAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: BlueprintDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: BlueprintMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: BlueprintMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: BlueprintStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: BlueprintStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: BlueprintSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: BlueprintVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: BlueprintVarianceSampleAggregates
}

"""A filter to be used against aggregates of `Blueprint` object types."""
input BlueprintAggregatesFilter {
  """Mean average aggregate over matching `Blueprint` objects."""
  average: BlueprintAverageAggregateFilter
  """Distinct count aggregate over matching `Blueprint` objects."""
  distinctCount: BlueprintDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `Blueprint` object to be included within the aggregate.
  """
  filter: BlueprintFilter
  """Maximum aggregate over matching `Blueprint` objects."""
  max: BlueprintMaxAggregateFilter
  """Minimum aggregate over matching `Blueprint` objects."""
  min: BlueprintMinAggregateFilter
  """
  Population standard deviation aggregate over matching `Blueprint` objects.
  """
  stddevPopulation: BlueprintStddevPopulationAggregateFilter
  """Sample standard deviation aggregate over matching `Blueprint` objects."""
  stddevSample: BlueprintStddevSampleAggregateFilter
  """Sum aggregate over matching `Blueprint` objects."""
  sum: BlueprintSumAggregateFilter
  """Population variance aggregate over matching `Blueprint` objects."""
  variancePopulation: BlueprintVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `Blueprint` objects."""
  varianceSample: BlueprintVarianceSampleAggregateFilter
}

input BlueprintAverageAggregateFilter {
  createdAt: BigFloatFilter
}

type BlueprintAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
}

input BlueprintDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  createdAt: BigIntFilter
  id: BigIntFilter
  ownerId: BigIntFilter
}

type BlueprintDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of ownerId across the matching connection"""
  ownerId: BigInt
}

"""
A filter to be used against `Blueprint` object types. All fields are combined with a logical ‘and.’
"""
input BlueprintFilter {
  """Checks for all expressions in this list."""
  and: [BlueprintFilter!]
  """Filter by the object’s `blueprintOperators` relation."""
  blueprintOperators: BlueprintToManyBlueprintOperatorFilter
  """Some related `blueprintOperators` exist."""
  blueprintOperatorsExist: Boolean
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: BlueprintFilter
  """Checks for any expressions in this list."""
  or: [BlueprintFilter!]
  """Filter by the object’s `owner` relation."""
  owner: AccountFilter
  """Filter by the object’s `ownerId` field."""
  ownerId: StringFilter
  """Filter by the object’s `serviceRequests` relation."""
  serviceRequests: BlueprintToManyServiceRequestFilter
  """Some related `serviceRequests` exist."""
  serviceRequestsExist: Boolean
  """Filter by the object’s `services` relation."""
  services: BlueprintToManyServiceFilter
  """Some related `services` exist."""
  servicesExist: Boolean
}

input BlueprintMaxAggregateFilter {
  createdAt: IntFilter
}

type BlueprintMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
}

input BlueprintMinAggregateFilter {
  createdAt: IntFilter
}

type BlueprintMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
}

type BlueprintOperator implements Node {
  """
  Reads a single `Blueprint` that is related to this `BlueprintOperator`.
  """
  blueprint: Blueprint
  """The Blueprint associated with this relationship."""
  blueprintId: String!
  """
  Unique identifier for the relationship. Composite key: Blueprint ID + Operator ID
  """
  id: String!
  """Indicates whether the relationship is currently active."""
  isActive: Boolean!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads a single `Operator` that is related to this `BlueprintOperator`."""
  operator: Operator
  """The Operator associated with this relationship."""
  operatorId: String!
  """The registration block number of the relationship."""
  registeredAt: Int!
  """The last update block number of the relationship."""
  updatedAt: Int!
}

type BlueprintOperatorAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: BlueprintOperatorAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: BlueprintOperatorDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: BlueprintOperatorMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: BlueprintOperatorMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: BlueprintOperatorStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: BlueprintOperatorStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: BlueprintOperatorSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: BlueprintOperatorVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: BlueprintOperatorVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `BlueprintOperator` object types.
"""
input BlueprintOperatorAggregatesFilter {
  """Mean average aggregate over matching `BlueprintOperator` objects."""
  average: BlueprintOperatorAverageAggregateFilter
  """Distinct count aggregate over matching `BlueprintOperator` objects."""
  distinctCount: BlueprintOperatorDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `BlueprintOperator` object to be included within the aggregate.
  """
  filter: BlueprintOperatorFilter
  """Maximum aggregate over matching `BlueprintOperator` objects."""
  max: BlueprintOperatorMaxAggregateFilter
  """Minimum aggregate over matching `BlueprintOperator` objects."""
  min: BlueprintOperatorMinAggregateFilter
  """
  Population standard deviation aggregate over matching `BlueprintOperator` objects.
  """
  stddevPopulation: BlueprintOperatorStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `BlueprintOperator` objects.
  """
  stddevSample: BlueprintOperatorStddevSampleAggregateFilter
  """Sum aggregate over matching `BlueprintOperator` objects."""
  sum: BlueprintOperatorSumAggregateFilter
  """
  Population variance aggregate over matching `BlueprintOperator` objects.
  """
  variancePopulation: BlueprintOperatorVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `BlueprintOperator` objects."""
  varianceSample: BlueprintOperatorVarianceSampleAggregateFilter
}

input BlueprintOperatorAverageAggregateFilter {
  registeredAt: BigFloatFilter
  updatedAt: BigFloatFilter
}

type BlueprintOperatorAverageAggregates {
  """Mean average of registeredAt across the matching connection"""
  registeredAt: BigFloat
  """Mean average of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input BlueprintOperatorDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  blueprintId: BigIntFilter
  id: BigIntFilter
  isActive: BigIntFilter
  operatorId: BigIntFilter
  registeredAt: BigIntFilter
  updatedAt: BigIntFilter
}

type BlueprintOperatorDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of blueprintId across the matching connection"""
  blueprintId: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of isActive across the matching connection"""
  isActive: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
  """Distinct count of registeredAt across the matching connection"""
  registeredAt: BigInt
  """Distinct count of updatedAt across the matching connection"""
  updatedAt: BigInt
}

"""
A filter to be used against `BlueprintOperator` object types. All fields are combined with a logical ‘and.’
"""
input BlueprintOperatorFilter {
  """Checks for all expressions in this list."""
  and: [BlueprintOperatorFilter!]
  """Filter by the object’s `blueprint` relation."""
  blueprint: BlueprintFilter
  """Filter by the object’s `blueprintId` field."""
  blueprintId: StringFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `isActive` field."""
  isActive: BooleanFilter
  """Negates the expression."""
  not: BlueprintOperatorFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [BlueprintOperatorFilter!]
  """Filter by the object’s `registeredAt` field."""
  registeredAt: IntFilter
  """Filter by the object’s `updatedAt` field."""
  updatedAt: IntFilter
}

input BlueprintOperatorMaxAggregateFilter {
  registeredAt: IntFilter
  updatedAt: IntFilter
}

type BlueprintOperatorMaxAggregates {
  """Maximum of registeredAt across the matching connection"""
  registeredAt: Int
  """Maximum of updatedAt across the matching connection"""
  updatedAt: Int
}

input BlueprintOperatorMinAggregateFilter {
  registeredAt: IntFilter
  updatedAt: IntFilter
}

type BlueprintOperatorMinAggregates {
  """Minimum of registeredAt across the matching connection"""
  registeredAt: Int
  """Minimum of updatedAt across the matching connection"""
  updatedAt: Int
}

input BlueprintOperatorStddevPopulationAggregateFilter {
  registeredAt: BigFloatFilter
  updatedAt: BigFloatFilter
}

type BlueprintOperatorStddevPopulationAggregates {
  """
  Population standard deviation of registeredAt across the matching connection
  """
  registeredAt: BigFloat
  """
  Population standard deviation of updatedAt across the matching connection
  """
  updatedAt: BigFloat
}

input BlueprintOperatorStddevSampleAggregateFilter {
  registeredAt: BigFloatFilter
  updatedAt: BigFloatFilter
}

type BlueprintOperatorStddevSampleAggregates {
  """
  Sample standard deviation of registeredAt across the matching connection
  """
  registeredAt: BigFloat
  """Sample standard deviation of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input BlueprintOperatorSumAggregateFilter {
  registeredAt: BigIntFilter
  updatedAt: BigIntFilter
}

type BlueprintOperatorSumAggregates {
  """Sum of registeredAt across the matching connection"""
  registeredAt: BigInt!
  """Sum of updatedAt across the matching connection"""
  updatedAt: BigInt!
}

input BlueprintOperatorVariancePopulationAggregateFilter {
  registeredAt: BigFloatFilter
  updatedAt: BigFloatFilter
}

type BlueprintOperatorVariancePopulationAggregates {
  """Population variance of registeredAt across the matching connection"""
  registeredAt: BigFloat
  """Population variance of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input BlueprintOperatorVarianceSampleAggregateFilter {
  registeredAt: BigFloatFilter
  updatedAt: BigFloatFilter
}

type BlueprintOperatorVarianceSampleAggregates {
  """Sample variance of registeredAt across the matching connection"""
  registeredAt: BigFloat
  """Sample variance of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

"""
A connection to a list of `Operator` values, with data from `BlueprintOperator`.
"""
type BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `BlueprintOperator`, and the cursor to aid in pagination.
  """
  edges: [BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""
A `Operator` edge in the connection, with data from `BlueprintOperator`.
"""
type BlueprintOperatorsByBlueprintOperatorBlueprintIdAndOperatorIdManyToManyEdge {
  """Reads and enables pagination through a set of `BlueprintOperator`."""
  blueprintOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprint_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `BlueprintOperator`."""
    orderBy: [BlueprintOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintOperatorsConnection!
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Operator` at the end of the edge."""
  node: Operator
}

"""A connection to a list of `BlueprintOperator` values."""
type BlueprintOperatorsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: BlueprintOperatorAggregates
  """
  A list of edges which contains the `BlueprintOperator` and cursor to aid in pagination.
  """
  edges: [BlueprintOperatorsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `BlueprintOperator` for these aggregates.
    """
    groupBy: [BlueprintOperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: BlueprintOperatorsHavingInput
  ): [BlueprintOperatorAggregates!]
  """A list of `BlueprintOperator` objects."""
  nodes: [BlueprintOperator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `BlueprintOperator` you could get from the connection.
  """
  totalCount: Int!
}

"""A `BlueprintOperator` edge in the connection."""
type BlueprintOperatorsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `BlueprintOperator` at the end of the edge."""
  node: BlueprintOperator
}

"""Grouping methods for `BlueprintOperator` for usage during aggregation."""
enum BlueprintOperatorsGroupBy {
  BLUEPRINT_ID
  ID
  IS_ACTIVE
  OPERATOR_ID
  REGISTERED_AT
  UPDATED_AT
}

input BlueprintOperatorsHavingAverageInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

input BlueprintOperatorsHavingDistinctCountInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

"""Conditions for `BlueprintOperator` aggregates."""
input BlueprintOperatorsHavingInput {
  AND: [BlueprintOperatorsHavingInput!]
  OR: [BlueprintOperatorsHavingInput!]
  average: BlueprintOperatorsHavingAverageInput
  distinctCount: BlueprintOperatorsHavingDistinctCountInput
  max: BlueprintOperatorsHavingMaxInput
  min: BlueprintOperatorsHavingMinInput
  stddevPopulation: BlueprintOperatorsHavingStddevPopulationInput
  stddevSample: BlueprintOperatorsHavingStddevSampleInput
  sum: BlueprintOperatorsHavingSumInput
  variancePopulation: BlueprintOperatorsHavingVariancePopulationInput
  varianceSample: BlueprintOperatorsHavingVarianceSampleInput
}

input BlueprintOperatorsHavingMaxInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

input BlueprintOperatorsHavingMinInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

input BlueprintOperatorsHavingStddevPopulationInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

input BlueprintOperatorsHavingStddevSampleInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

input BlueprintOperatorsHavingSumInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

input BlueprintOperatorsHavingVariancePopulationInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

input BlueprintOperatorsHavingVarianceSampleInput {
  registeredAt: HavingIntFilter
  updatedAt: HavingIntFilter
}

"""Methods to use when ordering `BlueprintOperator`."""
enum BlueprintOperatorsOrderBy {
  BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__ID_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__ID_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_DESC
  BLUEPRINT_ID_ASC
  BLUEPRINT_ID_DESC
  ID_ASC
  ID_DESC
  IS_ACTIVE_ASC
  IS_ACTIVE_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  REGISTERED_AT_ASC
  REGISTERED_AT_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}

"""
A connection to a list of `ServiceRequest` values, with data from `Service`.
"""
type BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceRequestAggregates
  """
  A list of edges which contains the `ServiceRequest`, info from the `Service`, and the cursor to aid in pagination.
  """
  edges: [BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `ServiceRequest` for these aggregates."""
    groupBy: [ServiceRequestsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServiceRequestsHavingInput
  ): [ServiceRequestAggregates!]
  """A list of `ServiceRequest` objects."""
  nodes: [ServiceRequest]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `ServiceRequest` you could get from the connection."""
  totalCount: Int!
}

"""A `ServiceRequest` edge in the connection, with data from `Service`."""
type BlueprintServiceRequestsByServiceBlueprintIdAndServiceRequestIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `ServiceRequest` at the end of the edge."""
  node: ServiceRequest
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

input BlueprintStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type BlueprintStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
}

input BlueprintStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type BlueprintStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
}

input BlueprintSumAggregateFilter {
  createdAt: BigIntFilter
}

type BlueprintSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
}

"""
A filter to be used against many `BlueprintOperator` object types. All fields are combined with a logical ‘and.’
"""
input BlueprintToManyBlueprintOperatorFilter {
  """
  Aggregates across related `BlueprintOperator` match the filter criteria.
  """
  aggregates: BlueprintOperatorAggregatesFilter
  """
  Every related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: BlueprintOperatorFilter
  """
  No related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: BlueprintOperatorFilter
  """
  Some related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: BlueprintOperatorFilter
}

"""
A filter to be used against many `Service` object types. All fields are combined with a logical ‘and.’
"""
input BlueprintToManyServiceFilter {
  """Aggregates across related `Service` match the filter criteria."""
  aggregates: ServiceAggregatesFilter
  """
  Every related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceFilter
  """
  No related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceFilter
  """
  Some related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceFilter
}

"""
A filter to be used against many `ServiceRequest` object types. All fields are combined with a logical ‘and.’
"""
input BlueprintToManyServiceRequestFilter {
  """Aggregates across related `ServiceRequest` match the filter criteria."""
  aggregates: ServiceRequestAggregatesFilter
  """
  Every related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceRequestFilter
  """
  No related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceRequestFilter
  """
  Some related `ServiceRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceRequestFilter
}

input BlueprintVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type BlueprintVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

input BlueprintVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type BlueprintVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

"""A connection to a list of `Blueprint` values."""
type BlueprintsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: BlueprintAggregates
  """
  A list of edges which contains the `Blueprint` and cursor to aid in pagination.
  """
  edges: [BlueprintsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Blueprint` for these aggregates."""
    groupBy: [BlueprintsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: BlueprintsHavingInput
  ): [BlueprintAggregates!]
  """A list of `Blueprint` objects."""
  nodes: [Blueprint]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Blueprint` you could get from the connection."""
  totalCount: Int!
}

"""A `Blueprint` edge in the connection."""
type BlueprintsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Blueprint` at the end of the edge."""
  node: Blueprint
}

"""Grouping methods for `Blueprint` for usage during aggregation."""
enum BlueprintsGroupBy {
  CREATED_AT
  ID
  OWNER_ID
}

input BlueprintsHavingAverageInput {
  createdAt: HavingIntFilter
}

input BlueprintsHavingDistinctCountInput {
  createdAt: HavingIntFilter
}

"""Conditions for `Blueprint` aggregates."""
input BlueprintsHavingInput {
  AND: [BlueprintsHavingInput!]
  OR: [BlueprintsHavingInput!]
  average: BlueprintsHavingAverageInput
  distinctCount: BlueprintsHavingDistinctCountInput
  max: BlueprintsHavingMaxInput
  min: BlueprintsHavingMinInput
  stddevPopulation: BlueprintsHavingStddevPopulationInput
  stddevSample: BlueprintsHavingStddevSampleInput
  sum: BlueprintsHavingSumInput
  variancePopulation: BlueprintsHavingVariancePopulationInput
  varianceSample: BlueprintsHavingVarianceSampleInput
}

input BlueprintsHavingMaxInput {
  createdAt: HavingIntFilter
}

input BlueprintsHavingMinInput {
  createdAt: HavingIntFilter
}

input BlueprintsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
}

input BlueprintsHavingStddevSampleInput {
  createdAt: HavingIntFilter
}

input BlueprintsHavingSumInput {
  createdAt: HavingIntFilter
}

input BlueprintsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
}

input BlueprintsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
}

"""Methods to use when ordering `Blueprint`."""
enum BlueprintsOrderBy {
  ACCOUNT_BY_OWNER_ID__CREATED_AT_ASC
  ACCOUNT_BY_OWNER_ID__CREATED_AT_DESC
  ACCOUNT_BY_OWNER_ID__ID_ASC
  ACCOUNT_BY_OWNER_ID__ID_DESC
  ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_DESC
  BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_AVERAGE_ID_ASC
  BLUEPRINT_OPERATORS_AVERAGE_ID_DESC
  BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_BY_BLUEPRINT_ID__COUNT_ASC
  BLUEPRINT_OPERATORS_BY_BLUEPRINT_ID__COUNT_DESC
  BLUEPRINT_OPERATORS_COUNT_ASC
  BLUEPRINT_OPERATORS_COUNT_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_MAX_ID_ASC
  BLUEPRINT_OPERATORS_MAX_ID_DESC
  BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_MAX_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_MAX_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_MIN_ID_ASC
  BLUEPRINT_OPERATORS_MIN_ID_DESC
  BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_MIN_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_MIN_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_SUM_ID_ASC
  BLUEPRINT_OPERATORS_SUM_ID_DESC
  BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_SUM_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_SUM_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OWNER_ID_ASC
  OWNER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICES_AVERAGE_ASSET_IDS_ASC
  SERVICES_AVERAGE_ASSET_IDS_DESC
  SERVICES_AVERAGE_BLOCK_RANGE_ASC
  SERVICES_AVERAGE_BLOCK_RANGE_DESC
  SERVICES_AVERAGE_BLUEPRINT_ID_ASC
  SERVICES_AVERAGE_BLUEPRINT_ID_DESC
  SERVICES_AVERAGE_CREATED_AT_ASC
  SERVICES_AVERAGE_CREATED_AT_DESC
  SERVICES_AVERAGE_ID_ASC
  SERVICES_AVERAGE_ID_DESC
  SERVICES_AVERAGE_OWNER_ID_ASC
  SERVICES_AVERAGE_OWNER_ID_DESC
  SERVICES_AVERAGE_SERVICE_REQUEST_ID_ASC
  SERVICES_AVERAGE_SERVICE_REQUEST_ID_DESC
  SERVICES_AVERAGE_TERMINATED_AT_ASC
  SERVICES_AVERAGE_TERMINATED_AT_DESC
  SERVICES_BY_BLUEPRINT_ID__COUNT_ASC
  SERVICES_BY_BLUEPRINT_ID__COUNT_DESC
  SERVICES_COUNT_ASC
  SERVICES_COUNT_DESC
  SERVICES_DISTINCT_COUNT_ASSET_IDS_ASC
  SERVICES_DISTINCT_COUNT_ASSET_IDS_DESC
  SERVICES_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICES_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_ASC
  SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_DESC
  SERVICES_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICES_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICES_DISTINCT_COUNT_ID_ASC
  SERVICES_DISTINCT_COUNT_ID_DESC
  SERVICES_DISTINCT_COUNT_OWNER_ID_ASC
  SERVICES_DISTINCT_COUNT_OWNER_ID_DESC
  SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC
  SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC
  SERVICES_DISTINCT_COUNT_TERMINATED_AT_ASC
  SERVICES_DISTINCT_COUNT_TERMINATED_AT_DESC
  SERVICES_MAX_ASSET_IDS_ASC
  SERVICES_MAX_ASSET_IDS_DESC
  SERVICES_MAX_BLOCK_RANGE_ASC
  SERVICES_MAX_BLOCK_RANGE_DESC
  SERVICES_MAX_BLUEPRINT_ID_ASC
  SERVICES_MAX_BLUEPRINT_ID_DESC
  SERVICES_MAX_CREATED_AT_ASC
  SERVICES_MAX_CREATED_AT_DESC
  SERVICES_MAX_ID_ASC
  SERVICES_MAX_ID_DESC
  SERVICES_MAX_OWNER_ID_ASC
  SERVICES_MAX_OWNER_ID_DESC
  SERVICES_MAX_SERVICE_REQUEST_ID_ASC
  SERVICES_MAX_SERVICE_REQUEST_ID_DESC
  SERVICES_MAX_TERMINATED_AT_ASC
  SERVICES_MAX_TERMINATED_AT_DESC
  SERVICES_MIN_ASSET_IDS_ASC
  SERVICES_MIN_ASSET_IDS_DESC
  SERVICES_MIN_BLOCK_RANGE_ASC
  SERVICES_MIN_BLOCK_RANGE_DESC
  SERVICES_MIN_BLUEPRINT_ID_ASC
  SERVICES_MIN_BLUEPRINT_ID_DESC
  SERVICES_MIN_CREATED_AT_ASC
  SERVICES_MIN_CREATED_AT_DESC
  SERVICES_MIN_ID_ASC
  SERVICES_MIN_ID_DESC
  SERVICES_MIN_OWNER_ID_ASC
  SERVICES_MIN_OWNER_ID_DESC
  SERVICES_MIN_SERVICE_REQUEST_ID_ASC
  SERVICES_MIN_SERVICE_REQUEST_ID_DESC
  SERVICES_MIN_TERMINATED_AT_ASC
  SERVICES_MIN_TERMINATED_AT_DESC
  SERVICES_STDDEV_POPULATION_ASSET_IDS_ASC
  SERVICES_STDDEV_POPULATION_ASSET_IDS_DESC
  SERVICES_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICES_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_ASC
  SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_DESC
  SERVICES_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICES_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICES_STDDEV_POPULATION_ID_ASC
  SERVICES_STDDEV_POPULATION_ID_DESC
  SERVICES_STDDEV_POPULATION_OWNER_ID_ASC
  SERVICES_STDDEV_POPULATION_OWNER_ID_DESC
  SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICES_STDDEV_POPULATION_TERMINATED_AT_ASC
  SERVICES_STDDEV_POPULATION_TERMINATED_AT_DESC
  SERVICES_STDDEV_SAMPLE_ASSET_IDS_ASC
  SERVICES_STDDEV_SAMPLE_ASSET_IDS_DESC
  SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_ASC
  SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_DESC
  SERVICES_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICES_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICES_STDDEV_SAMPLE_ID_ASC
  SERVICES_STDDEV_SAMPLE_ID_DESC
  SERVICES_STDDEV_SAMPLE_OWNER_ID_ASC
  SERVICES_STDDEV_SAMPLE_OWNER_ID_DESC
  SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICES_STDDEV_SAMPLE_TERMINATED_AT_ASC
  SERVICES_STDDEV_SAMPLE_TERMINATED_AT_DESC
  SERVICES_SUM_ASSET_IDS_ASC
  SERVICES_SUM_ASSET_IDS_DESC
  SERVICES_SUM_BLOCK_RANGE_ASC
  SERVICES_SUM_BLOCK_RANGE_DESC
  SERVICES_SUM_BLUEPRINT_ID_ASC
  SERVICES_SUM_BLUEPRINT_ID_DESC
  SERVICES_SUM_CREATED_AT_ASC
  SERVICES_SUM_CREATED_AT_DESC
  SERVICES_SUM_ID_ASC
  SERVICES_SUM_ID_DESC
  SERVICES_SUM_OWNER_ID_ASC
  SERVICES_SUM_OWNER_ID_DESC
  SERVICES_SUM_SERVICE_REQUEST_ID_ASC
  SERVICES_SUM_SERVICE_REQUEST_ID_DESC
  SERVICES_SUM_TERMINATED_AT_ASC
  SERVICES_SUM_TERMINATED_AT_DESC
  SERVICES_VARIANCE_POPULATION_ASSET_IDS_ASC
  SERVICES_VARIANCE_POPULATION_ASSET_IDS_DESC
  SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_ASC
  SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_DESC
  SERVICES_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICES_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICES_VARIANCE_POPULATION_ID_ASC
  SERVICES_VARIANCE_POPULATION_ID_DESC
  SERVICES_VARIANCE_POPULATION_OWNER_ID_ASC
  SERVICES_VARIANCE_POPULATION_OWNER_ID_DESC
  SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICES_VARIANCE_POPULATION_TERMINATED_AT_ASC
  SERVICES_VARIANCE_POPULATION_TERMINATED_AT_DESC
  SERVICES_VARIANCE_SAMPLE_ASSET_IDS_ASC
  SERVICES_VARIANCE_SAMPLE_ASSET_IDS_DESC
  SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC
  SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC
  SERVICES_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICES_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICES_VARIANCE_SAMPLE_ID_ASC
  SERVICES_VARIANCE_SAMPLE_ID_DESC
  SERVICES_VARIANCE_SAMPLE_OWNER_ID_ASC
  SERVICES_VARIANCE_SAMPLE_OWNER_ID_DESC
  SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_ASC
  SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_DESC
  SERVICE_REQUESTS_AVERAGE_ASSET_IDS_ASC
  SERVICE_REQUESTS_AVERAGE_ASSET_IDS_DESC
  SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_AVERAGE_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_AVERAGE_CREATED_AT_ASC
  SERVICE_REQUESTS_AVERAGE_CREATED_AT_DESC
  SERVICE_REQUESTS_AVERAGE_ID_ASC
  SERVICE_REQUESTS_AVERAGE_ID_DESC
  SERVICE_REQUESTS_AVERAGE_OWNER_ID_ASC
  SERVICE_REQUESTS_AVERAGE_OWNER_ID_DESC
  SERVICE_REQUESTS_BY_BLUEPRINT_ID__COUNT_ASC
  SERVICE_REQUESTS_BY_BLUEPRINT_ID__COUNT_DESC
  SERVICE_REQUESTS_COUNT_ASC
  SERVICE_REQUESTS_COUNT_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_ASSET_IDS_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_ID_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_ID_DESC
  SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_ASC
  SERVICE_REQUESTS_DISTINCT_COUNT_OWNER_ID_DESC
  SERVICE_REQUESTS_MAX_ASSET_IDS_ASC
  SERVICE_REQUESTS_MAX_ASSET_IDS_DESC
  SERVICE_REQUESTS_MAX_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_MAX_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_MAX_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_MAX_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_MAX_CREATED_AT_ASC
  SERVICE_REQUESTS_MAX_CREATED_AT_DESC
  SERVICE_REQUESTS_MAX_ID_ASC
  SERVICE_REQUESTS_MAX_ID_DESC
  SERVICE_REQUESTS_MAX_OWNER_ID_ASC
  SERVICE_REQUESTS_MAX_OWNER_ID_DESC
  SERVICE_REQUESTS_MIN_ASSET_IDS_ASC
  SERVICE_REQUESTS_MIN_ASSET_IDS_DESC
  SERVICE_REQUESTS_MIN_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_MIN_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_MIN_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_MIN_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_MIN_CREATED_AT_ASC
  SERVICE_REQUESTS_MIN_CREATED_AT_DESC
  SERVICE_REQUESTS_MIN_ID_ASC
  SERVICE_REQUESTS_MIN_ID_DESC
  SERVICE_REQUESTS_MIN_OWNER_ID_ASC
  SERVICE_REQUESTS_MIN_OWNER_ID_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_ASSET_IDS_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_ID_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_ID_DESC
  SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_ASC
  SERVICE_REQUESTS_STDDEV_POPULATION_OWNER_ID_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ASSET_IDS_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ID_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_ID_DESC
  SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_ASC
  SERVICE_REQUESTS_STDDEV_SAMPLE_OWNER_ID_DESC
  SERVICE_REQUESTS_SUM_ASSET_IDS_ASC
  SERVICE_REQUESTS_SUM_ASSET_IDS_DESC
  SERVICE_REQUESTS_SUM_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_SUM_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_SUM_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_SUM_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_SUM_CREATED_AT_ASC
  SERVICE_REQUESTS_SUM_CREATED_AT_DESC
  SERVICE_REQUESTS_SUM_ID_ASC
  SERVICE_REQUESTS_SUM_ID_DESC
  SERVICE_REQUESTS_SUM_OWNER_ID_ASC
  SERVICE_REQUESTS_SUM_OWNER_ID_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ASSET_IDS_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ID_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_ID_DESC
  SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_ASC
  SERVICE_REQUESTS_VARIANCE_POPULATION_OWNER_ID_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ASSET_IDS_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_ID_DESC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_ASC
  SERVICE_REQUESTS_VARIANCE_SAMPLE_OWNER_ID_DESC
}

""" Enum representing the different types of bond change actions for an Operator.
"""
enum BondChangeAction {
  DECREASE_CANCELLED
  DECREASE_EXECUTED
  DECREASE_SCHEDULED
  INCREASE
}

"""
A filter to be used against BondChangeAction fields. All fields are combined with a logical ‘and.’
"""
input BondChangeActionFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: BondChangeAction
  """Equal to the specified value."""
  equalTo: BondChangeAction
  """Greater than the specified value."""
  greaterThan: BondChangeAction
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: BondChangeAction
  """Included in the specified list."""
  in: [BondChangeAction!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: BondChangeAction
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: BondChangeAction
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: BondChangeAction
  """Not equal to the specified value."""
  notEqualTo: BondChangeAction
  """Not included in the specified list."""
  notIn: [BondChangeAction!]
}

"""
A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’
"""
input BooleanFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Boolean
  """Equal to the specified value."""
  equalTo: Boolean
  """Greater than the specified value."""
  greaterThan: Boolean
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Boolean
  """Included in the specified list."""
  in: [Boolean!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: Boolean
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Boolean
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Boolean
  """Not equal to the specified value."""
  notEqualTo: Boolean
  """Not included in the specified list."""
  notIn: [Boolean!]
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""The day, does not include a time."""
scalar Date

"""
A point in time as described by the [ISO
8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
"""
scalar Datetime

"""
A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’
"""
input DatetimeFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Datetime
  """Equal to the specified value."""
  equalTo: Datetime
  """Greater than the specified value."""
  greaterThan: Datetime
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Datetime
  """Included in the specified list."""
  in: [Datetime!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: Datetime
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Datetime
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Datetime
  """Not equal to the specified value."""
  notEqualTo: Datetime
  """Not included in the specified list."""
  notIn: [Datetime!]
}

type Delegation implements Node {
  """The asset ID of the delegated tokens."""
  assetId: JSON!
  """Reads a single `Delegator` that is related to this `Delegation`."""
  delegator: Delegator
  """The Delegator who made the delegation."""
  delegatorId: String!
  """Reads and enables pagination through a set of `Delegator`."""
  delegatorsByUnstakeRequestDelegationIdAndDelegatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegator`."""
    orderBy: [DelegatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyConnection!
  """Indicates whether this delegation has an active unstake request."""
  hasActiveUnstakeRequest: Boolean!
  """Reads and enables pagination through a set of `DelegationHistory`."""
  history(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegation_histories_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationHistoryFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `DelegationHistory`."""
    orderBy: [DelegationHistoriesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationHistoriesConnection!
  """
  Unique identifier for the delegation. Composite key: delegator ID + operator ID + asset ID
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads a single `Operator` that is related to this `Delegation`."""
  operator: Operator
  """The Operator to whom the delegation was made."""
  operatorId: String!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByUnstakeRequestDelegationIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyConnection!
  """The total amount of tokens delegated."""
  totalAmount: BigFloat!
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

type DelegationAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: DelegationAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: DelegationDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: DelegationMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: DelegationMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: DelegationStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: DelegationStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: DelegationSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: DelegationVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: DelegationVarianceSampleAggregates
}

"""A filter to be used against aggregates of `Delegation` object types."""
input DelegationAggregatesFilter {
  """Mean average aggregate over matching `Delegation` objects."""
  average: DelegationAverageAggregateFilter
  """Distinct count aggregate over matching `Delegation` objects."""
  distinctCount: DelegationDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `Delegation` object to be included within the aggregate.
  """
  filter: DelegationFilter
  """Maximum aggregate over matching `Delegation` objects."""
  max: DelegationMaxAggregateFilter
  """Minimum aggregate over matching `Delegation` objects."""
  min: DelegationMinAggregateFilter
  """
  Population standard deviation aggregate over matching `Delegation` objects.
  """
  stddevPopulation: DelegationStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `Delegation` objects.
  """
  stddevSample: DelegationStddevSampleAggregateFilter
  """Sum aggregate over matching `Delegation` objects."""
  sum: DelegationSumAggregateFilter
  """Population variance aggregate over matching `Delegation` objects."""
  variancePopulation: DelegationVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `Delegation` objects."""
  varianceSample: DelegationVarianceSampleAggregateFilter
}

input DelegationAverageAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationAverageAggregates {
  """Mean average of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

"""
A connection to a list of `Delegator` values, with data from `UnstakeRequest`.
"""
type DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegatorAggregates
  """
  A list of edges which contains the `Delegator`, info from the `UnstakeRequest`, and the cursor to aid in pagination.
  """
  edges: [DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegator` for these aggregates."""
    groupBy: [DelegatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegatorsHavingInput
  ): [DelegatorAggregates!]
  """A list of `Delegator` objects."""
  nodes: [Delegator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegator` you could get from the connection."""
  totalCount: Int!
}

"""A `Delegator` edge in the connection, with data from `UnstakeRequest`."""
type DelegationDelegatorsByUnstakeRequestDelegationIdAndDelegatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Delegator` at the end of the edge."""
  node: Delegator
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

input DelegationDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  assetId: BigIntFilter
  delegatorId: BigIntFilter
  hasActiveUnstakeRequest: BigIntFilter
  id: BigIntFilter
  operatorId: BigIntFilter
  totalAmount: BigIntFilter
}

type DelegationDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of assetId across the matching connection"""
  assetId: BigInt
  """Distinct count of delegatorId across the matching connection"""
  delegatorId: BigInt
  """
  Distinct count of hasActiveUnstakeRequest across the matching connection
  """
  hasActiveUnstakeRequest: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
  """Distinct count of totalAmount across the matching connection"""
  totalAmount: BigInt
}

"""
A filter to be used against `Delegation` object types. All fields are combined with a logical ‘and.’
"""
input DelegationFilter {
  """Checks for all expressions in this list."""
  and: [DelegationFilter!]
  """Filter by the object’s `assetId` field."""
  assetId: JSONFilter
  """Filter by the object’s `delegator` relation."""
  delegator: DelegatorFilter
  """Filter by the object’s `delegatorId` field."""
  delegatorId: StringFilter
  """Filter by the object’s `hasActiveUnstakeRequest` field."""
  hasActiveUnstakeRequest: BooleanFilter
  """Filter by the object’s `history` relation."""
  history: DelegationToManyDelegationHistoryFilter
  """Some related `history` exist."""
  historyExist: Boolean
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: DelegationFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [DelegationFilter!]
  """Filter by the object’s `totalAmount` field."""
  totalAmount: BigFloatFilter
  """Filter by the object’s `unstakeRequests` relation."""
  unstakeRequests: DelegationToManyUnstakeRequestFilter
  """Some related `unstakeRequests` exist."""
  unstakeRequestsExist: Boolean
}

"""A connection to a list of `DelegationHistory` values."""
type DelegationHistoriesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegationHistoryAggregates
  """
  A list of edges which contains the `DelegationHistory` and cursor to aid in pagination.
  """
  edges: [DelegationHistoriesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `DelegationHistory` for these aggregates.
    """
    groupBy: [DelegationHistoriesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegationHistoriesHavingInput
  ): [DelegationHistoryAggregates!]
  """A list of `DelegationHistory` objects."""
  nodes: [DelegationHistory]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `DelegationHistory` you could get from the connection.
  """
  totalCount: Int!
}

"""A `DelegationHistory` edge in the connection."""
type DelegationHistoriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `DelegationHistory` at the end of the edge."""
  node: DelegationHistory
}

"""Grouping methods for `DelegationHistory` for usage during aggregation."""
enum DelegationHistoriesGroupBy {
  AMOUNT
  BLOCK_NUMBER
  DELEGATION_ID
  ID
}

input DelegationHistoriesHavingAverageInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DelegationHistoriesHavingDistinctCountInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Conditions for `DelegationHistory` aggregates."""
input DelegationHistoriesHavingInput {
  AND: [DelegationHistoriesHavingInput!]
  OR: [DelegationHistoriesHavingInput!]
  average: DelegationHistoriesHavingAverageInput
  distinctCount: DelegationHistoriesHavingDistinctCountInput
  max: DelegationHistoriesHavingMaxInput
  min: DelegationHistoriesHavingMinInput
  stddevPopulation: DelegationHistoriesHavingStddevPopulationInput
  stddevSample: DelegationHistoriesHavingStddevSampleInput
  sum: DelegationHistoriesHavingSumInput
  variancePopulation: DelegationHistoriesHavingVariancePopulationInput
  varianceSample: DelegationHistoriesHavingVarianceSampleInput
}

input DelegationHistoriesHavingMaxInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DelegationHistoriesHavingMinInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DelegationHistoriesHavingStddevPopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DelegationHistoriesHavingStddevSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DelegationHistoriesHavingSumInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DelegationHistoriesHavingVariancePopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DelegationHistoriesHavingVarianceSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Methods to use when ordering `DelegationHistory`."""
enum DelegationHistoriesOrderBy {
  AMOUNT_ASC
  AMOUNT_DESC
  BLOCK_NUMBER_ASC
  BLOCK_NUMBER_DESC
  DELEGATION_BY_DELEGATION_ID__ASSET_ID_ASC
  DELEGATION_BY_DELEGATION_ID__ASSET_ID_DESC
  DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_ASC
  DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_DESC
  DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATION_BY_DELEGATION_ID__ID_ASC
  DELEGATION_BY_DELEGATION_ID__ID_DESC
  DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_ASC
  DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_DESC
  DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_ASC
  DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_DESC
  DELEGATION_ID_ASC
  DELEGATION_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type DelegationHistory implements Node {
  """The amount of tokens delegated in this transaction."""
  amount: BigFloat!
  """The block number at which this delegation transaction occurred."""
  blockNumber: Int!
  """
  Reads a single `Delegation` that is related to this `DelegationHistory`.
  """
  delegation: Delegation
  """The delegation this history entry is associated with."""
  delegationId: String!
  """
  Unique identifier for the delegation history entry. Composite key: delegation ID + block number
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

type DelegationHistoryAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: DelegationHistoryAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: DelegationHistoryDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: DelegationHistoryMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: DelegationHistoryMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: DelegationHistoryStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: DelegationHistoryStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: DelegationHistorySumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: DelegationHistoryVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: DelegationHistoryVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `DelegationHistory` object types.
"""
input DelegationHistoryAggregatesFilter {
  """Mean average aggregate over matching `DelegationHistory` objects."""
  average: DelegationHistoryAverageAggregateFilter
  """Distinct count aggregate over matching `DelegationHistory` objects."""
  distinctCount: DelegationHistoryDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `DelegationHistory` object to be included within the aggregate.
  """
  filter: DelegationHistoryFilter
  """Maximum aggregate over matching `DelegationHistory` objects."""
  max: DelegationHistoryMaxAggregateFilter
  """Minimum aggregate over matching `DelegationHistory` objects."""
  min: DelegationHistoryMinAggregateFilter
  """
  Population standard deviation aggregate over matching `DelegationHistory` objects.
  """
  stddevPopulation: DelegationHistoryStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `DelegationHistory` objects.
  """
  stddevSample: DelegationHistoryStddevSampleAggregateFilter
  """Sum aggregate over matching `DelegationHistory` objects."""
  sum: DelegationHistorySumAggregateFilter
  """
  Population variance aggregate over matching `DelegationHistory` objects.
  """
  variancePopulation: DelegationHistoryVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `DelegationHistory` objects."""
  varianceSample: DelegationHistoryVarianceSampleAggregateFilter
}

input DelegationHistoryAverageAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DelegationHistoryAverageAggregates {
  """Mean average of amount across the matching connection"""
  amount: BigFloat
  """Mean average of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input DelegationHistoryDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  amount: BigIntFilter
  blockNumber: BigIntFilter
  delegationId: BigIntFilter
  id: BigIntFilter
}

type DelegationHistoryDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of amount across the matching connection"""
  amount: BigInt
  """Distinct count of blockNumber across the matching connection"""
  blockNumber: BigInt
  """Distinct count of delegationId across the matching connection"""
  delegationId: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
}

"""
A filter to be used against `DelegationHistory` object types. All fields are combined with a logical ‘and.’
"""
input DelegationHistoryFilter {
  """Filter by the object’s `amount` field."""
  amount: BigFloatFilter
  """Checks for all expressions in this list."""
  and: [DelegationHistoryFilter!]
  """Filter by the object’s `blockNumber` field."""
  blockNumber: IntFilter
  """Filter by the object’s `delegation` relation."""
  delegation: DelegationFilter
  """Filter by the object’s `delegationId` field."""
  delegationId: StringFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: DelegationHistoryFilter
  """Checks for any expressions in this list."""
  or: [DelegationHistoryFilter!]
}

input DelegationHistoryMaxAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type DelegationHistoryMaxAggregates {
  """Maximum of amount across the matching connection"""
  amount: BigFloat
  """Maximum of blockNumber across the matching connection"""
  blockNumber: Int
}

input DelegationHistoryMinAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type DelegationHistoryMinAggregates {
  """Minimum of amount across the matching connection"""
  amount: BigFloat
  """Minimum of blockNumber across the matching connection"""
  blockNumber: Int
}

input DelegationHistoryStddevPopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DelegationHistoryStddevPopulationAggregates {
  """Population standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Population standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input DelegationHistoryStddevSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DelegationHistoryStddevSampleAggregates {
  """Sample standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Sample standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input DelegationHistorySumAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigIntFilter
}

type DelegationHistorySumAggregates {
  """Sum of amount across the matching connection"""
  amount: BigFloat!
  """Sum of blockNumber across the matching connection"""
  blockNumber: BigInt!
}

input DelegationHistoryVariancePopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DelegationHistoryVariancePopulationAggregates {
  """Population variance of amount across the matching connection"""
  amount: BigFloat
  """Population variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input DelegationHistoryVarianceSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DelegationHistoryVarianceSampleAggregates {
  """Sample variance of amount across the matching connection"""
  amount: BigFloat
  """Sample variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input DelegationMaxAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationMaxAggregates {
  """Maximum of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

input DelegationMinAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationMinAggregates {
  """Minimum of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

"""
A connection to a list of `Operator` values, with data from `UnstakeRequest`.
"""
type DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `UnstakeRequest`, and the cursor to aid in pagination.
  """
  edges: [DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""A `Operator` edge in the connection, with data from `UnstakeRequest`."""
type DelegationOperatorsByUnstakeRequestDelegationIdAndOperatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Operator` at the end of the edge."""
  node: Operator
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

input DelegationStddevPopulationAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationStddevPopulationAggregates {
  """
  Population standard deviation of totalAmount across the matching connection
  """
  totalAmount: BigFloat
}

input DelegationStddevSampleAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationStddevSampleAggregates {
  """
  Sample standard deviation of totalAmount across the matching connection
  """
  totalAmount: BigFloat
}

input DelegationSumAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationSumAggregates {
  """Sum of totalAmount across the matching connection"""
  totalAmount: BigFloat!
}

"""
A filter to be used against many `DelegationHistory` object types. All fields are combined with a logical ‘and.’
"""
input DelegationToManyDelegationHistoryFilter {
  """
  Aggregates across related `DelegationHistory` match the filter criteria.
  """
  aggregates: DelegationHistoryAggregatesFilter
  """
  Every related `DelegationHistory` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: DelegationHistoryFilter
  """
  No related `DelegationHistory` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: DelegationHistoryFilter
  """
  Some related `DelegationHistory` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: DelegationHistoryFilter
}

"""
A filter to be used against many `UnstakeRequest` object types. All fields are combined with a logical ‘and.’
"""
input DelegationToManyUnstakeRequestFilter {
  """Aggregates across related `UnstakeRequest` match the filter criteria."""
  aggregates: UnstakeRequestAggregatesFilter
  """
  Every related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UnstakeRequestFilter
  """
  No related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UnstakeRequestFilter
  """
  Some related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UnstakeRequestFilter
}

input DelegationVariancePopulationAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationVariancePopulationAggregates {
  """Population variance of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

input DelegationVarianceSampleAggregateFilter {
  totalAmount: BigFloatFilter
}

type DelegationVarianceSampleAggregates {
  """Sample variance of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

"""A connection to a list of `Delegation` values."""
type DelegationsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegationAggregates
  """
  A list of edges which contains the `Delegation` and cursor to aid in pagination.
  """
  edges: [DelegationsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegation` for these aggregates."""
    groupBy: [DelegationsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegationsHavingInput
  ): [DelegationAggregates!]
  """A list of `Delegation` objects."""
  nodes: [Delegation]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegation` you could get from the connection."""
  totalCount: Int!
}

"""A `Delegation` edge in the connection."""
type DelegationsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Delegation` at the end of the edge."""
  node: Delegation
}

"""Grouping methods for `Delegation` for usage during aggregation."""
enum DelegationsGroupBy {
  ASSET_ID
  DELEGATOR_ID
  HAS_ACTIVE_UNSTAKE_REQUEST
  ID
  OPERATOR_ID
  TOTAL_AMOUNT
}

input DelegationsHavingAverageInput {
  totalAmount: HavingBigfloatFilter
}

input DelegationsHavingDistinctCountInput {
  totalAmount: HavingBigfloatFilter
}

"""Conditions for `Delegation` aggregates."""
input DelegationsHavingInput {
  AND: [DelegationsHavingInput!]
  OR: [DelegationsHavingInput!]
  average: DelegationsHavingAverageInput
  distinctCount: DelegationsHavingDistinctCountInput
  max: DelegationsHavingMaxInput
  min: DelegationsHavingMinInput
  stddevPopulation: DelegationsHavingStddevPopulationInput
  stddevSample: DelegationsHavingStddevSampleInput
  sum: DelegationsHavingSumInput
  variancePopulation: DelegationsHavingVariancePopulationInput
  varianceSample: DelegationsHavingVarianceSampleInput
}

input DelegationsHavingMaxInput {
  totalAmount: HavingBigfloatFilter
}

input DelegationsHavingMinInput {
  totalAmount: HavingBigfloatFilter
}

input DelegationsHavingStddevPopulationInput {
  totalAmount: HavingBigfloatFilter
}

input DelegationsHavingStddevSampleInput {
  totalAmount: HavingBigfloatFilter
}

input DelegationsHavingSumInput {
  totalAmount: HavingBigfloatFilter
}

input DelegationsHavingVariancePopulationInput {
  totalAmount: HavingBigfloatFilter
}

input DelegationsHavingVarianceSampleInput {
  totalAmount: HavingBigfloatFilter
}

"""Methods to use when ordering `Delegation`."""
enum DelegationsOrderBy {
  ASSET_ID_ASC
  ASSET_ID_DESC
  DELEGATION_HISTORIES_BY_DELEGATION_ID__COUNT_ASC
  DELEGATION_HISTORIES_BY_DELEGATION_ID__COUNT_DESC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC
  DELEGATOR_ID_ASC
  DELEGATOR_ID_DESC
  HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  HISTORY_AVERAGE_AMOUNT_ASC
  HISTORY_AVERAGE_AMOUNT_DESC
  HISTORY_AVERAGE_BLOCK_NUMBER_ASC
  HISTORY_AVERAGE_BLOCK_NUMBER_DESC
  HISTORY_AVERAGE_BLOCK_RANGE_ASC
  HISTORY_AVERAGE_BLOCK_RANGE_DESC
  HISTORY_AVERAGE_DELEGATION_ID_ASC
  HISTORY_AVERAGE_DELEGATION_ID_DESC
  HISTORY_AVERAGE_ID_ASC
  HISTORY_AVERAGE_ID_DESC
  HISTORY_COUNT_ASC
  HISTORY_COUNT_DESC
  HISTORY_DISTINCT_COUNT_AMOUNT_ASC
  HISTORY_DISTINCT_COUNT_AMOUNT_DESC
  HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC
  HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC
  HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC
  HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC
  HISTORY_DISTINCT_COUNT_DELEGATION_ID_ASC
  HISTORY_DISTINCT_COUNT_DELEGATION_ID_DESC
  HISTORY_DISTINCT_COUNT_ID_ASC
  HISTORY_DISTINCT_COUNT_ID_DESC
  HISTORY_MAX_AMOUNT_ASC
  HISTORY_MAX_AMOUNT_DESC
  HISTORY_MAX_BLOCK_NUMBER_ASC
  HISTORY_MAX_BLOCK_NUMBER_DESC
  HISTORY_MAX_BLOCK_RANGE_ASC
  HISTORY_MAX_BLOCK_RANGE_DESC
  HISTORY_MAX_DELEGATION_ID_ASC
  HISTORY_MAX_DELEGATION_ID_DESC
  HISTORY_MAX_ID_ASC
  HISTORY_MAX_ID_DESC
  HISTORY_MIN_AMOUNT_ASC
  HISTORY_MIN_AMOUNT_DESC
  HISTORY_MIN_BLOCK_NUMBER_ASC
  HISTORY_MIN_BLOCK_NUMBER_DESC
  HISTORY_MIN_BLOCK_RANGE_ASC
  HISTORY_MIN_BLOCK_RANGE_DESC
  HISTORY_MIN_DELEGATION_ID_ASC
  HISTORY_MIN_DELEGATION_ID_DESC
  HISTORY_MIN_ID_ASC
  HISTORY_MIN_ID_DESC
  HISTORY_STDDEV_POPULATION_AMOUNT_ASC
  HISTORY_STDDEV_POPULATION_AMOUNT_DESC
  HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC
  HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC
  HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC
  HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC
  HISTORY_STDDEV_POPULATION_DELEGATION_ID_ASC
  HISTORY_STDDEV_POPULATION_DELEGATION_ID_DESC
  HISTORY_STDDEV_POPULATION_ID_ASC
  HISTORY_STDDEV_POPULATION_ID_DESC
  HISTORY_STDDEV_SAMPLE_AMOUNT_ASC
  HISTORY_STDDEV_SAMPLE_AMOUNT_DESC
  HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC
  HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC
  HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  HISTORY_STDDEV_SAMPLE_DELEGATION_ID_ASC
  HISTORY_STDDEV_SAMPLE_DELEGATION_ID_DESC
  HISTORY_STDDEV_SAMPLE_ID_ASC
  HISTORY_STDDEV_SAMPLE_ID_DESC
  HISTORY_SUM_AMOUNT_ASC
  HISTORY_SUM_AMOUNT_DESC
  HISTORY_SUM_BLOCK_NUMBER_ASC
  HISTORY_SUM_BLOCK_NUMBER_DESC
  HISTORY_SUM_BLOCK_RANGE_ASC
  HISTORY_SUM_BLOCK_RANGE_DESC
  HISTORY_SUM_DELEGATION_ID_ASC
  HISTORY_SUM_DELEGATION_ID_DESC
  HISTORY_SUM_ID_ASC
  HISTORY_SUM_ID_DESC
  HISTORY_VARIANCE_POPULATION_AMOUNT_ASC
  HISTORY_VARIANCE_POPULATION_AMOUNT_DESC
  HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC
  HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC
  HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  HISTORY_VARIANCE_POPULATION_DELEGATION_ID_ASC
  HISTORY_VARIANCE_POPULATION_DELEGATION_ID_DESC
  HISTORY_VARIANCE_POPULATION_ID_ASC
  HISTORY_VARIANCE_POPULATION_ID_DESC
  HISTORY_VARIANCE_SAMPLE_AMOUNT_ASC
  HISTORY_VARIANCE_SAMPLE_AMOUNT_DESC
  HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC
  HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC
  HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  HISTORY_VARIANCE_SAMPLE_DELEGATION_ID_ASC
  HISTORY_VARIANCE_SAMPLE_DELEGATION_ID_DESC
  HISTORY_VARIANCE_SAMPLE_ID_ASC
  HISTORY_VARIANCE_SAMPLE_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TOTAL_AMOUNT_ASC
  TOTAL_AMOUNT_DESC
  UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_BY_DELEGATION_ID__COUNT_ASC
  UNSTAKE_REQUESTS_BY_DELEGATION_ID__COUNT_DESC
  UNSTAKE_REQUESTS_COUNT_ASC
  UNSTAKE_REQUESTS_COUNT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_MAX_ASSET_ID_ASC
  UNSTAKE_REQUESTS_MAX_ASSET_ID_DESC
  UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_MAX_CREATED_AT_ASC
  UNSTAKE_REQUESTS_MAX_CREATED_AT_DESC
  UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_MAX_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_MAX_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_MAX_ID_ASC
  UNSTAKE_REQUESTS_MAX_ID_DESC
  UNSTAKE_REQUESTS_MAX_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_MAX_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_MAX_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_MAX_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_MIN_ASSET_ID_ASC
  UNSTAKE_REQUESTS_MIN_ASSET_ID_DESC
  UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_MIN_CREATED_AT_ASC
  UNSTAKE_REQUESTS_MIN_CREATED_AT_DESC
  UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_MIN_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_MIN_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_MIN_ID_ASC
  UNSTAKE_REQUESTS_MIN_ID_DESC
  UNSTAKE_REQUESTS_MIN_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_MIN_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_MIN_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_MIN_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_SUM_ASSET_ID_ASC
  UNSTAKE_REQUESTS_SUM_ASSET_ID_DESC
  UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_SUM_CREATED_AT_ASC
  UNSTAKE_REQUESTS_SUM_CREATED_AT_DESC
  UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_SUM_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_SUM_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_SUM_ID_ASC
  UNSTAKE_REQUESTS_SUM_ID_DESC
  UNSTAKE_REQUESTS_SUM_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_SUM_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_SUM_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_SUM_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC
}

type Delegator implements Node {
  """Reads a single `Account` that is related to this `Delegator`."""
  account: Account
  """The account associated with this Delegator."""
  accountId: String!
  """Reads and enables pagination through a set of `Delegation`."""
  delegations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegation`."""
    orderBy: [DelegationsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationsConnection!
  """Reads and enables pagination through a set of `Delegation`."""
  delegationsByUnstakeRequestDelegatorIdAndDelegationId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegation`."""
    orderBy: [DelegationsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyConnection!
  """Reads and enables pagination through a set of `Deposit`."""
  deposits(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [deposits_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DepositFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Deposit`."""
    orderBy: [DepositsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DepositsConnection!
  """Reads and enables pagination through a set of `Deposit`."""
  depositsByWithdrawRequestDelegatorIdAndDepositId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [deposits_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DepositFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Deposit`."""
    orderBy: [DepositsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyConnection!
  """Delegator's account ID, serves as the unique identifier."""
  id: String!
  """The block number when the Delegator first interacted with the system."""
  joinedAt: Int!
  """The block number of the last update to the Delegator's information."""
  lastUpdateAt: Int!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByDelegationDelegatorIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyConnection!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByUnstakeRequestDelegatorIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyConnection!
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
  """Reads and enables pagination through a set of `WithdrawRequest`."""
  withdrawRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [withdraw_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: WithdrawRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `WithdrawRequest`."""
    orderBy: [WithdrawRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): WithdrawRequestsConnection!
}

type DelegatorAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: DelegatorAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: DelegatorDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: DelegatorMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: DelegatorMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: DelegatorStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: DelegatorStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: DelegatorSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: DelegatorVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: DelegatorVarianceSampleAggregates
}

"""A filter to be used against aggregates of `Delegator` object types."""
input DelegatorAggregatesFilter {
  """Mean average aggregate over matching `Delegator` objects."""
  average: DelegatorAverageAggregateFilter
  """Distinct count aggregate over matching `Delegator` objects."""
  distinctCount: DelegatorDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `Delegator` object to be included within the aggregate.
  """
  filter: DelegatorFilter
  """Maximum aggregate over matching `Delegator` objects."""
  max: DelegatorMaxAggregateFilter
  """Minimum aggregate over matching `Delegator` objects."""
  min: DelegatorMinAggregateFilter
  """
  Population standard deviation aggregate over matching `Delegator` objects.
  """
  stddevPopulation: DelegatorStddevPopulationAggregateFilter
  """Sample standard deviation aggregate over matching `Delegator` objects."""
  stddevSample: DelegatorStddevSampleAggregateFilter
  """Sum aggregate over matching `Delegator` objects."""
  sum: DelegatorSumAggregateFilter
  """Population variance aggregate over matching `Delegator` objects."""
  variancePopulation: DelegatorVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `Delegator` objects."""
  varianceSample: DelegatorVarianceSampleAggregateFilter
}

input DelegatorAverageAggregateFilter {
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
}

type DelegatorAverageAggregates {
  """Mean average of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """Mean average of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
}

"""
A connection to a list of `Delegation` values, with data from `UnstakeRequest`.
"""
type DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegationAggregates
  """
  A list of edges which contains the `Delegation`, info from the `UnstakeRequest`, and the cursor to aid in pagination.
  """
  edges: [DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegation` for these aggregates."""
    groupBy: [DelegationsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegationsHavingInput
  ): [DelegationAggregates!]
  """A list of `Delegation` objects."""
  nodes: [Delegation]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegation` you could get from the connection."""
  totalCount: Int!
}

"""
A `Delegation` edge in the connection, with data from `UnstakeRequest`.
"""
type DelegatorDelegationsByUnstakeRequestDelegatorIdAndDelegationIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Delegation` at the end of the edge."""
  node: Delegation
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

"""
A connection to a list of `Deposit` values, with data from `WithdrawRequest`.
"""
type DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DepositAggregates
  """
  A list of edges which contains the `Deposit`, info from the `WithdrawRequest`, and the cursor to aid in pagination.
  """
  edges: [DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Deposit` for these aggregates."""
    groupBy: [DepositsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DepositsHavingInput
  ): [DepositAggregates!]
  """A list of `Deposit` objects."""
  nodes: [Deposit]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Deposit` you could get from the connection."""
  totalCount: Int!
}

"""A `Deposit` edge in the connection, with data from `WithdrawRequest`."""
type DelegatorDepositsByWithdrawRequestDelegatorIdAndDepositIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Deposit` at the end of the edge."""
  node: Deposit
  """Reads and enables pagination through a set of `WithdrawRequest`."""
  withdrawRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [withdraw_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: WithdrawRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `WithdrawRequest`."""
    orderBy: [WithdrawRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): WithdrawRequestsConnection!
}

input DelegatorDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  accountId: BigIntFilter
  id: BigIntFilter
  joinedAt: BigIntFilter
  lastUpdateAt: BigIntFilter
}

type DelegatorDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of accountId across the matching connection"""
  accountId: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of joinedAt across the matching connection"""
  joinedAt: BigInt
  """Distinct count of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigInt
}

"""
A filter to be used against `Delegator` object types. All fields are combined with a logical ‘and.’
"""
input DelegatorFilter {
  """Filter by the object’s `account` relation."""
  account: AccountFilter
  """Filter by the object’s `accountId` field."""
  accountId: StringFilter
  """Checks for all expressions in this list."""
  and: [DelegatorFilter!]
  """Filter by the object’s `delegations` relation."""
  delegations: DelegatorToManyDelegationFilter
  """Some related `delegations` exist."""
  delegationsExist: Boolean
  """Filter by the object’s `deposits` relation."""
  deposits: DelegatorToManyDepositFilter
  """Some related `deposits` exist."""
  depositsExist: Boolean
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `joinedAt` field."""
  joinedAt: IntFilter
  """Filter by the object’s `lastUpdateAt` field."""
  lastUpdateAt: IntFilter
  """Negates the expression."""
  not: DelegatorFilter
  """Checks for any expressions in this list."""
  or: [DelegatorFilter!]
  """Filter by the object’s `unstakeRequests` relation."""
  unstakeRequests: DelegatorToManyUnstakeRequestFilter
  """Some related `unstakeRequests` exist."""
  unstakeRequestsExist: Boolean
  """Filter by the object’s `withdrawRequests` relation."""
  withdrawRequests: DelegatorToManyWithdrawRequestFilter
  """Some related `withdrawRequests` exist."""
  withdrawRequestsExist: Boolean
}

input DelegatorMaxAggregateFilter {
  joinedAt: IntFilter
  lastUpdateAt: IntFilter
}

type DelegatorMaxAggregates {
  """Maximum of joinedAt across the matching connection"""
  joinedAt: Int
  """Maximum of lastUpdateAt across the matching connection"""
  lastUpdateAt: Int
}

input DelegatorMinAggregateFilter {
  joinedAt: IntFilter
  lastUpdateAt: IntFilter
}

type DelegatorMinAggregates {
  """Minimum of joinedAt across the matching connection"""
  joinedAt: Int
  """Minimum of lastUpdateAt across the matching connection"""
  lastUpdateAt: Int
}

"""
A connection to a list of `Operator` values, with data from `Delegation`.
"""
type DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `Delegation`, and the cursor to aid in pagination.
  """
  edges: [DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""A `Operator` edge in the connection, with data from `Delegation`."""
type DelegatorOperatorsByDelegationDelegatorIdAndOperatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `Delegation`."""
  delegations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegation`."""
    orderBy: [DelegationsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationsConnection!
  """The `Operator` at the end of the edge."""
  node: Operator
}

"""
A connection to a list of `Operator` values, with data from `UnstakeRequest`.
"""
type DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `UnstakeRequest`, and the cursor to aid in pagination.
  """
  edges: [DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""A `Operator` edge in the connection, with data from `UnstakeRequest`."""
type DelegatorOperatorsByUnstakeRequestDelegatorIdAndOperatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Operator` at the end of the edge."""
  node: Operator
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

input DelegatorStddevPopulationAggregateFilter {
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
}

type DelegatorStddevPopulationAggregates {
  """
  Population standard deviation of joinedAt across the matching connection
  """
  joinedAt: BigFloat
  """
  Population standard deviation of lastUpdateAt across the matching connection
  """
  lastUpdateAt: BigFloat
}

input DelegatorStddevSampleAggregateFilter {
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
}

type DelegatorStddevSampleAggregates {
  """Sample standard deviation of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """
  Sample standard deviation of lastUpdateAt across the matching connection
  """
  lastUpdateAt: BigFloat
}

input DelegatorSumAggregateFilter {
  joinedAt: BigIntFilter
  lastUpdateAt: BigIntFilter
}

type DelegatorSumAggregates {
  """Sum of joinedAt across the matching connection"""
  joinedAt: BigInt!
  """Sum of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigInt!
}

"""
A filter to be used against many `Delegation` object types. All fields are combined with a logical ‘and.’
"""
input DelegatorToManyDelegationFilter {
  """Aggregates across related `Delegation` match the filter criteria."""
  aggregates: DelegationAggregatesFilter
  """
  Every related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: DelegationFilter
  """
  No related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: DelegationFilter
  """
  Some related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: DelegationFilter
}

"""
A filter to be used against many `Deposit` object types. All fields are combined with a logical ‘and.’
"""
input DelegatorToManyDepositFilter {
  """Aggregates across related `Deposit` match the filter criteria."""
  aggregates: DepositAggregatesFilter
  """
  Every related `Deposit` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: DepositFilter
  """
  No related `Deposit` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: DepositFilter
  """
  Some related `Deposit` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: DepositFilter
}

"""
A filter to be used against many `UnstakeRequest` object types. All fields are combined with a logical ‘and.’
"""
input DelegatorToManyUnstakeRequestFilter {
  """Aggregates across related `UnstakeRequest` match the filter criteria."""
  aggregates: UnstakeRequestAggregatesFilter
  """
  Every related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UnstakeRequestFilter
  """
  No related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UnstakeRequestFilter
  """
  Some related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UnstakeRequestFilter
}

"""
A filter to be used against many `WithdrawRequest` object types. All fields are combined with a logical ‘and.’
"""
input DelegatorToManyWithdrawRequestFilter {
  """Aggregates across related `WithdrawRequest` match the filter criteria."""
  aggregates: WithdrawRequestAggregatesFilter
  """
  Every related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: WithdrawRequestFilter
  """
  No related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: WithdrawRequestFilter
  """
  Some related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: WithdrawRequestFilter
}

input DelegatorVariancePopulationAggregateFilter {
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
}

type DelegatorVariancePopulationAggregates {
  """Population variance of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """Population variance of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
}

input DelegatorVarianceSampleAggregateFilter {
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
}

type DelegatorVarianceSampleAggregates {
  """Sample variance of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """Sample variance of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
}

"""A connection to a list of `Delegator` values."""
type DelegatorsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegatorAggregates
  """
  A list of edges which contains the `Delegator` and cursor to aid in pagination.
  """
  edges: [DelegatorsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegator` for these aggregates."""
    groupBy: [DelegatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegatorsHavingInput
  ): [DelegatorAggregates!]
  """A list of `Delegator` objects."""
  nodes: [Delegator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegator` you could get from the connection."""
  totalCount: Int!
}

"""A `Delegator` edge in the connection."""
type DelegatorsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Delegator` at the end of the edge."""
  node: Delegator
}

"""Grouping methods for `Delegator` for usage during aggregation."""
enum DelegatorsGroupBy {
  ACCOUNT_ID
  ID
  JOINED_AT
  LAST_UPDATE_AT
}

input DelegatorsHavingAverageInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

input DelegatorsHavingDistinctCountInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

"""Conditions for `Delegator` aggregates."""
input DelegatorsHavingInput {
  AND: [DelegatorsHavingInput!]
  OR: [DelegatorsHavingInput!]
  average: DelegatorsHavingAverageInput
  distinctCount: DelegatorsHavingDistinctCountInput
  max: DelegatorsHavingMaxInput
  min: DelegatorsHavingMinInput
  stddevPopulation: DelegatorsHavingStddevPopulationInput
  stddevSample: DelegatorsHavingStddevSampleInput
  sum: DelegatorsHavingSumInput
  variancePopulation: DelegatorsHavingVariancePopulationInput
  varianceSample: DelegatorsHavingVarianceSampleInput
}

input DelegatorsHavingMaxInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

input DelegatorsHavingMinInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

input DelegatorsHavingStddevPopulationInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

input DelegatorsHavingStddevSampleInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

input DelegatorsHavingSumInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

input DelegatorsHavingVariancePopulationInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

input DelegatorsHavingVarianceSampleInput {
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
}

"""Methods to use when ordering `Delegator`."""
enum DelegatorsOrderBy {
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__ID_ASC
  ACCOUNT_BY_ACCOUNT_ID__ID_DESC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC
  ACCOUNT_ID_ASC
  ACCOUNT_ID_DESC
  DELEGATIONS_AVERAGE_ASSET_ID_ASC
  DELEGATIONS_AVERAGE_ASSET_ID_DESC
  DELEGATIONS_AVERAGE_BLOCK_RANGE_ASC
  DELEGATIONS_AVERAGE_BLOCK_RANGE_DESC
  DELEGATIONS_AVERAGE_DELEGATOR_ID_ASC
  DELEGATIONS_AVERAGE_DELEGATOR_ID_DESC
  DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_AVERAGE_ID_ASC
  DELEGATIONS_AVERAGE_ID_DESC
  DELEGATIONS_AVERAGE_OPERATOR_ID_ASC
  DELEGATIONS_AVERAGE_OPERATOR_ID_DESC
  DELEGATIONS_AVERAGE_TOTAL_AMOUNT_ASC
  DELEGATIONS_AVERAGE_TOTAL_AMOUNT_DESC
  DELEGATIONS_BY_DELEGATOR_ID__COUNT_ASC
  DELEGATIONS_BY_DELEGATOR_ID__COUNT_DESC
  DELEGATIONS_COUNT_ASC
  DELEGATIONS_COUNT_DESC
  DELEGATIONS_DISTINCT_COUNT_ASSET_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_ASSET_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_DISTINCT_COUNT_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_ASC
  DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_DESC
  DELEGATIONS_MAX_ASSET_ID_ASC
  DELEGATIONS_MAX_ASSET_ID_DESC
  DELEGATIONS_MAX_BLOCK_RANGE_ASC
  DELEGATIONS_MAX_BLOCK_RANGE_DESC
  DELEGATIONS_MAX_DELEGATOR_ID_ASC
  DELEGATIONS_MAX_DELEGATOR_ID_DESC
  DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_MAX_ID_ASC
  DELEGATIONS_MAX_ID_DESC
  DELEGATIONS_MAX_OPERATOR_ID_ASC
  DELEGATIONS_MAX_OPERATOR_ID_DESC
  DELEGATIONS_MAX_TOTAL_AMOUNT_ASC
  DELEGATIONS_MAX_TOTAL_AMOUNT_DESC
  DELEGATIONS_MIN_ASSET_ID_ASC
  DELEGATIONS_MIN_ASSET_ID_DESC
  DELEGATIONS_MIN_BLOCK_RANGE_ASC
  DELEGATIONS_MIN_BLOCK_RANGE_DESC
  DELEGATIONS_MIN_DELEGATOR_ID_ASC
  DELEGATIONS_MIN_DELEGATOR_ID_DESC
  DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_MIN_ID_ASC
  DELEGATIONS_MIN_ID_DESC
  DELEGATIONS_MIN_OPERATOR_ID_ASC
  DELEGATIONS_MIN_OPERATOR_ID_DESC
  DELEGATIONS_MIN_TOTAL_AMOUNT_ASC
  DELEGATIONS_MIN_TOTAL_AMOUNT_DESC
  DELEGATIONS_STDDEV_POPULATION_ASSET_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_ASSET_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_STDDEV_POPULATION_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_ASC
  DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_DESC
  DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_STDDEV_SAMPLE_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_ASC
  DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_DESC
  DELEGATIONS_SUM_ASSET_ID_ASC
  DELEGATIONS_SUM_ASSET_ID_DESC
  DELEGATIONS_SUM_BLOCK_RANGE_ASC
  DELEGATIONS_SUM_BLOCK_RANGE_DESC
  DELEGATIONS_SUM_DELEGATOR_ID_ASC
  DELEGATIONS_SUM_DELEGATOR_ID_DESC
  DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_SUM_ID_ASC
  DELEGATIONS_SUM_ID_DESC
  DELEGATIONS_SUM_OPERATOR_ID_ASC
  DELEGATIONS_SUM_OPERATOR_ID_DESC
  DELEGATIONS_SUM_TOTAL_AMOUNT_ASC
  DELEGATIONS_SUM_TOTAL_AMOUNT_DESC
  DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_VARIANCE_POPULATION_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_ASC
  DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_DESC
  DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_VARIANCE_SAMPLE_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_ASC
  DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_DESC
  DEPOSITS_AVERAGE_ASSET_ID_ASC
  DEPOSITS_AVERAGE_ASSET_ID_DESC
  DEPOSITS_AVERAGE_BLOCK_RANGE_ASC
  DEPOSITS_AVERAGE_BLOCK_RANGE_DESC
  DEPOSITS_AVERAGE_DELEGATOR_ID_ASC
  DEPOSITS_AVERAGE_DELEGATOR_ID_DESC
  DEPOSITS_AVERAGE_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_AVERAGE_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_AVERAGE_ID_ASC
  DEPOSITS_AVERAGE_ID_DESC
  DEPOSITS_AVERAGE_TOTAL_AMOUNT_ASC
  DEPOSITS_AVERAGE_TOTAL_AMOUNT_DESC
  DEPOSITS_BY_DELEGATOR_ID__COUNT_ASC
  DEPOSITS_BY_DELEGATOR_ID__COUNT_DESC
  DEPOSITS_COUNT_ASC
  DEPOSITS_COUNT_DESC
  DEPOSITS_DISTINCT_COUNT_ASSET_ID_ASC
  DEPOSITS_DISTINCT_COUNT_ASSET_ID_DESC
  DEPOSITS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  DEPOSITS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  DEPOSITS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  DEPOSITS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  DEPOSITS_DISTINCT_COUNT_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_DISTINCT_COUNT_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_DISTINCT_COUNT_ID_ASC
  DEPOSITS_DISTINCT_COUNT_ID_DESC
  DEPOSITS_DISTINCT_COUNT_TOTAL_AMOUNT_ASC
  DEPOSITS_DISTINCT_COUNT_TOTAL_AMOUNT_DESC
  DEPOSITS_MAX_ASSET_ID_ASC
  DEPOSITS_MAX_ASSET_ID_DESC
  DEPOSITS_MAX_BLOCK_RANGE_ASC
  DEPOSITS_MAX_BLOCK_RANGE_DESC
  DEPOSITS_MAX_DELEGATOR_ID_ASC
  DEPOSITS_MAX_DELEGATOR_ID_DESC
  DEPOSITS_MAX_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_MAX_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_MAX_ID_ASC
  DEPOSITS_MAX_ID_DESC
  DEPOSITS_MAX_TOTAL_AMOUNT_ASC
  DEPOSITS_MAX_TOTAL_AMOUNT_DESC
  DEPOSITS_MIN_ASSET_ID_ASC
  DEPOSITS_MIN_ASSET_ID_DESC
  DEPOSITS_MIN_BLOCK_RANGE_ASC
  DEPOSITS_MIN_BLOCK_RANGE_DESC
  DEPOSITS_MIN_DELEGATOR_ID_ASC
  DEPOSITS_MIN_DELEGATOR_ID_DESC
  DEPOSITS_MIN_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_MIN_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_MIN_ID_ASC
  DEPOSITS_MIN_ID_DESC
  DEPOSITS_MIN_TOTAL_AMOUNT_ASC
  DEPOSITS_MIN_TOTAL_AMOUNT_DESC
  DEPOSITS_STDDEV_POPULATION_ASSET_ID_ASC
  DEPOSITS_STDDEV_POPULATION_ASSET_ID_DESC
  DEPOSITS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  DEPOSITS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  DEPOSITS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  DEPOSITS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  DEPOSITS_STDDEV_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_STDDEV_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_STDDEV_POPULATION_ID_ASC
  DEPOSITS_STDDEV_POPULATION_ID_DESC
  DEPOSITS_STDDEV_POPULATION_TOTAL_AMOUNT_ASC
  DEPOSITS_STDDEV_POPULATION_TOTAL_AMOUNT_DESC
  DEPOSITS_STDDEV_SAMPLE_ASSET_ID_ASC
  DEPOSITS_STDDEV_SAMPLE_ASSET_ID_DESC
  DEPOSITS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  DEPOSITS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  DEPOSITS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  DEPOSITS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  DEPOSITS_STDDEV_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_STDDEV_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_STDDEV_SAMPLE_ID_ASC
  DEPOSITS_STDDEV_SAMPLE_ID_DESC
  DEPOSITS_STDDEV_SAMPLE_TOTAL_AMOUNT_ASC
  DEPOSITS_STDDEV_SAMPLE_TOTAL_AMOUNT_DESC
  DEPOSITS_SUM_ASSET_ID_ASC
  DEPOSITS_SUM_ASSET_ID_DESC
  DEPOSITS_SUM_BLOCK_RANGE_ASC
  DEPOSITS_SUM_BLOCK_RANGE_DESC
  DEPOSITS_SUM_DELEGATOR_ID_ASC
  DEPOSITS_SUM_DELEGATOR_ID_DESC
  DEPOSITS_SUM_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_SUM_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_SUM_ID_ASC
  DEPOSITS_SUM_ID_DESC
  DEPOSITS_SUM_TOTAL_AMOUNT_ASC
  DEPOSITS_SUM_TOTAL_AMOUNT_DESC
  DEPOSITS_VARIANCE_POPULATION_ASSET_ID_ASC
  DEPOSITS_VARIANCE_POPULATION_ASSET_ID_DESC
  DEPOSITS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  DEPOSITS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  DEPOSITS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  DEPOSITS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  DEPOSITS_VARIANCE_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_VARIANCE_POPULATION_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_VARIANCE_POPULATION_ID_ASC
  DEPOSITS_VARIANCE_POPULATION_ID_DESC
  DEPOSITS_VARIANCE_POPULATION_TOTAL_AMOUNT_ASC
  DEPOSITS_VARIANCE_POPULATION_TOTAL_AMOUNT_DESC
  DEPOSITS_VARIANCE_SAMPLE_ASSET_ID_ASC
  DEPOSITS_VARIANCE_SAMPLE_ASSET_ID_DESC
  DEPOSITS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  DEPOSITS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  DEPOSITS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  DEPOSITS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  DEPOSITS_VARIANCE_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSITS_VARIANCE_SAMPLE_HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSITS_VARIANCE_SAMPLE_ID_ASC
  DEPOSITS_VARIANCE_SAMPLE_ID_DESC
  DEPOSITS_VARIANCE_SAMPLE_TOTAL_AMOUNT_ASC
  DEPOSITS_VARIANCE_SAMPLE_TOTAL_AMOUNT_DESC
  ID_ASC
  ID_DESC
  JOINED_AT_ASC
  JOINED_AT_DESC
  LAST_UPDATE_AT_ASC
  LAST_UPDATE_AT_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_BY_DELEGATOR_ID__COUNT_ASC
  UNSTAKE_REQUESTS_BY_DELEGATOR_ID__COUNT_DESC
  UNSTAKE_REQUESTS_COUNT_ASC
  UNSTAKE_REQUESTS_COUNT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_MAX_ASSET_ID_ASC
  UNSTAKE_REQUESTS_MAX_ASSET_ID_DESC
  UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_MAX_CREATED_AT_ASC
  UNSTAKE_REQUESTS_MAX_CREATED_AT_DESC
  UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_MAX_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_MAX_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_MAX_ID_ASC
  UNSTAKE_REQUESTS_MAX_ID_DESC
  UNSTAKE_REQUESTS_MAX_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_MAX_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_MAX_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_MAX_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_MIN_ASSET_ID_ASC
  UNSTAKE_REQUESTS_MIN_ASSET_ID_DESC
  UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_MIN_CREATED_AT_ASC
  UNSTAKE_REQUESTS_MIN_CREATED_AT_DESC
  UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_MIN_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_MIN_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_MIN_ID_ASC
  UNSTAKE_REQUESTS_MIN_ID_DESC
  UNSTAKE_REQUESTS_MIN_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_MIN_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_MIN_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_MIN_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_SUM_ASSET_ID_ASC
  UNSTAKE_REQUESTS_SUM_ASSET_ID_DESC
  UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_SUM_CREATED_AT_ASC
  UNSTAKE_REQUESTS_SUM_CREATED_AT_DESC
  UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_SUM_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_SUM_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_SUM_ID_ASC
  UNSTAKE_REQUESTS_SUM_ID_DESC
  UNSTAKE_REQUESTS_SUM_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_SUM_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_SUM_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_SUM_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_ASC
  WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_DESC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_BY_DELEGATOR_ID__COUNT_ASC
  WITHDRAW_REQUESTS_BY_DELEGATOR_ID__COUNT_DESC
  WITHDRAW_REQUESTS_COUNT_ASC
  WITHDRAW_REQUESTS_COUNT_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_MAX_ASSET_ID_ASC
  WITHDRAW_REQUESTS_MAX_ASSET_ID_DESC
  WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_MAX_CREATED_AT_ASC
  WITHDRAW_REQUESTS_MAX_CREATED_AT_DESC
  WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_MAX_ID_ASC
  WITHDRAW_REQUESTS_MAX_ID_DESC
  WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_MAX_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_MAX_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_MIN_ASSET_ID_ASC
  WITHDRAW_REQUESTS_MIN_ASSET_ID_DESC
  WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_MIN_CREATED_AT_ASC
  WITHDRAW_REQUESTS_MIN_CREATED_AT_DESC
  WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_MIN_ID_ASC
  WITHDRAW_REQUESTS_MIN_ID_DESC
  WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_MIN_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_MIN_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_SUM_ASSET_ID_ASC
  WITHDRAW_REQUESTS_SUM_ASSET_ID_DESC
  WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_SUM_CREATED_AT_ASC
  WITHDRAW_REQUESTS_SUM_CREATED_AT_DESC
  WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_SUM_ID_ASC
  WITHDRAW_REQUESTS_SUM_ID_DESC
  WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_SUM_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_SUM_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC
}

type Deposit implements Node {
  """The asset ID of the deposited tokens."""
  assetId: JSON!
  """Reads a single `Delegator` that is related to this `Deposit`."""
  delegator: Delegator
  """The Delegator who made the deposit."""
  delegatorId: String!
  """Reads and enables pagination through a set of `Delegator`."""
  delegatorsByWithdrawRequestDepositIdAndDelegatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegator`."""
    orderBy: [DelegatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyConnection!
  """
  Indicates whether there is an active withdraw request for this deposit.
  """
  hasActiveWithdrawRequest: Boolean!
  """Reads and enables pagination through a set of `DepositHistory`."""
  history(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [deposit_histories_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DepositHistoryFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `DepositHistory`."""
    orderBy: [DepositHistoriesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DepositHistoriesConnection!
  """
  Unique identifier for the deposit. Composite key: delegator ID + asset ID
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """The total amount of tokens deposited by the Delegator for this asset."""
  totalAmount: BigFloat!
  """Reads and enables pagination through a set of `WithdrawRequest`."""
  withdrawRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [withdraw_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: WithdrawRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `WithdrawRequest`."""
    orderBy: [WithdrawRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): WithdrawRequestsConnection!
}

type DepositAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: DepositAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: DepositDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: DepositMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: DepositMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: DepositStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: DepositStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: DepositSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: DepositVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: DepositVarianceSampleAggregates
}

"""A filter to be used against aggregates of `Deposit` object types."""
input DepositAggregatesFilter {
  """Mean average aggregate over matching `Deposit` objects."""
  average: DepositAverageAggregateFilter
  """Distinct count aggregate over matching `Deposit` objects."""
  distinctCount: DepositDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `Deposit` object to be included within the aggregate.
  """
  filter: DepositFilter
  """Maximum aggregate over matching `Deposit` objects."""
  max: DepositMaxAggregateFilter
  """Minimum aggregate over matching `Deposit` objects."""
  min: DepositMinAggregateFilter
  """
  Population standard deviation aggregate over matching `Deposit` objects.
  """
  stddevPopulation: DepositStddevPopulationAggregateFilter
  """Sample standard deviation aggregate over matching `Deposit` objects."""
  stddevSample: DepositStddevSampleAggregateFilter
  """Sum aggregate over matching `Deposit` objects."""
  sum: DepositSumAggregateFilter
  """Population variance aggregate over matching `Deposit` objects."""
  variancePopulation: DepositVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `Deposit` objects."""
  varianceSample: DepositVarianceSampleAggregateFilter
}

input DepositAverageAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositAverageAggregates {
  """Mean average of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

"""
A connection to a list of `Delegator` values, with data from `WithdrawRequest`.
"""
type DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegatorAggregates
  """
  A list of edges which contains the `Delegator`, info from the `WithdrawRequest`, and the cursor to aid in pagination.
  """
  edges: [DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegator` for these aggregates."""
    groupBy: [DelegatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegatorsHavingInput
  ): [DelegatorAggregates!]
  """A list of `Delegator` objects."""
  nodes: [Delegator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegator` you could get from the connection."""
  totalCount: Int!
}

"""
A `Delegator` edge in the connection, with data from `WithdrawRequest`.
"""
type DepositDelegatorsByWithdrawRequestDepositIdAndDelegatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Delegator` at the end of the edge."""
  node: Delegator
  """Reads and enables pagination through a set of `WithdrawRequest`."""
  withdrawRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [withdraw_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: WithdrawRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `WithdrawRequest`."""
    orderBy: [WithdrawRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): WithdrawRequestsConnection!
}

input DepositDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  assetId: BigIntFilter
  delegatorId: BigIntFilter
  hasActiveWithdrawRequest: BigIntFilter
  id: BigIntFilter
  totalAmount: BigIntFilter
}

type DepositDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of assetId across the matching connection"""
  assetId: BigInt
  """Distinct count of delegatorId across the matching connection"""
  delegatorId: BigInt
  """
  Distinct count of hasActiveWithdrawRequest across the matching connection
  """
  hasActiveWithdrawRequest: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of totalAmount across the matching connection"""
  totalAmount: BigInt
}

"""
A filter to be used against `Deposit` object types. All fields are combined with a logical ‘and.’
"""
input DepositFilter {
  """Checks for all expressions in this list."""
  and: [DepositFilter!]
  """Filter by the object’s `assetId` field."""
  assetId: JSONFilter
  """Filter by the object’s `delegator` relation."""
  delegator: DelegatorFilter
  """Filter by the object’s `delegatorId` field."""
  delegatorId: StringFilter
  """Filter by the object’s `hasActiveWithdrawRequest` field."""
  hasActiveWithdrawRequest: BooleanFilter
  """Filter by the object’s `history` relation."""
  history: DepositToManyDepositHistoryFilter
  """Some related `history` exist."""
  historyExist: Boolean
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: DepositFilter
  """Checks for any expressions in this list."""
  or: [DepositFilter!]
  """Filter by the object’s `totalAmount` field."""
  totalAmount: BigFloatFilter
  """Filter by the object’s `withdrawRequests` relation."""
  withdrawRequests: DepositToManyWithdrawRequestFilter
  """Some related `withdrawRequests` exist."""
  withdrawRequestsExist: Boolean
}

"""A connection to a list of `DepositHistory` values."""
type DepositHistoriesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DepositHistoryAggregates
  """
  A list of edges which contains the `DepositHistory` and cursor to aid in pagination.
  """
  edges: [DepositHistoriesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `DepositHistory` for these aggregates."""
    groupBy: [DepositHistoriesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DepositHistoriesHavingInput
  ): [DepositHistoryAggregates!]
  """A list of `DepositHistory` objects."""
  nodes: [DepositHistory]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `DepositHistory` you could get from the connection."""
  totalCount: Int!
}

"""A `DepositHistory` edge in the connection."""
type DepositHistoriesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `DepositHistory` at the end of the edge."""
  node: DepositHistory
}

"""Grouping methods for `DepositHistory` for usage during aggregation."""
enum DepositHistoriesGroupBy {
  AMOUNT
  BLOCK_NUMBER
  DEPOSIT_ID
  ID
}

input DepositHistoriesHavingAverageInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DepositHistoriesHavingDistinctCountInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Conditions for `DepositHistory` aggregates."""
input DepositHistoriesHavingInput {
  AND: [DepositHistoriesHavingInput!]
  OR: [DepositHistoriesHavingInput!]
  average: DepositHistoriesHavingAverageInput
  distinctCount: DepositHistoriesHavingDistinctCountInput
  max: DepositHistoriesHavingMaxInput
  min: DepositHistoriesHavingMinInput
  stddevPopulation: DepositHistoriesHavingStddevPopulationInput
  stddevSample: DepositHistoriesHavingStddevSampleInput
  sum: DepositHistoriesHavingSumInput
  variancePopulation: DepositHistoriesHavingVariancePopulationInput
  varianceSample: DepositHistoriesHavingVarianceSampleInput
}

input DepositHistoriesHavingMaxInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DepositHistoriesHavingMinInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DepositHistoriesHavingStddevPopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DepositHistoriesHavingStddevSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DepositHistoriesHavingSumInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DepositHistoriesHavingVariancePopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input DepositHistoriesHavingVarianceSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Methods to use when ordering `DepositHistory`."""
enum DepositHistoriesOrderBy {
  AMOUNT_ASC
  AMOUNT_DESC
  BLOCK_NUMBER_ASC
  BLOCK_NUMBER_DESC
  DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_ASC
  DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_DESC
  DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_ASC
  DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_DESC
  DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSIT_BY_DEPOSIT_ID__ID_ASC
  DEPOSIT_BY_DEPOSIT_ID__ID_DESC
  DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_ASC
  DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_DESC
  DEPOSIT_ID_ASC
  DEPOSIT_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

type DepositHistory implements Node {
  """The amount of tokens deposited in this transaction."""
  amount: BigFloat!
  """The block number at which this deposit transaction occurred."""
  blockNumber: Int!
  """Reads a single `Deposit` that is related to this `DepositHistory`."""
  deposit: Deposit
  """The deposit this history entry is associated with."""
  depositId: String!
  """
  Unique identifier for the deposit history entry. Composite key: deposit ID + block number
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

type DepositHistoryAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: DepositHistoryAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: DepositHistoryDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: DepositHistoryMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: DepositHistoryMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: DepositHistoryStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: DepositHistoryStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: DepositHistorySumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: DepositHistoryVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: DepositHistoryVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `DepositHistory` object types.
"""
input DepositHistoryAggregatesFilter {
  """Mean average aggregate over matching `DepositHistory` objects."""
  average: DepositHistoryAverageAggregateFilter
  """Distinct count aggregate over matching `DepositHistory` objects."""
  distinctCount: DepositHistoryDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `DepositHistory` object to be included within the aggregate.
  """
  filter: DepositHistoryFilter
  """Maximum aggregate over matching `DepositHistory` objects."""
  max: DepositHistoryMaxAggregateFilter
  """Minimum aggregate over matching `DepositHistory` objects."""
  min: DepositHistoryMinAggregateFilter
  """
  Population standard deviation aggregate over matching `DepositHistory` objects.
  """
  stddevPopulation: DepositHistoryStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `DepositHistory` objects.
  """
  stddevSample: DepositHistoryStddevSampleAggregateFilter
  """Sum aggregate over matching `DepositHistory` objects."""
  sum: DepositHistorySumAggregateFilter
  """Population variance aggregate over matching `DepositHistory` objects."""
  variancePopulation: DepositHistoryVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `DepositHistory` objects."""
  varianceSample: DepositHistoryVarianceSampleAggregateFilter
}

input DepositHistoryAverageAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DepositHistoryAverageAggregates {
  """Mean average of amount across the matching connection"""
  amount: BigFloat
  """Mean average of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input DepositHistoryDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  amount: BigIntFilter
  blockNumber: BigIntFilter
  depositId: BigIntFilter
  id: BigIntFilter
}

type DepositHistoryDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of amount across the matching connection"""
  amount: BigInt
  """Distinct count of blockNumber across the matching connection"""
  blockNumber: BigInt
  """Distinct count of depositId across the matching connection"""
  depositId: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
}

"""
A filter to be used against `DepositHistory` object types. All fields are combined with a logical ‘and.’
"""
input DepositHistoryFilter {
  """Filter by the object’s `amount` field."""
  amount: BigFloatFilter
  """Checks for all expressions in this list."""
  and: [DepositHistoryFilter!]
  """Filter by the object’s `blockNumber` field."""
  blockNumber: IntFilter
  """Filter by the object’s `deposit` relation."""
  deposit: DepositFilter
  """Filter by the object’s `depositId` field."""
  depositId: StringFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: DepositHistoryFilter
  """Checks for any expressions in this list."""
  or: [DepositHistoryFilter!]
}

input DepositHistoryMaxAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type DepositHistoryMaxAggregates {
  """Maximum of amount across the matching connection"""
  amount: BigFloat
  """Maximum of blockNumber across the matching connection"""
  blockNumber: Int
}

input DepositHistoryMinAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type DepositHistoryMinAggregates {
  """Minimum of amount across the matching connection"""
  amount: BigFloat
  """Minimum of blockNumber across the matching connection"""
  blockNumber: Int
}

input DepositHistoryStddevPopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DepositHistoryStddevPopulationAggregates {
  """Population standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Population standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input DepositHistoryStddevSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DepositHistoryStddevSampleAggregates {
  """Sample standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Sample standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input DepositHistorySumAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigIntFilter
}

type DepositHistorySumAggregates {
  """Sum of amount across the matching connection"""
  amount: BigFloat!
  """Sum of blockNumber across the matching connection"""
  blockNumber: BigInt!
}

input DepositHistoryVariancePopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DepositHistoryVariancePopulationAggregates {
  """Population variance of amount across the matching connection"""
  amount: BigFloat
  """Population variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input DepositHistoryVarianceSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type DepositHistoryVarianceSampleAggregates {
  """Sample variance of amount across the matching connection"""
  amount: BigFloat
  """Sample variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input DepositMaxAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositMaxAggregates {
  """Maximum of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

input DepositMinAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositMinAggregates {
  """Minimum of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

input DepositStddevPopulationAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositStddevPopulationAggregates {
  """
  Population standard deviation of totalAmount across the matching connection
  """
  totalAmount: BigFloat
}

input DepositStddevSampleAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositStddevSampleAggregates {
  """
  Sample standard deviation of totalAmount across the matching connection
  """
  totalAmount: BigFloat
}

input DepositSumAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositSumAggregates {
  """Sum of totalAmount across the matching connection"""
  totalAmount: BigFloat!
}

"""
A filter to be used against many `DepositHistory` object types. All fields are combined with a logical ‘and.’
"""
input DepositToManyDepositHistoryFilter {
  """Aggregates across related `DepositHistory` match the filter criteria."""
  aggregates: DepositHistoryAggregatesFilter
  """
  Every related `DepositHistory` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: DepositHistoryFilter
  """
  No related `DepositHistory` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: DepositHistoryFilter
  """
  Some related `DepositHistory` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: DepositHistoryFilter
}

"""
A filter to be used against many `WithdrawRequest` object types. All fields are combined with a logical ‘and.’
"""
input DepositToManyWithdrawRequestFilter {
  """Aggregates across related `WithdrawRequest` match the filter criteria."""
  aggregates: WithdrawRequestAggregatesFilter
  """
  Every related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: WithdrawRequestFilter
  """
  No related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: WithdrawRequestFilter
  """
  Some related `WithdrawRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: WithdrawRequestFilter
}

input DepositVariancePopulationAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositVariancePopulationAggregates {
  """Population variance of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

input DepositVarianceSampleAggregateFilter {
  totalAmount: BigFloatFilter
}

type DepositVarianceSampleAggregates {
  """Sample variance of totalAmount across the matching connection"""
  totalAmount: BigFloat
}

"""A connection to a list of `Deposit` values."""
type DepositsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DepositAggregates
  """
  A list of edges which contains the `Deposit` and cursor to aid in pagination.
  """
  edges: [DepositsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Deposit` for these aggregates."""
    groupBy: [DepositsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DepositsHavingInput
  ): [DepositAggregates!]
  """A list of `Deposit` objects."""
  nodes: [Deposit]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Deposit` you could get from the connection."""
  totalCount: Int!
}

"""A `Deposit` edge in the connection."""
type DepositsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Deposit` at the end of the edge."""
  node: Deposit
}

"""Grouping methods for `Deposit` for usage during aggregation."""
enum DepositsGroupBy {
  ASSET_ID
  DELEGATOR_ID
  HAS_ACTIVE_WITHDRAW_REQUEST
  ID
  TOTAL_AMOUNT
}

input DepositsHavingAverageInput {
  totalAmount: HavingBigfloatFilter
}

input DepositsHavingDistinctCountInput {
  totalAmount: HavingBigfloatFilter
}

"""Conditions for `Deposit` aggregates."""
input DepositsHavingInput {
  AND: [DepositsHavingInput!]
  OR: [DepositsHavingInput!]
  average: DepositsHavingAverageInput
  distinctCount: DepositsHavingDistinctCountInput
  max: DepositsHavingMaxInput
  min: DepositsHavingMinInput
  stddevPopulation: DepositsHavingStddevPopulationInput
  stddevSample: DepositsHavingStddevSampleInput
  sum: DepositsHavingSumInput
  variancePopulation: DepositsHavingVariancePopulationInput
  varianceSample: DepositsHavingVarianceSampleInput
}

input DepositsHavingMaxInput {
  totalAmount: HavingBigfloatFilter
}

input DepositsHavingMinInput {
  totalAmount: HavingBigfloatFilter
}

input DepositsHavingStddevPopulationInput {
  totalAmount: HavingBigfloatFilter
}

input DepositsHavingStddevSampleInput {
  totalAmount: HavingBigfloatFilter
}

input DepositsHavingSumInput {
  totalAmount: HavingBigfloatFilter
}

input DepositsHavingVariancePopulationInput {
  totalAmount: HavingBigfloatFilter
}

input DepositsHavingVarianceSampleInput {
  totalAmount: HavingBigfloatFilter
}

"""Methods to use when ordering `Deposit`."""
enum DepositsOrderBy {
  ASSET_ID_ASC
  ASSET_ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC
  DELEGATOR_ID_ASC
  DELEGATOR_ID_DESC
  DEPOSIT_HISTORIES_BY_DEPOSIT_ID__COUNT_ASC
  DEPOSIT_HISTORIES_BY_DEPOSIT_ID__COUNT_DESC
  HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  HISTORY_AVERAGE_AMOUNT_ASC
  HISTORY_AVERAGE_AMOUNT_DESC
  HISTORY_AVERAGE_BLOCK_NUMBER_ASC
  HISTORY_AVERAGE_BLOCK_NUMBER_DESC
  HISTORY_AVERAGE_BLOCK_RANGE_ASC
  HISTORY_AVERAGE_BLOCK_RANGE_DESC
  HISTORY_AVERAGE_DEPOSIT_ID_ASC
  HISTORY_AVERAGE_DEPOSIT_ID_DESC
  HISTORY_AVERAGE_ID_ASC
  HISTORY_AVERAGE_ID_DESC
  HISTORY_COUNT_ASC
  HISTORY_COUNT_DESC
  HISTORY_DISTINCT_COUNT_AMOUNT_ASC
  HISTORY_DISTINCT_COUNT_AMOUNT_DESC
  HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC
  HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC
  HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC
  HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC
  HISTORY_DISTINCT_COUNT_DEPOSIT_ID_ASC
  HISTORY_DISTINCT_COUNT_DEPOSIT_ID_DESC
  HISTORY_DISTINCT_COUNT_ID_ASC
  HISTORY_DISTINCT_COUNT_ID_DESC
  HISTORY_MAX_AMOUNT_ASC
  HISTORY_MAX_AMOUNT_DESC
  HISTORY_MAX_BLOCK_NUMBER_ASC
  HISTORY_MAX_BLOCK_NUMBER_DESC
  HISTORY_MAX_BLOCK_RANGE_ASC
  HISTORY_MAX_BLOCK_RANGE_DESC
  HISTORY_MAX_DEPOSIT_ID_ASC
  HISTORY_MAX_DEPOSIT_ID_DESC
  HISTORY_MAX_ID_ASC
  HISTORY_MAX_ID_DESC
  HISTORY_MIN_AMOUNT_ASC
  HISTORY_MIN_AMOUNT_DESC
  HISTORY_MIN_BLOCK_NUMBER_ASC
  HISTORY_MIN_BLOCK_NUMBER_DESC
  HISTORY_MIN_BLOCK_RANGE_ASC
  HISTORY_MIN_BLOCK_RANGE_DESC
  HISTORY_MIN_DEPOSIT_ID_ASC
  HISTORY_MIN_DEPOSIT_ID_DESC
  HISTORY_MIN_ID_ASC
  HISTORY_MIN_ID_DESC
  HISTORY_STDDEV_POPULATION_AMOUNT_ASC
  HISTORY_STDDEV_POPULATION_AMOUNT_DESC
  HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC
  HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC
  HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC
  HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC
  HISTORY_STDDEV_POPULATION_DEPOSIT_ID_ASC
  HISTORY_STDDEV_POPULATION_DEPOSIT_ID_DESC
  HISTORY_STDDEV_POPULATION_ID_ASC
  HISTORY_STDDEV_POPULATION_ID_DESC
  HISTORY_STDDEV_SAMPLE_AMOUNT_ASC
  HISTORY_STDDEV_SAMPLE_AMOUNT_DESC
  HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC
  HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC
  HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  HISTORY_STDDEV_SAMPLE_DEPOSIT_ID_ASC
  HISTORY_STDDEV_SAMPLE_DEPOSIT_ID_DESC
  HISTORY_STDDEV_SAMPLE_ID_ASC
  HISTORY_STDDEV_SAMPLE_ID_DESC
  HISTORY_SUM_AMOUNT_ASC
  HISTORY_SUM_AMOUNT_DESC
  HISTORY_SUM_BLOCK_NUMBER_ASC
  HISTORY_SUM_BLOCK_NUMBER_DESC
  HISTORY_SUM_BLOCK_RANGE_ASC
  HISTORY_SUM_BLOCK_RANGE_DESC
  HISTORY_SUM_DEPOSIT_ID_ASC
  HISTORY_SUM_DEPOSIT_ID_DESC
  HISTORY_SUM_ID_ASC
  HISTORY_SUM_ID_DESC
  HISTORY_VARIANCE_POPULATION_AMOUNT_ASC
  HISTORY_VARIANCE_POPULATION_AMOUNT_DESC
  HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC
  HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC
  HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  HISTORY_VARIANCE_POPULATION_DEPOSIT_ID_ASC
  HISTORY_VARIANCE_POPULATION_DEPOSIT_ID_DESC
  HISTORY_VARIANCE_POPULATION_ID_ASC
  HISTORY_VARIANCE_POPULATION_ID_DESC
  HISTORY_VARIANCE_SAMPLE_AMOUNT_ASC
  HISTORY_VARIANCE_SAMPLE_AMOUNT_DESC
  HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC
  HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC
  HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  HISTORY_VARIANCE_SAMPLE_DEPOSIT_ID_ASC
  HISTORY_VARIANCE_SAMPLE_DEPOSIT_ID_DESC
  HISTORY_VARIANCE_SAMPLE_ID_ASC
  HISTORY_VARIANCE_SAMPLE_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  TOTAL_AMOUNT_ASC
  TOTAL_AMOUNT_DESC
  WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_ASSET_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_AVERAGE_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_ASC
  WITHDRAW_REQUESTS_AVERAGE_CREATED_AT_DESC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_AVERAGE_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_ID_ASC
  WITHDRAW_REQUESTS_AVERAGE_ID_DESC
  WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_AVERAGE_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_BY_DEPOSIT_ID__COUNT_ASC
  WITHDRAW_REQUESTS_BY_DEPOSIT_ID__COUNT_DESC
  WITHDRAW_REQUESTS_COUNT_ASC
  WITHDRAW_REQUESTS_COUNT_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_ID_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_MAX_ASSET_ID_ASC
  WITHDRAW_REQUESTS_MAX_ASSET_ID_DESC
  WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_MAX_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_MAX_CREATED_AT_ASC
  WITHDRAW_REQUESTS_MAX_CREATED_AT_DESC
  WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_MAX_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_MAX_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_MAX_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_MAX_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_MAX_ID_ASC
  WITHDRAW_REQUESTS_MAX_ID_DESC
  WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_MAX_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_MAX_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_MAX_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_MIN_ASSET_ID_ASC
  WITHDRAW_REQUESTS_MIN_ASSET_ID_DESC
  WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_MIN_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_MIN_CREATED_AT_ASC
  WITHDRAW_REQUESTS_MIN_CREATED_AT_DESC
  WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_MIN_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_MIN_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_MIN_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_MIN_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_MIN_ID_ASC
  WITHDRAW_REQUESTS_MIN_ID_DESC
  WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_MIN_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_MIN_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_MIN_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_ID_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_SUM_ASSET_ID_ASC
  WITHDRAW_REQUESTS_SUM_ASSET_ID_DESC
  WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_SUM_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_SUM_CREATED_AT_ASC
  WITHDRAW_REQUESTS_SUM_CREATED_AT_DESC
  WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_SUM_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_SUM_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_SUM_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_SUM_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_SUM_ID_ASC
  WITHDRAW_REQUESTS_SUM_ID_DESC
  WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_SUM_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_SUM_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_SUM_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_DEPOSIT_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_ID_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC
  WITHDRAW_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC
}

"""
A filter to be used against Float fields. All fields are combined with a logical ‘and.’
"""
input FloatFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Float
  """Equal to the specified value."""
  equalTo: Float
  """Greater than the specified value."""
  greaterThan: Float
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Float
  """Included in the specified list."""
  in: [Float!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: Float
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Float
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Float
  """Not equal to the specified value."""
  notEqualTo: Float
  """Not included in the specified list."""
  notIn: [Float!]
}

input HavingBigfloatFilter {
  equalTo: BigFloat
  greaterThan: BigFloat
  greaterThanOrEqualTo: BigFloat
  lessThan: BigFloat
  lessThanOrEqualTo: BigFloat
  notEqualTo: BigFloat
}

input HavingDatetimeFilter {
  equalTo: Datetime
  greaterThan: Datetime
  greaterThanOrEqualTo: Datetime
  lessThan: Datetime
  lessThanOrEqualTo: Datetime
  notEqualTo: Datetime
}

input HavingFloatFilter {
  equalTo: Float
  greaterThan: Float
  greaterThanOrEqualTo: Float
  lessThan: Float
  lessThanOrEqualTo: Float
  notEqualTo: Float
}

input HavingIntFilter {
  equalTo: Int
  greaterThan: Int
  greaterThanOrEqualTo: Int
  lessThan: Int
  lessThanOrEqualTo: Int
  notEqualTo: Int
}

"""
A filter to be used against Int fields. All fields are combined with a logical ‘and.’
"""
input IntFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: Int
  """Equal to the specified value."""
  equalTo: Int
  """Greater than the specified value."""
  greaterThan: Int
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: Int
  """Included in the specified list."""
  in: [Int!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: Int
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: Int
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: Int
  """Not equal to the specified value."""
  notEqualTo: Int
  """Not included in the specified list."""
  notIn: [Int!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
A filter to be used against JSON fields. All fields are combined with a logical ‘and.’
"""
input JSONFilter {
  """Contained by the specified JSON."""
  containedBy: JSON
  """Contains the specified JSON."""
  contains: JSON
  """Contains all of the specified keys."""
  containsAllKeys: [String!]
  """Contains any of the specified keys."""
  containsAnyKeys: [String!]
  """Contains the specified key."""
  containsKey: String
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: JSON
  """Equal to the specified value."""
  equalTo: JSON
  """Greater than the specified value."""
  greaterThan: JSON
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: JSON
  """Included in the specified list."""
  in: [JSON!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: JSON
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: JSON
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: JSON
  """Not equal to the specified value."""
  notEqualTo: JSON
  """Not included in the specified list."""
  notIn: [JSON!]
}

type JobCall implements Node {
  """Reads a single `Account` that is related to this `JobCall`."""
  caller: Account
  """The caller of the Job."""
  callerId: String!
  """The creation block number of the Job Call."""
  createdAt: Int!
  """Unique identifier for the Job Call."""
  id: String!
  """The job ID of the Job Call."""
  jobId: Int!
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByJobResultJobCallIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyConnection!
  """Reads a single `Service` that is related to this `JobCall`."""
  service: Service
  """The Service associated with this Job Call."""
  serviceId: String!
  """Reads and enables pagination through a set of `Service`."""
  servicesByJobResultJobCallIdAndServiceId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyConnection!
}

type JobCallAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: JobCallAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: JobCallDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: JobCallMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: JobCallMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: JobCallStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: JobCallStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: JobCallSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: JobCallVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: JobCallVarianceSampleAggregates
}

"""A filter to be used against aggregates of `JobCall` object types."""
input JobCallAggregatesFilter {
  """Mean average aggregate over matching `JobCall` objects."""
  average: JobCallAverageAggregateFilter
  """Distinct count aggregate over matching `JobCall` objects."""
  distinctCount: JobCallDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `JobCall` object to be included within the aggregate.
  """
  filter: JobCallFilter
  """Maximum aggregate over matching `JobCall` objects."""
  max: JobCallMaxAggregateFilter
  """Minimum aggregate over matching `JobCall` objects."""
  min: JobCallMinAggregateFilter
  """
  Population standard deviation aggregate over matching `JobCall` objects.
  """
  stddevPopulation: JobCallStddevPopulationAggregateFilter
  """Sample standard deviation aggregate over matching `JobCall` objects."""
  stddevSample: JobCallStddevSampleAggregateFilter
  """Sum aggregate over matching `JobCall` objects."""
  sum: JobCallSumAggregateFilter
  """Population variance aggregate over matching `JobCall` objects."""
  variancePopulation: JobCallVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `JobCall` objects."""
  varianceSample: JobCallVarianceSampleAggregateFilter
}

input JobCallAverageAggregateFilter {
  createdAt: BigFloatFilter
  jobId: BigFloatFilter
}

type JobCallAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
  """Mean average of jobId across the matching connection"""
  jobId: BigFloat
}

input JobCallDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  callerId: BigIntFilter
  createdAt: BigIntFilter
  id: BigIntFilter
  jobId: BigIntFilter
  serviceId: BigIntFilter
}

type JobCallDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of callerId across the matching connection"""
  callerId: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of jobId across the matching connection"""
  jobId: BigInt
  """Distinct count of serviceId across the matching connection"""
  serviceId: BigInt
}

"""
A filter to be used against `JobCall` object types. All fields are combined with a logical ‘and.’
"""
input JobCallFilter {
  """Checks for all expressions in this list."""
  and: [JobCallFilter!]
  """Filter by the object’s `caller` relation."""
  caller: AccountFilter
  """Filter by the object’s `callerId` field."""
  callerId: StringFilter
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `jobId` field."""
  jobId: IntFilter
  """Filter by the object’s `jobResults` relation."""
  jobResults: JobCallToManyJobResultFilter
  """Some related `jobResults` exist."""
  jobResultsExist: Boolean
  """Negates the expression."""
  not: JobCallFilter
  """Checks for any expressions in this list."""
  or: [JobCallFilter!]
  """Filter by the object’s `service` relation."""
  service: ServiceFilter
  """Filter by the object’s `serviceId` field."""
  serviceId: StringFilter
}

input JobCallMaxAggregateFilter {
  createdAt: IntFilter
  jobId: IntFilter
}

type JobCallMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
  """Maximum of jobId across the matching connection"""
  jobId: Int
}

input JobCallMinAggregateFilter {
  createdAt: IntFilter
  jobId: IntFilter
}

type JobCallMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
  """Minimum of jobId across the matching connection"""
  jobId: Int
}

"""
A connection to a list of `Operator` values, with data from `JobResult`.
"""
type JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `JobResult`, and the cursor to aid in pagination.
  """
  edges: [JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""A `Operator` edge in the connection, with data from `JobResult`."""
type JobCallOperatorsByJobResultJobCallIdAndOperatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """The `Operator` at the end of the edge."""
  node: Operator
}

"""
A connection to a list of `Service` values, with data from `JobResult`.
"""
type JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceAggregates
  """
  A list of edges which contains the `Service`, info from the `JobResult`, and the cursor to aid in pagination.
  """
  edges: [JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Service` for these aggregates."""
    groupBy: [ServicesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServicesHavingInput
  ): [ServiceAggregates!]
  """A list of `Service` objects."""
  nodes: [Service]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Service` you could get from the connection."""
  totalCount: Int!
}

"""A `Service` edge in the connection, with data from `JobResult`."""
type JobCallServicesByJobResultJobCallIdAndServiceIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """The `Service` at the end of the edge."""
  node: Service
}

input JobCallStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
  jobId: BigFloatFilter
}

type JobCallStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
  """Population standard deviation of jobId across the matching connection"""
  jobId: BigFloat
}

input JobCallStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
  jobId: BigFloatFilter
}

type JobCallStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample standard deviation of jobId across the matching connection"""
  jobId: BigFloat
}

input JobCallSumAggregateFilter {
  createdAt: BigIntFilter
  jobId: BigIntFilter
}

type JobCallSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
  """Sum of jobId across the matching connection"""
  jobId: BigInt!
}

"""
A filter to be used against many `JobResult` object types. All fields are combined with a logical ‘and.’
"""
input JobCallToManyJobResultFilter {
  """Aggregates across related `JobResult` match the filter criteria."""
  aggregates: JobResultAggregatesFilter
  """
  Every related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: JobResultFilter
  """
  No related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: JobResultFilter
  """
  Some related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: JobResultFilter
}

input JobCallVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
  jobId: BigFloatFilter
}

type JobCallVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Population variance of jobId across the matching connection"""
  jobId: BigFloat
}

input JobCallVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
  jobId: BigFloatFilter
}

type JobCallVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample variance of jobId across the matching connection"""
  jobId: BigFloat
}

"""A connection to a list of `JobCall` values."""
type JobCallsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: JobCallAggregates
  """
  A list of edges which contains the `JobCall` and cursor to aid in pagination.
  """
  edges: [JobCallsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `JobCall` for these aggregates."""
    groupBy: [JobCallsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: JobCallsHavingInput
  ): [JobCallAggregates!]
  """A list of `JobCall` objects."""
  nodes: [JobCall]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `JobCall` you could get from the connection."""
  totalCount: Int!
}

"""A `JobCall` edge in the connection."""
type JobCallsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `JobCall` at the end of the edge."""
  node: JobCall
}

"""Grouping methods for `JobCall` for usage during aggregation."""
enum JobCallsGroupBy {
  CALLER_ID
  CREATED_AT
  ID
  JOB_ID
  SERVICE_ID
}

input JobCallsHavingAverageInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

input JobCallsHavingDistinctCountInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

"""Conditions for `JobCall` aggregates."""
input JobCallsHavingInput {
  AND: [JobCallsHavingInput!]
  OR: [JobCallsHavingInput!]
  average: JobCallsHavingAverageInput
  distinctCount: JobCallsHavingDistinctCountInput
  max: JobCallsHavingMaxInput
  min: JobCallsHavingMinInput
  stddevPopulation: JobCallsHavingStddevPopulationInput
  stddevSample: JobCallsHavingStddevSampleInput
  sum: JobCallsHavingSumInput
  variancePopulation: JobCallsHavingVariancePopulationInput
  varianceSample: JobCallsHavingVarianceSampleInput
}

input JobCallsHavingMaxInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

input JobCallsHavingMinInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

input JobCallsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

input JobCallsHavingStddevSampleInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

input JobCallsHavingSumInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

input JobCallsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

input JobCallsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
  jobId: HavingIntFilter
}

"""Methods to use when ordering `JobCall`."""
enum JobCallsOrderBy {
  ACCOUNT_BY_CALLER_ID__CREATED_AT_ASC
  ACCOUNT_BY_CALLER_ID__CREATED_AT_DESC
  ACCOUNT_BY_CALLER_ID__ID_ASC
  ACCOUNT_BY_CALLER_ID__ID_DESC
  ACCOUNT_BY_CALLER_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_CALLER_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_CALLER_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_CALLER_ID__TOTAL_POINTS_DESC
  CALLER_ID_ASC
  CALLER_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  ID_ASC
  ID_DESC
  JOB_ID_ASC
  JOB_ID_DESC
  JOB_RESULTS_AVERAGE_BLOCK_RANGE_ASC
  JOB_RESULTS_AVERAGE_BLOCK_RANGE_DESC
  JOB_RESULTS_AVERAGE_CREATED_AT_ASC
  JOB_RESULTS_AVERAGE_CREATED_AT_DESC
  JOB_RESULTS_AVERAGE_ID_ASC
  JOB_RESULTS_AVERAGE_ID_DESC
  JOB_RESULTS_AVERAGE_JOB_CALL_ID_ASC
  JOB_RESULTS_AVERAGE_JOB_CALL_ID_DESC
  JOB_RESULTS_AVERAGE_OPERATOR_ID_ASC
  JOB_RESULTS_AVERAGE_OPERATOR_ID_DESC
  JOB_RESULTS_AVERAGE_SERVICE_ID_ASC
  JOB_RESULTS_AVERAGE_SERVICE_ID_DESC
  JOB_RESULTS_BY_JOB_CALL_ID__COUNT_ASC
  JOB_RESULTS_BY_JOB_CALL_ID__COUNT_DESC
  JOB_RESULTS_COUNT_ASC
  JOB_RESULTS_COUNT_DESC
  JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_ASC
  JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_DESC
  JOB_RESULTS_DISTINCT_COUNT_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_DESC
  JOB_RESULTS_MAX_BLOCK_RANGE_ASC
  JOB_RESULTS_MAX_BLOCK_RANGE_DESC
  JOB_RESULTS_MAX_CREATED_AT_ASC
  JOB_RESULTS_MAX_CREATED_AT_DESC
  JOB_RESULTS_MAX_ID_ASC
  JOB_RESULTS_MAX_ID_DESC
  JOB_RESULTS_MAX_JOB_CALL_ID_ASC
  JOB_RESULTS_MAX_JOB_CALL_ID_DESC
  JOB_RESULTS_MAX_OPERATOR_ID_ASC
  JOB_RESULTS_MAX_OPERATOR_ID_DESC
  JOB_RESULTS_MAX_SERVICE_ID_ASC
  JOB_RESULTS_MAX_SERVICE_ID_DESC
  JOB_RESULTS_MIN_BLOCK_RANGE_ASC
  JOB_RESULTS_MIN_BLOCK_RANGE_DESC
  JOB_RESULTS_MIN_CREATED_AT_ASC
  JOB_RESULTS_MIN_CREATED_AT_DESC
  JOB_RESULTS_MIN_ID_ASC
  JOB_RESULTS_MIN_ID_DESC
  JOB_RESULTS_MIN_JOB_CALL_ID_ASC
  JOB_RESULTS_MIN_JOB_CALL_ID_DESC
  JOB_RESULTS_MIN_OPERATOR_ID_ASC
  JOB_RESULTS_MIN_OPERATOR_ID_DESC
  JOB_RESULTS_MIN_SERVICE_ID_ASC
  JOB_RESULTS_MIN_SERVICE_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_ASC
  JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_DESC
  JOB_RESULTS_STDDEV_POPULATION_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_ASC
  JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_DESC
  JOB_RESULTS_STDDEV_SAMPLE_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_DESC
  JOB_RESULTS_SUM_BLOCK_RANGE_ASC
  JOB_RESULTS_SUM_BLOCK_RANGE_DESC
  JOB_RESULTS_SUM_CREATED_AT_ASC
  JOB_RESULTS_SUM_CREATED_AT_DESC
  JOB_RESULTS_SUM_ID_ASC
  JOB_RESULTS_SUM_ID_DESC
  JOB_RESULTS_SUM_JOB_CALL_ID_ASC
  JOB_RESULTS_SUM_JOB_CALL_ID_DESC
  JOB_RESULTS_SUM_OPERATOR_ID_ASC
  JOB_RESULTS_SUM_OPERATOR_ID_DESC
  JOB_RESULTS_SUM_SERVICE_ID_ASC
  JOB_RESULTS_SUM_SERVICE_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_ASC
  JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_DESC
  JOB_RESULTS_VARIANCE_POPULATION_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICE_BY_SERVICE_ID__ASSET_IDS_ASC
  SERVICE_BY_SERVICE_ID__ASSET_IDS_DESC
  SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_ASC
  SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_DESC
  SERVICE_BY_SERVICE_ID__CREATED_AT_ASC
  SERVICE_BY_SERVICE_ID__CREATED_AT_DESC
  SERVICE_BY_SERVICE_ID__ID_ASC
  SERVICE_BY_SERVICE_ID__ID_DESC
  SERVICE_BY_SERVICE_ID__OWNER_ID_ASC
  SERVICE_BY_SERVICE_ID__OWNER_ID_DESC
  SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_ASC
  SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_DESC
  SERVICE_BY_SERVICE_ID__TERMINATED_AT_ASC
  SERVICE_BY_SERVICE_ID__TERMINATED_AT_DESC
  SERVICE_ID_ASC
  SERVICE_ID_DESC
}

type JobResult implements Node {
  """The creation block number of the Job Result."""
  createdAt: Int!
  """
  Unique identifier for the Job Result. Composite key: Service ID + Job Call ID
  """
  id: String!
  """Reads a single `JobCall` that is related to this `JobResult`."""
  jobCall: JobCall
  """The Job Call associated with this Job Result."""
  jobCallId: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads a single `Operator` that is related to this `JobResult`."""
  operator: Operator
  """The operator that executed the Job."""
  operatorId: String!
  """Reads a single `Service` that is related to this `JobResult`."""
  service: Service
  """The Service associated with this Job Result."""
  serviceId: String!
}

type JobResultAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: JobResultAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: JobResultDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: JobResultMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: JobResultMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: JobResultStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: JobResultStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: JobResultSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: JobResultVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: JobResultVarianceSampleAggregates
}

"""A filter to be used against aggregates of `JobResult` object types."""
input JobResultAggregatesFilter {
  """Mean average aggregate over matching `JobResult` objects."""
  average: JobResultAverageAggregateFilter
  """Distinct count aggregate over matching `JobResult` objects."""
  distinctCount: JobResultDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `JobResult` object to be included within the aggregate.
  """
  filter: JobResultFilter
  """Maximum aggregate over matching `JobResult` objects."""
  max: JobResultMaxAggregateFilter
  """Minimum aggregate over matching `JobResult` objects."""
  min: JobResultMinAggregateFilter
  """
  Population standard deviation aggregate over matching `JobResult` objects.
  """
  stddevPopulation: JobResultStddevPopulationAggregateFilter
  """Sample standard deviation aggregate over matching `JobResult` objects."""
  stddevSample: JobResultStddevSampleAggregateFilter
  """Sum aggregate over matching `JobResult` objects."""
  sum: JobResultSumAggregateFilter
  """Population variance aggregate over matching `JobResult` objects."""
  variancePopulation: JobResultVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `JobResult` objects."""
  varianceSample: JobResultVarianceSampleAggregateFilter
}

input JobResultAverageAggregateFilter {
  createdAt: BigFloatFilter
}

type JobResultAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
}

input JobResultDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  createdAt: BigIntFilter
  id: BigIntFilter
  jobCallId: BigIntFilter
  operatorId: BigIntFilter
  serviceId: BigIntFilter
}

type JobResultDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of jobCallId across the matching connection"""
  jobCallId: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
  """Distinct count of serviceId across the matching connection"""
  serviceId: BigInt
}

"""
A filter to be used against `JobResult` object types. All fields are combined with a logical ‘and.’
"""
input JobResultFilter {
  """Checks for all expressions in this list."""
  and: [JobResultFilter!]
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `jobCall` relation."""
  jobCall: JobCallFilter
  """Filter by the object’s `jobCallId` field."""
  jobCallId: StringFilter
  """Negates the expression."""
  not: JobResultFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [JobResultFilter!]
  """Filter by the object’s `service` relation."""
  service: ServiceFilter
  """Filter by the object’s `serviceId` field."""
  serviceId: StringFilter
}

input JobResultMaxAggregateFilter {
  createdAt: IntFilter
}

type JobResultMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
}

input JobResultMinAggregateFilter {
  createdAt: IntFilter
}

type JobResultMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
}

input JobResultStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type JobResultStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
}

input JobResultStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type JobResultStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
}

input JobResultSumAggregateFilter {
  createdAt: BigIntFilter
}

type JobResultSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
}

input JobResultVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type JobResultVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

input JobResultVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type JobResultVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

"""A connection to a list of `JobResult` values."""
type JobResultsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: JobResultAggregates
  """
  A list of edges which contains the `JobResult` and cursor to aid in pagination.
  """
  edges: [JobResultsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `JobResult` for these aggregates."""
    groupBy: [JobResultsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: JobResultsHavingInput
  ): [JobResultAggregates!]
  """A list of `JobResult` objects."""
  nodes: [JobResult]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `JobResult` you could get from the connection."""
  totalCount: Int!
}

"""A `JobResult` edge in the connection."""
type JobResultsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `JobResult` at the end of the edge."""
  node: JobResult
}

"""Grouping methods for `JobResult` for usage during aggregation."""
enum JobResultsGroupBy {
  CREATED_AT
  ID
  JOB_CALL_ID
  OPERATOR_ID
  SERVICE_ID
}

input JobResultsHavingAverageInput {
  createdAt: HavingIntFilter
}

input JobResultsHavingDistinctCountInput {
  createdAt: HavingIntFilter
}

"""Conditions for `JobResult` aggregates."""
input JobResultsHavingInput {
  AND: [JobResultsHavingInput!]
  OR: [JobResultsHavingInput!]
  average: JobResultsHavingAverageInput
  distinctCount: JobResultsHavingDistinctCountInput
  max: JobResultsHavingMaxInput
  min: JobResultsHavingMinInput
  stddevPopulation: JobResultsHavingStddevPopulationInput
  stddevSample: JobResultsHavingStddevSampleInput
  sum: JobResultsHavingSumInput
  variancePopulation: JobResultsHavingVariancePopulationInput
  varianceSample: JobResultsHavingVarianceSampleInput
}

input JobResultsHavingMaxInput {
  createdAt: HavingIntFilter
}

input JobResultsHavingMinInput {
  createdAt: HavingIntFilter
}

input JobResultsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
}

input JobResultsHavingStddevSampleInput {
  createdAt: HavingIntFilter
}

input JobResultsHavingSumInput {
  createdAt: HavingIntFilter
}

input JobResultsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
}

input JobResultsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
}

"""Methods to use when ordering `JobResult`."""
enum JobResultsOrderBy {
  CREATED_AT_ASC
  CREATED_AT_DESC
  ID_ASC
  ID_DESC
  JOB_CALL_BY_JOB_CALL_ID__CALLER_ID_ASC
  JOB_CALL_BY_JOB_CALL_ID__CALLER_ID_DESC
  JOB_CALL_BY_JOB_CALL_ID__CREATED_AT_ASC
  JOB_CALL_BY_JOB_CALL_ID__CREATED_AT_DESC
  JOB_CALL_BY_JOB_CALL_ID__ID_ASC
  JOB_CALL_BY_JOB_CALL_ID__ID_DESC
  JOB_CALL_BY_JOB_CALL_ID__JOB_ID_ASC
  JOB_CALL_BY_JOB_CALL_ID__JOB_ID_DESC
  JOB_CALL_BY_JOB_CALL_ID__SERVICE_ID_ASC
  JOB_CALL_BY_JOB_CALL_ID__SERVICE_ID_DESC
  JOB_CALL_ID_ASC
  JOB_CALL_ID_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICE_BY_SERVICE_ID__ASSET_IDS_ASC
  SERVICE_BY_SERVICE_ID__ASSET_IDS_DESC
  SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_ASC
  SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_DESC
  SERVICE_BY_SERVICE_ID__CREATED_AT_ASC
  SERVICE_BY_SERVICE_ID__CREATED_AT_DESC
  SERVICE_BY_SERVICE_ID__ID_ASC
  SERVICE_BY_SERVICE_ID__ID_DESC
  SERVICE_BY_SERVICE_ID__OWNER_ID_ASC
  SERVICE_BY_SERVICE_ID__OWNER_ID_DESC
  SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_ASC
  SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_DESC
  SERVICE_BY_SERVICE_ID__TERMINATED_AT_ASC
  SERVICE_BY_SERVICE_ID__TERMINATED_AT_DESC
  SERVICE_ID_ASC
  SERVICE_ID_DESC
}

type LstPool implements Node {
  """Reads and enables pagination through a set of `Account`."""
  accountsByLstPoolMemberLstPoolIdAndAccountId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [accounts_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AccountFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyConnection!
  """The current state of the Lst Pool."""
  currentState: LstPoolState!
  """Lst Pool's unique identifier."""
  id: String!
  """Reads and enables pagination through a set of `LstPoolMember`."""
  members(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pool_members_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolMemberFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPoolMember`."""
    orderBy: [LstPoolMembersOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolMembersConnection!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `LstPoolStateChange`."""
  stateHistory(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pool_state_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolStateChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPoolStateChange`."""
    orderBy: [LstPoolStateChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolStateChangesConnection!
  """The total stake amount in the Lst Pool."""
  totalStake: BigFloat!
}

"""
A connection to a list of `Account` values, with data from `LstPoolMember`.
"""
type LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: AccountAggregates
  """
  A list of edges which contains the `Account`, info from the `LstPoolMember`, and the cursor to aid in pagination.
  """
  edges: [LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Account` for these aggregates."""
    groupBy: [AccountsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: AccountsHavingInput
  ): [AccountAggregates!]
  """A list of `Account` objects."""
  nodes: [Account]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection, with data from `LstPoolMember`."""
type LstPoolAccountsByLstPoolMemberLstPoolIdAndAccountIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `LstPoolMember`."""
  lstPoolMembers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pool_members_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolMemberFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPoolMember`."""
    orderBy: [LstPoolMembersOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolMembersConnection!
  """The `Account` at the end of the edge."""
  node: Account
}

type LstPoolAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: LstPoolAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: LstPoolDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: LstPoolMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: LstPoolMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: LstPoolStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: LstPoolStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: LstPoolSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: LstPoolVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: LstPoolVarianceSampleAggregates
}

type LstPoolAverageAggregates {
  """Mean average of totalStake across the matching connection"""
  totalStake: BigFloat
}

type LstPoolDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of currentState across the matching connection"""
  currentState: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of totalStake across the matching connection"""
  totalStake: BigInt
}

"""
A filter to be used against `LstPool` object types. All fields are combined with a logical ‘and.’
"""
input LstPoolFilter {
  """Checks for all expressions in this list."""
  and: [LstPoolFilter!]
  """Filter by the object’s `currentState` field."""
  currentState: LstPoolStateFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `members` relation."""
  members: LstPoolToManyLstPoolMemberFilter
  """Some related `members` exist."""
  membersExist: Boolean
  """Negates the expression."""
  not: LstPoolFilter
  """Checks for any expressions in this list."""
  or: [LstPoolFilter!]
  """Filter by the object’s `stateHistory` relation."""
  stateHistory: LstPoolToManyLstPoolStateChangeFilter
  """Some related `stateHistory` exist."""
  stateHistoryExist: Boolean
  """Filter by the object’s `totalStake` field."""
  totalStake: BigFloatFilter
}

type LstPoolMaxAggregates {
  """Maximum of totalStake across the matching connection"""
  totalStake: BigFloat
}

type LstPoolMember implements Node {
  """Reads a single `Account` that is related to this `LstPoolMember`."""
  account: Account
  """The account associated with this Lst Pool Member."""
  accountId: String!
  """The current stake amount of the member in the Lst Pool."""
  currentStake: BigFloat!
  """
  Unique identifier for the Lst Pool member. Composite key: LstPool ID + member ID
  """
  id: String!
  """Reads a single `LstPool` that is related to this `LstPoolMember`."""
  lstPool: LstPool
  """The Lst Pool to which the member belongs."""
  lstPoolId: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `MemberStakeChange`."""
  stakeHistory(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [member_stake_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: MemberStakeChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `MemberStakeChange`."""
    orderBy: [MemberStakeChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): MemberStakeChangesConnection!
}

type LstPoolMemberAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: LstPoolMemberAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: LstPoolMemberDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: LstPoolMemberMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: LstPoolMemberMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: LstPoolMemberStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: LstPoolMemberStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: LstPoolMemberSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: LstPoolMemberVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: LstPoolMemberVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `LstPoolMember` object types.
"""
input LstPoolMemberAggregatesFilter {
  """Mean average aggregate over matching `LstPoolMember` objects."""
  average: LstPoolMemberAverageAggregateFilter
  """Distinct count aggregate over matching `LstPoolMember` objects."""
  distinctCount: LstPoolMemberDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `LstPoolMember` object to be included within the aggregate.
  """
  filter: LstPoolMemberFilter
  """Maximum aggregate over matching `LstPoolMember` objects."""
  max: LstPoolMemberMaxAggregateFilter
  """Minimum aggregate over matching `LstPoolMember` objects."""
  min: LstPoolMemberMinAggregateFilter
  """
  Population standard deviation aggregate over matching `LstPoolMember` objects.
  """
  stddevPopulation: LstPoolMemberStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `LstPoolMember` objects.
  """
  stddevSample: LstPoolMemberStddevSampleAggregateFilter
  """Sum aggregate over matching `LstPoolMember` objects."""
  sum: LstPoolMemberSumAggregateFilter
  """Population variance aggregate over matching `LstPoolMember` objects."""
  variancePopulation: LstPoolMemberVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `LstPoolMember` objects."""
  varianceSample: LstPoolMemberVarianceSampleAggregateFilter
}

input LstPoolMemberAverageAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberAverageAggregates {
  """Mean average of currentStake across the matching connection"""
  currentStake: BigFloat
}

input LstPoolMemberDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  accountId: BigIntFilter
  currentStake: BigIntFilter
  id: BigIntFilter
  lstPoolId: BigIntFilter
}

type LstPoolMemberDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of accountId across the matching connection"""
  accountId: BigInt
  """Distinct count of currentStake across the matching connection"""
  currentStake: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of lstPoolId across the matching connection"""
  lstPoolId: BigInt
}

"""
A filter to be used against `LstPoolMember` object types. All fields are combined with a logical ‘and.’
"""
input LstPoolMemberFilter {
  """Filter by the object’s `account` relation."""
  account: AccountFilter
  """Filter by the object’s `accountId` field."""
  accountId: StringFilter
  """Checks for all expressions in this list."""
  and: [LstPoolMemberFilter!]
  """Filter by the object’s `currentStake` field."""
  currentStake: BigFloatFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `lstPool` relation."""
  lstPool: LstPoolFilter
  """Filter by the object’s `lstPoolId` field."""
  lstPoolId: StringFilter
  """Negates the expression."""
  not: LstPoolMemberFilter
  """Checks for any expressions in this list."""
  or: [LstPoolMemberFilter!]
  """Filter by the object’s `stakeHistory` relation."""
  stakeHistory: LstPoolMemberToManyMemberStakeChangeFilter
  """Some related `stakeHistory` exist."""
  stakeHistoryExist: Boolean
}

input LstPoolMemberMaxAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberMaxAggregates {
  """Maximum of currentStake across the matching connection"""
  currentStake: BigFloat
}

input LstPoolMemberMinAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberMinAggregates {
  """Minimum of currentStake across the matching connection"""
  currentStake: BigFloat
}

input LstPoolMemberStddevPopulationAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberStddevPopulationAggregates {
  """
  Population standard deviation of currentStake across the matching connection
  """
  currentStake: BigFloat
}

input LstPoolMemberStddevSampleAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberStddevSampleAggregates {
  """
  Sample standard deviation of currentStake across the matching connection
  """
  currentStake: BigFloat
}

input LstPoolMemberSumAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberSumAggregates {
  """Sum of currentStake across the matching connection"""
  currentStake: BigFloat!
}

"""
A filter to be used against many `MemberStakeChange` object types. All fields are combined with a logical ‘and.’
"""
input LstPoolMemberToManyMemberStakeChangeFilter {
  """
  Aggregates across related `MemberStakeChange` match the filter criteria.
  """
  aggregates: MemberStakeChangeAggregatesFilter
  """
  Every related `MemberStakeChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: MemberStakeChangeFilter
  """
  No related `MemberStakeChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: MemberStakeChangeFilter
  """
  Some related `MemberStakeChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: MemberStakeChangeFilter
}

input LstPoolMemberVariancePopulationAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberVariancePopulationAggregates {
  """Population variance of currentStake across the matching connection"""
  currentStake: BigFloat
}

input LstPoolMemberVarianceSampleAggregateFilter {
  currentStake: BigFloatFilter
}

type LstPoolMemberVarianceSampleAggregates {
  """Sample variance of currentStake across the matching connection"""
  currentStake: BigFloat
}

"""A connection to a list of `LstPoolMember` values."""
type LstPoolMembersConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: LstPoolMemberAggregates
  """
  A list of edges which contains the `LstPoolMember` and cursor to aid in pagination.
  """
  edges: [LstPoolMembersEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `LstPoolMember` for these aggregates."""
    groupBy: [LstPoolMembersGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: LstPoolMembersHavingInput
  ): [LstPoolMemberAggregates!]
  """A list of `LstPoolMember` objects."""
  nodes: [LstPoolMember]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `LstPoolMember` you could get from the connection."""
  totalCount: Int!
}

"""A `LstPoolMember` edge in the connection."""
type LstPoolMembersEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `LstPoolMember` at the end of the edge."""
  node: LstPoolMember
}

"""Grouping methods for `LstPoolMember` for usage during aggregation."""
enum LstPoolMembersGroupBy {
  ACCOUNT_ID
  CURRENT_STAKE
  ID
  LST_POOL_ID
}

input LstPoolMembersHavingAverageInput {
  currentStake: HavingBigfloatFilter
}

input LstPoolMembersHavingDistinctCountInput {
  currentStake: HavingBigfloatFilter
}

"""Conditions for `LstPoolMember` aggregates."""
input LstPoolMembersHavingInput {
  AND: [LstPoolMembersHavingInput!]
  OR: [LstPoolMembersHavingInput!]
  average: LstPoolMembersHavingAverageInput
  distinctCount: LstPoolMembersHavingDistinctCountInput
  max: LstPoolMembersHavingMaxInput
  min: LstPoolMembersHavingMinInput
  stddevPopulation: LstPoolMembersHavingStddevPopulationInput
  stddevSample: LstPoolMembersHavingStddevSampleInput
  sum: LstPoolMembersHavingSumInput
  variancePopulation: LstPoolMembersHavingVariancePopulationInput
  varianceSample: LstPoolMembersHavingVarianceSampleInput
}

input LstPoolMembersHavingMaxInput {
  currentStake: HavingBigfloatFilter
}

input LstPoolMembersHavingMinInput {
  currentStake: HavingBigfloatFilter
}

input LstPoolMembersHavingStddevPopulationInput {
  currentStake: HavingBigfloatFilter
}

input LstPoolMembersHavingStddevSampleInput {
  currentStake: HavingBigfloatFilter
}

input LstPoolMembersHavingSumInput {
  currentStake: HavingBigfloatFilter
}

input LstPoolMembersHavingVariancePopulationInput {
  currentStake: HavingBigfloatFilter
}

input LstPoolMembersHavingVarianceSampleInput {
  currentStake: HavingBigfloatFilter
}

"""Methods to use when ordering `LstPoolMember`."""
enum LstPoolMembersOrderBy {
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__ID_ASC
  ACCOUNT_BY_ACCOUNT_ID__ID_DESC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC
  ACCOUNT_ID_ASC
  ACCOUNT_ID_DESC
  CURRENT_STAKE_ASC
  CURRENT_STAKE_DESC
  ID_ASC
  ID_DESC
  LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_ASC
  LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_DESC
  LST_POOL_BY_LST_POOL_ID__ID_ASC
  LST_POOL_BY_LST_POOL_ID__ID_DESC
  LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_ASC
  LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_DESC
  LST_POOL_ID_ASC
  LST_POOL_ID_DESC
  MEMBER_STAKE_CHANGES_BY_MEMBER_ID__COUNT_ASC
  MEMBER_STAKE_CHANGES_BY_MEMBER_ID__COUNT_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  STAKE_HISTORY_AVERAGE_AMOUNT_ASC
  STAKE_HISTORY_AVERAGE_AMOUNT_DESC
  STAKE_HISTORY_AVERAGE_BLOCK_NUMBER_ASC
  STAKE_HISTORY_AVERAGE_BLOCK_NUMBER_DESC
  STAKE_HISTORY_AVERAGE_BLOCK_RANGE_ASC
  STAKE_HISTORY_AVERAGE_BLOCK_RANGE_DESC
  STAKE_HISTORY_AVERAGE_ID_ASC
  STAKE_HISTORY_AVERAGE_ID_DESC
  STAKE_HISTORY_AVERAGE_MEMBER_ID_ASC
  STAKE_HISTORY_AVERAGE_MEMBER_ID_DESC
  STAKE_HISTORY_COUNT_ASC
  STAKE_HISTORY_COUNT_DESC
  STAKE_HISTORY_DISTINCT_COUNT_AMOUNT_ASC
  STAKE_HISTORY_DISTINCT_COUNT_AMOUNT_DESC
  STAKE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC
  STAKE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC
  STAKE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC
  STAKE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC
  STAKE_HISTORY_DISTINCT_COUNT_ID_ASC
  STAKE_HISTORY_DISTINCT_COUNT_ID_DESC
  STAKE_HISTORY_DISTINCT_COUNT_MEMBER_ID_ASC
  STAKE_HISTORY_DISTINCT_COUNT_MEMBER_ID_DESC
  STAKE_HISTORY_MAX_AMOUNT_ASC
  STAKE_HISTORY_MAX_AMOUNT_DESC
  STAKE_HISTORY_MAX_BLOCK_NUMBER_ASC
  STAKE_HISTORY_MAX_BLOCK_NUMBER_DESC
  STAKE_HISTORY_MAX_BLOCK_RANGE_ASC
  STAKE_HISTORY_MAX_BLOCK_RANGE_DESC
  STAKE_HISTORY_MAX_ID_ASC
  STAKE_HISTORY_MAX_ID_DESC
  STAKE_HISTORY_MAX_MEMBER_ID_ASC
  STAKE_HISTORY_MAX_MEMBER_ID_DESC
  STAKE_HISTORY_MIN_AMOUNT_ASC
  STAKE_HISTORY_MIN_AMOUNT_DESC
  STAKE_HISTORY_MIN_BLOCK_NUMBER_ASC
  STAKE_HISTORY_MIN_BLOCK_NUMBER_DESC
  STAKE_HISTORY_MIN_BLOCK_RANGE_ASC
  STAKE_HISTORY_MIN_BLOCK_RANGE_DESC
  STAKE_HISTORY_MIN_ID_ASC
  STAKE_HISTORY_MIN_ID_DESC
  STAKE_HISTORY_MIN_MEMBER_ID_ASC
  STAKE_HISTORY_MIN_MEMBER_ID_DESC
  STAKE_HISTORY_STDDEV_POPULATION_AMOUNT_ASC
  STAKE_HISTORY_STDDEV_POPULATION_AMOUNT_DESC
  STAKE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC
  STAKE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC
  STAKE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC
  STAKE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC
  STAKE_HISTORY_STDDEV_POPULATION_ID_ASC
  STAKE_HISTORY_STDDEV_POPULATION_ID_DESC
  STAKE_HISTORY_STDDEV_POPULATION_MEMBER_ID_ASC
  STAKE_HISTORY_STDDEV_POPULATION_MEMBER_ID_DESC
  STAKE_HISTORY_STDDEV_SAMPLE_AMOUNT_ASC
  STAKE_HISTORY_STDDEV_SAMPLE_AMOUNT_DESC
  STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC
  STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC
  STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  STAKE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  STAKE_HISTORY_STDDEV_SAMPLE_ID_ASC
  STAKE_HISTORY_STDDEV_SAMPLE_ID_DESC
  STAKE_HISTORY_STDDEV_SAMPLE_MEMBER_ID_ASC
  STAKE_HISTORY_STDDEV_SAMPLE_MEMBER_ID_DESC
  STAKE_HISTORY_SUM_AMOUNT_ASC
  STAKE_HISTORY_SUM_AMOUNT_DESC
  STAKE_HISTORY_SUM_BLOCK_NUMBER_ASC
  STAKE_HISTORY_SUM_BLOCK_NUMBER_DESC
  STAKE_HISTORY_SUM_BLOCK_RANGE_ASC
  STAKE_HISTORY_SUM_BLOCK_RANGE_DESC
  STAKE_HISTORY_SUM_ID_ASC
  STAKE_HISTORY_SUM_ID_DESC
  STAKE_HISTORY_SUM_MEMBER_ID_ASC
  STAKE_HISTORY_SUM_MEMBER_ID_DESC
  STAKE_HISTORY_VARIANCE_POPULATION_AMOUNT_ASC
  STAKE_HISTORY_VARIANCE_POPULATION_AMOUNT_DESC
  STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC
  STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC
  STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  STAKE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  STAKE_HISTORY_VARIANCE_POPULATION_ID_ASC
  STAKE_HISTORY_VARIANCE_POPULATION_ID_DESC
  STAKE_HISTORY_VARIANCE_POPULATION_MEMBER_ID_ASC
  STAKE_HISTORY_VARIANCE_POPULATION_MEMBER_ID_DESC
  STAKE_HISTORY_VARIANCE_SAMPLE_AMOUNT_ASC
  STAKE_HISTORY_VARIANCE_SAMPLE_AMOUNT_DESC
  STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC
  STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC
  STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  STAKE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  STAKE_HISTORY_VARIANCE_SAMPLE_ID_ASC
  STAKE_HISTORY_VARIANCE_SAMPLE_ID_DESC
  STAKE_HISTORY_VARIANCE_SAMPLE_MEMBER_ID_ASC
  STAKE_HISTORY_VARIANCE_SAMPLE_MEMBER_ID_DESC
}

type LstPoolMinAggregates {
  """Minimum of totalStake across the matching connection"""
  totalStake: BigFloat
}

""" Enum representing the current state of an Lst Pool."""
enum LstPoolState {
  CLOSED
  DESTROYING
  OPEN
}

type LstPoolStateChange implements Node {
  """The block number at which the state change occurred."""
  blockNumber: Int!
  """
  Unique identifier for the state change. Composite key: LstPool ID + block number
  """
  id: String!
  """Reads a single `LstPool` that is related to this `LstPoolStateChange`."""
  lstPool: LstPool
  """The Lst Pool whose state has changed."""
  lstPoolId: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """The new state of the Lst Pool."""
  state: LstPoolState!
}

type LstPoolStateChangeAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: LstPoolStateChangeAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: LstPoolStateChangeDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: LstPoolStateChangeMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: LstPoolStateChangeMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: LstPoolStateChangeStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: LstPoolStateChangeStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: LstPoolStateChangeSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: LstPoolStateChangeVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: LstPoolStateChangeVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `LstPoolStateChange` object types.
"""
input LstPoolStateChangeAggregatesFilter {
  """Mean average aggregate over matching `LstPoolStateChange` objects."""
  average: LstPoolStateChangeAverageAggregateFilter
  """Distinct count aggregate over matching `LstPoolStateChange` objects."""
  distinctCount: LstPoolStateChangeDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `LstPoolStateChange` object to be included within the aggregate.
  """
  filter: LstPoolStateChangeFilter
  """Maximum aggregate over matching `LstPoolStateChange` objects."""
  max: LstPoolStateChangeMaxAggregateFilter
  """Minimum aggregate over matching `LstPoolStateChange` objects."""
  min: LstPoolStateChangeMinAggregateFilter
  """
  Population standard deviation aggregate over matching `LstPoolStateChange` objects.
  """
  stddevPopulation: LstPoolStateChangeStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `LstPoolStateChange` objects.
  """
  stddevSample: LstPoolStateChangeStddevSampleAggregateFilter
  """Sum aggregate over matching `LstPoolStateChange` objects."""
  sum: LstPoolStateChangeSumAggregateFilter
  """
  Population variance aggregate over matching `LstPoolStateChange` objects.
  """
  variancePopulation: LstPoolStateChangeVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `LstPoolStateChange` objects."""
  varianceSample: LstPoolStateChangeVarianceSampleAggregateFilter
}

input LstPoolStateChangeAverageAggregateFilter {
  blockNumber: BigFloatFilter
}

type LstPoolStateChangeAverageAggregates {
  """Mean average of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input LstPoolStateChangeDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  blockNumber: BigIntFilter
  id: BigIntFilter
  lstPoolId: BigIntFilter
  state: BigIntFilter
}

type LstPoolStateChangeDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of blockNumber across the matching connection"""
  blockNumber: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of lstPoolId across the matching connection"""
  lstPoolId: BigInt
  """Distinct count of state across the matching connection"""
  state: BigInt
}

"""
A filter to be used against `LstPoolStateChange` object types. All fields are combined with a logical ‘and.’
"""
input LstPoolStateChangeFilter {
  """Checks for all expressions in this list."""
  and: [LstPoolStateChangeFilter!]
  """Filter by the object’s `blockNumber` field."""
  blockNumber: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `lstPool` relation."""
  lstPool: LstPoolFilter
  """Filter by the object’s `lstPoolId` field."""
  lstPoolId: StringFilter
  """Negates the expression."""
  not: LstPoolStateChangeFilter
  """Checks for any expressions in this list."""
  or: [LstPoolStateChangeFilter!]
  """Filter by the object’s `state` field."""
  state: LstPoolStateFilter
}

input LstPoolStateChangeMaxAggregateFilter {
  blockNumber: IntFilter
}

type LstPoolStateChangeMaxAggregates {
  """Maximum of blockNumber across the matching connection"""
  blockNumber: Int
}

input LstPoolStateChangeMinAggregateFilter {
  blockNumber: IntFilter
}

type LstPoolStateChangeMinAggregates {
  """Minimum of blockNumber across the matching connection"""
  blockNumber: Int
}

input LstPoolStateChangeStddevPopulationAggregateFilter {
  blockNumber: BigFloatFilter
}

type LstPoolStateChangeStddevPopulationAggregates {
  """
  Population standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input LstPoolStateChangeStddevSampleAggregateFilter {
  blockNumber: BigFloatFilter
}

type LstPoolStateChangeStddevSampleAggregates {
  """
  Sample standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input LstPoolStateChangeSumAggregateFilter {
  blockNumber: BigIntFilter
}

type LstPoolStateChangeSumAggregates {
  """Sum of blockNumber across the matching connection"""
  blockNumber: BigInt!
}

input LstPoolStateChangeVariancePopulationAggregateFilter {
  blockNumber: BigFloatFilter
}

type LstPoolStateChangeVariancePopulationAggregates {
  """Population variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input LstPoolStateChangeVarianceSampleAggregateFilter {
  blockNumber: BigFloatFilter
}

type LstPoolStateChangeVarianceSampleAggregates {
  """Sample variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

"""A connection to a list of `LstPoolStateChange` values."""
type LstPoolStateChangesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: LstPoolStateChangeAggregates
  """
  A list of edges which contains the `LstPoolStateChange` and cursor to aid in pagination.
  """
  edges: [LstPoolStateChangesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `LstPoolStateChange` for these aggregates.
    """
    groupBy: [LstPoolStateChangesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: LstPoolStateChangesHavingInput
  ): [LstPoolStateChangeAggregates!]
  """A list of `LstPoolStateChange` objects."""
  nodes: [LstPoolStateChange]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `LstPoolStateChange` you could get from the connection.
  """
  totalCount: Int!
}

"""A `LstPoolStateChange` edge in the connection."""
type LstPoolStateChangesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `LstPoolStateChange` at the end of the edge."""
  node: LstPoolStateChange
}

"""
Grouping methods for `LstPoolStateChange` for usage during aggregation.
"""
enum LstPoolStateChangesGroupBy {
  BLOCK_NUMBER
  ID
  LST_POOL_ID
  STATE
}

input LstPoolStateChangesHavingAverageInput {
  blockNumber: HavingIntFilter
}

input LstPoolStateChangesHavingDistinctCountInput {
  blockNumber: HavingIntFilter
}

"""Conditions for `LstPoolStateChange` aggregates."""
input LstPoolStateChangesHavingInput {
  AND: [LstPoolStateChangesHavingInput!]
  OR: [LstPoolStateChangesHavingInput!]
  average: LstPoolStateChangesHavingAverageInput
  distinctCount: LstPoolStateChangesHavingDistinctCountInput
  max: LstPoolStateChangesHavingMaxInput
  min: LstPoolStateChangesHavingMinInput
  stddevPopulation: LstPoolStateChangesHavingStddevPopulationInput
  stddevSample: LstPoolStateChangesHavingStddevSampleInput
  sum: LstPoolStateChangesHavingSumInput
  variancePopulation: LstPoolStateChangesHavingVariancePopulationInput
  varianceSample: LstPoolStateChangesHavingVarianceSampleInput
}

input LstPoolStateChangesHavingMaxInput {
  blockNumber: HavingIntFilter
}

input LstPoolStateChangesHavingMinInput {
  blockNumber: HavingIntFilter
}

input LstPoolStateChangesHavingStddevPopulationInput {
  blockNumber: HavingIntFilter
}

input LstPoolStateChangesHavingStddevSampleInput {
  blockNumber: HavingIntFilter
}

input LstPoolStateChangesHavingSumInput {
  blockNumber: HavingIntFilter
}

input LstPoolStateChangesHavingVariancePopulationInput {
  blockNumber: HavingIntFilter
}

input LstPoolStateChangesHavingVarianceSampleInput {
  blockNumber: HavingIntFilter
}

"""Methods to use when ordering `LstPoolStateChange`."""
enum LstPoolStateChangesOrderBy {
  BLOCK_NUMBER_ASC
  BLOCK_NUMBER_DESC
  ID_ASC
  ID_DESC
  LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_ASC
  LST_POOL_BY_LST_POOL_ID__CURRENT_STATE_DESC
  LST_POOL_BY_LST_POOL_ID__ID_ASC
  LST_POOL_BY_LST_POOL_ID__ID_DESC
  LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_ASC
  LST_POOL_BY_LST_POOL_ID__TOTAL_STAKE_DESC
  LST_POOL_ID_ASC
  LST_POOL_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  STATE_ASC
  STATE_DESC
}

"""
A filter to be used against LstPoolState fields. All fields are combined with a logical ‘and.’
"""
input LstPoolStateFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: LstPoolState
  """Equal to the specified value."""
  equalTo: LstPoolState
  """Greater than the specified value."""
  greaterThan: LstPoolState
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: LstPoolState
  """Included in the specified list."""
  in: [LstPoolState!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: LstPoolState
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: LstPoolState
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: LstPoolState
  """Not equal to the specified value."""
  notEqualTo: LstPoolState
  """Not included in the specified list."""
  notIn: [LstPoolState!]
}

type LstPoolStddevPopulationAggregates {
  """
  Population standard deviation of totalStake across the matching connection
  """
  totalStake: BigFloat
}

type LstPoolStddevSampleAggregates {
  """Sample standard deviation of totalStake across the matching connection"""
  totalStake: BigFloat
}

type LstPoolSumAggregates {
  """Sum of totalStake across the matching connection"""
  totalStake: BigFloat!
}

"""
A filter to be used against many `LstPoolMember` object types. All fields are combined with a logical ‘and.’
"""
input LstPoolToManyLstPoolMemberFilter {
  """Aggregates across related `LstPoolMember` match the filter criteria."""
  aggregates: LstPoolMemberAggregatesFilter
  """
  Every related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: LstPoolMemberFilter
  """
  No related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: LstPoolMemberFilter
  """
  Some related `LstPoolMember` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: LstPoolMemberFilter
}

"""
A filter to be used against many `LstPoolStateChange` object types. All fields are combined with a logical ‘and.’
"""
input LstPoolToManyLstPoolStateChangeFilter {
  """
  Aggregates across related `LstPoolStateChange` match the filter criteria.
  """
  aggregates: LstPoolStateChangeAggregatesFilter
  """
  Every related `LstPoolStateChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: LstPoolStateChangeFilter
  """
  No related `LstPoolStateChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: LstPoolStateChangeFilter
  """
  Some related `LstPoolStateChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: LstPoolStateChangeFilter
}

type LstPoolVariancePopulationAggregates {
  """Population variance of totalStake across the matching connection"""
  totalStake: BigFloat
}

type LstPoolVarianceSampleAggregates {
  """Sample variance of totalStake across the matching connection"""
  totalStake: BigFloat
}

"""A connection to a list of `LstPool` values."""
type LstPoolsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: LstPoolAggregates
  """
  A list of edges which contains the `LstPool` and cursor to aid in pagination.
  """
  edges: [LstPoolsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `LstPool` for these aggregates."""
    groupBy: [LstPoolsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: LstPoolsHavingInput
  ): [LstPoolAggregates!]
  """A list of `LstPool` objects."""
  nodes: [LstPool]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `LstPool` you could get from the connection."""
  totalCount: Int!
}

"""A `LstPool` edge in the connection."""
type LstPoolsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `LstPool` at the end of the edge."""
  node: LstPool
}

"""Grouping methods for `LstPool` for usage during aggregation."""
enum LstPoolsGroupBy {
  CURRENT_STATE
  ID
  TOTAL_STAKE
}

input LstPoolsHavingAverageInput {
  totalStake: HavingBigfloatFilter
}

input LstPoolsHavingDistinctCountInput {
  totalStake: HavingBigfloatFilter
}

"""Conditions for `LstPool` aggregates."""
input LstPoolsHavingInput {
  AND: [LstPoolsHavingInput!]
  OR: [LstPoolsHavingInput!]
  average: LstPoolsHavingAverageInput
  distinctCount: LstPoolsHavingDistinctCountInput
  max: LstPoolsHavingMaxInput
  min: LstPoolsHavingMinInput
  stddevPopulation: LstPoolsHavingStddevPopulationInput
  stddevSample: LstPoolsHavingStddevSampleInput
  sum: LstPoolsHavingSumInput
  variancePopulation: LstPoolsHavingVariancePopulationInput
  varianceSample: LstPoolsHavingVarianceSampleInput
}

input LstPoolsHavingMaxInput {
  totalStake: HavingBigfloatFilter
}

input LstPoolsHavingMinInput {
  totalStake: HavingBigfloatFilter
}

input LstPoolsHavingStddevPopulationInput {
  totalStake: HavingBigfloatFilter
}

input LstPoolsHavingStddevSampleInput {
  totalStake: HavingBigfloatFilter
}

input LstPoolsHavingSumInput {
  totalStake: HavingBigfloatFilter
}

input LstPoolsHavingVariancePopulationInput {
  totalStake: HavingBigfloatFilter
}

input LstPoolsHavingVarianceSampleInput {
  totalStake: HavingBigfloatFilter
}

"""Methods to use when ordering `LstPool`."""
enum LstPoolsOrderBy {
  CURRENT_STATE_ASC
  CURRENT_STATE_DESC
  ID_ASC
  ID_DESC
  LST_POOL_MEMBERS_BY_LST_POOL_ID__COUNT_ASC
  LST_POOL_MEMBERS_BY_LST_POOL_ID__COUNT_DESC
  LST_POOL_STATE_CHANGES_BY_LST_POOL_ID__COUNT_ASC
  LST_POOL_STATE_CHANGES_BY_LST_POOL_ID__COUNT_DESC
  MEMBERS_AVERAGE_ACCOUNT_ID_ASC
  MEMBERS_AVERAGE_ACCOUNT_ID_DESC
  MEMBERS_AVERAGE_BLOCK_RANGE_ASC
  MEMBERS_AVERAGE_BLOCK_RANGE_DESC
  MEMBERS_AVERAGE_CURRENT_STAKE_ASC
  MEMBERS_AVERAGE_CURRENT_STAKE_DESC
  MEMBERS_AVERAGE_ID_ASC
  MEMBERS_AVERAGE_ID_DESC
  MEMBERS_AVERAGE_LST_POOL_ID_ASC
  MEMBERS_AVERAGE_LST_POOL_ID_DESC
  MEMBERS_COUNT_ASC
  MEMBERS_COUNT_DESC
  MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_ASC
  MEMBERS_DISTINCT_COUNT_ACCOUNT_ID_DESC
  MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  MEMBERS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_ASC
  MEMBERS_DISTINCT_COUNT_CURRENT_STAKE_DESC
  MEMBERS_DISTINCT_COUNT_ID_ASC
  MEMBERS_DISTINCT_COUNT_ID_DESC
  MEMBERS_DISTINCT_COUNT_LST_POOL_ID_ASC
  MEMBERS_DISTINCT_COUNT_LST_POOL_ID_DESC
  MEMBERS_MAX_ACCOUNT_ID_ASC
  MEMBERS_MAX_ACCOUNT_ID_DESC
  MEMBERS_MAX_BLOCK_RANGE_ASC
  MEMBERS_MAX_BLOCK_RANGE_DESC
  MEMBERS_MAX_CURRENT_STAKE_ASC
  MEMBERS_MAX_CURRENT_STAKE_DESC
  MEMBERS_MAX_ID_ASC
  MEMBERS_MAX_ID_DESC
  MEMBERS_MAX_LST_POOL_ID_ASC
  MEMBERS_MAX_LST_POOL_ID_DESC
  MEMBERS_MIN_ACCOUNT_ID_ASC
  MEMBERS_MIN_ACCOUNT_ID_DESC
  MEMBERS_MIN_BLOCK_RANGE_ASC
  MEMBERS_MIN_BLOCK_RANGE_DESC
  MEMBERS_MIN_CURRENT_STAKE_ASC
  MEMBERS_MIN_CURRENT_STAKE_DESC
  MEMBERS_MIN_ID_ASC
  MEMBERS_MIN_ID_DESC
  MEMBERS_MIN_LST_POOL_ID_ASC
  MEMBERS_MIN_LST_POOL_ID_DESC
  MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_ASC
  MEMBERS_STDDEV_POPULATION_ACCOUNT_ID_DESC
  MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  MEMBERS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_ASC
  MEMBERS_STDDEV_POPULATION_CURRENT_STAKE_DESC
  MEMBERS_STDDEV_POPULATION_ID_ASC
  MEMBERS_STDDEV_POPULATION_ID_DESC
  MEMBERS_STDDEV_POPULATION_LST_POOL_ID_ASC
  MEMBERS_STDDEV_POPULATION_LST_POOL_ID_DESC
  MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_ASC
  MEMBERS_STDDEV_SAMPLE_ACCOUNT_ID_DESC
  MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  MEMBERS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_ASC
  MEMBERS_STDDEV_SAMPLE_CURRENT_STAKE_DESC
  MEMBERS_STDDEV_SAMPLE_ID_ASC
  MEMBERS_STDDEV_SAMPLE_ID_DESC
  MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_ASC
  MEMBERS_STDDEV_SAMPLE_LST_POOL_ID_DESC
  MEMBERS_SUM_ACCOUNT_ID_ASC
  MEMBERS_SUM_ACCOUNT_ID_DESC
  MEMBERS_SUM_BLOCK_RANGE_ASC
  MEMBERS_SUM_BLOCK_RANGE_DESC
  MEMBERS_SUM_CURRENT_STAKE_ASC
  MEMBERS_SUM_CURRENT_STAKE_DESC
  MEMBERS_SUM_ID_ASC
  MEMBERS_SUM_ID_DESC
  MEMBERS_SUM_LST_POOL_ID_ASC
  MEMBERS_SUM_LST_POOL_ID_DESC
  MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_ASC
  MEMBERS_VARIANCE_POPULATION_ACCOUNT_ID_DESC
  MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  MEMBERS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_ASC
  MEMBERS_VARIANCE_POPULATION_CURRENT_STAKE_DESC
  MEMBERS_VARIANCE_POPULATION_ID_ASC
  MEMBERS_VARIANCE_POPULATION_ID_DESC
  MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_ASC
  MEMBERS_VARIANCE_POPULATION_LST_POOL_ID_DESC
  MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC
  MEMBERS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC
  MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  MEMBERS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_ASC
  MEMBERS_VARIANCE_SAMPLE_CURRENT_STAKE_DESC
  MEMBERS_VARIANCE_SAMPLE_ID_ASC
  MEMBERS_VARIANCE_SAMPLE_ID_DESC
  MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_ASC
  MEMBERS_VARIANCE_SAMPLE_LST_POOL_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  STATE_HISTORY_AVERAGE_BLOCK_NUMBER_ASC
  STATE_HISTORY_AVERAGE_BLOCK_NUMBER_DESC
  STATE_HISTORY_AVERAGE_BLOCK_RANGE_ASC
  STATE_HISTORY_AVERAGE_BLOCK_RANGE_DESC
  STATE_HISTORY_AVERAGE_ID_ASC
  STATE_HISTORY_AVERAGE_ID_DESC
  STATE_HISTORY_AVERAGE_LST_POOL_ID_ASC
  STATE_HISTORY_AVERAGE_LST_POOL_ID_DESC
  STATE_HISTORY_AVERAGE_STATE_ASC
  STATE_HISTORY_AVERAGE_STATE_DESC
  STATE_HISTORY_COUNT_ASC
  STATE_HISTORY_COUNT_DESC
  STATE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC
  STATE_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC
  STATE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC
  STATE_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC
  STATE_HISTORY_DISTINCT_COUNT_ID_ASC
  STATE_HISTORY_DISTINCT_COUNT_ID_DESC
  STATE_HISTORY_DISTINCT_COUNT_LST_POOL_ID_ASC
  STATE_HISTORY_DISTINCT_COUNT_LST_POOL_ID_DESC
  STATE_HISTORY_DISTINCT_COUNT_STATE_ASC
  STATE_HISTORY_DISTINCT_COUNT_STATE_DESC
  STATE_HISTORY_MAX_BLOCK_NUMBER_ASC
  STATE_HISTORY_MAX_BLOCK_NUMBER_DESC
  STATE_HISTORY_MAX_BLOCK_RANGE_ASC
  STATE_HISTORY_MAX_BLOCK_RANGE_DESC
  STATE_HISTORY_MAX_ID_ASC
  STATE_HISTORY_MAX_ID_DESC
  STATE_HISTORY_MAX_LST_POOL_ID_ASC
  STATE_HISTORY_MAX_LST_POOL_ID_DESC
  STATE_HISTORY_MAX_STATE_ASC
  STATE_HISTORY_MAX_STATE_DESC
  STATE_HISTORY_MIN_BLOCK_NUMBER_ASC
  STATE_HISTORY_MIN_BLOCK_NUMBER_DESC
  STATE_HISTORY_MIN_BLOCK_RANGE_ASC
  STATE_HISTORY_MIN_BLOCK_RANGE_DESC
  STATE_HISTORY_MIN_ID_ASC
  STATE_HISTORY_MIN_ID_DESC
  STATE_HISTORY_MIN_LST_POOL_ID_ASC
  STATE_HISTORY_MIN_LST_POOL_ID_DESC
  STATE_HISTORY_MIN_STATE_ASC
  STATE_HISTORY_MIN_STATE_DESC
  STATE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC
  STATE_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC
  STATE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC
  STATE_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC
  STATE_HISTORY_STDDEV_POPULATION_ID_ASC
  STATE_HISTORY_STDDEV_POPULATION_ID_DESC
  STATE_HISTORY_STDDEV_POPULATION_LST_POOL_ID_ASC
  STATE_HISTORY_STDDEV_POPULATION_LST_POOL_ID_DESC
  STATE_HISTORY_STDDEV_POPULATION_STATE_ASC
  STATE_HISTORY_STDDEV_POPULATION_STATE_DESC
  STATE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC
  STATE_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC
  STATE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  STATE_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  STATE_HISTORY_STDDEV_SAMPLE_ID_ASC
  STATE_HISTORY_STDDEV_SAMPLE_ID_DESC
  STATE_HISTORY_STDDEV_SAMPLE_LST_POOL_ID_ASC
  STATE_HISTORY_STDDEV_SAMPLE_LST_POOL_ID_DESC
  STATE_HISTORY_STDDEV_SAMPLE_STATE_ASC
  STATE_HISTORY_STDDEV_SAMPLE_STATE_DESC
  STATE_HISTORY_SUM_BLOCK_NUMBER_ASC
  STATE_HISTORY_SUM_BLOCK_NUMBER_DESC
  STATE_HISTORY_SUM_BLOCK_RANGE_ASC
  STATE_HISTORY_SUM_BLOCK_RANGE_DESC
  STATE_HISTORY_SUM_ID_ASC
  STATE_HISTORY_SUM_ID_DESC
  STATE_HISTORY_SUM_LST_POOL_ID_ASC
  STATE_HISTORY_SUM_LST_POOL_ID_DESC
  STATE_HISTORY_SUM_STATE_ASC
  STATE_HISTORY_SUM_STATE_DESC
  STATE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC
  STATE_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC
  STATE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  STATE_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  STATE_HISTORY_VARIANCE_POPULATION_ID_ASC
  STATE_HISTORY_VARIANCE_POPULATION_ID_DESC
  STATE_HISTORY_VARIANCE_POPULATION_LST_POOL_ID_ASC
  STATE_HISTORY_VARIANCE_POPULATION_LST_POOL_ID_DESC
  STATE_HISTORY_VARIANCE_POPULATION_STATE_ASC
  STATE_HISTORY_VARIANCE_POPULATION_STATE_DESC
  STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC
  STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC
  STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  STATE_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  STATE_HISTORY_VARIANCE_SAMPLE_ID_ASC
  STATE_HISTORY_VARIANCE_SAMPLE_ID_DESC
  STATE_HISTORY_VARIANCE_SAMPLE_LST_POOL_ID_ASC
  STATE_HISTORY_VARIANCE_SAMPLE_LST_POOL_ID_DESC
  STATE_HISTORY_VARIANCE_SAMPLE_STATE_ASC
  STATE_HISTORY_VARIANCE_SAMPLE_STATE_DESC
  TOTAL_STAKE_ASC
  TOTAL_STAKE_DESC
}

type MemberStakeChange implements Node {
  """
  The amount of the stake change (positive for increase, negative for decrease).
  """
  amount: BigFloat!
  """The block number at which the stake change occurred."""
  blockNumber: Int!
  """
  Unique identifier for the stake change. Composite key: LstPool ID + account ID + block number
  """
  id: String!
  """
  Reads a single `LstPoolMember` that is related to this `MemberStakeChange`.
  """
  member: LstPoolMember
  """The Lst Pool member whose stake has changed."""
  memberId: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

type MemberStakeChangeAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: MemberStakeChangeAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: MemberStakeChangeDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: MemberStakeChangeMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: MemberStakeChangeMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: MemberStakeChangeStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: MemberStakeChangeStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: MemberStakeChangeSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: MemberStakeChangeVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: MemberStakeChangeVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `MemberStakeChange` object types.
"""
input MemberStakeChangeAggregatesFilter {
  """Mean average aggregate over matching `MemberStakeChange` objects."""
  average: MemberStakeChangeAverageAggregateFilter
  """Distinct count aggregate over matching `MemberStakeChange` objects."""
  distinctCount: MemberStakeChangeDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `MemberStakeChange` object to be included within the aggregate.
  """
  filter: MemberStakeChangeFilter
  """Maximum aggregate over matching `MemberStakeChange` objects."""
  max: MemberStakeChangeMaxAggregateFilter
  """Minimum aggregate over matching `MemberStakeChange` objects."""
  min: MemberStakeChangeMinAggregateFilter
  """
  Population standard deviation aggregate over matching `MemberStakeChange` objects.
  """
  stddevPopulation: MemberStakeChangeStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `MemberStakeChange` objects.
  """
  stddevSample: MemberStakeChangeStddevSampleAggregateFilter
  """Sum aggregate over matching `MemberStakeChange` objects."""
  sum: MemberStakeChangeSumAggregateFilter
  """
  Population variance aggregate over matching `MemberStakeChange` objects.
  """
  variancePopulation: MemberStakeChangeVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `MemberStakeChange` objects."""
  varianceSample: MemberStakeChangeVarianceSampleAggregateFilter
}

input MemberStakeChangeAverageAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type MemberStakeChangeAverageAggregates {
  """Mean average of amount across the matching connection"""
  amount: BigFloat
  """Mean average of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input MemberStakeChangeDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  amount: BigIntFilter
  blockNumber: BigIntFilter
  id: BigIntFilter
  memberId: BigIntFilter
}

type MemberStakeChangeDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of amount across the matching connection"""
  amount: BigInt
  """Distinct count of blockNumber across the matching connection"""
  blockNumber: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of memberId across the matching connection"""
  memberId: BigInt
}

"""
A filter to be used against `MemberStakeChange` object types. All fields are combined with a logical ‘and.’
"""
input MemberStakeChangeFilter {
  """Filter by the object’s `amount` field."""
  amount: BigFloatFilter
  """Checks for all expressions in this list."""
  and: [MemberStakeChangeFilter!]
  """Filter by the object’s `blockNumber` field."""
  blockNumber: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `member` relation."""
  member: LstPoolMemberFilter
  """Filter by the object’s `memberId` field."""
  memberId: StringFilter
  """Negates the expression."""
  not: MemberStakeChangeFilter
  """Checks for any expressions in this list."""
  or: [MemberStakeChangeFilter!]
}

input MemberStakeChangeMaxAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type MemberStakeChangeMaxAggregates {
  """Maximum of amount across the matching connection"""
  amount: BigFloat
  """Maximum of blockNumber across the matching connection"""
  blockNumber: Int
}

input MemberStakeChangeMinAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type MemberStakeChangeMinAggregates {
  """Minimum of amount across the matching connection"""
  amount: BigFloat
  """Minimum of blockNumber across the matching connection"""
  blockNumber: Int
}

input MemberStakeChangeStddevPopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type MemberStakeChangeStddevPopulationAggregates {
  """Population standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Population standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input MemberStakeChangeStddevSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type MemberStakeChangeStddevSampleAggregates {
  """Sample standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Sample standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input MemberStakeChangeSumAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigIntFilter
}

type MemberStakeChangeSumAggregates {
  """Sum of amount across the matching connection"""
  amount: BigFloat!
  """Sum of blockNumber across the matching connection"""
  blockNumber: BigInt!
}

input MemberStakeChangeVariancePopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type MemberStakeChangeVariancePopulationAggregates {
  """Population variance of amount across the matching connection"""
  amount: BigFloat
  """Population variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input MemberStakeChangeVarianceSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type MemberStakeChangeVarianceSampleAggregates {
  """Sample variance of amount across the matching connection"""
  amount: BigFloat
  """Sample variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

"""A connection to a list of `MemberStakeChange` values."""
type MemberStakeChangesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: MemberStakeChangeAggregates
  """
  A list of edges which contains the `MemberStakeChange` and cursor to aid in pagination.
  """
  edges: [MemberStakeChangesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `MemberStakeChange` for these aggregates.
    """
    groupBy: [MemberStakeChangesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: MemberStakeChangesHavingInput
  ): [MemberStakeChangeAggregates!]
  """A list of `MemberStakeChange` objects."""
  nodes: [MemberStakeChange]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `MemberStakeChange` you could get from the connection.
  """
  totalCount: Int!
}

"""A `MemberStakeChange` edge in the connection."""
type MemberStakeChangesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `MemberStakeChange` at the end of the edge."""
  node: MemberStakeChange
}

"""Grouping methods for `MemberStakeChange` for usage during aggregation."""
enum MemberStakeChangesGroupBy {
  AMOUNT
  BLOCK_NUMBER
  ID
  MEMBER_ID
}

input MemberStakeChangesHavingAverageInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input MemberStakeChangesHavingDistinctCountInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Conditions for `MemberStakeChange` aggregates."""
input MemberStakeChangesHavingInput {
  AND: [MemberStakeChangesHavingInput!]
  OR: [MemberStakeChangesHavingInput!]
  average: MemberStakeChangesHavingAverageInput
  distinctCount: MemberStakeChangesHavingDistinctCountInput
  max: MemberStakeChangesHavingMaxInput
  min: MemberStakeChangesHavingMinInput
  stddevPopulation: MemberStakeChangesHavingStddevPopulationInput
  stddevSample: MemberStakeChangesHavingStddevSampleInput
  sum: MemberStakeChangesHavingSumInput
  variancePopulation: MemberStakeChangesHavingVariancePopulationInput
  varianceSample: MemberStakeChangesHavingVarianceSampleInput
}

input MemberStakeChangesHavingMaxInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input MemberStakeChangesHavingMinInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input MemberStakeChangesHavingStddevPopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input MemberStakeChangesHavingStddevSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input MemberStakeChangesHavingSumInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input MemberStakeChangesHavingVariancePopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input MemberStakeChangesHavingVarianceSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Methods to use when ordering `MemberStakeChange`."""
enum MemberStakeChangesOrderBy {
  AMOUNT_ASC
  AMOUNT_DESC
  BLOCK_NUMBER_ASC
  BLOCK_NUMBER_DESC
  ID_ASC
  ID_DESC
  LST_POOL_MEMBER_BY_MEMBER_ID__ACCOUNT_ID_ASC
  LST_POOL_MEMBER_BY_MEMBER_ID__ACCOUNT_ID_DESC
  LST_POOL_MEMBER_BY_MEMBER_ID__CURRENT_STAKE_ASC
  LST_POOL_MEMBER_BY_MEMBER_ID__CURRENT_STAKE_DESC
  LST_POOL_MEMBER_BY_MEMBER_ID__ID_ASC
  LST_POOL_MEMBER_BY_MEMBER_ID__ID_DESC
  LST_POOL_MEMBER_BY_MEMBER_ID__LST_POOL_ID_ASC
  LST_POOL_MEMBER_BY_MEMBER_ID__LST_POOL_ID_DESC
  MEMBER_ID_ASC
  MEMBER_ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""An object with a globally unique `ID`."""
interface Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
}

"""Options for ordering null values in a specific direction."""
enum NullOrder {
  """Order null values first."""
  NULLS_FIRST
  """Order null values last."""
  NULLS_LAST
}

type Operator implements Node {
  """Reads a single `Account` that is related to this `Operator`."""
  account: Account
  """The account associated with this Operator."""
  accountId: String!
  """Reads and enables pagination through a set of `BlueprintOperator`."""
  blueprintOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprint_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `BlueprintOperator`."""
    orderBy: [BlueprintOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintOperatorsConnection!
  """Reads and enables pagination through a set of `Blueprint`."""
  blueprintsByBlueprintOperatorOperatorIdAndBlueprintId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprints_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Blueprint`."""
    orderBy: [BlueprintsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyConnection!
  """Reads and enables pagination through a set of `OperatorBondChange`."""
  bondChanges(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operator_bond_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorBondChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `OperatorBondChange`."""
    orderBy: [OperatorBondChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorBondChangesConnection!
  """The current stake amount of the Operator."""
  currentStake: BigFloat!
  """Current status of the Operator (ACTIVE, LEAVING, or OFFLINE)."""
  currentStatus: OperatorStatus!
  """Reads and enables pagination through a set of `Delegation`."""
  delegations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegation`."""
    orderBy: [DelegationsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationsConnection!
  """Reads and enables pagination through a set of `Delegation`."""
  delegationsByUnstakeRequestOperatorIdAndDelegationId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegation`."""
    orderBy: [DelegationsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyConnection!
  """Reads and enables pagination through a set of `Delegator`."""
  delegatorsByDelegationOperatorIdAndDelegatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegator`."""
    orderBy: [DelegatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyConnection!
  """Reads and enables pagination through a set of `Delegator`."""
  delegatorsByUnstakeRequestOperatorIdAndDelegatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegator`."""
    orderBy: [DelegatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyConnection!
  """Operator's account ID, serves as the unique identifier."""
  id: String!
  """Reads and enables pagination through a set of `JobCall`."""
  jobCallsByJobResultOperatorIdAndJobCallId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobCallFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobCall`."""
    orderBy: [JobCallsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyConnection!
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """The block number when the Operator joined the network."""
  joinedAt: Int!
  """The block number of the last update to the Operator's information."""
  lastUpdateAt: Int!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """
  The amount of tokens scheduled to be unstaked by the Operator.
  This represents the pending unstake amount that can be released after the unbonding period.
  """
  scheduledUnstakeAmount: BigFloat
  """Reads and enables pagination through a set of `ServiceOperator`."""
  serviceOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceOperator`."""
    orderBy: [ServiceOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceOperatorsConnection!
  """
  Reads and enables pagination through a set of `ServiceRequestOperator`.
  """
  serviceRequestOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_request_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequestOperator`."""
    orderBy: [ServiceRequestOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestOperatorsConnection!
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyConnection!
  """Reads and enables pagination through a set of `Service`."""
  servicesByJobResultOperatorIdAndServiceId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyConnection!
  """Reads and enables pagination through a set of `Service`."""
  servicesByServiceOperatorOperatorIdAndServiceId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyConnection!
  """Reads and enables pagination through a set of `OperatorStatusChange`."""
  statusHistory(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operator_status_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorStatusChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `OperatorStatusChange`."""
    orderBy: [OperatorStatusChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorStatusChangesConnection!
  """Total number of Blueprints registered by this Operator."""
  totalBlueprints: Int!
  """Total number of Service Requests requested by this Operator."""
  totalServiceRequests: Int!
  """Total number of Services operated by this Operator."""
  totalServices: Int!
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

type OperatorAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: OperatorAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: OperatorDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: OperatorMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: OperatorMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: OperatorStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: OperatorStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: OperatorSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: OperatorVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: OperatorVarianceSampleAggregates
}

"""A filter to be used against aggregates of `Operator` object types."""
input OperatorAggregatesFilter {
  """Mean average aggregate over matching `Operator` objects."""
  average: OperatorAverageAggregateFilter
  """Distinct count aggregate over matching `Operator` objects."""
  distinctCount: OperatorDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `Operator` object to be included within the aggregate.
  """
  filter: OperatorFilter
  """Maximum aggregate over matching `Operator` objects."""
  max: OperatorMaxAggregateFilter
  """Minimum aggregate over matching `Operator` objects."""
  min: OperatorMinAggregateFilter
  """
  Population standard deviation aggregate over matching `Operator` objects.
  """
  stddevPopulation: OperatorStddevPopulationAggregateFilter
  """Sample standard deviation aggregate over matching `Operator` objects."""
  stddevSample: OperatorStddevSampleAggregateFilter
  """Sum aggregate over matching `Operator` objects."""
  sum: OperatorSumAggregateFilter
  """Population variance aggregate over matching `Operator` objects."""
  variancePopulation: OperatorVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `Operator` objects."""
  varianceSample: OperatorVarianceSampleAggregateFilter
}

input OperatorAverageAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: BigFloatFilter
  totalServiceRequests: BigFloatFilter
  totalServices: BigFloatFilter
}

type OperatorAverageAggregates {
  """Mean average of currentStake across the matching connection"""
  currentStake: BigFloat
  """Mean average of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """Mean average of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
  """Mean average of scheduledUnstakeAmount across the matching connection"""
  scheduledUnstakeAmount: BigFloat
  """Mean average of totalBlueprints across the matching connection"""
  totalBlueprints: BigFloat
  """Mean average of totalServiceRequests across the matching connection"""
  totalServiceRequests: BigFloat
  """Mean average of totalServices across the matching connection"""
  totalServices: BigFloat
}

"""
A connection to a list of `Blueprint` values, with data from `BlueprintOperator`.
"""
type OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: BlueprintAggregates
  """
  A list of edges which contains the `Blueprint`, info from the `BlueprintOperator`, and the cursor to aid in pagination.
  """
  edges: [OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Blueprint` for these aggregates."""
    groupBy: [BlueprintsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: BlueprintsHavingInput
  ): [BlueprintAggregates!]
  """A list of `Blueprint` objects."""
  nodes: [Blueprint]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Blueprint` you could get from the connection."""
  totalCount: Int!
}

"""
A `Blueprint` edge in the connection, with data from `BlueprintOperator`.
"""
type OperatorBlueprintsByBlueprintOperatorOperatorIdAndBlueprintIdManyToManyEdge {
  """Reads and enables pagination through a set of `BlueprintOperator`."""
  blueprintOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprint_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `BlueprintOperator`."""
    orderBy: [BlueprintOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintOperatorsConnection!
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Blueprint` at the end of the edge."""
  node: Blueprint
}

type OperatorBondChange implements Node {
  """The type of action that caused the bond change."""
  action: BondChangeAction!
  """The amount of the bond change."""
  amount: BigFloat!
  """The block number at which the bond change occurred."""
  blockNumber: Int!
  """
  Unique identifier for the bond change. Composite key: operator ID + block number
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """
  Reads a single `Operator` that is related to this `OperatorBondChange`.
  """
  operator: Operator
  """The Operator whose bond amount has changed."""
  operatorId: String!
}

type OperatorBondChangeAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: OperatorBondChangeAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: OperatorBondChangeDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: OperatorBondChangeMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: OperatorBondChangeMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: OperatorBondChangeStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: OperatorBondChangeStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: OperatorBondChangeSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: OperatorBondChangeVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: OperatorBondChangeVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `OperatorBondChange` object types.
"""
input OperatorBondChangeAggregatesFilter {
  """Mean average aggregate over matching `OperatorBondChange` objects."""
  average: OperatorBondChangeAverageAggregateFilter
  """Distinct count aggregate over matching `OperatorBondChange` objects."""
  distinctCount: OperatorBondChangeDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `OperatorBondChange` object to be included within the aggregate.
  """
  filter: OperatorBondChangeFilter
  """Maximum aggregate over matching `OperatorBondChange` objects."""
  max: OperatorBondChangeMaxAggregateFilter
  """Minimum aggregate over matching `OperatorBondChange` objects."""
  min: OperatorBondChangeMinAggregateFilter
  """
  Population standard deviation aggregate over matching `OperatorBondChange` objects.
  """
  stddevPopulation: OperatorBondChangeStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `OperatorBondChange` objects.
  """
  stddevSample: OperatorBondChangeStddevSampleAggregateFilter
  """Sum aggregate over matching `OperatorBondChange` objects."""
  sum: OperatorBondChangeSumAggregateFilter
  """
  Population variance aggregate over matching `OperatorBondChange` objects.
  """
  variancePopulation: OperatorBondChangeVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `OperatorBondChange` objects."""
  varianceSample: OperatorBondChangeVarianceSampleAggregateFilter
}

input OperatorBondChangeAverageAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type OperatorBondChangeAverageAggregates {
  """Mean average of amount across the matching connection"""
  amount: BigFloat
  """Mean average of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input OperatorBondChangeDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  action: BigIntFilter
  amount: BigIntFilter
  blockNumber: BigIntFilter
  id: BigIntFilter
  operatorId: BigIntFilter
}

type OperatorBondChangeDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of action across the matching connection"""
  action: BigInt
  """Distinct count of amount across the matching connection"""
  amount: BigInt
  """Distinct count of blockNumber across the matching connection"""
  blockNumber: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
}

"""
A filter to be used against `OperatorBondChange` object types. All fields are combined with a logical ‘and.’
"""
input OperatorBondChangeFilter {
  """Filter by the object’s `action` field."""
  action: BondChangeActionFilter
  """Filter by the object’s `amount` field."""
  amount: BigFloatFilter
  """Checks for all expressions in this list."""
  and: [OperatorBondChangeFilter!]
  """Filter by the object’s `blockNumber` field."""
  blockNumber: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: OperatorBondChangeFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [OperatorBondChangeFilter!]
}

input OperatorBondChangeMaxAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type OperatorBondChangeMaxAggregates {
  """Maximum of amount across the matching connection"""
  amount: BigFloat
  """Maximum of blockNumber across the matching connection"""
  blockNumber: Int
}

input OperatorBondChangeMinAggregateFilter {
  amount: BigFloatFilter
  blockNumber: IntFilter
}

type OperatorBondChangeMinAggregates {
  """Minimum of amount across the matching connection"""
  amount: BigFloat
  """Minimum of blockNumber across the matching connection"""
  blockNumber: Int
}

input OperatorBondChangeStddevPopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type OperatorBondChangeStddevPopulationAggregates {
  """Population standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Population standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input OperatorBondChangeStddevSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type OperatorBondChangeStddevSampleAggregates {
  """Sample standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Sample standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input OperatorBondChangeSumAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigIntFilter
}

type OperatorBondChangeSumAggregates {
  """Sum of amount across the matching connection"""
  amount: BigFloat!
  """Sum of blockNumber across the matching connection"""
  blockNumber: BigInt!
}

input OperatorBondChangeVariancePopulationAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type OperatorBondChangeVariancePopulationAggregates {
  """Population variance of amount across the matching connection"""
  amount: BigFloat
  """Population variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input OperatorBondChangeVarianceSampleAggregateFilter {
  amount: BigFloatFilter
  blockNumber: BigFloatFilter
}

type OperatorBondChangeVarianceSampleAggregates {
  """Sample variance of amount across the matching connection"""
  amount: BigFloat
  """Sample variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

"""A connection to a list of `OperatorBondChange` values."""
type OperatorBondChangesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorBondChangeAggregates
  """
  A list of edges which contains the `OperatorBondChange` and cursor to aid in pagination.
  """
  edges: [OperatorBondChangesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `OperatorBondChange` for these aggregates.
    """
    groupBy: [OperatorBondChangesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorBondChangesHavingInput
  ): [OperatorBondChangeAggregates!]
  """A list of `OperatorBondChange` objects."""
  nodes: [OperatorBondChange]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `OperatorBondChange` you could get from the connection.
  """
  totalCount: Int!
}

"""A `OperatorBondChange` edge in the connection."""
type OperatorBondChangesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `OperatorBondChange` at the end of the edge."""
  node: OperatorBondChange
}

"""
Grouping methods for `OperatorBondChange` for usage during aggregation.
"""
enum OperatorBondChangesGroupBy {
  ACTION
  AMOUNT
  BLOCK_NUMBER
  ID
  OPERATOR_ID
}

input OperatorBondChangesHavingAverageInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input OperatorBondChangesHavingDistinctCountInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Conditions for `OperatorBondChange` aggregates."""
input OperatorBondChangesHavingInput {
  AND: [OperatorBondChangesHavingInput!]
  OR: [OperatorBondChangesHavingInput!]
  average: OperatorBondChangesHavingAverageInput
  distinctCount: OperatorBondChangesHavingDistinctCountInput
  max: OperatorBondChangesHavingMaxInput
  min: OperatorBondChangesHavingMinInput
  stddevPopulation: OperatorBondChangesHavingStddevPopulationInput
  stddevSample: OperatorBondChangesHavingStddevSampleInput
  sum: OperatorBondChangesHavingSumInput
  variancePopulation: OperatorBondChangesHavingVariancePopulationInput
  varianceSample: OperatorBondChangesHavingVarianceSampleInput
}

input OperatorBondChangesHavingMaxInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input OperatorBondChangesHavingMinInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input OperatorBondChangesHavingStddevPopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input OperatorBondChangesHavingStddevSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input OperatorBondChangesHavingSumInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input OperatorBondChangesHavingVariancePopulationInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

input OperatorBondChangesHavingVarianceSampleInput {
  amount: HavingBigfloatFilter
  blockNumber: HavingIntFilter
}

"""Methods to use when ordering `OperatorBondChange`."""
enum OperatorBondChangesOrderBy {
  ACTION_ASC
  ACTION_DESC
  AMOUNT_ASC
  AMOUNT_DESC
  BLOCK_NUMBER_ASC
  BLOCK_NUMBER_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""
A connection to a list of `Delegation` values, with data from `UnstakeRequest`.
"""
type OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegationAggregates
  """
  A list of edges which contains the `Delegation`, info from the `UnstakeRequest`, and the cursor to aid in pagination.
  """
  edges: [OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegation` for these aggregates."""
    groupBy: [DelegationsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegationsHavingInput
  ): [DelegationAggregates!]
  """A list of `Delegation` objects."""
  nodes: [Delegation]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegation` you could get from the connection."""
  totalCount: Int!
}

"""
A `Delegation` edge in the connection, with data from `UnstakeRequest`.
"""
type OperatorDelegationsByUnstakeRequestOperatorIdAndDelegationIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Delegation` at the end of the edge."""
  node: Delegation
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

"""
A connection to a list of `Delegator` values, with data from `Delegation`.
"""
type OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegatorAggregates
  """
  A list of edges which contains the `Delegator`, info from the `Delegation`, and the cursor to aid in pagination.
  """
  edges: [OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegator` for these aggregates."""
    groupBy: [DelegatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegatorsHavingInput
  ): [DelegatorAggregates!]
  """A list of `Delegator` objects."""
  nodes: [Delegator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegator` you could get from the connection."""
  totalCount: Int!
}

"""A `Delegator` edge in the connection, with data from `Delegation`."""
type OperatorDelegatorsByDelegationOperatorIdAndDelegatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `Delegation`."""
  delegations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegation`."""
    orderBy: [DelegationsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationsConnection!
  """The `Delegator` at the end of the edge."""
  node: Delegator
}

"""
A connection to a list of `Delegator` values, with data from `UnstakeRequest`.
"""
type OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: DelegatorAggregates
  """
  A list of edges which contains the `Delegator`, info from the `UnstakeRequest`, and the cursor to aid in pagination.
  """
  edges: [OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Delegator` for these aggregates."""
    groupBy: [DelegatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: DelegatorsHavingInput
  ): [DelegatorAggregates!]
  """A list of `Delegator` objects."""
  nodes: [Delegator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Delegator` you could get from the connection."""
  totalCount: Int!
}

"""A `Delegator` edge in the connection, with data from `UnstakeRequest`."""
type OperatorDelegatorsByUnstakeRequestOperatorIdAndDelegatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Delegator` at the end of the edge."""
  node: Delegator
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection!
}

input OperatorDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  accountId: BigIntFilter
  currentStake: BigIntFilter
  currentStatus: BigIntFilter
  id: BigIntFilter
  joinedAt: BigIntFilter
  lastUpdateAt: BigIntFilter
  scheduledUnstakeAmount: BigIntFilter
  totalBlueprints: BigIntFilter
  totalServiceRequests: BigIntFilter
  totalServices: BigIntFilter
}

type OperatorDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of accountId across the matching connection"""
  accountId: BigInt
  """Distinct count of currentStake across the matching connection"""
  currentStake: BigInt
  """Distinct count of currentStatus across the matching connection"""
  currentStatus: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of joinedAt across the matching connection"""
  joinedAt: BigInt
  """Distinct count of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigInt
  """
  Distinct count of scheduledUnstakeAmount across the matching connection
  """
  scheduledUnstakeAmount: BigInt
  """Distinct count of totalBlueprints across the matching connection"""
  totalBlueprints: BigInt
  """Distinct count of totalServiceRequests across the matching connection"""
  totalServiceRequests: BigInt
  """Distinct count of totalServices across the matching connection"""
  totalServices: BigInt
}

"""
A filter to be used against `Operator` object types. All fields are combined with a logical ‘and.’
"""
input OperatorFilter {
  """Filter by the object’s `account` relation."""
  account: AccountFilter
  """Filter by the object’s `accountId` field."""
  accountId: StringFilter
  """Checks for all expressions in this list."""
  and: [OperatorFilter!]
  """Filter by the object’s `blueprintOperators` relation."""
  blueprintOperators: OperatorToManyBlueprintOperatorFilter
  """Some related `blueprintOperators` exist."""
  blueprintOperatorsExist: Boolean
  """Filter by the object’s `bondChanges` relation."""
  bondChanges: OperatorToManyOperatorBondChangeFilter
  """Some related `bondChanges` exist."""
  bondChangesExist: Boolean
  """Filter by the object’s `currentStake` field."""
  currentStake: BigFloatFilter
  """Filter by the object’s `currentStatus` field."""
  currentStatus: OperatorStatusFilter
  """Filter by the object’s `delegations` relation."""
  delegations: OperatorToManyDelegationFilter
  """Some related `delegations` exist."""
  delegationsExist: Boolean
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `jobResults` relation."""
  jobResults: OperatorToManyJobResultFilter
  """Some related `jobResults` exist."""
  jobResultsExist: Boolean
  """Filter by the object’s `joinedAt` field."""
  joinedAt: IntFilter
  """Filter by the object’s `lastUpdateAt` field."""
  lastUpdateAt: IntFilter
  """Negates the expression."""
  not: OperatorFilter
  """Checks for any expressions in this list."""
  or: [OperatorFilter!]
  """Filter by the object’s `scheduledUnstakeAmount` field."""
  scheduledUnstakeAmount: BigFloatFilter
  """Filter by the object’s `serviceOperators` relation."""
  serviceOperators: OperatorToManyServiceOperatorFilter
  """Some related `serviceOperators` exist."""
  serviceOperatorsExist: Boolean
  """Filter by the object’s `serviceRequestOperators` relation."""
  serviceRequestOperators: OperatorToManyServiceRequestOperatorFilter
  """Some related `serviceRequestOperators` exist."""
  serviceRequestOperatorsExist: Boolean
  """Filter by the object’s `statusHistory` relation."""
  statusHistory: OperatorToManyOperatorStatusChangeFilter
  """Some related `statusHistory` exist."""
  statusHistoryExist: Boolean
  """Filter by the object’s `totalBlueprints` field."""
  totalBlueprints: IntFilter
  """Filter by the object’s `totalServiceRequests` field."""
  totalServiceRequests: IntFilter
  """Filter by the object’s `totalServices` field."""
  totalServices: IntFilter
  """Filter by the object’s `unstakeRequests` relation."""
  unstakeRequests: OperatorToManyUnstakeRequestFilter
  """Some related `unstakeRequests` exist."""
  unstakeRequestsExist: Boolean
}

"""
A connection to a list of `JobCall` values, with data from `JobResult`.
"""
type OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: JobCallAggregates
  """
  A list of edges which contains the `JobCall`, info from the `JobResult`, and the cursor to aid in pagination.
  """
  edges: [OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `JobCall` for these aggregates."""
    groupBy: [JobCallsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: JobCallsHavingInput
  ): [JobCallAggregates!]
  """A list of `JobCall` objects."""
  nodes: [JobCall]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `JobCall` you could get from the connection."""
  totalCount: Int!
}

"""A `JobCall` edge in the connection, with data from `JobResult`."""
type OperatorJobCallsByJobResultOperatorIdAndJobCallIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """The `JobCall` at the end of the edge."""
  node: JobCall
}

input OperatorMaxAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: IntFilter
  lastUpdateAt: IntFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: IntFilter
  totalServiceRequests: IntFilter
  totalServices: IntFilter
}

type OperatorMaxAggregates {
  """Maximum of currentStake across the matching connection"""
  currentStake: BigFloat
  """Maximum of joinedAt across the matching connection"""
  joinedAt: Int
  """Maximum of lastUpdateAt across the matching connection"""
  lastUpdateAt: Int
  """Maximum of scheduledUnstakeAmount across the matching connection"""
  scheduledUnstakeAmount: BigFloat
  """Maximum of totalBlueprints across the matching connection"""
  totalBlueprints: Int
  """Maximum of totalServiceRequests across the matching connection"""
  totalServiceRequests: Int
  """Maximum of totalServices across the matching connection"""
  totalServices: Int
}

input OperatorMinAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: IntFilter
  lastUpdateAt: IntFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: IntFilter
  totalServiceRequests: IntFilter
  totalServices: IntFilter
}

type OperatorMinAggregates {
  """Minimum of currentStake across the matching connection"""
  currentStake: BigFloat
  """Minimum of joinedAt across the matching connection"""
  joinedAt: Int
  """Minimum of lastUpdateAt across the matching connection"""
  lastUpdateAt: Int
  """Minimum of scheduledUnstakeAmount across the matching connection"""
  scheduledUnstakeAmount: BigFloat
  """Minimum of totalBlueprints across the matching connection"""
  totalBlueprints: Int
  """Minimum of totalServiceRequests across the matching connection"""
  totalServiceRequests: Int
  """Minimum of totalServices across the matching connection"""
  totalServices: Int
}

"""
A connection to a list of `ServiceRequest` values, with data from `ServiceRequestOperator`.
"""
type OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceRequestAggregates
  """
  A list of edges which contains the `ServiceRequest`, info from the `ServiceRequestOperator`, and the cursor to aid in pagination.
  """
  edges: [OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `ServiceRequest` for these aggregates."""
    groupBy: [ServiceRequestsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServiceRequestsHavingInput
  ): [ServiceRequestAggregates!]
  """A list of `ServiceRequest` objects."""
  nodes: [ServiceRequest]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `ServiceRequest` you could get from the connection."""
  totalCount: Int!
}

"""
A `ServiceRequest` edge in the connection, with data from `ServiceRequestOperator`.
"""
type OperatorServiceRequestsByServiceRequestOperatorOperatorIdAndServiceRequestIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `ServiceRequest` at the end of the edge."""
  node: ServiceRequest
  """
  Reads and enables pagination through a set of `ServiceRequestOperator`.
  """
  serviceRequestOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_request_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequestOperator`."""
    orderBy: [ServiceRequestOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestOperatorsConnection!
}

"""
A connection to a list of `Service` values, with data from `JobResult`.
"""
type OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceAggregates
  """
  A list of edges which contains the `Service`, info from the `JobResult`, and the cursor to aid in pagination.
  """
  edges: [OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Service` for these aggregates."""
    groupBy: [ServicesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServicesHavingInput
  ): [ServiceAggregates!]
  """A list of `Service` objects."""
  nodes: [Service]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Service` you could get from the connection."""
  totalCount: Int!
}

"""A `Service` edge in the connection, with data from `JobResult`."""
type OperatorServicesByJobResultOperatorIdAndServiceIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """The `Service` at the end of the edge."""
  node: Service
}

"""
A connection to a list of `Service` values, with data from `ServiceOperator`.
"""
type OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceAggregates
  """
  A list of edges which contains the `Service`, info from the `ServiceOperator`, and the cursor to aid in pagination.
  """
  edges: [OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Service` for these aggregates."""
    groupBy: [ServicesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServicesHavingInput
  ): [ServiceAggregates!]
  """A list of `Service` objects."""
  nodes: [Service]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Service` you could get from the connection."""
  totalCount: Int!
}

"""A `Service` edge in the connection, with data from `ServiceOperator`."""
type OperatorServicesByServiceOperatorOperatorIdAndServiceIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Service` at the end of the edge."""
  node: Service
  """Reads and enables pagination through a set of `ServiceOperator`."""
  serviceOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceOperator`."""
    orderBy: [ServiceOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceOperatorsConnection!
}

""" Enum representing the current status of an Operator in the network."""
enum OperatorStatus {
  ACTIVE
  LEAVING
  OFFLINE
}

type OperatorStatusChange implements Node {
  """The block number at which the status change occurred."""
  blockNumber: Int!
  """
  Unique identifier for the status change. Composite key: operator ID + block number
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """
  Reads a single `Operator` that is related to this `OperatorStatusChange`.
  """
  operator: Operator
  """The Operator whose status has changed."""
  operatorId: String!
  """The new status of the Operator."""
  status: OperatorStatus!
}

type OperatorStatusChangeAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: OperatorStatusChangeAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: OperatorStatusChangeDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: OperatorStatusChangeMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: OperatorStatusChangeMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: OperatorStatusChangeStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: OperatorStatusChangeStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: OperatorStatusChangeSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: OperatorStatusChangeVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: OperatorStatusChangeVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `OperatorStatusChange` object types.
"""
input OperatorStatusChangeAggregatesFilter {
  """Mean average aggregate over matching `OperatorStatusChange` objects."""
  average: OperatorStatusChangeAverageAggregateFilter
  """Distinct count aggregate over matching `OperatorStatusChange` objects."""
  distinctCount: OperatorStatusChangeDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `OperatorStatusChange` object to be included within the aggregate.
  """
  filter: OperatorStatusChangeFilter
  """Maximum aggregate over matching `OperatorStatusChange` objects."""
  max: OperatorStatusChangeMaxAggregateFilter
  """Minimum aggregate over matching `OperatorStatusChange` objects."""
  min: OperatorStatusChangeMinAggregateFilter
  """
  Population standard deviation aggregate over matching `OperatorStatusChange` objects.
  """
  stddevPopulation: OperatorStatusChangeStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `OperatorStatusChange` objects.
  """
  stddevSample: OperatorStatusChangeStddevSampleAggregateFilter
  """Sum aggregate over matching `OperatorStatusChange` objects."""
  sum: OperatorStatusChangeSumAggregateFilter
  """
  Population variance aggregate over matching `OperatorStatusChange` objects.
  """
  variancePopulation: OperatorStatusChangeVariancePopulationAggregateFilter
  """
  Sample variance aggregate over matching `OperatorStatusChange` objects.
  """
  varianceSample: OperatorStatusChangeVarianceSampleAggregateFilter
}

input OperatorStatusChangeAverageAggregateFilter {
  blockNumber: BigFloatFilter
}

type OperatorStatusChangeAverageAggregates {
  """Mean average of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input OperatorStatusChangeDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  blockNumber: BigIntFilter
  id: BigIntFilter
  operatorId: BigIntFilter
  status: BigIntFilter
}

type OperatorStatusChangeDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of blockNumber across the matching connection"""
  blockNumber: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
  """Distinct count of status across the matching connection"""
  status: BigInt
}

"""
A filter to be used against `OperatorStatusChange` object types. All fields are combined with a logical ‘and.’
"""
input OperatorStatusChangeFilter {
  """Checks for all expressions in this list."""
  and: [OperatorStatusChangeFilter!]
  """Filter by the object’s `blockNumber` field."""
  blockNumber: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: OperatorStatusChangeFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [OperatorStatusChangeFilter!]
  """Filter by the object’s `status` field."""
  status: OperatorStatusFilter
}

input OperatorStatusChangeMaxAggregateFilter {
  blockNumber: IntFilter
}

type OperatorStatusChangeMaxAggregates {
  """Maximum of blockNumber across the matching connection"""
  blockNumber: Int
}

input OperatorStatusChangeMinAggregateFilter {
  blockNumber: IntFilter
}

type OperatorStatusChangeMinAggregates {
  """Minimum of blockNumber across the matching connection"""
  blockNumber: Int
}

input OperatorStatusChangeStddevPopulationAggregateFilter {
  blockNumber: BigFloatFilter
}

type OperatorStatusChangeStddevPopulationAggregates {
  """
  Population standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input OperatorStatusChangeStddevSampleAggregateFilter {
  blockNumber: BigFloatFilter
}

type OperatorStatusChangeStddevSampleAggregates {
  """
  Sample standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
}

input OperatorStatusChangeSumAggregateFilter {
  blockNumber: BigIntFilter
}

type OperatorStatusChangeSumAggregates {
  """Sum of blockNumber across the matching connection"""
  blockNumber: BigInt!
}

input OperatorStatusChangeVariancePopulationAggregateFilter {
  blockNumber: BigFloatFilter
}

type OperatorStatusChangeVariancePopulationAggregates {
  """Population variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

input OperatorStatusChangeVarianceSampleAggregateFilter {
  blockNumber: BigFloatFilter
}

type OperatorStatusChangeVarianceSampleAggregates {
  """Sample variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
}

"""A connection to a list of `OperatorStatusChange` values."""
type OperatorStatusChangesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorStatusChangeAggregates
  """
  A list of edges which contains the `OperatorStatusChange` and cursor to aid in pagination.
  """
  edges: [OperatorStatusChangesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `OperatorStatusChange` for these aggregates.
    """
    groupBy: [OperatorStatusChangesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorStatusChangesHavingInput
  ): [OperatorStatusChangeAggregates!]
  """A list of `OperatorStatusChange` objects."""
  nodes: [OperatorStatusChange]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `OperatorStatusChange` you could get from the connection.
  """
  totalCount: Int!
}

"""A `OperatorStatusChange` edge in the connection."""
type OperatorStatusChangesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `OperatorStatusChange` at the end of the edge."""
  node: OperatorStatusChange
}

"""
Grouping methods for `OperatorStatusChange` for usage during aggregation.
"""
enum OperatorStatusChangesGroupBy {
  BLOCK_NUMBER
  ID
  OPERATOR_ID
  STATUS
}

input OperatorStatusChangesHavingAverageInput {
  blockNumber: HavingIntFilter
}

input OperatorStatusChangesHavingDistinctCountInput {
  blockNumber: HavingIntFilter
}

"""Conditions for `OperatorStatusChange` aggregates."""
input OperatorStatusChangesHavingInput {
  AND: [OperatorStatusChangesHavingInput!]
  OR: [OperatorStatusChangesHavingInput!]
  average: OperatorStatusChangesHavingAverageInput
  distinctCount: OperatorStatusChangesHavingDistinctCountInput
  max: OperatorStatusChangesHavingMaxInput
  min: OperatorStatusChangesHavingMinInput
  stddevPopulation: OperatorStatusChangesHavingStddevPopulationInput
  stddevSample: OperatorStatusChangesHavingStddevSampleInput
  sum: OperatorStatusChangesHavingSumInput
  variancePopulation: OperatorStatusChangesHavingVariancePopulationInput
  varianceSample: OperatorStatusChangesHavingVarianceSampleInput
}

input OperatorStatusChangesHavingMaxInput {
  blockNumber: HavingIntFilter
}

input OperatorStatusChangesHavingMinInput {
  blockNumber: HavingIntFilter
}

input OperatorStatusChangesHavingStddevPopulationInput {
  blockNumber: HavingIntFilter
}

input OperatorStatusChangesHavingStddevSampleInput {
  blockNumber: HavingIntFilter
}

input OperatorStatusChangesHavingSumInput {
  blockNumber: HavingIntFilter
}

input OperatorStatusChangesHavingVariancePopulationInput {
  blockNumber: HavingIntFilter
}

input OperatorStatusChangesHavingVarianceSampleInput {
  blockNumber: HavingIntFilter
}

"""Methods to use when ordering `OperatorStatusChange`."""
enum OperatorStatusChangesOrderBy {
  BLOCK_NUMBER_ASC
  BLOCK_NUMBER_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  STATUS_ASC
  STATUS_DESC
}

"""
A filter to be used against OperatorStatus fields. All fields are combined with a logical ‘and.’
"""
input OperatorStatusFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: OperatorStatus
  """Equal to the specified value."""
  equalTo: OperatorStatus
  """Greater than the specified value."""
  greaterThan: OperatorStatus
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: OperatorStatus
  """Included in the specified list."""
  in: [OperatorStatus!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: OperatorStatus
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: OperatorStatus
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: OperatorStatus
  """Not equal to the specified value."""
  notEqualTo: OperatorStatus
  """Not included in the specified list."""
  notIn: [OperatorStatus!]
}

input OperatorStddevPopulationAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: BigFloatFilter
  totalServiceRequests: BigFloatFilter
  totalServices: BigFloatFilter
}

type OperatorStddevPopulationAggregates {
  """
  Population standard deviation of currentStake across the matching connection
  """
  currentStake: BigFloat
  """
  Population standard deviation of joinedAt across the matching connection
  """
  joinedAt: BigFloat
  """
  Population standard deviation of lastUpdateAt across the matching connection
  """
  lastUpdateAt: BigFloat
  """
  Population standard deviation of scheduledUnstakeAmount across the matching connection
  """
  scheduledUnstakeAmount: BigFloat
  """
  Population standard deviation of totalBlueprints across the matching connection
  """
  totalBlueprints: BigFloat
  """
  Population standard deviation of totalServiceRequests across the matching connection
  """
  totalServiceRequests: BigFloat
  """
  Population standard deviation of totalServices across the matching connection
  """
  totalServices: BigFloat
}

input OperatorStddevSampleAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: BigFloatFilter
  totalServiceRequests: BigFloatFilter
  totalServices: BigFloatFilter
}

type OperatorStddevSampleAggregates {
  """
  Sample standard deviation of currentStake across the matching connection
  """
  currentStake: BigFloat
  """Sample standard deviation of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """
  Sample standard deviation of lastUpdateAt across the matching connection
  """
  lastUpdateAt: BigFloat
  """
  Sample standard deviation of scheduledUnstakeAmount across the matching connection
  """
  scheduledUnstakeAmount: BigFloat
  """
  Sample standard deviation of totalBlueprints across the matching connection
  """
  totalBlueprints: BigFloat
  """
  Sample standard deviation of totalServiceRequests across the matching connection
  """
  totalServiceRequests: BigFloat
  """
  Sample standard deviation of totalServices across the matching connection
  """
  totalServices: BigFloat
}

input OperatorSumAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: BigIntFilter
  lastUpdateAt: BigIntFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: BigIntFilter
  totalServiceRequests: BigIntFilter
  totalServices: BigIntFilter
}

type OperatorSumAggregates {
  """Sum of currentStake across the matching connection"""
  currentStake: BigFloat!
  """Sum of joinedAt across the matching connection"""
  joinedAt: BigInt!
  """Sum of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigInt!
  """Sum of scheduledUnstakeAmount across the matching connection"""
  scheduledUnstakeAmount: BigFloat!
  """Sum of totalBlueprints across the matching connection"""
  totalBlueprints: BigInt!
  """Sum of totalServiceRequests across the matching connection"""
  totalServiceRequests: BigInt!
  """Sum of totalServices across the matching connection"""
  totalServices: BigInt!
}

"""
A filter to be used against many `BlueprintOperator` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyBlueprintOperatorFilter {
  """
  Aggregates across related `BlueprintOperator` match the filter criteria.
  """
  aggregates: BlueprintOperatorAggregatesFilter
  """
  Every related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: BlueprintOperatorFilter
  """
  No related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: BlueprintOperatorFilter
  """
  Some related `BlueprintOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: BlueprintOperatorFilter
}

"""
A filter to be used against many `Delegation` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyDelegationFilter {
  """Aggregates across related `Delegation` match the filter criteria."""
  aggregates: DelegationAggregatesFilter
  """
  Every related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: DelegationFilter
  """
  No related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: DelegationFilter
  """
  Some related `Delegation` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: DelegationFilter
}

"""
A filter to be used against many `JobResult` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyJobResultFilter {
  """Aggregates across related `JobResult` match the filter criteria."""
  aggregates: JobResultAggregatesFilter
  """
  Every related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: JobResultFilter
  """
  No related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: JobResultFilter
  """
  Some related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: JobResultFilter
}

"""
A filter to be used against many `OperatorBondChange` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyOperatorBondChangeFilter {
  """
  Aggregates across related `OperatorBondChange` match the filter criteria.
  """
  aggregates: OperatorBondChangeAggregatesFilter
  """
  Every related `OperatorBondChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: OperatorBondChangeFilter
  """
  No related `OperatorBondChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: OperatorBondChangeFilter
  """
  Some related `OperatorBondChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: OperatorBondChangeFilter
}

"""
A filter to be used against many `OperatorStatusChange` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyOperatorStatusChangeFilter {
  """
  Aggregates across related `OperatorStatusChange` match the filter criteria.
  """
  aggregates: OperatorStatusChangeAggregatesFilter
  """
  Every related `OperatorStatusChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: OperatorStatusChangeFilter
  """
  No related `OperatorStatusChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: OperatorStatusChangeFilter
  """
  Some related `OperatorStatusChange` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: OperatorStatusChangeFilter
}

"""
A filter to be used against many `ServiceOperator` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyServiceOperatorFilter {
  """Aggregates across related `ServiceOperator` match the filter criteria."""
  aggregates: ServiceOperatorAggregatesFilter
  """
  Every related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceOperatorFilter
  """
  No related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceOperatorFilter
  """
  Some related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceOperatorFilter
}

"""
A filter to be used against many `ServiceRequestOperator` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyServiceRequestOperatorFilter {
  """
  Aggregates across related `ServiceRequestOperator` match the filter criteria.
  """
  aggregates: ServiceRequestOperatorAggregatesFilter
  """
  Every related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceRequestOperatorFilter
  """
  No related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceRequestOperatorFilter
  """
  Some related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceRequestOperatorFilter
}

"""
A filter to be used against many `UnstakeRequest` object types. All fields are combined with a logical ‘and.’
"""
input OperatorToManyUnstakeRequestFilter {
  """Aggregates across related `UnstakeRequest` match the filter criteria."""
  aggregates: UnstakeRequestAggregatesFilter
  """
  Every related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: UnstakeRequestFilter
  """
  No related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: UnstakeRequestFilter
  """
  Some related `UnstakeRequest` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: UnstakeRequestFilter
}

input OperatorVariancePopulationAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: BigFloatFilter
  totalServiceRequests: BigFloatFilter
  totalServices: BigFloatFilter
}

type OperatorVariancePopulationAggregates {
  """Population variance of currentStake across the matching connection"""
  currentStake: BigFloat
  """Population variance of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """Population variance of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
  """
  Population variance of scheduledUnstakeAmount across the matching connection
  """
  scheduledUnstakeAmount: BigFloat
  """Population variance of totalBlueprints across the matching connection"""
  totalBlueprints: BigFloat
  """
  Population variance of totalServiceRequests across the matching connection
  """
  totalServiceRequests: BigFloat
  """Population variance of totalServices across the matching connection"""
  totalServices: BigFloat
}

input OperatorVarianceSampleAggregateFilter {
  currentStake: BigFloatFilter
  joinedAt: BigFloatFilter
  lastUpdateAt: BigFloatFilter
  scheduledUnstakeAmount: BigFloatFilter
  totalBlueprints: BigFloatFilter
  totalServiceRequests: BigFloatFilter
  totalServices: BigFloatFilter
}

type OperatorVarianceSampleAggregates {
  """Sample variance of currentStake across the matching connection"""
  currentStake: BigFloat
  """Sample variance of joinedAt across the matching connection"""
  joinedAt: BigFloat
  """Sample variance of lastUpdateAt across the matching connection"""
  lastUpdateAt: BigFloat
  """
  Sample variance of scheduledUnstakeAmount across the matching connection
  """
  scheduledUnstakeAmount: BigFloat
  """Sample variance of totalBlueprints across the matching connection"""
  totalBlueprints: BigFloat
  """Sample variance of totalServiceRequests across the matching connection"""
  totalServiceRequests: BigFloat
  """Sample variance of totalServices across the matching connection"""
  totalServices: BigFloat
}

"""A connection to a list of `Operator` values."""
type OperatorsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator` and cursor to aid in pagination.
  """
  edges: [OperatorsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""A `Operator` edge in the connection."""
type OperatorsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Operator` at the end of the edge."""
  node: Operator
}

"""Grouping methods for `Operator` for usage during aggregation."""
enum OperatorsGroupBy {
  ACCOUNT_ID
  CURRENT_STAKE
  CURRENT_STATUS
  ID
  JOINED_AT
  LAST_UPDATE_AT
  SCHEDULED_UNSTAKE_AMOUNT
  TOTAL_BLUEPRINTS
  TOTAL_SERVICES
  TOTAL_SERVICE_REQUESTS
}

input OperatorsHavingAverageInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

input OperatorsHavingDistinctCountInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

"""Conditions for `Operator` aggregates."""
input OperatorsHavingInput {
  AND: [OperatorsHavingInput!]
  OR: [OperatorsHavingInput!]
  average: OperatorsHavingAverageInput
  distinctCount: OperatorsHavingDistinctCountInput
  max: OperatorsHavingMaxInput
  min: OperatorsHavingMinInput
  stddevPopulation: OperatorsHavingStddevPopulationInput
  stddevSample: OperatorsHavingStddevSampleInput
  sum: OperatorsHavingSumInput
  variancePopulation: OperatorsHavingVariancePopulationInput
  varianceSample: OperatorsHavingVarianceSampleInput
}

input OperatorsHavingMaxInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

input OperatorsHavingMinInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

input OperatorsHavingStddevPopulationInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

input OperatorsHavingStddevSampleInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

input OperatorsHavingSumInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

input OperatorsHavingVariancePopulationInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

input OperatorsHavingVarianceSampleInput {
  currentStake: HavingBigfloatFilter
  joinedAt: HavingIntFilter
  lastUpdateAt: HavingIntFilter
  scheduledUnstakeAmount: HavingBigfloatFilter
  totalBlueprints: HavingIntFilter
  totalServiceRequests: HavingIntFilter
  totalServices: HavingIntFilter
}

"""Methods to use when ordering `Operator`."""
enum OperatorsOrderBy {
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__ID_ASC
  ACCOUNT_BY_ACCOUNT_ID__ID_DESC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC
  ACCOUNT_ID_ASC
  ACCOUNT_ID_DESC
  BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_AVERAGE_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_AVERAGE_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_AVERAGE_ID_ASC
  BLUEPRINT_OPERATORS_AVERAGE_ID_DESC
  BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_AVERAGE_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_AVERAGE_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_AVERAGE_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_AVERAGE_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_BY_OPERATOR_ID__COUNT_ASC
  BLUEPRINT_OPERATORS_BY_OPERATOR_ID__COUNT_DESC
  BLUEPRINT_OPERATORS_COUNT_ASC
  BLUEPRINT_OPERATORS_COUNT_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_ID_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_DISTINCT_COUNT_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_MAX_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_MAX_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_MAX_ID_ASC
  BLUEPRINT_OPERATORS_MAX_ID_DESC
  BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_MAX_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_MAX_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_MAX_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_MAX_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_MAX_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_MIN_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_MIN_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_MIN_ID_ASC
  BLUEPRINT_OPERATORS_MIN_ID_DESC
  BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_MIN_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_MIN_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_MIN_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_MIN_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_MIN_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_POPULATION_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_STDDEV_SAMPLE_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_SUM_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_SUM_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_SUM_ID_ASC
  BLUEPRINT_OPERATORS_SUM_ID_DESC
  BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_SUM_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_SUM_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_SUM_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_SUM_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_SUM_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_POPULATION_UPDATED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_IS_ACTIVE_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_REGISTERED_AT_DESC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_ASC
  BLUEPRINT_OPERATORS_VARIANCE_SAMPLE_UPDATED_AT_DESC
  BOND_CHANGES_AVERAGE_ACTION_ASC
  BOND_CHANGES_AVERAGE_ACTION_DESC
  BOND_CHANGES_AVERAGE_AMOUNT_ASC
  BOND_CHANGES_AVERAGE_AMOUNT_DESC
  BOND_CHANGES_AVERAGE_BLOCK_NUMBER_ASC
  BOND_CHANGES_AVERAGE_BLOCK_NUMBER_DESC
  BOND_CHANGES_AVERAGE_BLOCK_RANGE_ASC
  BOND_CHANGES_AVERAGE_BLOCK_RANGE_DESC
  BOND_CHANGES_AVERAGE_ID_ASC
  BOND_CHANGES_AVERAGE_ID_DESC
  BOND_CHANGES_AVERAGE_OPERATOR_ID_ASC
  BOND_CHANGES_AVERAGE_OPERATOR_ID_DESC
  BOND_CHANGES_COUNT_ASC
  BOND_CHANGES_COUNT_DESC
  BOND_CHANGES_DISTINCT_COUNT_ACTION_ASC
  BOND_CHANGES_DISTINCT_COUNT_ACTION_DESC
  BOND_CHANGES_DISTINCT_COUNT_AMOUNT_ASC
  BOND_CHANGES_DISTINCT_COUNT_AMOUNT_DESC
  BOND_CHANGES_DISTINCT_COUNT_BLOCK_NUMBER_ASC
  BOND_CHANGES_DISTINCT_COUNT_BLOCK_NUMBER_DESC
  BOND_CHANGES_DISTINCT_COUNT_BLOCK_RANGE_ASC
  BOND_CHANGES_DISTINCT_COUNT_BLOCK_RANGE_DESC
  BOND_CHANGES_DISTINCT_COUNT_ID_ASC
  BOND_CHANGES_DISTINCT_COUNT_ID_DESC
  BOND_CHANGES_DISTINCT_COUNT_OPERATOR_ID_ASC
  BOND_CHANGES_DISTINCT_COUNT_OPERATOR_ID_DESC
  BOND_CHANGES_MAX_ACTION_ASC
  BOND_CHANGES_MAX_ACTION_DESC
  BOND_CHANGES_MAX_AMOUNT_ASC
  BOND_CHANGES_MAX_AMOUNT_DESC
  BOND_CHANGES_MAX_BLOCK_NUMBER_ASC
  BOND_CHANGES_MAX_BLOCK_NUMBER_DESC
  BOND_CHANGES_MAX_BLOCK_RANGE_ASC
  BOND_CHANGES_MAX_BLOCK_RANGE_DESC
  BOND_CHANGES_MAX_ID_ASC
  BOND_CHANGES_MAX_ID_DESC
  BOND_CHANGES_MAX_OPERATOR_ID_ASC
  BOND_CHANGES_MAX_OPERATOR_ID_DESC
  BOND_CHANGES_MIN_ACTION_ASC
  BOND_CHANGES_MIN_ACTION_DESC
  BOND_CHANGES_MIN_AMOUNT_ASC
  BOND_CHANGES_MIN_AMOUNT_DESC
  BOND_CHANGES_MIN_BLOCK_NUMBER_ASC
  BOND_CHANGES_MIN_BLOCK_NUMBER_DESC
  BOND_CHANGES_MIN_BLOCK_RANGE_ASC
  BOND_CHANGES_MIN_BLOCK_RANGE_DESC
  BOND_CHANGES_MIN_ID_ASC
  BOND_CHANGES_MIN_ID_DESC
  BOND_CHANGES_MIN_OPERATOR_ID_ASC
  BOND_CHANGES_MIN_OPERATOR_ID_DESC
  BOND_CHANGES_STDDEV_POPULATION_ACTION_ASC
  BOND_CHANGES_STDDEV_POPULATION_ACTION_DESC
  BOND_CHANGES_STDDEV_POPULATION_AMOUNT_ASC
  BOND_CHANGES_STDDEV_POPULATION_AMOUNT_DESC
  BOND_CHANGES_STDDEV_POPULATION_BLOCK_NUMBER_ASC
  BOND_CHANGES_STDDEV_POPULATION_BLOCK_NUMBER_DESC
  BOND_CHANGES_STDDEV_POPULATION_BLOCK_RANGE_ASC
  BOND_CHANGES_STDDEV_POPULATION_BLOCK_RANGE_DESC
  BOND_CHANGES_STDDEV_POPULATION_ID_ASC
  BOND_CHANGES_STDDEV_POPULATION_ID_DESC
  BOND_CHANGES_STDDEV_POPULATION_OPERATOR_ID_ASC
  BOND_CHANGES_STDDEV_POPULATION_OPERATOR_ID_DESC
  BOND_CHANGES_STDDEV_SAMPLE_ACTION_ASC
  BOND_CHANGES_STDDEV_SAMPLE_ACTION_DESC
  BOND_CHANGES_STDDEV_SAMPLE_AMOUNT_ASC
  BOND_CHANGES_STDDEV_SAMPLE_AMOUNT_DESC
  BOND_CHANGES_STDDEV_SAMPLE_BLOCK_NUMBER_ASC
  BOND_CHANGES_STDDEV_SAMPLE_BLOCK_NUMBER_DESC
  BOND_CHANGES_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  BOND_CHANGES_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  BOND_CHANGES_STDDEV_SAMPLE_ID_ASC
  BOND_CHANGES_STDDEV_SAMPLE_ID_DESC
  BOND_CHANGES_STDDEV_SAMPLE_OPERATOR_ID_ASC
  BOND_CHANGES_STDDEV_SAMPLE_OPERATOR_ID_DESC
  BOND_CHANGES_SUM_ACTION_ASC
  BOND_CHANGES_SUM_ACTION_DESC
  BOND_CHANGES_SUM_AMOUNT_ASC
  BOND_CHANGES_SUM_AMOUNT_DESC
  BOND_CHANGES_SUM_BLOCK_NUMBER_ASC
  BOND_CHANGES_SUM_BLOCK_NUMBER_DESC
  BOND_CHANGES_SUM_BLOCK_RANGE_ASC
  BOND_CHANGES_SUM_BLOCK_RANGE_DESC
  BOND_CHANGES_SUM_ID_ASC
  BOND_CHANGES_SUM_ID_DESC
  BOND_CHANGES_SUM_OPERATOR_ID_ASC
  BOND_CHANGES_SUM_OPERATOR_ID_DESC
  BOND_CHANGES_VARIANCE_POPULATION_ACTION_ASC
  BOND_CHANGES_VARIANCE_POPULATION_ACTION_DESC
  BOND_CHANGES_VARIANCE_POPULATION_AMOUNT_ASC
  BOND_CHANGES_VARIANCE_POPULATION_AMOUNT_DESC
  BOND_CHANGES_VARIANCE_POPULATION_BLOCK_NUMBER_ASC
  BOND_CHANGES_VARIANCE_POPULATION_BLOCK_NUMBER_DESC
  BOND_CHANGES_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  BOND_CHANGES_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  BOND_CHANGES_VARIANCE_POPULATION_ID_ASC
  BOND_CHANGES_VARIANCE_POPULATION_ID_DESC
  BOND_CHANGES_VARIANCE_POPULATION_OPERATOR_ID_ASC
  BOND_CHANGES_VARIANCE_POPULATION_OPERATOR_ID_DESC
  BOND_CHANGES_VARIANCE_SAMPLE_ACTION_ASC
  BOND_CHANGES_VARIANCE_SAMPLE_ACTION_DESC
  BOND_CHANGES_VARIANCE_SAMPLE_AMOUNT_ASC
  BOND_CHANGES_VARIANCE_SAMPLE_AMOUNT_DESC
  BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC
  BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC
  BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  BOND_CHANGES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  BOND_CHANGES_VARIANCE_SAMPLE_ID_ASC
  BOND_CHANGES_VARIANCE_SAMPLE_ID_DESC
  BOND_CHANGES_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  BOND_CHANGES_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  CURRENT_STAKE_ASC
  CURRENT_STAKE_DESC
  CURRENT_STATUS_ASC
  CURRENT_STATUS_DESC
  DELEGATIONS_AVERAGE_ASSET_ID_ASC
  DELEGATIONS_AVERAGE_ASSET_ID_DESC
  DELEGATIONS_AVERAGE_BLOCK_RANGE_ASC
  DELEGATIONS_AVERAGE_BLOCK_RANGE_DESC
  DELEGATIONS_AVERAGE_DELEGATOR_ID_ASC
  DELEGATIONS_AVERAGE_DELEGATOR_ID_DESC
  DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_AVERAGE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_AVERAGE_ID_ASC
  DELEGATIONS_AVERAGE_ID_DESC
  DELEGATIONS_AVERAGE_OPERATOR_ID_ASC
  DELEGATIONS_AVERAGE_OPERATOR_ID_DESC
  DELEGATIONS_AVERAGE_TOTAL_AMOUNT_ASC
  DELEGATIONS_AVERAGE_TOTAL_AMOUNT_DESC
  DELEGATIONS_BY_OPERATOR_ID__COUNT_ASC
  DELEGATIONS_BY_OPERATOR_ID__COUNT_DESC
  DELEGATIONS_COUNT_ASC
  DELEGATIONS_COUNT_DESC
  DELEGATIONS_DISTINCT_COUNT_ASSET_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_ASSET_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  DELEGATIONS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_DISTINCT_COUNT_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_DISTINCT_COUNT_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_ASC
  DELEGATIONS_DISTINCT_COUNT_OPERATOR_ID_DESC
  DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_ASC
  DELEGATIONS_DISTINCT_COUNT_TOTAL_AMOUNT_DESC
  DELEGATIONS_MAX_ASSET_ID_ASC
  DELEGATIONS_MAX_ASSET_ID_DESC
  DELEGATIONS_MAX_BLOCK_RANGE_ASC
  DELEGATIONS_MAX_BLOCK_RANGE_DESC
  DELEGATIONS_MAX_DELEGATOR_ID_ASC
  DELEGATIONS_MAX_DELEGATOR_ID_DESC
  DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_MAX_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_MAX_ID_ASC
  DELEGATIONS_MAX_ID_DESC
  DELEGATIONS_MAX_OPERATOR_ID_ASC
  DELEGATIONS_MAX_OPERATOR_ID_DESC
  DELEGATIONS_MAX_TOTAL_AMOUNT_ASC
  DELEGATIONS_MAX_TOTAL_AMOUNT_DESC
  DELEGATIONS_MIN_ASSET_ID_ASC
  DELEGATIONS_MIN_ASSET_ID_DESC
  DELEGATIONS_MIN_BLOCK_RANGE_ASC
  DELEGATIONS_MIN_BLOCK_RANGE_DESC
  DELEGATIONS_MIN_DELEGATOR_ID_ASC
  DELEGATIONS_MIN_DELEGATOR_ID_DESC
  DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_MIN_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_MIN_ID_ASC
  DELEGATIONS_MIN_ID_DESC
  DELEGATIONS_MIN_OPERATOR_ID_ASC
  DELEGATIONS_MIN_OPERATOR_ID_DESC
  DELEGATIONS_MIN_TOTAL_AMOUNT_ASC
  DELEGATIONS_MIN_TOTAL_AMOUNT_DESC
  DELEGATIONS_STDDEV_POPULATION_ASSET_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_ASSET_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  DELEGATIONS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_STDDEV_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_STDDEV_POPULATION_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_ASC
  DELEGATIONS_STDDEV_POPULATION_OPERATOR_ID_DESC
  DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_ASC
  DELEGATIONS_STDDEV_POPULATION_TOTAL_AMOUNT_DESC
  DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_ASSET_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  DELEGATIONS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_STDDEV_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_STDDEV_SAMPLE_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  DELEGATIONS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_ASC
  DELEGATIONS_STDDEV_SAMPLE_TOTAL_AMOUNT_DESC
  DELEGATIONS_SUM_ASSET_ID_ASC
  DELEGATIONS_SUM_ASSET_ID_DESC
  DELEGATIONS_SUM_BLOCK_RANGE_ASC
  DELEGATIONS_SUM_BLOCK_RANGE_DESC
  DELEGATIONS_SUM_DELEGATOR_ID_ASC
  DELEGATIONS_SUM_DELEGATOR_ID_DESC
  DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_SUM_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_SUM_ID_ASC
  DELEGATIONS_SUM_ID_DESC
  DELEGATIONS_SUM_OPERATOR_ID_ASC
  DELEGATIONS_SUM_OPERATOR_ID_DESC
  DELEGATIONS_SUM_TOTAL_AMOUNT_ASC
  DELEGATIONS_SUM_TOTAL_AMOUNT_DESC
  DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_ASSET_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  DELEGATIONS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_VARIANCE_POPULATION_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_VARIANCE_POPULATION_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  DELEGATIONS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_ASC
  DELEGATIONS_VARIANCE_POPULATION_TOTAL_AMOUNT_DESC
  DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_ASSET_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  DELEGATIONS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATIONS_VARIANCE_SAMPLE_HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATIONS_VARIANCE_SAMPLE_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  DELEGATIONS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_ASC
  DELEGATIONS_VARIANCE_SAMPLE_TOTAL_AMOUNT_DESC
  ID_ASC
  ID_DESC
  JOB_RESULTS_AVERAGE_BLOCK_RANGE_ASC
  JOB_RESULTS_AVERAGE_BLOCK_RANGE_DESC
  JOB_RESULTS_AVERAGE_CREATED_AT_ASC
  JOB_RESULTS_AVERAGE_CREATED_AT_DESC
  JOB_RESULTS_AVERAGE_ID_ASC
  JOB_RESULTS_AVERAGE_ID_DESC
  JOB_RESULTS_AVERAGE_JOB_CALL_ID_ASC
  JOB_RESULTS_AVERAGE_JOB_CALL_ID_DESC
  JOB_RESULTS_AVERAGE_OPERATOR_ID_ASC
  JOB_RESULTS_AVERAGE_OPERATOR_ID_DESC
  JOB_RESULTS_AVERAGE_SERVICE_ID_ASC
  JOB_RESULTS_AVERAGE_SERVICE_ID_DESC
  JOB_RESULTS_BY_OPERATOR_ID__COUNT_ASC
  JOB_RESULTS_BY_OPERATOR_ID__COUNT_DESC
  JOB_RESULTS_COUNT_ASC
  JOB_RESULTS_COUNT_DESC
  JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_ASC
  JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_DESC
  JOB_RESULTS_DISTINCT_COUNT_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_DESC
  JOB_RESULTS_MAX_BLOCK_RANGE_ASC
  JOB_RESULTS_MAX_BLOCK_RANGE_DESC
  JOB_RESULTS_MAX_CREATED_AT_ASC
  JOB_RESULTS_MAX_CREATED_AT_DESC
  JOB_RESULTS_MAX_ID_ASC
  JOB_RESULTS_MAX_ID_DESC
  JOB_RESULTS_MAX_JOB_CALL_ID_ASC
  JOB_RESULTS_MAX_JOB_CALL_ID_DESC
  JOB_RESULTS_MAX_OPERATOR_ID_ASC
  JOB_RESULTS_MAX_OPERATOR_ID_DESC
  JOB_RESULTS_MAX_SERVICE_ID_ASC
  JOB_RESULTS_MAX_SERVICE_ID_DESC
  JOB_RESULTS_MIN_BLOCK_RANGE_ASC
  JOB_RESULTS_MIN_BLOCK_RANGE_DESC
  JOB_RESULTS_MIN_CREATED_AT_ASC
  JOB_RESULTS_MIN_CREATED_AT_DESC
  JOB_RESULTS_MIN_ID_ASC
  JOB_RESULTS_MIN_ID_DESC
  JOB_RESULTS_MIN_JOB_CALL_ID_ASC
  JOB_RESULTS_MIN_JOB_CALL_ID_DESC
  JOB_RESULTS_MIN_OPERATOR_ID_ASC
  JOB_RESULTS_MIN_OPERATOR_ID_DESC
  JOB_RESULTS_MIN_SERVICE_ID_ASC
  JOB_RESULTS_MIN_SERVICE_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_ASC
  JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_DESC
  JOB_RESULTS_STDDEV_POPULATION_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_ASC
  JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_DESC
  JOB_RESULTS_STDDEV_SAMPLE_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_DESC
  JOB_RESULTS_SUM_BLOCK_RANGE_ASC
  JOB_RESULTS_SUM_BLOCK_RANGE_DESC
  JOB_RESULTS_SUM_CREATED_AT_ASC
  JOB_RESULTS_SUM_CREATED_AT_DESC
  JOB_RESULTS_SUM_ID_ASC
  JOB_RESULTS_SUM_ID_DESC
  JOB_RESULTS_SUM_JOB_CALL_ID_ASC
  JOB_RESULTS_SUM_JOB_CALL_ID_DESC
  JOB_RESULTS_SUM_OPERATOR_ID_ASC
  JOB_RESULTS_SUM_OPERATOR_ID_DESC
  JOB_RESULTS_SUM_SERVICE_ID_ASC
  JOB_RESULTS_SUM_SERVICE_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_ASC
  JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_DESC
  JOB_RESULTS_VARIANCE_POPULATION_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_DESC
  JOINED_AT_ASC
  JOINED_AT_DESC
  LAST_UPDATE_AT_ASC
  LAST_UPDATE_AT_DESC
  NATURAL
  OPERATOR_BOND_CHANGES_BY_OPERATOR_ID__COUNT_ASC
  OPERATOR_BOND_CHANGES_BY_OPERATOR_ID__COUNT_DESC
  OPERATOR_STATUS_CHANGES_BY_OPERATOR_ID__COUNT_ASC
  OPERATOR_STATUS_CHANGES_BY_OPERATOR_ID__COUNT_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SCHEDULED_UNSTAKE_AMOUNT_ASC
  SCHEDULED_UNSTAKE_AMOUNT_DESC
  SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_AVERAGE_CREATED_AT_ASC
  SERVICE_OPERATORS_AVERAGE_CREATED_AT_DESC
  SERVICE_OPERATORS_AVERAGE_ID_ASC
  SERVICE_OPERATORS_AVERAGE_ID_DESC
  SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_ASC
  SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_DESC
  SERVICE_OPERATORS_AVERAGE_SERVICE_ID_ASC
  SERVICE_OPERATORS_AVERAGE_SERVICE_ID_DESC
  SERVICE_OPERATORS_BY_OPERATOR_ID__COUNT_ASC
  SERVICE_OPERATORS_BY_OPERATOR_ID__COUNT_DESC
  SERVICE_OPERATORS_COUNT_ASC
  SERVICE_OPERATORS_COUNT_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_ID_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_ID_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_DESC
  SERVICE_OPERATORS_MAX_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_MAX_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_MAX_CREATED_AT_ASC
  SERVICE_OPERATORS_MAX_CREATED_AT_DESC
  SERVICE_OPERATORS_MAX_ID_ASC
  SERVICE_OPERATORS_MAX_ID_DESC
  SERVICE_OPERATORS_MAX_OPERATOR_ID_ASC
  SERVICE_OPERATORS_MAX_OPERATOR_ID_DESC
  SERVICE_OPERATORS_MAX_SERVICE_ID_ASC
  SERVICE_OPERATORS_MAX_SERVICE_ID_DESC
  SERVICE_OPERATORS_MIN_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_MIN_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_MIN_CREATED_AT_ASC
  SERVICE_OPERATORS_MIN_CREATED_AT_DESC
  SERVICE_OPERATORS_MIN_ID_ASC
  SERVICE_OPERATORS_MIN_ID_DESC
  SERVICE_OPERATORS_MIN_OPERATOR_ID_ASC
  SERVICE_OPERATORS_MIN_OPERATOR_ID_DESC
  SERVICE_OPERATORS_MIN_SERVICE_ID_ASC
  SERVICE_OPERATORS_MIN_SERVICE_ID_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_ID_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_ID_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_ID_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_ID_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_DESC
  SERVICE_OPERATORS_SUM_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_SUM_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_SUM_CREATED_AT_ASC
  SERVICE_OPERATORS_SUM_CREATED_AT_DESC
  SERVICE_OPERATORS_SUM_ID_ASC
  SERVICE_OPERATORS_SUM_ID_DESC
  SERVICE_OPERATORS_SUM_OPERATOR_ID_ASC
  SERVICE_OPERATORS_SUM_OPERATOR_ID_DESC
  SERVICE_OPERATORS_SUM_SERVICE_ID_ASC
  SERVICE_OPERATORS_SUM_SERVICE_ID_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_ID_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_ID_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_ID_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_ID_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_BY_OPERATOR_ID__COUNT_ASC
  SERVICE_REQUEST_OPERATORS_BY_OPERATOR_ID__COUNT_DESC
  SERVICE_REQUEST_OPERATORS_COUNT_ASC
  SERVICE_REQUEST_OPERATORS_COUNT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MAX_ID_ASC
  SERVICE_REQUEST_OPERATORS_MAX_ID_DESC
  SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MIN_ID_ASC
  SERVICE_REQUEST_OPERATORS_MIN_ID_DESC
  SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_SUM_ID_ASC
  SERVICE_REQUEST_OPERATORS_SUM_ID_DESC
  SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC
  STATUS_HISTORY_AVERAGE_BLOCK_NUMBER_ASC
  STATUS_HISTORY_AVERAGE_BLOCK_NUMBER_DESC
  STATUS_HISTORY_AVERAGE_BLOCK_RANGE_ASC
  STATUS_HISTORY_AVERAGE_BLOCK_RANGE_DESC
  STATUS_HISTORY_AVERAGE_ID_ASC
  STATUS_HISTORY_AVERAGE_ID_DESC
  STATUS_HISTORY_AVERAGE_OPERATOR_ID_ASC
  STATUS_HISTORY_AVERAGE_OPERATOR_ID_DESC
  STATUS_HISTORY_AVERAGE_STATUS_ASC
  STATUS_HISTORY_AVERAGE_STATUS_DESC
  STATUS_HISTORY_COUNT_ASC
  STATUS_HISTORY_COUNT_DESC
  STATUS_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_ASC
  STATUS_HISTORY_DISTINCT_COUNT_BLOCK_NUMBER_DESC
  STATUS_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_ASC
  STATUS_HISTORY_DISTINCT_COUNT_BLOCK_RANGE_DESC
  STATUS_HISTORY_DISTINCT_COUNT_ID_ASC
  STATUS_HISTORY_DISTINCT_COUNT_ID_DESC
  STATUS_HISTORY_DISTINCT_COUNT_OPERATOR_ID_ASC
  STATUS_HISTORY_DISTINCT_COUNT_OPERATOR_ID_DESC
  STATUS_HISTORY_DISTINCT_COUNT_STATUS_ASC
  STATUS_HISTORY_DISTINCT_COUNT_STATUS_DESC
  STATUS_HISTORY_MAX_BLOCK_NUMBER_ASC
  STATUS_HISTORY_MAX_BLOCK_NUMBER_DESC
  STATUS_HISTORY_MAX_BLOCK_RANGE_ASC
  STATUS_HISTORY_MAX_BLOCK_RANGE_DESC
  STATUS_HISTORY_MAX_ID_ASC
  STATUS_HISTORY_MAX_ID_DESC
  STATUS_HISTORY_MAX_OPERATOR_ID_ASC
  STATUS_HISTORY_MAX_OPERATOR_ID_DESC
  STATUS_HISTORY_MAX_STATUS_ASC
  STATUS_HISTORY_MAX_STATUS_DESC
  STATUS_HISTORY_MIN_BLOCK_NUMBER_ASC
  STATUS_HISTORY_MIN_BLOCK_NUMBER_DESC
  STATUS_HISTORY_MIN_BLOCK_RANGE_ASC
  STATUS_HISTORY_MIN_BLOCK_RANGE_DESC
  STATUS_HISTORY_MIN_ID_ASC
  STATUS_HISTORY_MIN_ID_DESC
  STATUS_HISTORY_MIN_OPERATOR_ID_ASC
  STATUS_HISTORY_MIN_OPERATOR_ID_DESC
  STATUS_HISTORY_MIN_STATUS_ASC
  STATUS_HISTORY_MIN_STATUS_DESC
  STATUS_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_ASC
  STATUS_HISTORY_STDDEV_POPULATION_BLOCK_NUMBER_DESC
  STATUS_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_ASC
  STATUS_HISTORY_STDDEV_POPULATION_BLOCK_RANGE_DESC
  STATUS_HISTORY_STDDEV_POPULATION_ID_ASC
  STATUS_HISTORY_STDDEV_POPULATION_ID_DESC
  STATUS_HISTORY_STDDEV_POPULATION_OPERATOR_ID_ASC
  STATUS_HISTORY_STDDEV_POPULATION_OPERATOR_ID_DESC
  STATUS_HISTORY_STDDEV_POPULATION_STATUS_ASC
  STATUS_HISTORY_STDDEV_POPULATION_STATUS_DESC
  STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_ASC
  STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_NUMBER_DESC
  STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  STATUS_HISTORY_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  STATUS_HISTORY_STDDEV_SAMPLE_ID_ASC
  STATUS_HISTORY_STDDEV_SAMPLE_ID_DESC
  STATUS_HISTORY_STDDEV_SAMPLE_OPERATOR_ID_ASC
  STATUS_HISTORY_STDDEV_SAMPLE_OPERATOR_ID_DESC
  STATUS_HISTORY_STDDEV_SAMPLE_STATUS_ASC
  STATUS_HISTORY_STDDEV_SAMPLE_STATUS_DESC
  STATUS_HISTORY_SUM_BLOCK_NUMBER_ASC
  STATUS_HISTORY_SUM_BLOCK_NUMBER_DESC
  STATUS_HISTORY_SUM_BLOCK_RANGE_ASC
  STATUS_HISTORY_SUM_BLOCK_RANGE_DESC
  STATUS_HISTORY_SUM_ID_ASC
  STATUS_HISTORY_SUM_ID_DESC
  STATUS_HISTORY_SUM_OPERATOR_ID_ASC
  STATUS_HISTORY_SUM_OPERATOR_ID_DESC
  STATUS_HISTORY_SUM_STATUS_ASC
  STATUS_HISTORY_SUM_STATUS_DESC
  STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_ASC
  STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_NUMBER_DESC
  STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  STATUS_HISTORY_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  STATUS_HISTORY_VARIANCE_POPULATION_ID_ASC
  STATUS_HISTORY_VARIANCE_POPULATION_ID_DESC
  STATUS_HISTORY_VARIANCE_POPULATION_OPERATOR_ID_ASC
  STATUS_HISTORY_VARIANCE_POPULATION_OPERATOR_ID_DESC
  STATUS_HISTORY_VARIANCE_POPULATION_STATUS_ASC
  STATUS_HISTORY_VARIANCE_POPULATION_STATUS_DESC
  STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC
  STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC
  STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  STATUS_HISTORY_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  STATUS_HISTORY_VARIANCE_SAMPLE_ID_ASC
  STATUS_HISTORY_VARIANCE_SAMPLE_ID_DESC
  STATUS_HISTORY_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  STATUS_HISTORY_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  STATUS_HISTORY_VARIANCE_SAMPLE_STATUS_ASC
  STATUS_HISTORY_VARIANCE_SAMPLE_STATUS_DESC
  TOTAL_BLUEPRINTS_ASC
  TOTAL_BLUEPRINTS_DESC
  TOTAL_SERVICES_ASC
  TOTAL_SERVICES_DESC
  TOTAL_SERVICE_REQUESTS_ASC
  TOTAL_SERVICE_REQUESTS_DESC
  UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_AVERAGE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_AVERAGE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_AVERAGE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_AVERAGE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_AVERAGE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_AVERAGE_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_BY_OPERATOR_ID__COUNT_ASC
  UNSTAKE_REQUESTS_BY_OPERATOR_ID__COUNT_DESC
  UNSTAKE_REQUESTS_COUNT_ASC
  UNSTAKE_REQUESTS_COUNT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ASSET_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CREATED_AT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_DISTINCT_COUNT_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_MAX_ASSET_ID_ASC
  UNSTAKE_REQUESTS_MAX_ASSET_ID_DESC
  UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_MAX_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_MAX_CREATED_AT_ASC
  UNSTAKE_REQUESTS_MAX_CREATED_AT_DESC
  UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_MAX_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_MAX_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_MAX_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_MAX_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_MAX_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_MAX_ID_ASC
  UNSTAKE_REQUESTS_MAX_ID_DESC
  UNSTAKE_REQUESTS_MAX_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_MAX_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_MAX_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_MAX_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_MAX_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_MIN_ASSET_ID_ASC
  UNSTAKE_REQUESTS_MIN_ASSET_ID_DESC
  UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_MIN_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_MIN_CREATED_AT_ASC
  UNSTAKE_REQUESTS_MIN_CREATED_AT_DESC
  UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_MIN_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_MIN_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_MIN_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_MIN_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_MIN_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_MIN_ID_ASC
  UNSTAKE_REQUESTS_MIN_ID_DESC
  UNSTAKE_REQUESTS_MIN_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_MIN_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_MIN_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_MIN_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_MIN_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ASSET_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CREATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_POPULATION_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_STDDEV_SAMPLE_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_SUM_ASSET_ID_ASC
  UNSTAKE_REQUESTS_SUM_ASSET_ID_DESC
  UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_SUM_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_SUM_CREATED_AT_ASC
  UNSTAKE_REQUESTS_SUM_CREATED_AT_DESC
  UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_SUM_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_SUM_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_SUM_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_SUM_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_SUM_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_SUM_ID_ASC
  UNSTAKE_REQUESTS_SUM_ID_DESC
  UNSTAKE_REQUESTS_SUM_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_SUM_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_SUM_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_SUM_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_SUM_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ASSET_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CREATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_POPULATION_UPDATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ASSET_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_AMOUNT_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_CURRENT_STATUS_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATION_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_DELEGATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_REQUESTED_ROUND_DESC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_ASC
  UNSTAKE_REQUESTS_VARIANCE_SAMPLE_UPDATED_AT_DESC
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
}

type PointsAccrualRate implements Node {
  """Reads a single `Account` that is related to this `PointsAccrualRate`."""
  account: Account
  """The account this rate belongs to"""
  accountId: String!
  """Current amount"""
  amount: BigFloat!
  """Unique identifier for the rate"""
  id: String!
  """Last time this rate was updated"""
  lastUpdateBlock: Int!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Points earned per hour"""
  ratePerHour: Float!
  """The source of points"""
  source: PointsSource!
  """When this rate started"""
  startBlock: Int!
}

type PointsAccrualRateAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: PointsAccrualRateAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: PointsAccrualRateDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: PointsAccrualRateMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: PointsAccrualRateMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: PointsAccrualRateStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: PointsAccrualRateStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: PointsAccrualRateSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: PointsAccrualRateVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: PointsAccrualRateVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `PointsAccrualRate` object types.
"""
input PointsAccrualRateAggregatesFilter {
  """Mean average aggregate over matching `PointsAccrualRate` objects."""
  average: PointsAccrualRateAverageAggregateFilter
  """Distinct count aggregate over matching `PointsAccrualRate` objects."""
  distinctCount: PointsAccrualRateDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `PointsAccrualRate` object to be included within the aggregate.
  """
  filter: PointsAccrualRateFilter
  """Maximum aggregate over matching `PointsAccrualRate` objects."""
  max: PointsAccrualRateMaxAggregateFilter
  """Minimum aggregate over matching `PointsAccrualRate` objects."""
  min: PointsAccrualRateMinAggregateFilter
  """
  Population standard deviation aggregate over matching `PointsAccrualRate` objects.
  """
  stddevPopulation: PointsAccrualRateStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `PointsAccrualRate` objects.
  """
  stddevSample: PointsAccrualRateStddevSampleAggregateFilter
  """Sum aggregate over matching `PointsAccrualRate` objects."""
  sum: PointsAccrualRateSumAggregateFilter
  """
  Population variance aggregate over matching `PointsAccrualRate` objects.
  """
  variancePopulation: PointsAccrualRateVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `PointsAccrualRate` objects."""
  varianceSample: PointsAccrualRateVarianceSampleAggregateFilter
}

input PointsAccrualRateAverageAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: BigFloatFilter
  ratePerHour: FloatFilter
  startBlock: BigFloatFilter
}

type PointsAccrualRateAverageAggregates {
  """Mean average of amount across the matching connection"""
  amount: BigFloat
  """Mean average of lastUpdateBlock across the matching connection"""
  lastUpdateBlock: BigFloat
  """Mean average of ratePerHour across the matching connection"""
  ratePerHour: Float
  """Mean average of startBlock across the matching connection"""
  startBlock: BigFloat
}

input PointsAccrualRateDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  accountId: BigIntFilter
  amount: BigIntFilter
  id: BigIntFilter
  lastUpdateBlock: BigIntFilter
  ratePerHour: BigIntFilter
  source: BigIntFilter
  startBlock: BigIntFilter
}

type PointsAccrualRateDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of accountId across the matching connection"""
  accountId: BigInt
  """Distinct count of amount across the matching connection"""
  amount: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of lastUpdateBlock across the matching connection"""
  lastUpdateBlock: BigInt
  """Distinct count of ratePerHour across the matching connection"""
  ratePerHour: BigInt
  """Distinct count of source across the matching connection"""
  source: BigInt
  """Distinct count of startBlock across the matching connection"""
  startBlock: BigInt
}

"""
A filter to be used against `PointsAccrualRate` object types. All fields are combined with a logical ‘and.’
"""
input PointsAccrualRateFilter {
  """Filter by the object’s `account` relation."""
  account: AccountFilter
  """Filter by the object’s `accountId` field."""
  accountId: StringFilter
  """Filter by the object’s `amount` field."""
  amount: BigFloatFilter
  """Checks for all expressions in this list."""
  and: [PointsAccrualRateFilter!]
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `lastUpdateBlock` field."""
  lastUpdateBlock: IntFilter
  """Negates the expression."""
  not: PointsAccrualRateFilter
  """Checks for any expressions in this list."""
  or: [PointsAccrualRateFilter!]
  """Filter by the object’s `ratePerHour` field."""
  ratePerHour: FloatFilter
  """Filter by the object’s `source` field."""
  source: PointsSourceFilter
  """Filter by the object’s `startBlock` field."""
  startBlock: IntFilter
}

input PointsAccrualRateMaxAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: IntFilter
  ratePerHour: FloatFilter
  startBlock: IntFilter
}

type PointsAccrualRateMaxAggregates {
  """Maximum of amount across the matching connection"""
  amount: BigFloat
  """Maximum of lastUpdateBlock across the matching connection"""
  lastUpdateBlock: Int
  """Maximum of ratePerHour across the matching connection"""
  ratePerHour: Float
  """Maximum of startBlock across the matching connection"""
  startBlock: Int
}

input PointsAccrualRateMinAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: IntFilter
  ratePerHour: FloatFilter
  startBlock: IntFilter
}

type PointsAccrualRateMinAggregates {
  """Minimum of amount across the matching connection"""
  amount: BigFloat
  """Minimum of lastUpdateBlock across the matching connection"""
  lastUpdateBlock: Int
  """Minimum of ratePerHour across the matching connection"""
  ratePerHour: Float
  """Minimum of startBlock across the matching connection"""
  startBlock: Int
}

input PointsAccrualRateStddevPopulationAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: BigFloatFilter
  ratePerHour: FloatFilter
  startBlock: BigFloatFilter
}

type PointsAccrualRateStddevPopulationAggregates {
  """Population standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Population standard deviation of lastUpdateBlock across the matching connection
  """
  lastUpdateBlock: BigFloat
  """
  Population standard deviation of ratePerHour across the matching connection
  """
  ratePerHour: Float
  """
  Population standard deviation of startBlock across the matching connection
  """
  startBlock: BigFloat
}

input PointsAccrualRateStddevSampleAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: BigFloatFilter
  ratePerHour: FloatFilter
  startBlock: BigFloatFilter
}

type PointsAccrualRateStddevSampleAggregates {
  """Sample standard deviation of amount across the matching connection"""
  amount: BigFloat
  """
  Sample standard deviation of lastUpdateBlock across the matching connection
  """
  lastUpdateBlock: BigFloat
  """
  Sample standard deviation of ratePerHour across the matching connection
  """
  ratePerHour: Float
  """Sample standard deviation of startBlock across the matching connection"""
  startBlock: BigFloat
}

input PointsAccrualRateSumAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: BigIntFilter
  ratePerHour: FloatFilter
  startBlock: BigIntFilter
}

type PointsAccrualRateSumAggregates {
  """Sum of amount across the matching connection"""
  amount: BigFloat!
  """Sum of lastUpdateBlock across the matching connection"""
  lastUpdateBlock: BigInt!
  """Sum of ratePerHour across the matching connection"""
  ratePerHour: Float!
  """Sum of startBlock across the matching connection"""
  startBlock: BigInt!
}

input PointsAccrualRateVariancePopulationAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: BigFloatFilter
  ratePerHour: FloatFilter
  startBlock: BigFloatFilter
}

type PointsAccrualRateVariancePopulationAggregates {
  """Population variance of amount across the matching connection"""
  amount: BigFloat
  """Population variance of lastUpdateBlock across the matching connection"""
  lastUpdateBlock: BigFloat
  """Population variance of ratePerHour across the matching connection"""
  ratePerHour: Float
  """Population variance of startBlock across the matching connection"""
  startBlock: BigFloat
}

input PointsAccrualRateVarianceSampleAggregateFilter {
  amount: BigFloatFilter
  lastUpdateBlock: BigFloatFilter
  ratePerHour: FloatFilter
  startBlock: BigFloatFilter
}

type PointsAccrualRateVarianceSampleAggregates {
  """Sample variance of amount across the matching connection"""
  amount: BigFloat
  """Sample variance of lastUpdateBlock across the matching connection"""
  lastUpdateBlock: BigFloat
  """Sample variance of ratePerHour across the matching connection"""
  ratePerHour: Float
  """Sample variance of startBlock across the matching connection"""
  startBlock: BigFloat
}

"""A connection to a list of `PointsAccrualRate` values."""
type PointsAccrualRatesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: PointsAccrualRateAggregates
  """
  A list of edges which contains the `PointsAccrualRate` and cursor to aid in pagination.
  """
  edges: [PointsAccrualRatesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `PointsAccrualRate` for these aggregates.
    """
    groupBy: [PointsAccrualRatesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: PointsAccrualRatesHavingInput
  ): [PointsAccrualRateAggregates!]
  """A list of `PointsAccrualRate` objects."""
  nodes: [PointsAccrualRate]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `PointsAccrualRate` you could get from the connection.
  """
  totalCount: Int!
}

"""A `PointsAccrualRate` edge in the connection."""
type PointsAccrualRatesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `PointsAccrualRate` at the end of the edge."""
  node: PointsAccrualRate
}

"""Grouping methods for `PointsAccrualRate` for usage during aggregation."""
enum PointsAccrualRatesGroupBy {
  ACCOUNT_ID
  AMOUNT
  ID
  LAST_UPDATE_BLOCK
  RATE_PER_HOUR
  SOURCE
  START_BLOCK
}

input PointsAccrualRatesHavingAverageInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

input PointsAccrualRatesHavingDistinctCountInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

"""Conditions for `PointsAccrualRate` aggregates."""
input PointsAccrualRatesHavingInput {
  AND: [PointsAccrualRatesHavingInput!]
  OR: [PointsAccrualRatesHavingInput!]
  average: PointsAccrualRatesHavingAverageInput
  distinctCount: PointsAccrualRatesHavingDistinctCountInput
  max: PointsAccrualRatesHavingMaxInput
  min: PointsAccrualRatesHavingMinInput
  stddevPopulation: PointsAccrualRatesHavingStddevPopulationInput
  stddevSample: PointsAccrualRatesHavingStddevSampleInput
  sum: PointsAccrualRatesHavingSumInput
  variancePopulation: PointsAccrualRatesHavingVariancePopulationInput
  varianceSample: PointsAccrualRatesHavingVarianceSampleInput
}

input PointsAccrualRatesHavingMaxInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

input PointsAccrualRatesHavingMinInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

input PointsAccrualRatesHavingStddevPopulationInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

input PointsAccrualRatesHavingStddevSampleInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

input PointsAccrualRatesHavingSumInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

input PointsAccrualRatesHavingVariancePopulationInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

input PointsAccrualRatesHavingVarianceSampleInput {
  amount: HavingBigfloatFilter
  lastUpdateBlock: HavingIntFilter
  ratePerHour: HavingFloatFilter
  startBlock: HavingIntFilter
}

"""Methods to use when ordering `PointsAccrualRate`."""
enum PointsAccrualRatesOrderBy {
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__ID_ASC
  ACCOUNT_BY_ACCOUNT_ID__ID_DESC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC
  ACCOUNT_ID_ASC
  ACCOUNT_ID_DESC
  AMOUNT_ASC
  AMOUNT_DESC
  ID_ASC
  ID_DESC
  LAST_UPDATE_BLOCK_ASC
  LAST_UPDATE_BLOCK_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  RATE_PER_HOUR_ASC
  RATE_PER_HOUR_DESC
  SOURCE_ASC
  SOURCE_DESC
  START_BLOCK_ASC
  START_BLOCK_DESC
}

type PointsSnapshot implements Node {
  """Reads a single `Account` that is related to this `PointsSnapshot`."""
  account: Account
  """The account this snapshot belongs to"""
  accountId: String!
  """The block number when this snapshot was taken"""
  blockNumber: Int!
  """Unique identifier for the points snapshot."""
  id: String!
  liquidStakingPoints: BigFloat!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  operatorRegistrationPoints: BigFloat!
  restakingDelegationPoints: BigFloat!
  """Points breakdown by source"""
  restakingDepositPoints: BigFloat!
  """The timestamp when this snapshot was taken"""
  timestamp: Datetime!
  """Total points at time of snapshot"""
  totalPoints: BigFloat!
  validatorNominationPoints: BigFloat!
  validatorRegistrationPoints: BigFloat!
}

type PointsSnapshotAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: PointsSnapshotAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: PointsSnapshotDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: PointsSnapshotMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: PointsSnapshotMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: PointsSnapshotStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: PointsSnapshotStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: PointsSnapshotSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: PointsSnapshotVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: PointsSnapshotVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `PointsSnapshot` object types.
"""
input PointsSnapshotAggregatesFilter {
  """Mean average aggregate over matching `PointsSnapshot` objects."""
  average: PointsSnapshotAverageAggregateFilter
  """Distinct count aggregate over matching `PointsSnapshot` objects."""
  distinctCount: PointsSnapshotDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `PointsSnapshot` object to be included within the aggregate.
  """
  filter: PointsSnapshotFilter
  """Maximum aggregate over matching `PointsSnapshot` objects."""
  max: PointsSnapshotMaxAggregateFilter
  """Minimum aggregate over matching `PointsSnapshot` objects."""
  min: PointsSnapshotMinAggregateFilter
  """
  Population standard deviation aggregate over matching `PointsSnapshot` objects.
  """
  stddevPopulation: PointsSnapshotStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `PointsSnapshot` objects.
  """
  stddevSample: PointsSnapshotStddevSampleAggregateFilter
  """Sum aggregate over matching `PointsSnapshot` objects."""
  sum: PointsSnapshotSumAggregateFilter
  """Population variance aggregate over matching `PointsSnapshot` objects."""
  variancePopulation: PointsSnapshotVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `PointsSnapshot` objects."""
  varianceSample: PointsSnapshotVarianceSampleAggregateFilter
}

input PointsSnapshotAverageAggregateFilter {
  blockNumber: BigFloatFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotAverageAggregates {
  """Mean average of blockNumber across the matching connection"""
  blockNumber: BigFloat
  """Mean average of liquidStakingPoints across the matching connection"""
  liquidStakingPoints: BigFloat
  """
  Mean average of operatorRegistrationPoints across the matching connection
  """
  operatorRegistrationPoints: BigFloat
  """
  Mean average of restakingDelegationPoints across the matching connection
  """
  restakingDelegationPoints: BigFloat
  """Mean average of restakingDepositPoints across the matching connection"""
  restakingDepositPoints: BigFloat
  """Mean average of totalPoints across the matching connection"""
  totalPoints: BigFloat
  """
  Mean average of validatorNominationPoints across the matching connection
  """
  validatorNominationPoints: BigFloat
  """
  Mean average of validatorRegistrationPoints across the matching connection
  """
  validatorRegistrationPoints: BigFloat
}

input PointsSnapshotDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  accountId: BigIntFilter
  blockNumber: BigIntFilter
  id: BigIntFilter
  liquidStakingPoints: BigIntFilter
  operatorRegistrationPoints: BigIntFilter
  restakingDelegationPoints: BigIntFilter
  restakingDepositPoints: BigIntFilter
  timestamp: BigIntFilter
  totalPoints: BigIntFilter
  validatorNominationPoints: BigIntFilter
  validatorRegistrationPoints: BigIntFilter
}

type PointsSnapshotDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of accountId across the matching connection"""
  accountId: BigInt
  """Distinct count of blockNumber across the matching connection"""
  blockNumber: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of liquidStakingPoints across the matching connection"""
  liquidStakingPoints: BigInt
  """
  Distinct count of operatorRegistrationPoints across the matching connection
  """
  operatorRegistrationPoints: BigInt
  """
  Distinct count of restakingDelegationPoints across the matching connection
  """
  restakingDelegationPoints: BigInt
  """
  Distinct count of restakingDepositPoints across the matching connection
  """
  restakingDepositPoints: BigInt
  """Distinct count of timestamp across the matching connection"""
  timestamp: BigInt
  """Distinct count of totalPoints across the matching connection"""
  totalPoints: BigInt
  """
  Distinct count of validatorNominationPoints across the matching connection
  """
  validatorNominationPoints: BigInt
  """
  Distinct count of validatorRegistrationPoints across the matching connection
  """
  validatorRegistrationPoints: BigInt
}

"""
A filter to be used against `PointsSnapshot` object types. All fields are combined with a logical ‘and.’
"""
input PointsSnapshotFilter {
  """Filter by the object’s `account` relation."""
  account: AccountFilter
  """Filter by the object’s `accountId` field."""
  accountId: StringFilter
  """Checks for all expressions in this list."""
  and: [PointsSnapshotFilter!]
  """Filter by the object’s `blockNumber` field."""
  blockNumber: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `liquidStakingPoints` field."""
  liquidStakingPoints: BigFloatFilter
  """Negates the expression."""
  not: PointsSnapshotFilter
  """Filter by the object’s `operatorRegistrationPoints` field."""
  operatorRegistrationPoints: BigFloatFilter
  """Checks for any expressions in this list."""
  or: [PointsSnapshotFilter!]
  """Filter by the object’s `restakingDelegationPoints` field."""
  restakingDelegationPoints: BigFloatFilter
  """Filter by the object’s `restakingDepositPoints` field."""
  restakingDepositPoints: BigFloatFilter
  """Filter by the object’s `timestamp` field."""
  timestamp: DatetimeFilter
  """Filter by the object’s `totalPoints` field."""
  totalPoints: BigFloatFilter
  """Filter by the object’s `validatorNominationPoints` field."""
  validatorNominationPoints: BigFloatFilter
  """Filter by the object’s `validatorRegistrationPoints` field."""
  validatorRegistrationPoints: BigFloatFilter
}

input PointsSnapshotMaxAggregateFilter {
  blockNumber: IntFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotMaxAggregates {
  """Maximum of blockNumber across the matching connection"""
  blockNumber: Int
  """Maximum of liquidStakingPoints across the matching connection"""
  liquidStakingPoints: BigFloat
  """Maximum of operatorRegistrationPoints across the matching connection"""
  operatorRegistrationPoints: BigFloat
  """Maximum of restakingDelegationPoints across the matching connection"""
  restakingDelegationPoints: BigFloat
  """Maximum of restakingDepositPoints across the matching connection"""
  restakingDepositPoints: BigFloat
  """Maximum of totalPoints across the matching connection"""
  totalPoints: BigFloat
  """Maximum of validatorNominationPoints across the matching connection"""
  validatorNominationPoints: BigFloat
  """Maximum of validatorRegistrationPoints across the matching connection"""
  validatorRegistrationPoints: BigFloat
}

input PointsSnapshotMinAggregateFilter {
  blockNumber: IntFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotMinAggregates {
  """Minimum of blockNumber across the matching connection"""
  blockNumber: Int
  """Minimum of liquidStakingPoints across the matching connection"""
  liquidStakingPoints: BigFloat
  """Minimum of operatorRegistrationPoints across the matching connection"""
  operatorRegistrationPoints: BigFloat
  """Minimum of restakingDelegationPoints across the matching connection"""
  restakingDelegationPoints: BigFloat
  """Minimum of restakingDepositPoints across the matching connection"""
  restakingDepositPoints: BigFloat
  """Minimum of totalPoints across the matching connection"""
  totalPoints: BigFloat
  """Minimum of validatorNominationPoints across the matching connection"""
  validatorNominationPoints: BigFloat
  """Minimum of validatorRegistrationPoints across the matching connection"""
  validatorRegistrationPoints: BigFloat
}

input PointsSnapshotStddevPopulationAggregateFilter {
  blockNumber: BigFloatFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotStddevPopulationAggregates {
  """
  Population standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
  """
  Population standard deviation of liquidStakingPoints across the matching connection
  """
  liquidStakingPoints: BigFloat
  """
  Population standard deviation of operatorRegistrationPoints across the matching connection
  """
  operatorRegistrationPoints: BigFloat
  """
  Population standard deviation of restakingDelegationPoints across the matching connection
  """
  restakingDelegationPoints: BigFloat
  """
  Population standard deviation of restakingDepositPoints across the matching connection
  """
  restakingDepositPoints: BigFloat
  """
  Population standard deviation of totalPoints across the matching connection
  """
  totalPoints: BigFloat
  """
  Population standard deviation of validatorNominationPoints across the matching connection
  """
  validatorNominationPoints: BigFloat
  """
  Population standard deviation of validatorRegistrationPoints across the matching connection
  """
  validatorRegistrationPoints: BigFloat
}

input PointsSnapshotStddevSampleAggregateFilter {
  blockNumber: BigFloatFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotStddevSampleAggregates {
  """
  Sample standard deviation of blockNumber across the matching connection
  """
  blockNumber: BigFloat
  """
  Sample standard deviation of liquidStakingPoints across the matching connection
  """
  liquidStakingPoints: BigFloat
  """
  Sample standard deviation of operatorRegistrationPoints across the matching connection
  """
  operatorRegistrationPoints: BigFloat
  """
  Sample standard deviation of restakingDelegationPoints across the matching connection
  """
  restakingDelegationPoints: BigFloat
  """
  Sample standard deviation of restakingDepositPoints across the matching connection
  """
  restakingDepositPoints: BigFloat
  """
  Sample standard deviation of totalPoints across the matching connection
  """
  totalPoints: BigFloat
  """
  Sample standard deviation of validatorNominationPoints across the matching connection
  """
  validatorNominationPoints: BigFloat
  """
  Sample standard deviation of validatorRegistrationPoints across the matching connection
  """
  validatorRegistrationPoints: BigFloat
}

input PointsSnapshotSumAggregateFilter {
  blockNumber: BigIntFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotSumAggregates {
  """Sum of blockNumber across the matching connection"""
  blockNumber: BigInt!
  """Sum of liquidStakingPoints across the matching connection"""
  liquidStakingPoints: BigFloat!
  """Sum of operatorRegistrationPoints across the matching connection"""
  operatorRegistrationPoints: BigFloat!
  """Sum of restakingDelegationPoints across the matching connection"""
  restakingDelegationPoints: BigFloat!
  """Sum of restakingDepositPoints across the matching connection"""
  restakingDepositPoints: BigFloat!
  """Sum of totalPoints across the matching connection"""
  totalPoints: BigFloat!
  """Sum of validatorNominationPoints across the matching connection"""
  validatorNominationPoints: BigFloat!
  """Sum of validatorRegistrationPoints across the matching connection"""
  validatorRegistrationPoints: BigFloat!
}

input PointsSnapshotVariancePopulationAggregateFilter {
  blockNumber: BigFloatFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotVariancePopulationAggregates {
  """Population variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
  """
  Population variance of liquidStakingPoints across the matching connection
  """
  liquidStakingPoints: BigFloat
  """
  Population variance of operatorRegistrationPoints across the matching connection
  """
  operatorRegistrationPoints: BigFloat
  """
  Population variance of restakingDelegationPoints across the matching connection
  """
  restakingDelegationPoints: BigFloat
  """
  Population variance of restakingDepositPoints across the matching connection
  """
  restakingDepositPoints: BigFloat
  """Population variance of totalPoints across the matching connection"""
  totalPoints: BigFloat
  """
  Population variance of validatorNominationPoints across the matching connection
  """
  validatorNominationPoints: BigFloat
  """
  Population variance of validatorRegistrationPoints across the matching connection
  """
  validatorRegistrationPoints: BigFloat
}

input PointsSnapshotVarianceSampleAggregateFilter {
  blockNumber: BigFloatFilter
  liquidStakingPoints: BigFloatFilter
  operatorRegistrationPoints: BigFloatFilter
  restakingDelegationPoints: BigFloatFilter
  restakingDepositPoints: BigFloatFilter
  totalPoints: BigFloatFilter
  validatorNominationPoints: BigFloatFilter
  validatorRegistrationPoints: BigFloatFilter
}

type PointsSnapshotVarianceSampleAggregates {
  """Sample variance of blockNumber across the matching connection"""
  blockNumber: BigFloat
  """Sample variance of liquidStakingPoints across the matching connection"""
  liquidStakingPoints: BigFloat
  """
  Sample variance of operatorRegistrationPoints across the matching connection
  """
  operatorRegistrationPoints: BigFloat
  """
  Sample variance of restakingDelegationPoints across the matching connection
  """
  restakingDelegationPoints: BigFloat
  """
  Sample variance of restakingDepositPoints across the matching connection
  """
  restakingDepositPoints: BigFloat
  """Sample variance of totalPoints across the matching connection"""
  totalPoints: BigFloat
  """
  Sample variance of validatorNominationPoints across the matching connection
  """
  validatorNominationPoints: BigFloat
  """
  Sample variance of validatorRegistrationPoints across the matching connection
  """
  validatorRegistrationPoints: BigFloat
}

"""A connection to a list of `PointsSnapshot` values."""
type PointsSnapshotsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: PointsSnapshotAggregates
  """
  A list of edges which contains the `PointsSnapshot` and cursor to aid in pagination.
  """
  edges: [PointsSnapshotsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `PointsSnapshot` for these aggregates."""
    groupBy: [PointsSnapshotsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: PointsSnapshotsHavingInput
  ): [PointsSnapshotAggregates!]
  """A list of `PointsSnapshot` objects."""
  nodes: [PointsSnapshot]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `PointsSnapshot` you could get from the connection."""
  totalCount: Int!
}

"""A `PointsSnapshot` edge in the connection."""
type PointsSnapshotsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `PointsSnapshot` at the end of the edge."""
  node: PointsSnapshot
}

"""Grouping methods for `PointsSnapshot` for usage during aggregation."""
enum PointsSnapshotsGroupBy {
  ACCOUNT_ID
  BLOCK_NUMBER
  ID
  LIQUID_STAKING_POINTS
  OPERATOR_REGISTRATION_POINTS
  RESTAKING_DELEGATION_POINTS
  RESTAKING_DEPOSIT_POINTS
  TIMESTAMP
  TIMESTAMP_TRUNCATED_TO_DAY
  TIMESTAMP_TRUNCATED_TO_HOUR
  TOTAL_POINTS
  VALIDATOR_NOMINATION_POINTS
  VALIDATOR_REGISTRATION_POINTS
}

input PointsSnapshotsHavingAverageInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

input PointsSnapshotsHavingDistinctCountInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

"""Conditions for `PointsSnapshot` aggregates."""
input PointsSnapshotsHavingInput {
  AND: [PointsSnapshotsHavingInput!]
  OR: [PointsSnapshotsHavingInput!]
  average: PointsSnapshotsHavingAverageInput
  distinctCount: PointsSnapshotsHavingDistinctCountInput
  max: PointsSnapshotsHavingMaxInput
  min: PointsSnapshotsHavingMinInput
  stddevPopulation: PointsSnapshotsHavingStddevPopulationInput
  stddevSample: PointsSnapshotsHavingStddevSampleInput
  sum: PointsSnapshotsHavingSumInput
  variancePopulation: PointsSnapshotsHavingVariancePopulationInput
  varianceSample: PointsSnapshotsHavingVarianceSampleInput
}

input PointsSnapshotsHavingMaxInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

input PointsSnapshotsHavingMinInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

input PointsSnapshotsHavingStddevPopulationInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

input PointsSnapshotsHavingStddevSampleInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

input PointsSnapshotsHavingSumInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

input PointsSnapshotsHavingVariancePopulationInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

input PointsSnapshotsHavingVarianceSampleInput {
  blockNumber: HavingIntFilter
  liquidStakingPoints: HavingBigfloatFilter
  operatorRegistrationPoints: HavingBigfloatFilter
  restakingDelegationPoints: HavingBigfloatFilter
  restakingDepositPoints: HavingBigfloatFilter
  timestamp: HavingDatetimeFilter
  totalPoints: HavingBigfloatFilter
  validatorNominationPoints: HavingBigfloatFilter
  validatorRegistrationPoints: HavingBigfloatFilter
}

"""Methods to use when ordering `PointsSnapshot`."""
enum PointsSnapshotsOrderBy {
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__CREATED_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__ID_ASC
  ACCOUNT_BY_ACCOUNT_ID__ID_DESC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_ACCOUNT_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_ACCOUNT_ID__TOTAL_POINTS_DESC
  ACCOUNT_ID_ASC
  ACCOUNT_ID_DESC
  BLOCK_NUMBER_ASC
  BLOCK_NUMBER_DESC
  ID_ASC
  ID_DESC
  LIQUID_STAKING_POINTS_ASC
  LIQUID_STAKING_POINTS_DESC
  NATURAL
  OPERATOR_REGISTRATION_POINTS_ASC
  OPERATOR_REGISTRATION_POINTS_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  RESTAKING_DELEGATION_POINTS_ASC
  RESTAKING_DELEGATION_POINTS_DESC
  RESTAKING_DEPOSIT_POINTS_ASC
  RESTAKING_DEPOSIT_POINTS_DESC
  TIMESTAMP_ASC
  TIMESTAMP_DESC
  TOTAL_POINTS_ASC
  TOTAL_POINTS_DESC
  VALIDATOR_NOMINATION_POINTS_ASC
  VALIDATOR_NOMINATION_POINTS_DESC
  VALIDATOR_REGISTRATION_POINTS_ASC
  VALIDATOR_REGISTRATION_POINTS_DESC
}

""" Enum representing the source of points."""
enum PointsSource {
  LIQUID_STAKING
  OPERATOR_REGISTRATION
  RESTAKING_DELEGATION
  RESTAKING_DEPOSIT
  VALIDATOR_NOMINATION
  VALIDATOR_REGISTRATION
}

"""
A filter to be used against PointsSource fields. All fields are combined with a logical ‘and.’
"""
input PointsSourceFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: PointsSource
  """Equal to the specified value."""
  equalTo: PointsSource
  """Greater than the specified value."""
  greaterThan: PointsSource
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: PointsSource
  """Included in the specified list."""
  in: [PointsSource!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: PointsSource
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: PointsSource
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: PointsSource
  """Not equal to the specified value."""
  notEqualTo: PointsSource
  """Not included in the specified list."""
  notIn: [PointsSource!]
}

"""The root query type which gives access points into the data universe."""
type Query implements Node {
  _metadata(chainId: String): _Metadata
  _metadatas(after: Cursor, before: Cursor): _Metadatas
  account(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Account
  """Reads a single `Account` using its globally unique `ID`."""
  accountByNodeId(
    """Fields to be distinct"""
    distinct: [accounts_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `Account`."""
    nodeId: ID!
  ): Account
  """Reads and enables pagination through a set of `Account`."""
  accounts(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [accounts_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AccountFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): AccountsConnection
  blueprint(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Blueprint
  """Reads a single `Blueprint` using its globally unique `ID`."""
  blueprintByNodeId(
    """Fields to be distinct"""
    distinct: [blueprints_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `Blueprint`."""
    nodeId: ID!
  ): Blueprint
  blueprintOperator(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): BlueprintOperator
  """Reads a single `BlueprintOperator` using its globally unique `ID`."""
  blueprintOperatorByNodeId(
    """Fields to be distinct"""
    distinct: [blueprint_operators_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `BlueprintOperator`.
    """
    nodeId: ID!
  ): BlueprintOperator
  """Reads and enables pagination through a set of `BlueprintOperator`."""
  blueprintOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprint_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `BlueprintOperator`."""
    orderBy: [BlueprintOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintOperatorsConnection
  """Reads and enables pagination through a set of `Blueprint`."""
  blueprints(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprints_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Blueprint`."""
    orderBy: [BlueprintsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): BlueprintsConnection
  delegation(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Delegation
  """Reads a single `Delegation` using its globally unique `ID`."""
  delegationByNodeId(
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `Delegation`.
    """
    nodeId: ID!
  ): Delegation
  """Reads and enables pagination through a set of `DelegationHistory`."""
  delegationHistories(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegation_histories_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationHistoryFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `DelegationHistory`."""
    orderBy: [DelegationHistoriesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationHistoriesConnection
  delegationHistory(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): DelegationHistory
  """Reads a single `DelegationHistory` using its globally unique `ID`."""
  delegationHistoryByNodeId(
    """Fields to be distinct"""
    distinct: [delegation_histories_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `DelegationHistory`.
    """
    nodeId: ID!
  ): DelegationHistory
  """Reads and enables pagination through a set of `Delegation`."""
  delegations(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegations_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegationFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegation`."""
    orderBy: [DelegationsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegationsConnection
  delegator(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Delegator
  """Reads a single `Delegator` using its globally unique `ID`."""
  delegatorByNodeId(
    """Fields to be distinct"""
    distinct: [delegators_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `Delegator`."""
    nodeId: ID!
  ): Delegator
  """Reads and enables pagination through a set of `Delegator`."""
  delegators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [delegators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DelegatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Delegator`."""
    orderBy: [DelegatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DelegatorsConnection
  deposit(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Deposit
  """Reads a single `Deposit` using its globally unique `ID`."""
  depositByNodeId(
    """Fields to be distinct"""
    distinct: [deposits_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `Deposit`."""
    nodeId: ID!
  ): Deposit
  """Reads and enables pagination through a set of `DepositHistory`."""
  depositHistories(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [deposit_histories_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DepositHistoryFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `DepositHistory`."""
    orderBy: [DepositHistoriesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DepositHistoriesConnection
  depositHistory(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): DepositHistory
  """Reads a single `DepositHistory` using its globally unique `ID`."""
  depositHistoryByNodeId(
    """Fields to be distinct"""
    distinct: [deposit_histories_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `DepositHistory`.
    """
    nodeId: ID!
  ): DepositHistory
  """Reads and enables pagination through a set of `Deposit`."""
  deposits(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [deposits_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: DepositFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Deposit`."""
    orderBy: [DepositsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): DepositsConnection
  jobCall(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): JobCall
  """Reads a single `JobCall` using its globally unique `ID`."""
  jobCallByNodeId(
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `JobCall`."""
    nodeId: ID!
  ): JobCall
  """Reads and enables pagination through a set of `JobCall`."""
  jobCalls(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobCallFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobCall`."""
    orderBy: [JobCallsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobCallsConnection
  jobResult(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): JobResult
  """Reads a single `JobResult` using its globally unique `ID`."""
  jobResultByNodeId(
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `JobResult`."""
    nodeId: ID!
  ): JobResult
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection
  lstPool(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): LstPool
  """Reads a single `LstPool` using its globally unique `ID`."""
  lstPoolByNodeId(
    """Fields to be distinct"""
    distinct: [lst_pools_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `LstPool`."""
    nodeId: ID!
  ): LstPool
  lstPoolMember(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): LstPoolMember
  """Reads a single `LstPoolMember` using its globally unique `ID`."""
  lstPoolMemberByNodeId(
    """Fields to be distinct"""
    distinct: [lst_pool_members_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `LstPoolMember`.
    """
    nodeId: ID!
  ): LstPoolMember
  """Reads and enables pagination through a set of `LstPoolMember`."""
  lstPoolMembers(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pool_members_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolMemberFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPoolMember`."""
    orderBy: [LstPoolMembersOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolMembersConnection
  lstPoolStateChange(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): LstPoolStateChange
  """Reads a single `LstPoolStateChange` using its globally unique `ID`."""
  lstPoolStateChangeByNodeId(
    """Fields to be distinct"""
    distinct: [lst_pool_state_changes_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `LstPoolStateChange`.
    """
    nodeId: ID!
  ): LstPoolStateChange
  """Reads and enables pagination through a set of `LstPoolStateChange`."""
  lstPoolStateChanges(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pool_state_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolStateChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPoolStateChange`."""
    orderBy: [LstPoolStateChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolStateChangesConnection
  """Reads and enables pagination through a set of `LstPool`."""
  lstPools(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [lst_pools_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: LstPoolFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `LstPool`."""
    orderBy: [LstPoolsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): LstPoolsConnection
  memberStakeChange(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): MemberStakeChange
  """Reads a single `MemberStakeChange` using its globally unique `ID`."""
  memberStakeChangeByNodeId(
    """Fields to be distinct"""
    distinct: [member_stake_changes_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `MemberStakeChange`.
    """
    nodeId: ID!
  ): MemberStakeChange
  """Reads and enables pagination through a set of `MemberStakeChange`."""
  memberStakeChanges(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [member_stake_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: MemberStakeChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `MemberStakeChange`."""
    orderBy: [MemberStakeChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): MemberStakeChangesConnection
  """Fetches an object given its globally unique `ID`."""
  node(
    """The globally unique `ID`."""
    nodeId: ID!
  ): Node
  """
  The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.
  """
  nodeId: ID!
  operator(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Operator
  operatorBondChange(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): OperatorBondChange
  """Reads a single `OperatorBondChange` using its globally unique `ID`."""
  operatorBondChangeByNodeId(
    """Fields to be distinct"""
    distinct: [operator_bond_changes_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `OperatorBondChange`.
    """
    nodeId: ID!
  ): OperatorBondChange
  """Reads and enables pagination through a set of `OperatorBondChange`."""
  operatorBondChanges(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operator_bond_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorBondChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `OperatorBondChange`."""
    orderBy: [OperatorBondChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorBondChangesConnection
  """Reads a single `Operator` using its globally unique `ID`."""
  operatorByNodeId(
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `Operator`."""
    nodeId: ID!
  ): Operator
  operatorStatusChange(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): OperatorStatusChange
  """Reads a single `OperatorStatusChange` using its globally unique `ID`."""
  operatorStatusChangeByNodeId(
    """Fields to be distinct"""
    distinct: [operator_status_changes_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `OperatorStatusChange`.
    """
    nodeId: ID!
  ): OperatorStatusChange
  """Reads and enables pagination through a set of `OperatorStatusChange`."""
  operatorStatusChanges(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operator_status_changes_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorStatusChangeFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `OperatorStatusChange`."""
    orderBy: [OperatorStatusChangesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorStatusChangesConnection
  """Reads and enables pagination through a set of `Operator`."""
  operators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): OperatorsConnection
  pointsAccrualRate(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): PointsAccrualRate
  """Reads a single `PointsAccrualRate` using its globally unique `ID`."""
  pointsAccrualRateByNodeId(
    """Fields to be distinct"""
    distinct: [points_accrual_rates_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `PointsAccrualRate`.
    """
    nodeId: ID!
  ): PointsAccrualRate
  """Reads and enables pagination through a set of `PointsAccrualRate`."""
  pointsAccrualRates(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [points_accrual_rates_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: PointsAccrualRateFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `PointsAccrualRate`."""
    orderBy: [PointsAccrualRatesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): PointsAccrualRatesConnection
  pointsSnapshot(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): PointsSnapshot
  """Reads a single `PointsSnapshot` using its globally unique `ID`."""
  pointsSnapshotByNodeId(
    """Fields to be distinct"""
    distinct: [points_snapshots_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `PointsSnapshot`.
    """
    nodeId: ID!
  ): PointsSnapshot
  """Reads and enables pagination through a set of `PointsSnapshot`."""
  pointsSnapshots(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [points_snapshots_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: PointsSnapshotFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `PointsSnapshot`."""
    orderBy: [PointsSnapshotsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): PointsSnapshotsConnection
  """
  Exposes the root query type nested one level down. This is helpful for Relay 1
  which can only query top level fields if they are in a particular form.
  """
  query: Query!
  service(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Service
  """Reads a single `Service` using its globally unique `ID`."""
  serviceByNodeId(
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `Service`."""
    nodeId: ID!
  ): Service
  serviceOperator(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): ServiceOperator
  """Reads a single `ServiceOperator` using its globally unique `ID`."""
  serviceOperatorByNodeId(
    """Fields to be distinct"""
    distinct: [service_operators_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `ServiceOperator`.
    """
    nodeId: ID!
  ): ServiceOperator
  """Reads and enables pagination through a set of `ServiceOperator`."""
  serviceOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceOperator`."""
    orderBy: [ServiceOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceOperatorsConnection
  serviceRequest(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): ServiceRequest
  """Reads a single `ServiceRequest` using its globally unique `ID`."""
  serviceRequestByNodeId(
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `ServiceRequest`.
    """
    nodeId: ID!
  ): ServiceRequest
  serviceRequestOperator(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): ServiceRequestOperator
  """
  Reads a single `ServiceRequestOperator` using its globally unique `ID`.
  """
  serviceRequestOperatorByNodeId(
    """Fields to be distinct"""
    distinct: [service_request_operators_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `ServiceRequestOperator`.
    """
    nodeId: ID!
  ): ServiceRequestOperator
  """
  Reads and enables pagination through a set of `ServiceRequestOperator`.
  """
  serviceRequestOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_request_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequestOperator`."""
    orderBy: [ServiceRequestOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestOperatorsConnection
  """Reads and enables pagination through a set of `ServiceRequest`."""
  serviceRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequest`."""
    orderBy: [ServiceRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestsConnection
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection
  session(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): Session
  """Reads a single `Session` using its globally unique `ID`."""
  sessionByNodeId(
    """Fields to be distinct"""
    distinct: [sessions_distinct_enum] = null
    """The globally unique `ID` to be used in selecting a single `Session`."""
    nodeId: ID!
  ): Session
  """Reads and enables pagination through a set of `Session`."""
  sessions(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [sessions_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: SessionFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Session`."""
    orderBy: [SessionsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): SessionsConnection
  unstakeRequest(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): UnstakeRequest
  """Reads a single `UnstakeRequest` using its globally unique `ID`."""
  unstakeRequestByNodeId(
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `UnstakeRequest`.
    """
    nodeId: ID!
  ): UnstakeRequest
  """Reads and enables pagination through a set of `UnstakeRequest`."""
  unstakeRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [unstake_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: UnstakeRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `UnstakeRequest`."""
    orderBy: [UnstakeRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): UnstakeRequestsConnection
  withdrawRequest(
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    id: String!
  ): WithdrawRequest
  """Reads a single `WithdrawRequest` using its globally unique `ID`."""
  withdrawRequestByNodeId(
    """Fields to be distinct"""
    distinct: [withdraw_requests_distinct_enum] = null
    """
    The globally unique `ID` to be used in selecting a single `WithdrawRequest`.
    """
    nodeId: ID!
  ): WithdrawRequest
  """Reads and enables pagination through a set of `WithdrawRequest`."""
  withdrawRequests(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [withdraw_requests_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: WithdrawRequestFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `WithdrawRequest`."""
    orderBy: [WithdrawRequestsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): WithdrawRequestsConnection
}

type Service implements Node {
  """Reads and enables pagination through a set of `Account`."""
  accountsByJobCallServiceIdAndCallerId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [accounts_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AccountFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyConnection!
  """List of asset IDs associated with this Service."""
  assetIds: JSON!
  """Reads a single `Blueprint` that is related to this `Service`."""
  blueprint: Blueprint
  """The blueprint associated with this Service."""
  blueprintId: String!
  """The creation block number of the Service."""
  createdAt: Int!
  """Unique identifier for the Service."""
  id: String!
  """Reads and enables pagination through a set of `JobCall`."""
  jobCalls(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobCallFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobCall`."""
    orderBy: [JobCallsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobCallsConnection!
  """Reads and enables pagination through a set of `JobCall`."""
  jobCallsByJobResultServiceIdAndJobCallId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobCallFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobCall`."""
    orderBy: [JobCallsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyConnection!
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByJobResultServiceIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyConnection!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByServiceOperatorServiceIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyConnection!
  """Reads a single `Account` that is related to this `Service`."""
  owner: Account
  """The owner of the Service."""
  ownerId: String!
  """Reads and enables pagination through a set of `ServiceOperator`."""
  serviceOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceOperator`."""
    orderBy: [ServiceOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceOperatorsConnection!
  """Reads a single `ServiceRequest` that is related to this `Service`."""
  serviceRequest: ServiceRequest
  """The Service Request associated with this Service."""
  serviceRequestId: String!
  """The block number when the Service was terminated."""
  terminatedAt: Int
}

"""A connection to a list of `Account` values, with data from `JobCall`."""
type ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: AccountAggregates
  """
  A list of edges which contains the `Account`, info from the `JobCall`, and the cursor to aid in pagination.
  """
  edges: [ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Account` for these aggregates."""
    groupBy: [AccountsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: AccountsHavingInput
  ): [AccountAggregates!]
  """A list of `Account` objects."""
  nodes: [Account]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection, with data from `JobCall`."""
type ServiceAccountsByJobCallServiceIdAndCallerIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobCall`."""
  jobCalls(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_calls_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobCallFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobCall`."""
    orderBy: [JobCallsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobCallsConnection!
  """The `Account` at the end of the edge."""
  node: Account
}

type ServiceAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: ServiceAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: ServiceDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: ServiceMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: ServiceMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: ServiceStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: ServiceStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: ServiceSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: ServiceVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: ServiceVarianceSampleAggregates
}

"""A filter to be used against aggregates of `Service` object types."""
input ServiceAggregatesFilter {
  """Mean average aggregate over matching `Service` objects."""
  average: ServiceAverageAggregateFilter
  """Distinct count aggregate over matching `Service` objects."""
  distinctCount: ServiceDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `Service` object to be included within the aggregate.
  """
  filter: ServiceFilter
  """Maximum aggregate over matching `Service` objects."""
  max: ServiceMaxAggregateFilter
  """Minimum aggregate over matching `Service` objects."""
  min: ServiceMinAggregateFilter
  """
  Population standard deviation aggregate over matching `Service` objects.
  """
  stddevPopulation: ServiceStddevPopulationAggregateFilter
  """Sample standard deviation aggregate over matching `Service` objects."""
  stddevSample: ServiceStddevSampleAggregateFilter
  """Sum aggregate over matching `Service` objects."""
  sum: ServiceSumAggregateFilter
  """Population variance aggregate over matching `Service` objects."""
  variancePopulation: ServiceVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `Service` objects."""
  varianceSample: ServiceVarianceSampleAggregateFilter
}

input ServiceAverageAggregateFilter {
  createdAt: BigFloatFilter
  terminatedAt: BigFloatFilter
}

type ServiceAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
  """Mean average of terminatedAt across the matching connection"""
  terminatedAt: BigFloat
}

input ServiceDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  assetIds: BigIntFilter
  blueprintId: BigIntFilter
  createdAt: BigIntFilter
  id: BigIntFilter
  ownerId: BigIntFilter
  serviceRequestId: BigIntFilter
  terminatedAt: BigIntFilter
}

type ServiceDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of assetIds across the matching connection"""
  assetIds: BigInt
  """Distinct count of blueprintId across the matching connection"""
  blueprintId: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of ownerId across the matching connection"""
  ownerId: BigInt
  """Distinct count of serviceRequestId across the matching connection"""
  serviceRequestId: BigInt
  """Distinct count of terminatedAt across the matching connection"""
  terminatedAt: BigInt
}

"""
A filter to be used against `Service` object types. All fields are combined with a logical ‘and.’
"""
input ServiceFilter {
  """Checks for all expressions in this list."""
  and: [ServiceFilter!]
  """Filter by the object’s `assetIds` field."""
  assetIds: JSONFilter
  """Filter by the object’s `blueprint` relation."""
  blueprint: BlueprintFilter
  """Filter by the object’s `blueprintId` field."""
  blueprintId: StringFilter
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Filter by the object’s `jobCalls` relation."""
  jobCalls: ServiceToManyJobCallFilter
  """Some related `jobCalls` exist."""
  jobCallsExist: Boolean
  """Filter by the object’s `jobResults` relation."""
  jobResults: ServiceToManyJobResultFilter
  """Some related `jobResults` exist."""
  jobResultsExist: Boolean
  """Negates the expression."""
  not: ServiceFilter
  """Checks for any expressions in this list."""
  or: [ServiceFilter!]
  """Filter by the object’s `owner` relation."""
  owner: AccountFilter
  """Filter by the object’s `ownerId` field."""
  ownerId: StringFilter
  """Filter by the object’s `serviceOperators` relation."""
  serviceOperators: ServiceToManyServiceOperatorFilter
  """Some related `serviceOperators` exist."""
  serviceOperatorsExist: Boolean
  """Filter by the object’s `serviceRequest` relation."""
  serviceRequest: ServiceRequestFilter
  """Filter by the object’s `serviceRequestId` field."""
  serviceRequestId: StringFilter
  """Filter by the object’s `terminatedAt` field."""
  terminatedAt: IntFilter
}

"""
A connection to a list of `JobCall` values, with data from `JobResult`.
"""
type ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: JobCallAggregates
  """
  A list of edges which contains the `JobCall`, info from the `JobResult`, and the cursor to aid in pagination.
  """
  edges: [ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `JobCall` for these aggregates."""
    groupBy: [JobCallsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: JobCallsHavingInput
  ): [JobCallAggregates!]
  """A list of `JobCall` objects."""
  nodes: [JobCall]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `JobCall` you could get from the connection."""
  totalCount: Int!
}

"""A `JobCall` edge in the connection, with data from `JobResult`."""
type ServiceJobCallsByJobResultServiceIdAndJobCallIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """The `JobCall` at the end of the edge."""
  node: JobCall
}

input ServiceMaxAggregateFilter {
  createdAt: IntFilter
  terminatedAt: IntFilter
}

type ServiceMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
  """Maximum of terminatedAt across the matching connection"""
  terminatedAt: Int
}

input ServiceMinAggregateFilter {
  createdAt: IntFilter
  terminatedAt: IntFilter
}

type ServiceMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
  """Minimum of terminatedAt across the matching connection"""
  terminatedAt: Int
}

type ServiceOperator implements Node {
  """The creation block number of the relationship."""
  createdAt: Int!
  """
  Unique identifier for the relationship. Composite key: Service ID + Operator ID
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads a single `Operator` that is related to this `ServiceOperator`."""
  operator: Operator
  """The Operator associated with this relationship."""
  operatorId: String!
  """Reads a single `Service` that is related to this `ServiceOperator`."""
  service: Service
  """The Service associated with this relationship."""
  serviceId: String!
}

type ServiceOperatorAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: ServiceOperatorAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: ServiceOperatorDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: ServiceOperatorMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: ServiceOperatorMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: ServiceOperatorStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: ServiceOperatorStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: ServiceOperatorSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: ServiceOperatorVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: ServiceOperatorVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `ServiceOperator` object types.
"""
input ServiceOperatorAggregatesFilter {
  """Mean average aggregate over matching `ServiceOperator` objects."""
  average: ServiceOperatorAverageAggregateFilter
  """Distinct count aggregate over matching `ServiceOperator` objects."""
  distinctCount: ServiceOperatorDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `ServiceOperator` object to be included within the aggregate.
  """
  filter: ServiceOperatorFilter
  """Maximum aggregate over matching `ServiceOperator` objects."""
  max: ServiceOperatorMaxAggregateFilter
  """Minimum aggregate over matching `ServiceOperator` objects."""
  min: ServiceOperatorMinAggregateFilter
  """
  Population standard deviation aggregate over matching `ServiceOperator` objects.
  """
  stddevPopulation: ServiceOperatorStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `ServiceOperator` objects.
  """
  stddevSample: ServiceOperatorStddevSampleAggregateFilter
  """Sum aggregate over matching `ServiceOperator` objects."""
  sum: ServiceOperatorSumAggregateFilter
  """Population variance aggregate over matching `ServiceOperator` objects."""
  variancePopulation: ServiceOperatorVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `ServiceOperator` objects."""
  varianceSample: ServiceOperatorVarianceSampleAggregateFilter
}

input ServiceOperatorAverageAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceOperatorAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
}

input ServiceOperatorDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  createdAt: BigIntFilter
  id: BigIntFilter
  operatorId: BigIntFilter
  serviceId: BigIntFilter
}

type ServiceOperatorDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
  """Distinct count of serviceId across the matching connection"""
  serviceId: BigInt
}

"""
A filter to be used against `ServiceOperator` object types. All fields are combined with a logical ‘and.’
"""
input ServiceOperatorFilter {
  """Checks for all expressions in this list."""
  and: [ServiceOperatorFilter!]
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: ServiceOperatorFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [ServiceOperatorFilter!]
  """Filter by the object’s `service` relation."""
  service: ServiceFilter
  """Filter by the object’s `serviceId` field."""
  serviceId: StringFilter
}

input ServiceOperatorMaxAggregateFilter {
  createdAt: IntFilter
}

type ServiceOperatorMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
}

input ServiceOperatorMinAggregateFilter {
  createdAt: IntFilter
}

type ServiceOperatorMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
}

input ServiceOperatorStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceOperatorStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
}

input ServiceOperatorStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceOperatorStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
}

input ServiceOperatorSumAggregateFilter {
  createdAt: BigIntFilter
}

type ServiceOperatorSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
}

input ServiceOperatorVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceOperatorVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

input ServiceOperatorVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceOperatorVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

"""
A connection to a list of `Operator` values, with data from `JobResult`.
"""
type ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `JobResult`, and the cursor to aid in pagination.
  """
  edges: [ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""A `Operator` edge in the connection, with data from `JobResult`."""
type ServiceOperatorsByJobResultServiceIdAndOperatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """Reads and enables pagination through a set of `JobResult`."""
  jobResults(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [job_results_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: JobResultFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `JobResult`."""
    orderBy: [JobResultsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): JobResultsConnection!
  """The `Operator` at the end of the edge."""
  node: Operator
}

"""
A connection to a list of `Operator` values, with data from `ServiceOperator`.
"""
type ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `ServiceOperator`, and the cursor to aid in pagination.
  """
  edges: [ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""A `Operator` edge in the connection, with data from `ServiceOperator`."""
type ServiceOperatorsByServiceOperatorServiceIdAndOperatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Operator` at the end of the edge."""
  node: Operator
  """Reads and enables pagination through a set of `ServiceOperator`."""
  serviceOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceOperator`."""
    orderBy: [ServiceOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceOperatorsConnection!
}

"""A connection to a list of `ServiceOperator` values."""
type ServiceOperatorsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceOperatorAggregates
  """
  A list of edges which contains the `ServiceOperator` and cursor to aid in pagination.
  """
  edges: [ServiceOperatorsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `ServiceOperator` for these aggregates.
    """
    groupBy: [ServiceOperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServiceOperatorsHavingInput
  ): [ServiceOperatorAggregates!]
  """A list of `ServiceOperator` objects."""
  nodes: [ServiceOperator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `ServiceOperator` you could get from the connection.
  """
  totalCount: Int!
}

"""A `ServiceOperator` edge in the connection."""
type ServiceOperatorsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `ServiceOperator` at the end of the edge."""
  node: ServiceOperator
}

"""Grouping methods for `ServiceOperator` for usage during aggregation."""
enum ServiceOperatorsGroupBy {
  CREATED_AT
  ID
  OPERATOR_ID
  SERVICE_ID
}

input ServiceOperatorsHavingAverageInput {
  createdAt: HavingIntFilter
}

input ServiceOperatorsHavingDistinctCountInput {
  createdAt: HavingIntFilter
}

"""Conditions for `ServiceOperator` aggregates."""
input ServiceOperatorsHavingInput {
  AND: [ServiceOperatorsHavingInput!]
  OR: [ServiceOperatorsHavingInput!]
  average: ServiceOperatorsHavingAverageInput
  distinctCount: ServiceOperatorsHavingDistinctCountInput
  max: ServiceOperatorsHavingMaxInput
  min: ServiceOperatorsHavingMinInput
  stddevPopulation: ServiceOperatorsHavingStddevPopulationInput
  stddevSample: ServiceOperatorsHavingStddevSampleInput
  sum: ServiceOperatorsHavingSumInput
  variancePopulation: ServiceOperatorsHavingVariancePopulationInput
  varianceSample: ServiceOperatorsHavingVarianceSampleInput
}

input ServiceOperatorsHavingMaxInput {
  createdAt: HavingIntFilter
}

input ServiceOperatorsHavingMinInput {
  createdAt: HavingIntFilter
}

input ServiceOperatorsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
}

input ServiceOperatorsHavingStddevSampleInput {
  createdAt: HavingIntFilter
}

input ServiceOperatorsHavingSumInput {
  createdAt: HavingIntFilter
}

input ServiceOperatorsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
}

input ServiceOperatorsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
}

"""Methods to use when ordering `ServiceOperator`."""
enum ServiceOperatorsOrderBy {
  CREATED_AT_ASC
  CREATED_AT_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICE_BY_SERVICE_ID__ASSET_IDS_ASC
  SERVICE_BY_SERVICE_ID__ASSET_IDS_DESC
  SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_ASC
  SERVICE_BY_SERVICE_ID__BLUEPRINT_ID_DESC
  SERVICE_BY_SERVICE_ID__CREATED_AT_ASC
  SERVICE_BY_SERVICE_ID__CREATED_AT_DESC
  SERVICE_BY_SERVICE_ID__ID_ASC
  SERVICE_BY_SERVICE_ID__ID_DESC
  SERVICE_BY_SERVICE_ID__OWNER_ID_ASC
  SERVICE_BY_SERVICE_ID__OWNER_ID_DESC
  SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_ASC
  SERVICE_BY_SERVICE_ID__SERVICE_REQUEST_ID_DESC
  SERVICE_BY_SERVICE_ID__TERMINATED_AT_ASC
  SERVICE_BY_SERVICE_ID__TERMINATED_AT_DESC
  SERVICE_ID_ASC
  SERVICE_ID_DESC
}

type ServiceRequest implements Node {
  """Reads and enables pagination through a set of `Account`."""
  accountsByServiceServiceRequestIdAndOwnerId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [accounts_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: AccountFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Account`."""
    orderBy: [AccountsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyConnection!
  """List of asset IDs associated with this Service Request."""
  assetIds: JSON!
  """Reads a single `Blueprint` that is related to this `ServiceRequest`."""
  blueprint: Blueprint
  """The blueprint associated with this Service Request."""
  blueprintId: String!
  """Reads and enables pagination through a set of `Blueprint`."""
  blueprintsByServiceServiceRequestIdAndBlueprintId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [blueprints_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: BlueprintFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Blueprint`."""
    orderBy: [BlueprintsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyConnection!
  """The creation block number of the Service Request."""
  createdAt: Int!
  """Unique identifier for the Service Request."""
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads and enables pagination through a set of `Operator`."""
  operatorsByServiceRequestOperatorServiceRequestIdAndOperatorId(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: OperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Operator`."""
    orderBy: [OperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyConnection!
  """Reads a single `Account` that is related to this `ServiceRequest`."""
  owner: Account
  """The owner of the Service Request."""
  ownerId: String!
  """
  Reads and enables pagination through a set of `ServiceRequestOperator`.
  """
  serviceRequestOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_request_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequestOperator`."""
    orderBy: [ServiceRequestOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestOperatorsConnection!
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

"""A connection to a list of `Account` values, with data from `Service`."""
type ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: AccountAggregates
  """
  A list of edges which contains the `Account`, info from the `Service`, and the cursor to aid in pagination.
  """
  edges: [ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Account` for these aggregates."""
    groupBy: [AccountsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: AccountsHavingInput
  ): [AccountAggregates!]
  """A list of `Account` objects."""
  nodes: [Account]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Account` you could get from the connection."""
  totalCount: Int!
}

"""A `Account` edge in the connection, with data from `Service`."""
type ServiceRequestAccountsByServiceServiceRequestIdAndOwnerIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Account` at the end of the edge."""
  node: Account
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

type ServiceRequestAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: ServiceRequestAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: ServiceRequestDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: ServiceRequestMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: ServiceRequestMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: ServiceRequestStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: ServiceRequestStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: ServiceRequestSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: ServiceRequestVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: ServiceRequestVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `ServiceRequest` object types.
"""
input ServiceRequestAggregatesFilter {
  """Mean average aggregate over matching `ServiceRequest` objects."""
  average: ServiceRequestAverageAggregateFilter
  """Distinct count aggregate over matching `ServiceRequest` objects."""
  distinctCount: ServiceRequestDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `ServiceRequest` object to be included within the aggregate.
  """
  filter: ServiceRequestFilter
  """Maximum aggregate over matching `ServiceRequest` objects."""
  max: ServiceRequestMaxAggregateFilter
  """Minimum aggregate over matching `ServiceRequest` objects."""
  min: ServiceRequestMinAggregateFilter
  """
  Population standard deviation aggregate over matching `ServiceRequest` objects.
  """
  stddevPopulation: ServiceRequestStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `ServiceRequest` objects.
  """
  stddevSample: ServiceRequestStddevSampleAggregateFilter
  """Sum aggregate over matching `ServiceRequest` objects."""
  sum: ServiceRequestSumAggregateFilter
  """Population variance aggregate over matching `ServiceRequest` objects."""
  variancePopulation: ServiceRequestVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `ServiceRequest` objects."""
  varianceSample: ServiceRequestVarianceSampleAggregateFilter
}

input ServiceRequestAverageAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceRequestAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
}

"""
A connection to a list of `Blueprint` values, with data from `Service`.
"""
type ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: BlueprintAggregates
  """
  A list of edges which contains the `Blueprint`, info from the `Service`, and the cursor to aid in pagination.
  """
  edges: [ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Blueprint` for these aggregates."""
    groupBy: [BlueprintsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: BlueprintsHavingInput
  ): [BlueprintAggregates!]
  """A list of `Blueprint` objects."""
  nodes: [Blueprint]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Blueprint` you could get from the connection."""
  totalCount: Int!
}

"""A `Blueprint` edge in the connection, with data from `Service`."""
type ServiceRequestBlueprintsByServiceServiceRequestIdAndBlueprintIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Blueprint` at the end of the edge."""
  node: Blueprint
  """Reads and enables pagination through a set of `Service`."""
  services(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [services_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `Service`."""
    orderBy: [ServicesOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServicesConnection!
}

input ServiceRequestDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  assetIds: BigIntFilter
  blueprintId: BigIntFilter
  createdAt: BigIntFilter
  id: BigIntFilter
  ownerId: BigIntFilter
}

type ServiceRequestDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of assetIds across the matching connection"""
  assetIds: BigInt
  """Distinct count of blueprintId across the matching connection"""
  blueprintId: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of ownerId across the matching connection"""
  ownerId: BigInt
}

"""
A filter to be used against `ServiceRequest` object types. All fields are combined with a logical ‘and.’
"""
input ServiceRequestFilter {
  """Checks for all expressions in this list."""
  and: [ServiceRequestFilter!]
  """Filter by the object’s `assetIds` field."""
  assetIds: JSONFilter
  """Filter by the object’s `blueprint` relation."""
  blueprint: BlueprintFilter
  """Filter by the object’s `blueprintId` field."""
  blueprintId: StringFilter
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: ServiceRequestFilter
  """Checks for any expressions in this list."""
  or: [ServiceRequestFilter!]
  """Filter by the object’s `owner` relation."""
  owner: AccountFilter
  """Filter by the object’s `ownerId` field."""
  ownerId: StringFilter
  """Filter by the object’s `serviceRequestOperators` relation."""
  serviceRequestOperators: ServiceRequestToManyServiceRequestOperatorFilter
  """Some related `serviceRequestOperators` exist."""
  serviceRequestOperatorsExist: Boolean
  """Filter by the object’s `services` relation."""
  services: ServiceRequestToManyServiceFilter
  """Some related `services` exist."""
  servicesExist: Boolean
}

input ServiceRequestMaxAggregateFilter {
  createdAt: IntFilter
}

type ServiceRequestMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
}

input ServiceRequestMinAggregateFilter {
  createdAt: IntFilter
}

type ServiceRequestMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
}

type ServiceRequestOperator implements Node {
  """The approval block number."""
  approvedAt: Int
  """The creation block number of the relationship."""
  createdAt: Int!
  """
  Unique identifier for the relationship. Composite key: Service Request ID + Operator ID
  """
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """
  Reads a single `Operator` that is related to this `ServiceRequestOperator`.
  """
  operator: Operator
  """The Operator associated with this relationship."""
  operatorId: String!
  """The rejection block number."""
  rejectedAt: Int
  """
  Reads a single `ServiceRequest` that is related to this `ServiceRequestOperator`.
  """
  serviceRequest: ServiceRequest
  """The Service Request associated with this relationship."""
  serviceRequestId: String!
}

type ServiceRequestOperatorAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: ServiceRequestOperatorAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: ServiceRequestOperatorDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: ServiceRequestOperatorMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: ServiceRequestOperatorMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: ServiceRequestOperatorStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: ServiceRequestOperatorStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: ServiceRequestOperatorSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: ServiceRequestOperatorVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: ServiceRequestOperatorVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `ServiceRequestOperator` object types.
"""
input ServiceRequestOperatorAggregatesFilter {
  """Mean average aggregate over matching `ServiceRequestOperator` objects."""
  average: ServiceRequestOperatorAverageAggregateFilter
  """
  Distinct count aggregate over matching `ServiceRequestOperator` objects.
  """
  distinctCount: ServiceRequestOperatorDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `ServiceRequestOperator` object to be included within the aggregate.
  """
  filter: ServiceRequestOperatorFilter
  """Maximum aggregate over matching `ServiceRequestOperator` objects."""
  max: ServiceRequestOperatorMaxAggregateFilter
  """Minimum aggregate over matching `ServiceRequestOperator` objects."""
  min: ServiceRequestOperatorMinAggregateFilter
  """
  Population standard deviation aggregate over matching `ServiceRequestOperator` objects.
  """
  stddevPopulation: ServiceRequestOperatorStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `ServiceRequestOperator` objects.
  """
  stddevSample: ServiceRequestOperatorStddevSampleAggregateFilter
  """Sum aggregate over matching `ServiceRequestOperator` objects."""
  sum: ServiceRequestOperatorSumAggregateFilter
  """
  Population variance aggregate over matching `ServiceRequestOperator` objects.
  """
  variancePopulation: ServiceRequestOperatorVariancePopulationAggregateFilter
  """
  Sample variance aggregate over matching `ServiceRequestOperator` objects.
  """
  varianceSample: ServiceRequestOperatorVarianceSampleAggregateFilter
}

input ServiceRequestOperatorAverageAggregateFilter {
  approvedAt: BigFloatFilter
  createdAt: BigFloatFilter
  rejectedAt: BigFloatFilter
}

type ServiceRequestOperatorAverageAggregates {
  """Mean average of approvedAt across the matching connection"""
  approvedAt: BigFloat
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
  """Mean average of rejectedAt across the matching connection"""
  rejectedAt: BigFloat
}

input ServiceRequestOperatorDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  approvedAt: BigIntFilter
  createdAt: BigIntFilter
  id: BigIntFilter
  operatorId: BigIntFilter
  rejectedAt: BigIntFilter
  serviceRequestId: BigIntFilter
}

type ServiceRequestOperatorDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of approvedAt across the matching connection"""
  approvedAt: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
  """Distinct count of rejectedAt across the matching connection"""
  rejectedAt: BigInt
  """Distinct count of serviceRequestId across the matching connection"""
  serviceRequestId: BigInt
}

"""
A filter to be used against `ServiceRequestOperator` object types. All fields are combined with a logical ‘and.’
"""
input ServiceRequestOperatorFilter {
  """Checks for all expressions in this list."""
  and: [ServiceRequestOperatorFilter!]
  """Filter by the object’s `approvedAt` field."""
  approvedAt: IntFilter
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: ServiceRequestOperatorFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [ServiceRequestOperatorFilter!]
  """Filter by the object’s `rejectedAt` field."""
  rejectedAt: IntFilter
  """Filter by the object’s `serviceRequest` relation."""
  serviceRequest: ServiceRequestFilter
  """Filter by the object’s `serviceRequestId` field."""
  serviceRequestId: StringFilter
}

input ServiceRequestOperatorMaxAggregateFilter {
  approvedAt: IntFilter
  createdAt: IntFilter
  rejectedAt: IntFilter
}

type ServiceRequestOperatorMaxAggregates {
  """Maximum of approvedAt across the matching connection"""
  approvedAt: Int
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
  """Maximum of rejectedAt across the matching connection"""
  rejectedAt: Int
}

input ServiceRequestOperatorMinAggregateFilter {
  approvedAt: IntFilter
  createdAt: IntFilter
  rejectedAt: IntFilter
}

type ServiceRequestOperatorMinAggregates {
  """Minimum of approvedAt across the matching connection"""
  approvedAt: Int
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
  """Minimum of rejectedAt across the matching connection"""
  rejectedAt: Int
}

input ServiceRequestOperatorStddevPopulationAggregateFilter {
  approvedAt: BigFloatFilter
  createdAt: BigFloatFilter
  rejectedAt: BigFloatFilter
}

type ServiceRequestOperatorStddevPopulationAggregates {
  """
  Population standard deviation of approvedAt across the matching connection
  """
  approvedAt: BigFloat
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
  """
  Population standard deviation of rejectedAt across the matching connection
  """
  rejectedAt: BigFloat
}

input ServiceRequestOperatorStddevSampleAggregateFilter {
  approvedAt: BigFloatFilter
  createdAt: BigFloatFilter
  rejectedAt: BigFloatFilter
}

type ServiceRequestOperatorStddevSampleAggregates {
  """Sample standard deviation of approvedAt across the matching connection"""
  approvedAt: BigFloat
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample standard deviation of rejectedAt across the matching connection"""
  rejectedAt: BigFloat
}

input ServiceRequestOperatorSumAggregateFilter {
  approvedAt: BigIntFilter
  createdAt: BigIntFilter
  rejectedAt: BigIntFilter
}

type ServiceRequestOperatorSumAggregates {
  """Sum of approvedAt across the matching connection"""
  approvedAt: BigInt!
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
  """Sum of rejectedAt across the matching connection"""
  rejectedAt: BigInt!
}

input ServiceRequestOperatorVariancePopulationAggregateFilter {
  approvedAt: BigFloatFilter
  createdAt: BigFloatFilter
  rejectedAt: BigFloatFilter
}

type ServiceRequestOperatorVariancePopulationAggregates {
  """Population variance of approvedAt across the matching connection"""
  approvedAt: BigFloat
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Population variance of rejectedAt across the matching connection"""
  rejectedAt: BigFloat
}

input ServiceRequestOperatorVarianceSampleAggregateFilter {
  approvedAt: BigFloatFilter
  createdAt: BigFloatFilter
  rejectedAt: BigFloatFilter
}

type ServiceRequestOperatorVarianceSampleAggregates {
  """Sample variance of approvedAt across the matching connection"""
  approvedAt: BigFloat
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample variance of rejectedAt across the matching connection"""
  rejectedAt: BigFloat
}

"""
A connection to a list of `Operator` values, with data from `ServiceRequestOperator`.
"""
type ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: OperatorAggregates
  """
  A list of edges which contains the `Operator`, info from the `ServiceRequestOperator`, and the cursor to aid in pagination.
  """
  edges: [ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Operator` for these aggregates."""
    groupBy: [OperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: OperatorsHavingInput
  ): [OperatorAggregates!]
  """A list of `Operator` objects."""
  nodes: [Operator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Operator` you could get from the connection."""
  totalCount: Int!
}

"""
A `Operator` edge in the connection, with data from `ServiceRequestOperator`.
"""
type ServiceRequestOperatorsByServiceRequestOperatorServiceRequestIdAndOperatorIdManyToManyEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Operator` at the end of the edge."""
  node: Operator
  """
  Reads and enables pagination through a set of `ServiceRequestOperator`.
  """
  serviceRequestOperators(
    """Read all values in the set after (below) this cursor."""
    after: Cursor
    """Read all values in the set before (above) this cursor."""
    before: Cursor
    """When specified, the query will return results as of this block height"""
    blockHeight: String = "9223372036854775807"
    """Fields to be distinct"""
    distinct: [service_request_operators_distinct_enum] = null
    """
    A filter to be used in determining which values should be returned by the collection.
    """
    filter: ServiceRequestOperatorFilter
    """Only read the first `n` values of the set."""
    first: Int
    """Only read the last `n` values of the set."""
    last: Int
    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int
    """The method to use when ordering `ServiceRequestOperator`."""
    orderBy: [ServiceRequestOperatorsOrderBy!]
    """Specify ordering of null values (NULLS_FIRST or NULLS_LAST)."""
    orderByNull: NullOrder
  ): ServiceRequestOperatorsConnection!
}

"""A connection to a list of `ServiceRequestOperator` values."""
type ServiceRequestOperatorsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceRequestOperatorAggregates
  """
  A list of edges which contains the `ServiceRequestOperator` and cursor to aid in pagination.
  """
  edges: [ServiceRequestOperatorsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `ServiceRequestOperator` for these aggregates.
    """
    groupBy: [ServiceRequestOperatorsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServiceRequestOperatorsHavingInput
  ): [ServiceRequestOperatorAggregates!]
  """A list of `ServiceRequestOperator` objects."""
  nodes: [ServiceRequestOperator]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `ServiceRequestOperator` you could get from the connection.
  """
  totalCount: Int!
}

"""A `ServiceRequestOperator` edge in the connection."""
type ServiceRequestOperatorsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `ServiceRequestOperator` at the end of the edge."""
  node: ServiceRequestOperator
}

"""
Grouping methods for `ServiceRequestOperator` for usage during aggregation.
"""
enum ServiceRequestOperatorsGroupBy {
  APPROVED_AT
  CREATED_AT
  ID
  OPERATOR_ID
  REJECTED_AT
  SERVICE_REQUEST_ID
}

input ServiceRequestOperatorsHavingAverageInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

input ServiceRequestOperatorsHavingDistinctCountInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

"""Conditions for `ServiceRequestOperator` aggregates."""
input ServiceRequestOperatorsHavingInput {
  AND: [ServiceRequestOperatorsHavingInput!]
  OR: [ServiceRequestOperatorsHavingInput!]
  average: ServiceRequestOperatorsHavingAverageInput
  distinctCount: ServiceRequestOperatorsHavingDistinctCountInput
  max: ServiceRequestOperatorsHavingMaxInput
  min: ServiceRequestOperatorsHavingMinInput
  stddevPopulation: ServiceRequestOperatorsHavingStddevPopulationInput
  stddevSample: ServiceRequestOperatorsHavingStddevSampleInput
  sum: ServiceRequestOperatorsHavingSumInput
  variancePopulation: ServiceRequestOperatorsHavingVariancePopulationInput
  varianceSample: ServiceRequestOperatorsHavingVarianceSampleInput
}

input ServiceRequestOperatorsHavingMaxInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

input ServiceRequestOperatorsHavingMinInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

input ServiceRequestOperatorsHavingStddevPopulationInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

input ServiceRequestOperatorsHavingStddevSampleInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

input ServiceRequestOperatorsHavingSumInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

input ServiceRequestOperatorsHavingVariancePopulationInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

input ServiceRequestOperatorsHavingVarianceSampleInput {
  approvedAt: HavingIntFilter
  createdAt: HavingIntFilter
  rejectedAt: HavingIntFilter
}

"""Methods to use when ordering `ServiceRequestOperator`."""
enum ServiceRequestOperatorsOrderBy {
  APPROVED_AT_ASC
  APPROVED_AT_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  REJECTED_AT_ASC
  REJECTED_AT_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_DESC
  SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_ID_DESC
}

input ServiceRequestStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceRequestStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
}

input ServiceRequestStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceRequestStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
}

input ServiceRequestSumAggregateFilter {
  createdAt: BigIntFilter
}

type ServiceRequestSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
}

"""
A filter to be used against many `Service` object types. All fields are combined with a logical ‘and.’
"""
input ServiceRequestToManyServiceFilter {
  """Aggregates across related `Service` match the filter criteria."""
  aggregates: ServiceAggregatesFilter
  """
  Every related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceFilter
  """
  No related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceFilter
  """
  Some related `Service` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceFilter
}

"""
A filter to be used against many `ServiceRequestOperator` object types. All fields are combined with a logical ‘and.’
"""
input ServiceRequestToManyServiceRequestOperatorFilter {
  """
  Aggregates across related `ServiceRequestOperator` match the filter criteria.
  """
  aggregates: ServiceRequestOperatorAggregatesFilter
  """
  Every related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceRequestOperatorFilter
  """
  No related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceRequestOperatorFilter
  """
  Some related `ServiceRequestOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceRequestOperatorFilter
}

input ServiceRequestVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceRequestVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

input ServiceRequestVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
}

type ServiceRequestVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
}

"""A connection to a list of `ServiceRequest` values."""
type ServiceRequestsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceRequestAggregates
  """
  A list of edges which contains the `ServiceRequest` and cursor to aid in pagination.
  """
  edges: [ServiceRequestsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `ServiceRequest` for these aggregates."""
    groupBy: [ServiceRequestsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServiceRequestsHavingInput
  ): [ServiceRequestAggregates!]
  """A list of `ServiceRequest` objects."""
  nodes: [ServiceRequest]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `ServiceRequest` you could get from the connection."""
  totalCount: Int!
}

"""A `ServiceRequest` edge in the connection."""
type ServiceRequestsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `ServiceRequest` at the end of the edge."""
  node: ServiceRequest
}

"""Grouping methods for `ServiceRequest` for usage during aggregation."""
enum ServiceRequestsGroupBy {
  ASSET_IDS
  BLUEPRINT_ID
  CREATED_AT
  ID
  OWNER_ID
}

input ServiceRequestsHavingAverageInput {
  createdAt: HavingIntFilter
}

input ServiceRequestsHavingDistinctCountInput {
  createdAt: HavingIntFilter
}

"""Conditions for `ServiceRequest` aggregates."""
input ServiceRequestsHavingInput {
  AND: [ServiceRequestsHavingInput!]
  OR: [ServiceRequestsHavingInput!]
  average: ServiceRequestsHavingAverageInput
  distinctCount: ServiceRequestsHavingDistinctCountInput
  max: ServiceRequestsHavingMaxInput
  min: ServiceRequestsHavingMinInput
  stddevPopulation: ServiceRequestsHavingStddevPopulationInput
  stddevSample: ServiceRequestsHavingStddevSampleInput
  sum: ServiceRequestsHavingSumInput
  variancePopulation: ServiceRequestsHavingVariancePopulationInput
  varianceSample: ServiceRequestsHavingVarianceSampleInput
}

input ServiceRequestsHavingMaxInput {
  createdAt: HavingIntFilter
}

input ServiceRequestsHavingMinInput {
  createdAt: HavingIntFilter
}

input ServiceRequestsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
}

input ServiceRequestsHavingStddevSampleInput {
  createdAt: HavingIntFilter
}

input ServiceRequestsHavingSumInput {
  createdAt: HavingIntFilter
}

input ServiceRequestsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
}

input ServiceRequestsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
}

"""Methods to use when ordering `ServiceRequest`."""
enum ServiceRequestsOrderBy {
  ACCOUNT_BY_OWNER_ID__CREATED_AT_ASC
  ACCOUNT_BY_OWNER_ID__CREATED_AT_DESC
  ACCOUNT_BY_OWNER_ID__ID_ASC
  ACCOUNT_BY_OWNER_ID__ID_DESC
  ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_DESC
  ASSET_IDS_ASC
  ASSET_IDS_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__ID_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__ID_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_DESC
  BLUEPRINT_ID_ASC
  BLUEPRINT_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OWNER_ID_ASC
  OWNER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICES_AVERAGE_ASSET_IDS_ASC
  SERVICES_AVERAGE_ASSET_IDS_DESC
  SERVICES_AVERAGE_BLOCK_RANGE_ASC
  SERVICES_AVERAGE_BLOCK_RANGE_DESC
  SERVICES_AVERAGE_BLUEPRINT_ID_ASC
  SERVICES_AVERAGE_BLUEPRINT_ID_DESC
  SERVICES_AVERAGE_CREATED_AT_ASC
  SERVICES_AVERAGE_CREATED_AT_DESC
  SERVICES_AVERAGE_ID_ASC
  SERVICES_AVERAGE_ID_DESC
  SERVICES_AVERAGE_OWNER_ID_ASC
  SERVICES_AVERAGE_OWNER_ID_DESC
  SERVICES_AVERAGE_SERVICE_REQUEST_ID_ASC
  SERVICES_AVERAGE_SERVICE_REQUEST_ID_DESC
  SERVICES_AVERAGE_TERMINATED_AT_ASC
  SERVICES_AVERAGE_TERMINATED_AT_DESC
  SERVICES_BY_SERVICE_REQUEST_ID__COUNT_ASC
  SERVICES_BY_SERVICE_REQUEST_ID__COUNT_DESC
  SERVICES_COUNT_ASC
  SERVICES_COUNT_DESC
  SERVICES_DISTINCT_COUNT_ASSET_IDS_ASC
  SERVICES_DISTINCT_COUNT_ASSET_IDS_DESC
  SERVICES_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICES_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_ASC
  SERVICES_DISTINCT_COUNT_BLUEPRINT_ID_DESC
  SERVICES_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICES_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICES_DISTINCT_COUNT_ID_ASC
  SERVICES_DISTINCT_COUNT_ID_DESC
  SERVICES_DISTINCT_COUNT_OWNER_ID_ASC
  SERVICES_DISTINCT_COUNT_OWNER_ID_DESC
  SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC
  SERVICES_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC
  SERVICES_DISTINCT_COUNT_TERMINATED_AT_ASC
  SERVICES_DISTINCT_COUNT_TERMINATED_AT_DESC
  SERVICES_MAX_ASSET_IDS_ASC
  SERVICES_MAX_ASSET_IDS_DESC
  SERVICES_MAX_BLOCK_RANGE_ASC
  SERVICES_MAX_BLOCK_RANGE_DESC
  SERVICES_MAX_BLUEPRINT_ID_ASC
  SERVICES_MAX_BLUEPRINT_ID_DESC
  SERVICES_MAX_CREATED_AT_ASC
  SERVICES_MAX_CREATED_AT_DESC
  SERVICES_MAX_ID_ASC
  SERVICES_MAX_ID_DESC
  SERVICES_MAX_OWNER_ID_ASC
  SERVICES_MAX_OWNER_ID_DESC
  SERVICES_MAX_SERVICE_REQUEST_ID_ASC
  SERVICES_MAX_SERVICE_REQUEST_ID_DESC
  SERVICES_MAX_TERMINATED_AT_ASC
  SERVICES_MAX_TERMINATED_AT_DESC
  SERVICES_MIN_ASSET_IDS_ASC
  SERVICES_MIN_ASSET_IDS_DESC
  SERVICES_MIN_BLOCK_RANGE_ASC
  SERVICES_MIN_BLOCK_RANGE_DESC
  SERVICES_MIN_BLUEPRINT_ID_ASC
  SERVICES_MIN_BLUEPRINT_ID_DESC
  SERVICES_MIN_CREATED_AT_ASC
  SERVICES_MIN_CREATED_AT_DESC
  SERVICES_MIN_ID_ASC
  SERVICES_MIN_ID_DESC
  SERVICES_MIN_OWNER_ID_ASC
  SERVICES_MIN_OWNER_ID_DESC
  SERVICES_MIN_SERVICE_REQUEST_ID_ASC
  SERVICES_MIN_SERVICE_REQUEST_ID_DESC
  SERVICES_MIN_TERMINATED_AT_ASC
  SERVICES_MIN_TERMINATED_AT_DESC
  SERVICES_STDDEV_POPULATION_ASSET_IDS_ASC
  SERVICES_STDDEV_POPULATION_ASSET_IDS_DESC
  SERVICES_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICES_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_ASC
  SERVICES_STDDEV_POPULATION_BLUEPRINT_ID_DESC
  SERVICES_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICES_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICES_STDDEV_POPULATION_ID_ASC
  SERVICES_STDDEV_POPULATION_ID_DESC
  SERVICES_STDDEV_POPULATION_OWNER_ID_ASC
  SERVICES_STDDEV_POPULATION_OWNER_ID_DESC
  SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICES_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICES_STDDEV_POPULATION_TERMINATED_AT_ASC
  SERVICES_STDDEV_POPULATION_TERMINATED_AT_DESC
  SERVICES_STDDEV_SAMPLE_ASSET_IDS_ASC
  SERVICES_STDDEV_SAMPLE_ASSET_IDS_DESC
  SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICES_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_ASC
  SERVICES_STDDEV_SAMPLE_BLUEPRINT_ID_DESC
  SERVICES_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICES_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICES_STDDEV_SAMPLE_ID_ASC
  SERVICES_STDDEV_SAMPLE_ID_DESC
  SERVICES_STDDEV_SAMPLE_OWNER_ID_ASC
  SERVICES_STDDEV_SAMPLE_OWNER_ID_DESC
  SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICES_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICES_STDDEV_SAMPLE_TERMINATED_AT_ASC
  SERVICES_STDDEV_SAMPLE_TERMINATED_AT_DESC
  SERVICES_SUM_ASSET_IDS_ASC
  SERVICES_SUM_ASSET_IDS_DESC
  SERVICES_SUM_BLOCK_RANGE_ASC
  SERVICES_SUM_BLOCK_RANGE_DESC
  SERVICES_SUM_BLUEPRINT_ID_ASC
  SERVICES_SUM_BLUEPRINT_ID_DESC
  SERVICES_SUM_CREATED_AT_ASC
  SERVICES_SUM_CREATED_AT_DESC
  SERVICES_SUM_ID_ASC
  SERVICES_SUM_ID_DESC
  SERVICES_SUM_OWNER_ID_ASC
  SERVICES_SUM_OWNER_ID_DESC
  SERVICES_SUM_SERVICE_REQUEST_ID_ASC
  SERVICES_SUM_SERVICE_REQUEST_ID_DESC
  SERVICES_SUM_TERMINATED_AT_ASC
  SERVICES_SUM_TERMINATED_AT_DESC
  SERVICES_VARIANCE_POPULATION_ASSET_IDS_ASC
  SERVICES_VARIANCE_POPULATION_ASSET_IDS_DESC
  SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICES_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_ASC
  SERVICES_VARIANCE_POPULATION_BLUEPRINT_ID_DESC
  SERVICES_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICES_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICES_VARIANCE_POPULATION_ID_ASC
  SERVICES_VARIANCE_POPULATION_ID_DESC
  SERVICES_VARIANCE_POPULATION_OWNER_ID_ASC
  SERVICES_VARIANCE_POPULATION_OWNER_ID_DESC
  SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICES_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICES_VARIANCE_POPULATION_TERMINATED_AT_ASC
  SERVICES_VARIANCE_POPULATION_TERMINATED_AT_DESC
  SERVICES_VARIANCE_SAMPLE_ASSET_IDS_ASC
  SERVICES_VARIANCE_SAMPLE_ASSET_IDS_DESC
  SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICES_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_ASC
  SERVICES_VARIANCE_SAMPLE_BLUEPRINT_ID_DESC
  SERVICES_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICES_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICES_VARIANCE_SAMPLE_ID_ASC
  SERVICES_VARIANCE_SAMPLE_ID_DESC
  SERVICES_VARIANCE_SAMPLE_OWNER_ID_ASC
  SERVICES_VARIANCE_SAMPLE_OWNER_ID_DESC
  SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICES_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_ASC
  SERVICES_VARIANCE_SAMPLE_TERMINATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_ID_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_ID_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_AVERAGE_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_BY_SERVICE_REQUEST_ID__COUNT_ASC
  SERVICE_REQUEST_OPERATORS_BY_SERVICE_REQUEST_ID__COUNT_DESC
  SERVICE_REQUEST_OPERATORS_COUNT_ASC
  SERVICE_REQUEST_OPERATORS_COUNT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_ID_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_DISTINCT_COUNT_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MAX_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_MAX_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MAX_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MAX_ID_ASC
  SERVICE_REQUEST_OPERATORS_MAX_ID_DESC
  SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_MAX_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MAX_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_MAX_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MIN_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_MIN_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MIN_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MIN_ID_ASC
  SERVICE_REQUEST_OPERATORS_MIN_ID_DESC
  SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_MIN_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_MIN_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_MIN_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_STDDEV_SAMPLE_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_SUM_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_SUM_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_SUM_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_SUM_ID_ASC
  SERVICE_REQUEST_OPERATORS_SUM_ID_DESC
  SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_SUM_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_SUM_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_SUM_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_POPULATION_SERVICE_REQUEST_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_APPROVED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_REJECTED_AT_DESC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_OPERATORS_VARIANCE_SAMPLE_SERVICE_REQUEST_ID_DESC
}

input ServiceStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
  terminatedAt: BigFloatFilter
}

type ServiceStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
  """
  Population standard deviation of terminatedAt across the matching connection
  """
  terminatedAt: BigFloat
}

input ServiceStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
  terminatedAt: BigFloatFilter
}

type ServiceStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
  """
  Sample standard deviation of terminatedAt across the matching connection
  """
  terminatedAt: BigFloat
}

input ServiceSumAggregateFilter {
  createdAt: BigIntFilter
  terminatedAt: BigIntFilter
}

type ServiceSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
  """Sum of terminatedAt across the matching connection"""
  terminatedAt: BigInt!
}

"""
A filter to be used against many `JobCall` object types. All fields are combined with a logical ‘and.’
"""
input ServiceToManyJobCallFilter {
  """Aggregates across related `JobCall` match the filter criteria."""
  aggregates: JobCallAggregatesFilter
  """
  Every related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: JobCallFilter
  """
  No related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: JobCallFilter
  """
  Some related `JobCall` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: JobCallFilter
}

"""
A filter to be used against many `JobResult` object types. All fields are combined with a logical ‘and.’
"""
input ServiceToManyJobResultFilter {
  """Aggregates across related `JobResult` match the filter criteria."""
  aggregates: JobResultAggregatesFilter
  """
  Every related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: JobResultFilter
  """
  No related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: JobResultFilter
  """
  Some related `JobResult` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: JobResultFilter
}

"""
A filter to be used against many `ServiceOperator` object types. All fields are combined with a logical ‘and.’
"""
input ServiceToManyServiceOperatorFilter {
  """Aggregates across related `ServiceOperator` match the filter criteria."""
  aggregates: ServiceOperatorAggregatesFilter
  """
  Every related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  every: ServiceOperatorFilter
  """
  No related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  none: ServiceOperatorFilter
  """
  Some related `ServiceOperator` matches the filter criteria. All fields are combined with a logical ‘and.’
  """
  some: ServiceOperatorFilter
}

input ServiceVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
  terminatedAt: BigFloatFilter
}

type ServiceVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Population variance of terminatedAt across the matching connection"""
  terminatedAt: BigFloat
}

input ServiceVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
  terminatedAt: BigFloatFilter
}

type ServiceVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample variance of terminatedAt across the matching connection"""
  terminatedAt: BigFloat
}

"""A connection to a list of `Service` values."""
type ServicesConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: ServiceAggregates
  """
  A list of edges which contains the `Service` and cursor to aid in pagination.
  """
  edges: [ServicesEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Service` for these aggregates."""
    groupBy: [ServicesGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: ServicesHavingInput
  ): [ServiceAggregates!]
  """A list of `Service` objects."""
  nodes: [Service]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Service` you could get from the connection."""
  totalCount: Int!
}

"""A `Service` edge in the connection."""
type ServicesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Service` at the end of the edge."""
  node: Service
}

"""Grouping methods for `Service` for usage during aggregation."""
enum ServicesGroupBy {
  ASSET_IDS
  BLUEPRINT_ID
  CREATED_AT
  ID
  OWNER_ID
  SERVICE_REQUEST_ID
  TERMINATED_AT
}

input ServicesHavingAverageInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

input ServicesHavingDistinctCountInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

"""Conditions for `Service` aggregates."""
input ServicesHavingInput {
  AND: [ServicesHavingInput!]
  OR: [ServicesHavingInput!]
  average: ServicesHavingAverageInput
  distinctCount: ServicesHavingDistinctCountInput
  max: ServicesHavingMaxInput
  min: ServicesHavingMinInput
  stddevPopulation: ServicesHavingStddevPopulationInput
  stddevSample: ServicesHavingStddevSampleInput
  sum: ServicesHavingSumInput
  variancePopulation: ServicesHavingVariancePopulationInput
  varianceSample: ServicesHavingVarianceSampleInput
}

input ServicesHavingMaxInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

input ServicesHavingMinInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

input ServicesHavingStddevPopulationInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

input ServicesHavingStddevSampleInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

input ServicesHavingSumInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

input ServicesHavingVariancePopulationInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

input ServicesHavingVarianceSampleInput {
  createdAt: HavingIntFilter
  terminatedAt: HavingIntFilter
}

"""Methods to use when ordering `Service`."""
enum ServicesOrderBy {
  ACCOUNT_BY_OWNER_ID__CREATED_AT_ASC
  ACCOUNT_BY_OWNER_ID__CREATED_AT_DESC
  ACCOUNT_BY_OWNER_ID__ID_ASC
  ACCOUNT_BY_OWNER_ID__ID_DESC
  ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_ASC
  ACCOUNT_BY_OWNER_ID__LAST_UPDATE_AT_DESC
  ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_ASC
  ACCOUNT_BY_OWNER_ID__TOTAL_POINTS_DESC
  ASSET_IDS_ASC
  ASSET_IDS_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__CREATED_AT_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__ID_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__ID_DESC
  BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_ASC
  BLUEPRINT_BY_BLUEPRINT_ID__OWNER_ID_DESC
  BLUEPRINT_ID_ASC
  BLUEPRINT_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  ID_ASC
  ID_DESC
  JOB_CALLS_AVERAGE_BLOCK_RANGE_ASC
  JOB_CALLS_AVERAGE_BLOCK_RANGE_DESC
  JOB_CALLS_AVERAGE_CALLER_ID_ASC
  JOB_CALLS_AVERAGE_CALLER_ID_DESC
  JOB_CALLS_AVERAGE_CREATED_AT_ASC
  JOB_CALLS_AVERAGE_CREATED_AT_DESC
  JOB_CALLS_AVERAGE_ID_ASC
  JOB_CALLS_AVERAGE_ID_DESC
  JOB_CALLS_AVERAGE_JOB_ID_ASC
  JOB_CALLS_AVERAGE_JOB_ID_DESC
  JOB_CALLS_AVERAGE_SERVICE_ID_ASC
  JOB_CALLS_AVERAGE_SERVICE_ID_DESC
  JOB_CALLS_BY_SERVICE_ID__COUNT_ASC
  JOB_CALLS_BY_SERVICE_ID__COUNT_DESC
  JOB_CALLS_COUNT_ASC
  JOB_CALLS_COUNT_DESC
  JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  JOB_CALLS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  JOB_CALLS_DISTINCT_COUNT_CALLER_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_CALLER_ID_DESC
  JOB_CALLS_DISTINCT_COUNT_CREATED_AT_ASC
  JOB_CALLS_DISTINCT_COUNT_CREATED_AT_DESC
  JOB_CALLS_DISTINCT_COUNT_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_ID_DESC
  JOB_CALLS_DISTINCT_COUNT_JOB_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_JOB_ID_DESC
  JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_ASC
  JOB_CALLS_DISTINCT_COUNT_SERVICE_ID_DESC
  JOB_CALLS_MAX_BLOCK_RANGE_ASC
  JOB_CALLS_MAX_BLOCK_RANGE_DESC
  JOB_CALLS_MAX_CALLER_ID_ASC
  JOB_CALLS_MAX_CALLER_ID_DESC
  JOB_CALLS_MAX_CREATED_AT_ASC
  JOB_CALLS_MAX_CREATED_AT_DESC
  JOB_CALLS_MAX_ID_ASC
  JOB_CALLS_MAX_ID_DESC
  JOB_CALLS_MAX_JOB_ID_ASC
  JOB_CALLS_MAX_JOB_ID_DESC
  JOB_CALLS_MAX_SERVICE_ID_ASC
  JOB_CALLS_MAX_SERVICE_ID_DESC
  JOB_CALLS_MIN_BLOCK_RANGE_ASC
  JOB_CALLS_MIN_BLOCK_RANGE_DESC
  JOB_CALLS_MIN_CALLER_ID_ASC
  JOB_CALLS_MIN_CALLER_ID_DESC
  JOB_CALLS_MIN_CREATED_AT_ASC
  JOB_CALLS_MIN_CREATED_AT_DESC
  JOB_CALLS_MIN_ID_ASC
  JOB_CALLS_MIN_ID_DESC
  JOB_CALLS_MIN_JOB_ID_ASC
  JOB_CALLS_MIN_JOB_ID_DESC
  JOB_CALLS_MIN_SERVICE_ID_ASC
  JOB_CALLS_MIN_SERVICE_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  JOB_CALLS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  JOB_CALLS_STDDEV_POPULATION_CALLER_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_CALLER_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_CREATED_AT_ASC
  JOB_CALLS_STDDEV_POPULATION_CREATED_AT_DESC
  JOB_CALLS_STDDEV_POPULATION_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_JOB_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_JOB_ID_DESC
  JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_ASC
  JOB_CALLS_STDDEV_POPULATION_SERVICE_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  JOB_CALLS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_CALLER_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_ASC
  JOB_CALLS_STDDEV_SAMPLE_CREATED_AT_DESC
  JOB_CALLS_STDDEV_SAMPLE_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_JOB_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_JOB_ID_DESC
  JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_ASC
  JOB_CALLS_STDDEV_SAMPLE_SERVICE_ID_DESC
  JOB_CALLS_SUM_BLOCK_RANGE_ASC
  JOB_CALLS_SUM_BLOCK_RANGE_DESC
  JOB_CALLS_SUM_CALLER_ID_ASC
  JOB_CALLS_SUM_CALLER_ID_DESC
  JOB_CALLS_SUM_CREATED_AT_ASC
  JOB_CALLS_SUM_CREATED_AT_DESC
  JOB_CALLS_SUM_ID_ASC
  JOB_CALLS_SUM_ID_DESC
  JOB_CALLS_SUM_JOB_ID_ASC
  JOB_CALLS_SUM_JOB_ID_DESC
  JOB_CALLS_SUM_SERVICE_ID_ASC
  JOB_CALLS_SUM_SERVICE_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  JOB_CALLS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_CALLER_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_ASC
  JOB_CALLS_VARIANCE_POPULATION_CREATED_AT_DESC
  JOB_CALLS_VARIANCE_POPULATION_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_JOB_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_JOB_ID_DESC
  JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_ASC
  JOB_CALLS_VARIANCE_POPULATION_SERVICE_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  JOB_CALLS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_CALLER_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_ASC
  JOB_CALLS_VARIANCE_SAMPLE_CREATED_AT_DESC
  JOB_CALLS_VARIANCE_SAMPLE_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_JOB_ID_DESC
  JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_ASC
  JOB_CALLS_VARIANCE_SAMPLE_SERVICE_ID_DESC
  JOB_RESULTS_AVERAGE_BLOCK_RANGE_ASC
  JOB_RESULTS_AVERAGE_BLOCK_RANGE_DESC
  JOB_RESULTS_AVERAGE_CREATED_AT_ASC
  JOB_RESULTS_AVERAGE_CREATED_AT_DESC
  JOB_RESULTS_AVERAGE_ID_ASC
  JOB_RESULTS_AVERAGE_ID_DESC
  JOB_RESULTS_AVERAGE_JOB_CALL_ID_ASC
  JOB_RESULTS_AVERAGE_JOB_CALL_ID_DESC
  JOB_RESULTS_AVERAGE_OPERATOR_ID_ASC
  JOB_RESULTS_AVERAGE_OPERATOR_ID_DESC
  JOB_RESULTS_AVERAGE_SERVICE_ID_ASC
  JOB_RESULTS_AVERAGE_SERVICE_ID_DESC
  JOB_RESULTS_BY_SERVICE_ID__COUNT_ASC
  JOB_RESULTS_BY_SERVICE_ID__COUNT_DESC
  JOB_RESULTS_COUNT_ASC
  JOB_RESULTS_COUNT_DESC
  JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  JOB_RESULTS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_ASC
  JOB_RESULTS_DISTINCT_COUNT_CREATED_AT_DESC
  JOB_RESULTS_DISTINCT_COUNT_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_JOB_CALL_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_OPERATOR_ID_DESC
  JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_ASC
  JOB_RESULTS_DISTINCT_COUNT_SERVICE_ID_DESC
  JOB_RESULTS_MAX_BLOCK_RANGE_ASC
  JOB_RESULTS_MAX_BLOCK_RANGE_DESC
  JOB_RESULTS_MAX_CREATED_AT_ASC
  JOB_RESULTS_MAX_CREATED_AT_DESC
  JOB_RESULTS_MAX_ID_ASC
  JOB_RESULTS_MAX_ID_DESC
  JOB_RESULTS_MAX_JOB_CALL_ID_ASC
  JOB_RESULTS_MAX_JOB_CALL_ID_DESC
  JOB_RESULTS_MAX_OPERATOR_ID_ASC
  JOB_RESULTS_MAX_OPERATOR_ID_DESC
  JOB_RESULTS_MAX_SERVICE_ID_ASC
  JOB_RESULTS_MAX_SERVICE_ID_DESC
  JOB_RESULTS_MIN_BLOCK_RANGE_ASC
  JOB_RESULTS_MIN_BLOCK_RANGE_DESC
  JOB_RESULTS_MIN_CREATED_AT_ASC
  JOB_RESULTS_MIN_CREATED_AT_DESC
  JOB_RESULTS_MIN_ID_ASC
  JOB_RESULTS_MIN_ID_DESC
  JOB_RESULTS_MIN_JOB_CALL_ID_ASC
  JOB_RESULTS_MIN_JOB_CALL_ID_DESC
  JOB_RESULTS_MIN_OPERATOR_ID_ASC
  JOB_RESULTS_MIN_OPERATOR_ID_DESC
  JOB_RESULTS_MIN_SERVICE_ID_ASC
  JOB_RESULTS_MIN_SERVICE_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  JOB_RESULTS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_ASC
  JOB_RESULTS_STDDEV_POPULATION_CREATED_AT_DESC
  JOB_RESULTS_STDDEV_POPULATION_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_JOB_CALL_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_OPERATOR_ID_DESC
  JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_ASC
  JOB_RESULTS_STDDEV_POPULATION_SERVICE_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  JOB_RESULTS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_ASC
  JOB_RESULTS_STDDEV_SAMPLE_CREATED_AT_DESC
  JOB_RESULTS_STDDEV_SAMPLE_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_JOB_CALL_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_ASC
  JOB_RESULTS_STDDEV_SAMPLE_SERVICE_ID_DESC
  JOB_RESULTS_SUM_BLOCK_RANGE_ASC
  JOB_RESULTS_SUM_BLOCK_RANGE_DESC
  JOB_RESULTS_SUM_CREATED_AT_ASC
  JOB_RESULTS_SUM_CREATED_AT_DESC
  JOB_RESULTS_SUM_ID_ASC
  JOB_RESULTS_SUM_ID_DESC
  JOB_RESULTS_SUM_JOB_CALL_ID_ASC
  JOB_RESULTS_SUM_JOB_CALL_ID_DESC
  JOB_RESULTS_SUM_OPERATOR_ID_ASC
  JOB_RESULTS_SUM_OPERATOR_ID_DESC
  JOB_RESULTS_SUM_SERVICE_ID_ASC
  JOB_RESULTS_SUM_SERVICE_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  JOB_RESULTS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_ASC
  JOB_RESULTS_VARIANCE_POPULATION_CREATED_AT_DESC
  JOB_RESULTS_VARIANCE_POPULATION_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_JOB_CALL_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_ASC
  JOB_RESULTS_VARIANCE_POPULATION_SERVICE_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_CREATED_AT_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_JOB_CALL_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_ASC
  JOB_RESULTS_VARIANCE_SAMPLE_SERVICE_ID_DESC
  NATURAL
  OWNER_ID_ASC
  OWNER_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_AVERAGE_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_AVERAGE_CREATED_AT_ASC
  SERVICE_OPERATORS_AVERAGE_CREATED_AT_DESC
  SERVICE_OPERATORS_AVERAGE_ID_ASC
  SERVICE_OPERATORS_AVERAGE_ID_DESC
  SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_ASC
  SERVICE_OPERATORS_AVERAGE_OPERATOR_ID_DESC
  SERVICE_OPERATORS_AVERAGE_SERVICE_ID_ASC
  SERVICE_OPERATORS_AVERAGE_SERVICE_ID_DESC
  SERVICE_OPERATORS_BY_SERVICE_ID__COUNT_ASC
  SERVICE_OPERATORS_BY_SERVICE_ID__COUNT_DESC
  SERVICE_OPERATORS_COUNT_ASC
  SERVICE_OPERATORS_COUNT_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_CREATED_AT_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_ID_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_ID_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_OPERATOR_ID_DESC
  SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_ASC
  SERVICE_OPERATORS_DISTINCT_COUNT_SERVICE_ID_DESC
  SERVICE_OPERATORS_MAX_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_MAX_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_MAX_CREATED_AT_ASC
  SERVICE_OPERATORS_MAX_CREATED_AT_DESC
  SERVICE_OPERATORS_MAX_ID_ASC
  SERVICE_OPERATORS_MAX_ID_DESC
  SERVICE_OPERATORS_MAX_OPERATOR_ID_ASC
  SERVICE_OPERATORS_MAX_OPERATOR_ID_DESC
  SERVICE_OPERATORS_MAX_SERVICE_ID_ASC
  SERVICE_OPERATORS_MAX_SERVICE_ID_DESC
  SERVICE_OPERATORS_MIN_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_MIN_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_MIN_CREATED_AT_ASC
  SERVICE_OPERATORS_MIN_CREATED_AT_DESC
  SERVICE_OPERATORS_MIN_ID_ASC
  SERVICE_OPERATORS_MIN_ID_DESC
  SERVICE_OPERATORS_MIN_OPERATOR_ID_ASC
  SERVICE_OPERATORS_MIN_OPERATOR_ID_DESC
  SERVICE_OPERATORS_MIN_SERVICE_ID_ASC
  SERVICE_OPERATORS_MIN_SERVICE_ID_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_CREATED_AT_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_ID_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_ID_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_OPERATOR_ID_DESC
  SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_ASC
  SERVICE_OPERATORS_STDDEV_POPULATION_SERVICE_ID_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_CREATED_AT_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_ID_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_ID_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_OPERATOR_ID_DESC
  SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_ASC
  SERVICE_OPERATORS_STDDEV_SAMPLE_SERVICE_ID_DESC
  SERVICE_OPERATORS_SUM_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_SUM_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_SUM_CREATED_AT_ASC
  SERVICE_OPERATORS_SUM_CREATED_AT_DESC
  SERVICE_OPERATORS_SUM_ID_ASC
  SERVICE_OPERATORS_SUM_ID_DESC
  SERVICE_OPERATORS_SUM_OPERATOR_ID_ASC
  SERVICE_OPERATORS_SUM_OPERATOR_ID_DESC
  SERVICE_OPERATORS_SUM_SERVICE_ID_ASC
  SERVICE_OPERATORS_SUM_SERVICE_ID_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_CREATED_AT_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_ID_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_ID_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_OPERATOR_ID_DESC
  SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_ASC
  SERVICE_OPERATORS_VARIANCE_POPULATION_SERVICE_ID_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_BLOCK_RANGE_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_CREATED_AT_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_ID_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_OPERATOR_ID_DESC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_ASC
  SERVICE_OPERATORS_VARIANCE_SAMPLE_SERVICE_ID_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ASSET_IDS_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__BLUEPRINT_ID_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__CREATED_AT_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__ID_DESC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_ASC
  SERVICE_REQUEST_BY_SERVICE_REQUEST_ID__OWNER_ID_DESC
  SERVICE_REQUEST_ID_ASC
  SERVICE_REQUEST_ID_DESC
  TERMINATED_AT_ASC
  TERMINATED_AT_DESC
}

type Session implements Node {
  """Session index as ID"""
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """List of operators active in this session"""
  operators(
    """Fields to be distinct"""
    distinct: [operators_distinct_enum] = null
  ): JSON!
  """Block number when session started"""
  startBlock: Int!
  """Timestamp when session started"""
  timestamp: Datetime!
  """List of validators in this session"""
  validators: JSON!
}

type SessionAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: SessionAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: SessionDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: SessionMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: SessionMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: SessionStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: SessionStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: SessionSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: SessionVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: SessionVarianceSampleAggregates
}

type SessionAverageAggregates {
  """Mean average of startBlock across the matching connection"""
  startBlock: BigFloat
}

type SessionDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of operators across the matching connection"""
  operators: BigInt
  """Distinct count of startBlock across the matching connection"""
  startBlock: BigInt
  """Distinct count of timestamp across the matching connection"""
  timestamp: BigInt
  """Distinct count of validators across the matching connection"""
  validators: BigInt
}

"""
A filter to be used against `Session` object types. All fields are combined with a logical ‘and.’
"""
input SessionFilter {
  """Checks for all expressions in this list."""
  and: [SessionFilter!]
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: SessionFilter
  """Filter by the object’s `operators` field."""
  operators: JSONFilter
  """Checks for any expressions in this list."""
  or: [SessionFilter!]
  """Filter by the object’s `startBlock` field."""
  startBlock: IntFilter
  """Filter by the object’s `timestamp` field."""
  timestamp: DatetimeFilter
  """Filter by the object’s `validators` field."""
  validators: JSONFilter
}

type SessionMaxAggregates {
  """Maximum of startBlock across the matching connection"""
  startBlock: Int
}

type SessionMinAggregates {
  """Minimum of startBlock across the matching connection"""
  startBlock: Int
}

type SessionStddevPopulationAggregates {
  """
  Population standard deviation of startBlock across the matching connection
  """
  startBlock: BigFloat
}

type SessionStddevSampleAggregates {
  """Sample standard deviation of startBlock across the matching connection"""
  startBlock: BigFloat
}

type SessionSumAggregates {
  """Sum of startBlock across the matching connection"""
  startBlock: BigInt!
}

type SessionVariancePopulationAggregates {
  """Population variance of startBlock across the matching connection"""
  startBlock: BigFloat
}

type SessionVarianceSampleAggregates {
  """Sample variance of startBlock across the matching connection"""
  startBlock: BigFloat
}

"""A connection to a list of `Session` values."""
type SessionsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: SessionAggregates
  """
  A list of edges which contains the `Session` and cursor to aid in pagination.
  """
  edges: [SessionsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `Session` for these aggregates."""
    groupBy: [SessionsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: SessionsHavingInput
  ): [SessionAggregates!]
  """A list of `Session` objects."""
  nodes: [Session]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `Session` you could get from the connection."""
  totalCount: Int!
}

"""A `Session` edge in the connection."""
type SessionsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `Session` at the end of the edge."""
  node: Session
}

"""Grouping methods for `Session` for usage during aggregation."""
enum SessionsGroupBy {
  ID
  OPERATORS
  START_BLOCK
  TIMESTAMP
  TIMESTAMP_TRUNCATED_TO_DAY
  TIMESTAMP_TRUNCATED_TO_HOUR
  VALIDATORS
}

input SessionsHavingAverageInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

input SessionsHavingDistinctCountInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

"""Conditions for `Session` aggregates."""
input SessionsHavingInput {
  AND: [SessionsHavingInput!]
  OR: [SessionsHavingInput!]
  average: SessionsHavingAverageInput
  distinctCount: SessionsHavingDistinctCountInput
  max: SessionsHavingMaxInput
  min: SessionsHavingMinInput
  stddevPopulation: SessionsHavingStddevPopulationInput
  stddevSample: SessionsHavingStddevSampleInput
  sum: SessionsHavingSumInput
  variancePopulation: SessionsHavingVariancePopulationInput
  varianceSample: SessionsHavingVarianceSampleInput
}

input SessionsHavingMaxInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

input SessionsHavingMinInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

input SessionsHavingStddevPopulationInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

input SessionsHavingStddevSampleInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

input SessionsHavingSumInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

input SessionsHavingVariancePopulationInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

input SessionsHavingVarianceSampleInput {
  startBlock: HavingIntFilter
  timestamp: HavingDatetimeFilter
}

"""Methods to use when ordering `Session`."""
enum SessionsOrderBy {
  ID_ASC
  ID_DESC
  NATURAL
  OPERATORS_ASC
  OPERATORS_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  START_BLOCK_ASC
  START_BLOCK_DESC
  TIMESTAMP_ASC
  TIMESTAMP_DESC
  VALIDATORS_ASC
  VALIDATORS_DESC
}

"""
A filter to be used against String fields. All fields are combined with a logical ‘and.’
"""
input StringFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: String
  """
  Not equal to the specified value, treating null like an ordinary value (case-insensitive).
  """
  distinctFromInsensitive: String
  """Ends with the specified string (case-sensitive)."""
  endsWith: String
  """Ends with the specified string (case-insensitive)."""
  endsWithInsensitive: String
  """Equal to the specified value."""
  equalTo: String
  """Equal to the specified value (case-insensitive)."""
  equalToInsensitive: String
  """Greater than the specified value."""
  greaterThan: String
  """Greater than the specified value (case-insensitive)."""
  greaterThanInsensitive: String
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: String
  """Greater than or equal to the specified value (case-insensitive)."""
  greaterThanOrEqualToInsensitive: String
  """Included in the specified list."""
  in: [String!]
  """Included in the specified list (case-insensitive)."""
  inInsensitive: [String!]
  """Contains the specified string (case-sensitive)."""
  includes: String
  """Contains the specified string (case-insensitive)."""
  includesInsensitive: String
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: String
  """Less than the specified value (case-insensitive)."""
  lessThanInsensitive: String
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: String
  """Less than or equal to the specified value (case-insensitive)."""
  lessThanOrEqualToInsensitive: String
  """
  Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  like: String
  """
  Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  likeInsensitive: String
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: String
  """
  Equal to the specified value, treating null like an ordinary value (case-insensitive).
  """
  notDistinctFromInsensitive: String
  """Does not end with the specified string (case-sensitive)."""
  notEndsWith: String
  """Does not end with the specified string (case-insensitive)."""
  notEndsWithInsensitive: String
  """Not equal to the specified value."""
  notEqualTo: String
  """Not equal to the specified value (case-insensitive)."""
  notEqualToInsensitive: String
  """Not included in the specified list."""
  notIn: [String!]
  """Not included in the specified list (case-insensitive)."""
  notInInsensitive: [String!]
  """Does not contain the specified string (case-sensitive)."""
  notIncludes: String
  """Does not contain the specified string (case-insensitive)."""
  notIncludesInsensitive: String
  """
  Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  notLike: String
  """
  Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.
  """
  notLikeInsensitive: String
  """Does not start with the specified string (case-sensitive)."""
  notStartsWith: String
  """Does not start with the specified string (case-insensitive)."""
  notStartsWithInsensitive: String
  """Starts with the specified string (case-sensitive)."""
  startsWith: String
  """Starts with the specified string (case-insensitive)."""
  startsWithInsensitive: String
}

type TableEstimate {
  estimate: Int
  table: String
}

type UnstakeRequest implements Node {
  """The asset ID of the tokens being unstaked."""
  assetId: JSON!
  """The block number when the unstake request was created."""
  createdAt: Int!
  """The current amount of tokens in the unstake request."""
  currentAmount: BigFloat!
  """The current status of the unstake request."""
  currentStatus: UnstakeRequestStatus!
  """Reads a single `Delegation` that is related to this `UnstakeRequest`."""
  delegation: Delegation
  """The associated delegation for this unstake request."""
  delegationId: String!
  """Reads a single `Delegator` that is related to this `UnstakeRequest`."""
  delegator: Delegator
  """The Delegator who made the unstake request."""
  delegatorId: String!
  """Unique identifier for the unstake request."""
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """Reads a single `Operator` that is related to this `UnstakeRequest`."""
  operator: Operator
  """The Operator from whom the tokens are being unstaked."""
  operatorId: String!
  """The round number when the unstake request was requested."""
  requestedRound: Int!
  """The block number when the unstake request was last updated."""
  updatedAt: Int!
}

type UnstakeRequestAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: UnstakeRequestAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: UnstakeRequestDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: UnstakeRequestMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: UnstakeRequestMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: UnstakeRequestStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: UnstakeRequestStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: UnstakeRequestSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: UnstakeRequestVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: UnstakeRequestVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `UnstakeRequest` object types.
"""
input UnstakeRequestAggregatesFilter {
  """Mean average aggregate over matching `UnstakeRequest` objects."""
  average: UnstakeRequestAverageAggregateFilter
  """Distinct count aggregate over matching `UnstakeRequest` objects."""
  distinctCount: UnstakeRequestDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `UnstakeRequest` object to be included within the aggregate.
  """
  filter: UnstakeRequestFilter
  """Maximum aggregate over matching `UnstakeRequest` objects."""
  max: UnstakeRequestMaxAggregateFilter
  """Minimum aggregate over matching `UnstakeRequest` objects."""
  min: UnstakeRequestMinAggregateFilter
  """
  Population standard deviation aggregate over matching `UnstakeRequest` objects.
  """
  stddevPopulation: UnstakeRequestStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `UnstakeRequest` objects.
  """
  stddevSample: UnstakeRequestStddevSampleAggregateFilter
  """Sum aggregate over matching `UnstakeRequest` objects."""
  sum: UnstakeRequestSumAggregateFilter
  """Population variance aggregate over matching `UnstakeRequest` objects."""
  variancePopulation: UnstakeRequestVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `UnstakeRequest` objects."""
  varianceSample: UnstakeRequestVarianceSampleAggregateFilter
}

input UnstakeRequestAverageAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type UnstakeRequestAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
  """Mean average of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Mean average of requestedRound across the matching connection"""
  requestedRound: BigFloat
  """Mean average of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input UnstakeRequestDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  assetId: BigIntFilter
  createdAt: BigIntFilter
  currentAmount: BigIntFilter
  currentStatus: BigIntFilter
  delegationId: BigIntFilter
  delegatorId: BigIntFilter
  id: BigIntFilter
  operatorId: BigIntFilter
  requestedRound: BigIntFilter
  updatedAt: BigIntFilter
}

type UnstakeRequestDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of assetId across the matching connection"""
  assetId: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of currentAmount across the matching connection"""
  currentAmount: BigInt
  """Distinct count of currentStatus across the matching connection"""
  currentStatus: BigInt
  """Distinct count of delegationId across the matching connection"""
  delegationId: BigInt
  """Distinct count of delegatorId across the matching connection"""
  delegatorId: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of operatorId across the matching connection"""
  operatorId: BigInt
  """Distinct count of requestedRound across the matching connection"""
  requestedRound: BigInt
  """Distinct count of updatedAt across the matching connection"""
  updatedAt: BigInt
}

"""
A filter to be used against `UnstakeRequest` object types. All fields are combined with a logical ‘and.’
"""
input UnstakeRequestFilter {
  """Checks for all expressions in this list."""
  and: [UnstakeRequestFilter!]
  """Filter by the object’s `assetId` field."""
  assetId: JSONFilter
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `currentAmount` field."""
  currentAmount: BigFloatFilter
  """Filter by the object’s `currentStatus` field."""
  currentStatus: UnstakeRequestStatusFilter
  """Filter by the object’s `delegation` relation."""
  delegation: DelegationFilter
  """Filter by the object’s `delegationId` field."""
  delegationId: StringFilter
  """Filter by the object’s `delegator` relation."""
  delegator: DelegatorFilter
  """Filter by the object’s `delegatorId` field."""
  delegatorId: StringFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: UnstakeRequestFilter
  """Filter by the object’s `operator` relation."""
  operator: OperatorFilter
  """Filter by the object’s `operatorId` field."""
  operatorId: StringFilter
  """Checks for any expressions in this list."""
  or: [UnstakeRequestFilter!]
  """Filter by the object’s `requestedRound` field."""
  requestedRound: IntFilter
  """Filter by the object’s `updatedAt` field."""
  updatedAt: IntFilter
}

input UnstakeRequestMaxAggregateFilter {
  createdAt: IntFilter
  currentAmount: BigFloatFilter
  requestedRound: IntFilter
  updatedAt: IntFilter
}

type UnstakeRequestMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
  """Maximum of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Maximum of requestedRound across the matching connection"""
  requestedRound: Int
  """Maximum of updatedAt across the matching connection"""
  updatedAt: Int
}

input UnstakeRequestMinAggregateFilter {
  createdAt: IntFilter
  currentAmount: BigFloatFilter
  requestedRound: IntFilter
  updatedAt: IntFilter
}

type UnstakeRequestMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
  """Minimum of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Minimum of requestedRound across the matching connection"""
  requestedRound: Int
  """Minimum of updatedAt across the matching connection"""
  updatedAt: Int
}

""" Enum representing the status of an unstake request."""
enum UnstakeRequestStatus {
  CANCELLED
  EXECUTED
  SCHEDULED
}

"""
A filter to be used against UnstakeRequestStatus fields. All fields are combined with a logical ‘and.’
"""
input UnstakeRequestStatusFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: UnstakeRequestStatus
  """Equal to the specified value."""
  equalTo: UnstakeRequestStatus
  """Greater than the specified value."""
  greaterThan: UnstakeRequestStatus
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: UnstakeRequestStatus
  """Included in the specified list."""
  in: [UnstakeRequestStatus!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: UnstakeRequestStatus
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: UnstakeRequestStatus
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: UnstakeRequestStatus
  """Not equal to the specified value."""
  notEqualTo: UnstakeRequestStatus
  """Not included in the specified list."""
  notIn: [UnstakeRequestStatus!]
}

input UnstakeRequestStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type UnstakeRequestStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
  """
  Population standard deviation of currentAmount across the matching connection
  """
  currentAmount: BigFloat
  """
  Population standard deviation of requestedRound across the matching connection
  """
  requestedRound: BigFloat
  """
  Population standard deviation of updatedAt across the matching connection
  """
  updatedAt: BigFloat
}

input UnstakeRequestStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type UnstakeRequestStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
  """
  Sample standard deviation of currentAmount across the matching connection
  """
  currentAmount: BigFloat
  """
  Sample standard deviation of requestedRound across the matching connection
  """
  requestedRound: BigFloat
  """Sample standard deviation of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input UnstakeRequestSumAggregateFilter {
  createdAt: BigIntFilter
  currentAmount: BigFloatFilter
  requestedRound: BigIntFilter
  updatedAt: BigIntFilter
}

type UnstakeRequestSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
  """Sum of currentAmount across the matching connection"""
  currentAmount: BigFloat!
  """Sum of requestedRound across the matching connection"""
  requestedRound: BigInt!
  """Sum of updatedAt across the matching connection"""
  updatedAt: BigInt!
}

input UnstakeRequestVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type UnstakeRequestVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Population variance of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Population variance of requestedRound across the matching connection"""
  requestedRound: BigFloat
  """Population variance of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input UnstakeRequestVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type UnstakeRequestVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample variance of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Sample variance of requestedRound across the matching connection"""
  requestedRound: BigFloat
  """Sample variance of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

"""A connection to a list of `UnstakeRequest` values."""
type UnstakeRequestsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: UnstakeRequestAggregates
  """
  A list of edges which contains the `UnstakeRequest` and cursor to aid in pagination.
  """
  edges: [UnstakeRequestsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """The method to use when grouping `UnstakeRequest` for these aggregates."""
    groupBy: [UnstakeRequestsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: UnstakeRequestsHavingInput
  ): [UnstakeRequestAggregates!]
  """A list of `UnstakeRequest` objects."""
  nodes: [UnstakeRequest]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """The count of *all* `UnstakeRequest` you could get from the connection."""
  totalCount: Int!
}

"""A `UnstakeRequest` edge in the connection."""
type UnstakeRequestsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `UnstakeRequest` at the end of the edge."""
  node: UnstakeRequest
}

"""Grouping methods for `UnstakeRequest` for usage during aggregation."""
enum UnstakeRequestsGroupBy {
  ASSET_ID
  CREATED_AT
  CURRENT_AMOUNT
  CURRENT_STATUS
  DELEGATION_ID
  DELEGATOR_ID
  ID
  OPERATOR_ID
  REQUESTED_ROUND
  UPDATED_AT
}

input UnstakeRequestsHavingAverageInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input UnstakeRequestsHavingDistinctCountInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

"""Conditions for `UnstakeRequest` aggregates."""
input UnstakeRequestsHavingInput {
  AND: [UnstakeRequestsHavingInput!]
  OR: [UnstakeRequestsHavingInput!]
  average: UnstakeRequestsHavingAverageInput
  distinctCount: UnstakeRequestsHavingDistinctCountInput
  max: UnstakeRequestsHavingMaxInput
  min: UnstakeRequestsHavingMinInput
  stddevPopulation: UnstakeRequestsHavingStddevPopulationInput
  stddevSample: UnstakeRequestsHavingStddevSampleInput
  sum: UnstakeRequestsHavingSumInput
  variancePopulation: UnstakeRequestsHavingVariancePopulationInput
  varianceSample: UnstakeRequestsHavingVarianceSampleInput
}

input UnstakeRequestsHavingMaxInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input UnstakeRequestsHavingMinInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input UnstakeRequestsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input UnstakeRequestsHavingStddevSampleInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input UnstakeRequestsHavingSumInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input UnstakeRequestsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input UnstakeRequestsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

"""Methods to use when ordering `UnstakeRequest`."""
enum UnstakeRequestsOrderBy {
  ASSET_ID_ASC
  ASSET_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CURRENT_AMOUNT_ASC
  CURRENT_AMOUNT_DESC
  CURRENT_STATUS_ASC
  CURRENT_STATUS_DESC
  DELEGATION_BY_DELEGATION_ID__ASSET_ID_ASC
  DELEGATION_BY_DELEGATION_ID__ASSET_ID_DESC
  DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_ASC
  DELEGATION_BY_DELEGATION_ID__DELEGATOR_ID_DESC
  DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_ASC
  DELEGATION_BY_DELEGATION_ID__HAS_ACTIVE_UNSTAKE_REQUEST_DESC
  DELEGATION_BY_DELEGATION_ID__ID_ASC
  DELEGATION_BY_DELEGATION_ID__ID_DESC
  DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_ASC
  DELEGATION_BY_DELEGATION_ID__OPERATOR_ID_DESC
  DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_ASC
  DELEGATION_BY_DELEGATION_ID__TOTAL_AMOUNT_DESC
  DELEGATION_ID_ASC
  DELEGATION_ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC
  DELEGATOR_ID_ASC
  DELEGATOR_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_ASC
  OPERATOR_BY_OPERATOR_ID__ACCOUNT_ID_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STAKE_DESC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_ASC
  OPERATOR_BY_OPERATOR_ID__CURRENT_STATUS_DESC
  OPERATOR_BY_OPERATOR_ID__ID_ASC
  OPERATOR_BY_OPERATOR_ID__ID_DESC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_ASC
  OPERATOR_BY_OPERATOR_ID__JOINED_AT_DESC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_ASC
  OPERATOR_BY_OPERATOR_ID__LAST_UPDATE_AT_DESC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_ASC
  OPERATOR_BY_OPERATOR_ID__SCHEDULED_UNSTAKE_AMOUNT_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_BLUEPRINTS_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICES_DESC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_ASC
  OPERATOR_BY_OPERATOR_ID__TOTAL_SERVICE_REQUESTS_DESC
  OPERATOR_ID_ASC
  OPERATOR_ID_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  REQUESTED_ROUND_ASC
  REQUESTED_ROUND_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}

type WithdrawRequest implements Node {
  """The asset ID of the tokens being withdrawn."""
  assetId: JSON!
  """The block number when the withdraw request was created."""
  createdAt: Int!
  """The amount of tokens requested for withdrawal."""
  currentAmount: BigFloat!
  """The current status of the withdraw request."""
  currentStatus: WithdrawRequestStatus!
  """Reads a single `Delegator` that is related to this `WithdrawRequest`."""
  delegator: Delegator
  """The Delegator who made the withdraw request."""
  delegatorId: String!
  """Reads a single `Deposit` that is related to this `WithdrawRequest`."""
  deposit: Deposit
  """The deposit associated with this withdraw request."""
  depositId: String!
  """Unique identifier for the withdraw request."""
  id: String!
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  nodeId: ID!
  """The round number when the unstake request was requested."""
  requestedRound: Int!
  """The block number when the withdraw request was last updated."""
  updatedAt: Int!
}

type WithdrawRequestAggregates {
  """
  Mean average aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  average: WithdrawRequestAverageAggregates
  """
  Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  distinctCount: WithdrawRequestDistinctCountAggregates
  keys: [String!]
  """
  Maximum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  max: WithdrawRequestMaxAggregates
  """
  Minimum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  min: WithdrawRequestMinAggregates
  """
  Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevPopulation: WithdrawRequestStddevPopulationAggregates
  """
  Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  stddevSample: WithdrawRequestStddevSampleAggregates
  """
  Sum aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  sum: WithdrawRequestSumAggregates
  """
  Population variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  variancePopulation: WithdrawRequestVariancePopulationAggregates
  """
  Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  varianceSample: WithdrawRequestVarianceSampleAggregates
}

"""
A filter to be used against aggregates of `WithdrawRequest` object types.
"""
input WithdrawRequestAggregatesFilter {
  """Mean average aggregate over matching `WithdrawRequest` objects."""
  average: WithdrawRequestAverageAggregateFilter
  """Distinct count aggregate over matching `WithdrawRequest` objects."""
  distinctCount: WithdrawRequestDistinctCountAggregateFilter
  """
  A filter that must pass for the relevant `WithdrawRequest` object to be included within the aggregate.
  """
  filter: WithdrawRequestFilter
  """Maximum aggregate over matching `WithdrawRequest` objects."""
  max: WithdrawRequestMaxAggregateFilter
  """Minimum aggregate over matching `WithdrawRequest` objects."""
  min: WithdrawRequestMinAggregateFilter
  """
  Population standard deviation aggregate over matching `WithdrawRequest` objects.
  """
  stddevPopulation: WithdrawRequestStddevPopulationAggregateFilter
  """
  Sample standard deviation aggregate over matching `WithdrawRequest` objects.
  """
  stddevSample: WithdrawRequestStddevSampleAggregateFilter
  """Sum aggregate over matching `WithdrawRequest` objects."""
  sum: WithdrawRequestSumAggregateFilter
  """Population variance aggregate over matching `WithdrawRequest` objects."""
  variancePopulation: WithdrawRequestVariancePopulationAggregateFilter
  """Sample variance aggregate over matching `WithdrawRequest` objects."""
  varianceSample: WithdrawRequestVarianceSampleAggregateFilter
}

input WithdrawRequestAverageAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type WithdrawRequestAverageAggregates {
  """Mean average of createdAt across the matching connection"""
  createdAt: BigFloat
  """Mean average of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Mean average of requestedRound across the matching connection"""
  requestedRound: BigFloat
  """Mean average of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input WithdrawRequestDistinctCountAggregateFilter {
  _blockRange: BigIntFilter
  _id: BigIntFilter
  assetId: BigIntFilter
  createdAt: BigIntFilter
  currentAmount: BigIntFilter
  currentStatus: BigIntFilter
  delegatorId: BigIntFilter
  depositId: BigIntFilter
  id: BigIntFilter
  requestedRound: BigIntFilter
  updatedAt: BigIntFilter
}

type WithdrawRequestDistinctCountAggregates {
  """Distinct count of _blockRange across the matching connection"""
  _blockRange: BigInt
  """Distinct count of _id across the matching connection"""
  _id: BigInt
  """Distinct count of assetId across the matching connection"""
  assetId: BigInt
  """Distinct count of createdAt across the matching connection"""
  createdAt: BigInt
  """Distinct count of currentAmount across the matching connection"""
  currentAmount: BigInt
  """Distinct count of currentStatus across the matching connection"""
  currentStatus: BigInt
  """Distinct count of delegatorId across the matching connection"""
  delegatorId: BigInt
  """Distinct count of depositId across the matching connection"""
  depositId: BigInt
  """Distinct count of id across the matching connection"""
  id: BigInt
  """Distinct count of requestedRound across the matching connection"""
  requestedRound: BigInt
  """Distinct count of updatedAt across the matching connection"""
  updatedAt: BigInt
}

"""
A filter to be used against `WithdrawRequest` object types. All fields are combined with a logical ‘and.’
"""
input WithdrawRequestFilter {
  """Checks for all expressions in this list."""
  and: [WithdrawRequestFilter!]
  """Filter by the object’s `assetId` field."""
  assetId: JSONFilter
  """Filter by the object’s `createdAt` field."""
  createdAt: IntFilter
  """Filter by the object’s `currentAmount` field."""
  currentAmount: BigFloatFilter
  """Filter by the object’s `currentStatus` field."""
  currentStatus: WithdrawRequestStatusFilter
  """Filter by the object’s `delegator` relation."""
  delegator: DelegatorFilter
  """Filter by the object’s `delegatorId` field."""
  delegatorId: StringFilter
  """Filter by the object’s `deposit` relation."""
  deposit: DepositFilter
  """Filter by the object’s `depositId` field."""
  depositId: StringFilter
  """Filter by the object’s `id` field."""
  id: StringFilter
  """Negates the expression."""
  not: WithdrawRequestFilter
  """Checks for any expressions in this list."""
  or: [WithdrawRequestFilter!]
  """Filter by the object’s `requestedRound` field."""
  requestedRound: IntFilter
  """Filter by the object’s `updatedAt` field."""
  updatedAt: IntFilter
}

input WithdrawRequestMaxAggregateFilter {
  createdAt: IntFilter
  currentAmount: BigFloatFilter
  requestedRound: IntFilter
  updatedAt: IntFilter
}

type WithdrawRequestMaxAggregates {
  """Maximum of createdAt across the matching connection"""
  createdAt: Int
  """Maximum of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Maximum of requestedRound across the matching connection"""
  requestedRound: Int
  """Maximum of updatedAt across the matching connection"""
  updatedAt: Int
}

input WithdrawRequestMinAggregateFilter {
  createdAt: IntFilter
  currentAmount: BigFloatFilter
  requestedRound: IntFilter
  updatedAt: IntFilter
}

type WithdrawRequestMinAggregates {
  """Minimum of createdAt across the matching connection"""
  createdAt: Int
  """Minimum of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Minimum of requestedRound across the matching connection"""
  requestedRound: Int
  """Minimum of updatedAt across the matching connection"""
  updatedAt: Int
}

""" Enum representing the status of an withdraw request."""
enum WithdrawRequestStatus {
  CANCELLED
  EXECUTED
  SCHEDULED
}

"""
A filter to be used against WithdrawRequestStatus fields. All fields are combined with a logical ‘and.’
"""
input WithdrawRequestStatusFilter {
  """
  Not equal to the specified value, treating null like an ordinary value.
  """
  distinctFrom: WithdrawRequestStatus
  """Equal to the specified value."""
  equalTo: WithdrawRequestStatus
  """Greater than the specified value."""
  greaterThan: WithdrawRequestStatus
  """Greater than or equal to the specified value."""
  greaterThanOrEqualTo: WithdrawRequestStatus
  """Included in the specified list."""
  in: [WithdrawRequestStatus!]
  """
  Is null (if `true` is specified) or is not null (if `false` is specified).
  """
  isNull: Boolean
  """Less than the specified value."""
  lessThan: WithdrawRequestStatus
  """Less than or equal to the specified value."""
  lessThanOrEqualTo: WithdrawRequestStatus
  """Equal to the specified value, treating null like an ordinary value."""
  notDistinctFrom: WithdrawRequestStatus
  """Not equal to the specified value."""
  notEqualTo: WithdrawRequestStatus
  """Not included in the specified list."""
  notIn: [WithdrawRequestStatus!]
}

input WithdrawRequestStddevPopulationAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type WithdrawRequestStddevPopulationAggregates {
  """
  Population standard deviation of createdAt across the matching connection
  """
  createdAt: BigFloat
  """
  Population standard deviation of currentAmount across the matching connection
  """
  currentAmount: BigFloat
  """
  Population standard deviation of requestedRound across the matching connection
  """
  requestedRound: BigFloat
  """
  Population standard deviation of updatedAt across the matching connection
  """
  updatedAt: BigFloat
}

input WithdrawRequestStddevSampleAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type WithdrawRequestStddevSampleAggregates {
  """Sample standard deviation of createdAt across the matching connection"""
  createdAt: BigFloat
  """
  Sample standard deviation of currentAmount across the matching connection
  """
  currentAmount: BigFloat
  """
  Sample standard deviation of requestedRound across the matching connection
  """
  requestedRound: BigFloat
  """Sample standard deviation of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input WithdrawRequestSumAggregateFilter {
  createdAt: BigIntFilter
  currentAmount: BigFloatFilter
  requestedRound: BigIntFilter
  updatedAt: BigIntFilter
}

type WithdrawRequestSumAggregates {
  """Sum of createdAt across the matching connection"""
  createdAt: BigInt!
  """Sum of currentAmount across the matching connection"""
  currentAmount: BigFloat!
  """Sum of requestedRound across the matching connection"""
  requestedRound: BigInt!
  """Sum of updatedAt across the matching connection"""
  updatedAt: BigInt!
}

input WithdrawRequestVariancePopulationAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type WithdrawRequestVariancePopulationAggregates {
  """Population variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Population variance of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Population variance of requestedRound across the matching connection"""
  requestedRound: BigFloat
  """Population variance of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

input WithdrawRequestVarianceSampleAggregateFilter {
  createdAt: BigFloatFilter
  currentAmount: BigFloatFilter
  requestedRound: BigFloatFilter
  updatedAt: BigFloatFilter
}

type WithdrawRequestVarianceSampleAggregates {
  """Sample variance of createdAt across the matching connection"""
  createdAt: BigFloat
  """Sample variance of currentAmount across the matching connection"""
  currentAmount: BigFloat
  """Sample variance of requestedRound across the matching connection"""
  requestedRound: BigFloat
  """Sample variance of updatedAt across the matching connection"""
  updatedAt: BigFloat
}

"""A connection to a list of `WithdrawRequest` values."""
type WithdrawRequestsConnection {
  """
  Aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  aggregates: WithdrawRequestAggregates
  """
  A list of edges which contains the `WithdrawRequest` and cursor to aid in pagination.
  """
  edges: [WithdrawRequestsEdge!]!
  """
  Grouped aggregates across the matching connection (ignoring before/after/first/last/offset)
  """
  groupedAggregates(
    """
    The method to use when grouping `WithdrawRequest` for these aggregates.
    """
    groupBy: [WithdrawRequestsGroupBy!]!
    """Conditions on the grouped aggregates."""
    having: WithdrawRequestsHavingInput
  ): [WithdrawRequestAggregates!]
  """A list of `WithdrawRequest` objects."""
  nodes: [WithdrawRequest]!
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """
  The count of *all* `WithdrawRequest` you could get from the connection.
  """
  totalCount: Int!
}

"""A `WithdrawRequest` edge in the connection."""
type WithdrawRequestsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor
  """The `WithdrawRequest` at the end of the edge."""
  node: WithdrawRequest
}

"""Grouping methods for `WithdrawRequest` for usage during aggregation."""
enum WithdrawRequestsGroupBy {
  ASSET_ID
  CREATED_AT
  CURRENT_AMOUNT
  CURRENT_STATUS
  DELEGATOR_ID
  DEPOSIT_ID
  ID
  REQUESTED_ROUND
  UPDATED_AT
}

input WithdrawRequestsHavingAverageInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input WithdrawRequestsHavingDistinctCountInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

"""Conditions for `WithdrawRequest` aggregates."""
input WithdrawRequestsHavingInput {
  AND: [WithdrawRequestsHavingInput!]
  OR: [WithdrawRequestsHavingInput!]
  average: WithdrawRequestsHavingAverageInput
  distinctCount: WithdrawRequestsHavingDistinctCountInput
  max: WithdrawRequestsHavingMaxInput
  min: WithdrawRequestsHavingMinInput
  stddevPopulation: WithdrawRequestsHavingStddevPopulationInput
  stddevSample: WithdrawRequestsHavingStddevSampleInput
  sum: WithdrawRequestsHavingSumInput
  variancePopulation: WithdrawRequestsHavingVariancePopulationInput
  varianceSample: WithdrawRequestsHavingVarianceSampleInput
}

input WithdrawRequestsHavingMaxInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input WithdrawRequestsHavingMinInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input WithdrawRequestsHavingStddevPopulationInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input WithdrawRequestsHavingStddevSampleInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input WithdrawRequestsHavingSumInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input WithdrawRequestsHavingVariancePopulationInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

input WithdrawRequestsHavingVarianceSampleInput {
  createdAt: HavingIntFilter
  currentAmount: HavingBigfloatFilter
  requestedRound: HavingIntFilter
  updatedAt: HavingIntFilter
}

"""Methods to use when ordering `WithdrawRequest`."""
enum WithdrawRequestsOrderBy {
  ASSET_ID_ASC
  ASSET_ID_DESC
  CREATED_AT_ASC
  CREATED_AT_DESC
  CURRENT_AMOUNT_ASC
  CURRENT_AMOUNT_DESC
  CURRENT_STATUS_ASC
  CURRENT_STATUS_DESC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ACCOUNT_ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__ID_ASC
  DELEGATOR_BY_DELEGATOR_ID__ID_DESC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__JOINED_AT_DESC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_ASC
  DELEGATOR_BY_DELEGATOR_ID__LAST_UPDATE_AT_DESC
  DELEGATOR_ID_ASC
  DELEGATOR_ID_DESC
  DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_ASC
  DEPOSIT_BY_DEPOSIT_ID__ASSET_ID_DESC
  DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_ASC
  DEPOSIT_BY_DEPOSIT_ID__DELEGATOR_ID_DESC
  DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_ASC
  DEPOSIT_BY_DEPOSIT_ID__HAS_ACTIVE_WITHDRAW_REQUEST_DESC
  DEPOSIT_BY_DEPOSIT_ID__ID_ASC
  DEPOSIT_BY_DEPOSIT_ID__ID_DESC
  DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_ASC
  DEPOSIT_BY_DEPOSIT_ID__TOTAL_AMOUNT_DESC
  DEPOSIT_ID_ASC
  DEPOSIT_ID_DESC
  ID_ASC
  ID_DESC
  NATURAL
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
  REQUESTED_ROUND_ASC
  REQUESTED_ROUND_DESC
  UPDATED_AT_ASC
  UPDATED_AT_DESC
}

type _Metadata {
  chain: String
  dbSize: BigInt
  deployments: JSON
  dynamicDatasources: [JSON]
  evmChainId: String
  genesisHash: String
  indexerHealthy: Boolean
  indexerNodeVersion: String
  lastCreatedPoiHeight: Int
  lastFinalizedVerifiedHeight: Int
  lastProcessedHeight: Int
  lastProcessedTimestamp: Date
  latestSyncedPoiHeight: Int
  queryNodeVersion: String
  rowCountEstimate: [TableEstimate]
  specName: String
  startHeight: Int
  targetHeight: Int
  unfinalizedBlocks: String
}

type _Metadatas {
  nodes: [_Metadata]!
  totalCount: Int!
}

enum accounts_distinct_enum {
  CREATED_AT
  ID
  LAST_UPDATE_AT
  TOTAL_POINTS
}

enum blueprint_operators_distinct_enum {
  BLUEPRINT_ID
  ID
  IS_ACTIVE
  OPERATOR_ID
  REGISTERED_AT
  UPDATED_AT
}

enum blueprints_distinct_enum {
  CREATED_AT
  ID
  OWNER_ID
}

enum delegation_histories_distinct_enum {
  AMOUNT
  BLOCK_NUMBER
  DELEGATION_ID
  ID
}

enum delegations_distinct_enum {
  ASSET_ID
  DELEGATOR_ID
  HAS_ACTIVE_UNSTAKE_REQUEST
  ID
  OPERATOR_ID
  TOTAL_AMOUNT
}

enum delegators_distinct_enum {
  ACCOUNT_ID
  ID
  JOINED_AT
  LAST_UPDATE_AT
}

enum deposit_histories_distinct_enum {
  AMOUNT
  BLOCK_NUMBER
  DEPOSIT_ID
  ID
}

enum deposits_distinct_enum {
  ASSET_ID
  DELEGATOR_ID
  HAS_ACTIVE_WITHDRAW_REQUEST
  ID
  TOTAL_AMOUNT
}

enum job_calls_distinct_enum {
  CALLER_ID
  CREATED_AT
  ID
  JOB_ID
  SERVICE_ID
}

enum job_results_distinct_enum {
  CREATED_AT
  ID
  JOB_CALL_ID
  OPERATOR_ID
  SERVICE_ID
}

enum lst_pool_members_distinct_enum {
  ACCOUNT_ID
  CURRENT_STAKE
  ID
  LST_POOL_ID
}

enum lst_pool_state_changes_distinct_enum {
  BLOCK_NUMBER
  ID
  LST_POOL_ID
  STATE
}

enum lst_pools_distinct_enum {
  CURRENT_STATE
  ID
  TOTAL_STAKE
}

enum member_stake_changes_distinct_enum {
  AMOUNT
  BLOCK_NUMBER
  ID
  MEMBER_ID
}

enum operator_bond_changes_distinct_enum {
  ACTION
  AMOUNT
  BLOCK_NUMBER
  ID
  OPERATOR_ID
}

enum operator_status_changes_distinct_enum {
  BLOCK_NUMBER
  ID
  OPERATOR_ID
  STATUS
}

enum operators_distinct_enum {
  ACCOUNT_ID
  CURRENT_STAKE
  CURRENT_STATUS
  ID
  JOINED_AT
  LAST_UPDATE_AT
  SCHEDULED_UNSTAKE_AMOUNT
  TOTAL_BLUEPRINTS
  TOTAL_SERVICES
  TOTAL_SERVICE_REQUESTS
}

enum points_accrual_rates_distinct_enum {
  ACCOUNT_ID
  AMOUNT
  ID
  LAST_UPDATE_BLOCK
  RATE_PER_HOUR
  SOURCE
  START_BLOCK
}

enum points_snapshots_distinct_enum {
  ACCOUNT_ID
  BLOCK_NUMBER
  ID
  LIQUID_STAKING_POINTS
  OPERATOR_REGISTRATION_POINTS
  RESTAKING_DELEGATION_POINTS
  RESTAKING_DEPOSIT_POINTS
  TIMESTAMP
  TOTAL_POINTS
  VALIDATOR_NOMINATION_POINTS
  VALIDATOR_REGISTRATION_POINTS
}

enum service_operators_distinct_enum {
  CREATED_AT
  ID
  OPERATOR_ID
  SERVICE_ID
}

enum service_request_operators_distinct_enum {
  APPROVED_AT
  CREATED_AT
  ID
  OPERATOR_ID
  REJECTED_AT
  SERVICE_REQUEST_ID
}

enum service_requests_distinct_enum {
  ASSET_IDS
  BLUEPRINT_ID
  CREATED_AT
  ID
  OWNER_ID
}

enum services_distinct_enum {
  ASSET_IDS
  BLUEPRINT_ID
  CREATED_AT
  ID
  OWNER_ID
  SERVICE_REQUEST_ID
  TERMINATED_AT
}

enum sessions_distinct_enum {
  ID
  OPERATORS
  START_BLOCK
  TIMESTAMP
  VALIDATORS
}

enum unstake_requests_distinct_enum {
  ASSET_ID
  CREATED_AT
  CURRENT_AMOUNT
  CURRENT_STATUS
  DELEGATION_ID
  DELEGATOR_ID
  ID
  OPERATOR_ID
  REQUESTED_ROUND
  UPDATED_AT
}

enum withdraw_requests_distinct_enum {
  ASSET_ID
  CREATED_AT
  CURRENT_AMOUNT
  CURRENT_STATUS
  DELEGATOR_ID
  DEPOSIT_ID
  ID
  REQUESTED_ROUND
  UPDATED_AT
}