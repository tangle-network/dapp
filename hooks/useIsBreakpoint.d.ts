declare const config: Omit<{
    content: never[];
}, "theme"> & {
    theme: {
        data: Record<string, string>;
        height: import('tailwindcss/types/config').KeyValuePair<string, string>;
        width: import('tailwindcss/types/config').KeyValuePair<string, string>;
        cursor: Record<"progress" | "text" | "cell" | "none" | "auto" | "copy" | "move" | "alias" | "all-scroll" | "col-resize" | "context-menu" | "crosshair" | "default" | "e-resize" | "ew-resize" | "grab" | "grabbing" | "help" | "n-resize" | "ne-resize" | "nesw-resize" | "no-drop" | "not-allowed" | "ns-resize" | "nw-resize" | "nwse-resize" | "pointer" | "row-resize" | "s-resize" | "se-resize" | "sw-resize" | "vertical-text" | "w-resize" | "wait" | "zoom-in" | "zoom-out", string>;
        fill: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        fontFamily: Record<"serif" | "sans" | "mono", string[]>;
        fontSize: Record<"base" | "lg" | "xl" | "2xl" | "sm" | "xs" | "3xl" | "4xl" | "5xl" | "6xl" | "7xl" | "8xl" | "9xl", [string, {
            lineHeight: string;
        }]>;
        fontWeight: Record<"bold" | "black" | "normal" | "medium" | "thin" | "light" | "semibold" | "extralight" | "extrabold", string>;
        letterSpacing: Record<"normal" | "tighter" | "tight" | "wide" | "wider" | "widest", string>;
        opacity: Record<"0" | "60" | "100" | "20" | "5" | "10" | "65" | "15" | "25" | "30" | "35" | "40" | "45" | "50" | "55" | "70" | "75" | "80" | "85" | "90" | "95", string>;
        order: Record<"1" | "2" | "3" | "none" | "first" | "last" | "4" | "9" | "8" | "12" | "5" | "6" | "7" | "10" | "11", string>;
        rotate: Record<"0" | "1" | "2" | "3" | "12" | "6" | "180" | "45" | "90", string>;
        scale: Record<"0" | "100" | "50" | "75" | "90" | "95" | "105" | "110" | "125" | "150", string>;
        spacing: Record<"0" | "1" | "2" | "3" | "4" | "24" | "9" | "32" | "8" | "60" | "20" | "52" | "36" | "28" | "12" | "5" | "6" | "7" | "10" | "11" | "14" | "16" | "40" | "80" | "44" | "48" | "56" | "64" | "72" | "96" | "px" | "0.5" | "1.5" | "2.5" | "3.5", string>;
        stroke: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        strokeWidth: Record<"0" | "1" | "2", string>;
        minWidth: import('tailwindcss/types/config').KeyValuePair<string, string>;
        minHeight: import('tailwindcss/types/config').KeyValuePair<string, string>;
        space: import('tailwindcss/types/config').KeyValuePair<string, string>;
        inset: import('tailwindcss/types/config').KeyValuePair<string, string>;
        content: Record<"none", string>;
        flex: Record<"1" | "none" | "auto" | "initial", string>;
        invert: Record<"0" | "DEFAULT", string>;
        padding: import('tailwindcss/types/config').KeyValuePair<string, string>;
        maxWidth: import('tailwindcss/types/config').KeyValuePair<string, string>;
        columns: Record<"1" | "2" | "3" | "md" | "lg" | "xl" | "2xl" | "auto" | "4" | "9" | "8" | "12" | "sm" | "5" | "6" | "7" | "10" | "11" | "xs" | "3xl" | "4xl" | "5xl" | "6xl" | "7xl" | "3xs" | "2xs", string>;
        translate: import('tailwindcss/types/config').KeyValuePair<string, string>;
        container: Partial<{
            screens: import('tailwindcss/types/config').ScreensConfig;
            center: boolean;
            padding: string | Record<string, string>;
        }>;
        blur: Record<"0" | "md" | "lg" | "xl" | "2xl" | "none" | "sm" | "3xl" | "DEFAULT", string>;
        transitionDuration: Record<"0" | "100" | "75" | "150" | "DEFAULT" | "200" | "300" | "500" | "700" | "1000", string>;
        margin: import('tailwindcss/types/config').KeyValuePair<string, string>;
        screens: Record<"md" | "lg" | "xl" | "2xl" | "sm", string>;
        supports: Record<string, string>;
        colors: import('tailwindcss/types/generated/colors').DefaultColors;
        zIndex: Record<"0" | "auto" | "20" | "10" | "30" | "40" | "50", string>;
        gridColumn: Record<"auto" | "span-1" | "span-2" | "span-3" | "span-4" | "span-5" | "span-6" | "span-7" | "span-8" | "span-9" | "span-10" | "span-11" | "span-12" | "span-full", string>;
        gridColumnStart: Record<"1" | "2" | "3" | "auto" | "4" | "9" | "8" | "12" | "5" | "6" | "7" | "10" | "11" | "13", string>;
        gridColumnEnd: Record<"1" | "2" | "3" | "auto" | "4" | "9" | "8" | "12" | "5" | "6" | "7" | "10" | "11" | "13", string>;
        gridRow: Record<"auto" | "span-1" | "span-2" | "span-3" | "span-4" | "span-5" | "span-6" | "span-7" | "span-8" | "span-9" | "span-10" | "span-11" | "span-12" | "span-full", string>;
        gridRowStart: Record<"1" | "2" | "3" | "auto" | "4" | "9" | "8" | "12" | "5" | "6" | "7" | "10" | "11" | "13", string>;
        gridRowEnd: Record<"1" | "2" | "3" | "auto" | "4" | "9" | "8" | "12" | "5" | "6" | "7" | "10" | "11" | "13", string>;
        aspectRatio: Record<"video" | "auto" | "square", string>;
        maxHeight: import('tailwindcss/types/config').KeyValuePair<string, string>;
        flexShrink: Record<"0" | "DEFAULT", string>;
        flexGrow: Record<"0" | "DEFAULT", string>;
        flexBasis: import('tailwindcss/types/config').KeyValuePair<string, string>;
        borderSpacing: import('tailwindcss/types/config').KeyValuePair<string, string>;
        transformOrigin: Record<"center" | "left" | "right" | "bottom" | "top" | "top-right" | "bottom-right" | "bottom-left" | "top-left", string>;
        skew: Record<"0" | "1" | "2" | "3" | "12" | "6", string>;
        animation: Record<"none" | "ping" | "spin" | "pulse" | "bounce", string>;
        keyframes: Record<"ping" | "spin" | "pulse" | "bounce", Record<string, import('tailwindcss/types/generated/default-theme').CSSDeclarationList>>;
        scrollMargin: import('tailwindcss/types/config').KeyValuePair<string, string>;
        scrollPadding: import('tailwindcss/types/config').KeyValuePair<string, string>;
        listStyleType: Record<"none" | "decimal" | "disc", string>;
        gridAutoColumns: Record<"max" | "min" | "fr" | "auto", string>;
        gridAutoRows: Record<"max" | "min" | "fr" | "auto", string>;
        gridTemplateColumns: Record<"1" | "2" | "3" | "none" | "subgrid" | "4" | "9" | "8" | "12" | "5" | "6" | "7" | "10" | "11", string>;
        gridTemplateRows: Record<"1" | "2" | "3" | "none" | "subgrid" | "4" | "9" | "8" | "12" | "5" | "6" | "7" | "10" | "11", string>;
        gap: import('tailwindcss/types/config').KeyValuePair<string, string>;
        divideWidth: import('tailwindcss/types/config').KeyValuePair<string, string>;
        divideColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        divideOpacity: import('tailwindcss/types/config').KeyValuePair<string, string>;
        borderRadius: Record<"md" | "lg" | "xl" | "2xl" | "none" | "sm" | "3xl" | "DEFAULT" | "full", string>;
        borderWidth: Record<"0" | "2" | "4" | "8" | "DEFAULT", string>;
        borderColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        borderOpacity: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backgroundColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        backgroundOpacity: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backgroundImage: Record<"none" | "gradient-to-t" | "gradient-to-tr" | "gradient-to-r" | "gradient-to-br" | "gradient-to-b" | "gradient-to-bl" | "gradient-to-l" | "gradient-to-tl", string>;
        gradientColorStops: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        backgroundSize: Record<"auto" | "contain" | "cover", string>;
        backgroundPosition: Record<"center" | "left" | "right" | "bottom" | "top" | "left-bottom" | "left-top" | "right-bottom" | "right-top", string>;
        objectPosition: Record<"center" | "left" | "right" | "bottom" | "top" | "left-bottom" | "left-top" | "right-bottom" | "right-top", string>;
        textIndent: import('tailwindcss/types/config').KeyValuePair<string, string>;
        lineHeight: Record<"3" | "none" | "normal" | "loose" | "4" | "9" | "8" | "5" | "6" | "7" | "10" | "tight" | "snug" | "relaxed", string>;
        textColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        textOpacity: import('tailwindcss/types/config').KeyValuePair<string, string>;
        textDecorationColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        textDecorationThickness: Record<"0" | "1" | "2" | "auto" | "from-font" | "4" | "8", string>;
        textUnderlineOffset: Record<"0" | "1" | "2" | "auto" | "4" | "8", string>;
        placeholderColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        placeholderOpacity: import('tailwindcss/types/config').KeyValuePair<string, string>;
        caretColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        accentColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        boxShadow: Record<"md" | "lg" | "xl" | "2xl" | "none" | "sm" | "inner" | "DEFAULT", string>;
        boxShadowColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        outlineWidth: Record<"0" | "1" | "2" | "4" | "8", string>;
        outlineOffset: Record<"0" | "1" | "2" | "4" | "8", string>;
        outlineColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        ringWidth: Record<"0" | "1" | "2" | "4" | "8" | "DEFAULT", string>;
        ringColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        ringOpacity: import('tailwindcss/types/config').KeyValuePair<string, string>;
        ringOffsetWidth: Record<"0" | "1" | "2" | "4" | "8", string>;
        ringOffsetColor: import('tailwindcss/types/config').RecursiveKeyValuePair<string, string>;
        brightness: Record<"0" | "100" | "50" | "75" | "90" | "95" | "105" | "110" | "125" | "150" | "200", string>;
        contrast: Record<"0" | "100" | "50" | "75" | "125" | "150" | "200", string>;
        dropShadow: Record<"md" | "lg" | "xl" | "2xl" | "none" | "sm" | "DEFAULT", string | string[]>;
        grayscale: Record<"0" | "DEFAULT", string>;
        hueRotate: Record<"0" | "60" | "180" | "15" | "30" | "90", string>;
        saturate: Record<"0" | "100" | "50" | "150" | "200", string>;
        sepia: Record<"0" | "DEFAULT", string>;
        backdropBlur: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropBrightness: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropContrast: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropGrayscale: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropHueRotate: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropInvert: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropOpacity: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropSaturate: import('tailwindcss/types/config').KeyValuePair<string, string>;
        backdropSepia: import('tailwindcss/types/config').KeyValuePair<string, string>;
        transitionProperty: Record<"opacity" | "transform" | "none" | "all" | "colors" | "DEFAULT" | "shadow", string>;
        transitionTimingFunction: Record<"in" | "linear" | "DEFAULT" | "out" | "in-out", string>;
        transitionDelay: Record<"0" | "100" | "75" | "150" | "200" | "300" | "500" | "700" | "1000", string>;
        willChange: Record<"transform" | "auto" | "scroll" | "contents", string>;
    };
};
type TailwindBreakpoint = keyof typeof config.theme.screens;
declare function useIsBreakpoint(breakpoint: TailwindBreakpoint, reverse?: boolean): boolean;
export default useIsBreakpoint;
