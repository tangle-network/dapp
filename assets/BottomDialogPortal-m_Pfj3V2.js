import{j as e}from"./jsx-runtime-BbjHj44Y.js";import{r as i}from"./index-C6mWTJJr.js";import{R as g,T as f,P as x,O as h,C as u,a as y,b as n,D as R}from"./index-DPQIkrga.js";import{z as T}from"./ProposalBadge-aTrZS74o.js";import{t as j}from"./bundle-mjs-D696Ktp4.js";import{T as N}from"./Typography-BXoXAd7x.js";import{B as w}from"./Button-bTMyXnUe.js";import"./ChainOrTokenButton-B3p2-KpI.js";import"./IconButton-DI6br7aE.js";import"./LoadingPill-B9InIXuZ.js";import"./WalletButton-C4PPuQwO.js";const D=i.forwardRef(({children:s,className:r,radixRootProps:o,...t},a)=>e.jsx("div",{...t,className:r,ref:a,children:e.jsx(g,{...o,children:s})}));D.__docgenInfo={description:"",methods:[],displayName:"BottomDialog",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},radixRootProps:{required:!1,tsType:{name:"RdxDialogProps"},description:""}}};const b=i.forwardRef((s,r)=>e.jsx(f,{asChild:!0,...s,ref:r}));b.__docgenInfo={description:"",methods:[],displayName:"BottomDialogTrigger",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""}},composes:["RdxDialogTriggerProps"]};const P=i.forwardRef(({children:s,title:r,actionButtonsProps:o,overlayProps:t,contentProps:a,className:d,...l},m)=>e.jsxs(x,{...l,children:[e.jsx(h,{...t,className:"fixed inset-0 bg-[rgba(0,0,0,0.1)] animate-[showDialogOverlay_150ms]"}),e.jsxs(u,{...a,className:j("!bg-mono-0 dark:!bg-mono-160 rounded-xl fixed bottom-0","animate-[bottomDialogSlideUp_400ms]",d),ref:m,children:[e.jsx(y,{asChild:!0,children:e.jsxs("div",{className:"flex items-center justify-between pt-9 px-9",children:[e.jsx(N,{variant:"h4",fw:"bold",children:r}),e.jsx(n,{children:e.jsx(T,{})})]})}),e.jsx(R,{asChild:!0,children:e.jsxs("div",{children:[e.jsx("div",{className:"p-9",children:s}),o&&e.jsx("div",{className:"flex flex-col gap-2 py-6 px-9 border-t border-[#D3D8E2] dark:border-[#4E5463]",children:o.map((c,p)=>e.jsx(n,{asChild:!0,children:e.jsx(w,{...c})},p))})]})})]})]}));P.__docgenInfo={description:"",methods:[],displayName:"BottomDialogPortal",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},title:{required:!1,tsType:{name:"string"},description:""},actionButtonsProps:{required:!1,tsType:{name:"Array",elements:[{name:"ButtonProps"}],raw:"ButtonProps[]"},description:""},overlayProps:{required:!1,tsType:{name:"RdxDialogOverlayProps"},description:""},contentProps:{required:!1,tsType:{name:"RdxDialogContentProps"},description:""}},composes:["RdxDialogPortalProps"]};export{D as B,b as a,P as b};
