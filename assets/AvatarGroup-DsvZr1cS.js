import{j as r}from"./jsx-runtime-BbjHj44Y.js";import{r as a}from"./index-C6mWTJJr.js";import{t as p}from"./bundle-mjs-D696Ktp4.js";import{T as u}from"./Typography-BXoXAd7x.js";const v=a.forwardRef(({children:s,className:l,max:n=3,total:i,...m},c)=>{const o=a.useMemo(()=>a.Children.toArray(s).filter(e=>a.isValidElement(e)),[s]),t=(i||o.length)-n;return r.jsxs("div",{...m,className:p("flex items-center space-x-1",l),ref:c,children:[r.jsx("div",{className:"translate-x-1",children:o.slice(0,n).map((e,d)=>a.cloneElement(e,{key:d,...e.props,size:"md",className:"relative mx-[-4px] last:mx-0 hover:z-10"}))}),t>0&&r.jsxs(u,{className:"inline-block translate-x-1",variant:"body3",children:["+",t," other",t>1&&"s"]})]})});v.__docgenInfo={description:'Avatar Group - Use to display stacked avatar list\n\nProps:\n\n- `max`: Max avatars to show before +n (default: `3`)\n- `total`: The total number of avatars. Used for calculating the number of extra avatars (default: `children.length`)\n- `children`: Must be a list of `Avatar` components\n\n@example\n\n```jsx\n <AvatarGroup max={3}>\n   <Avatar alt="Authority1" src="/static/images/avatar/1.jpg" />\n   <Avatar alt="Authority2" src="/static/images/avatar/2.jpg" />\n   <Avatar alt="Authority3" src="/static/images/avatar/3.jpg" />\n </AvatarGroup>\n```',methods:[],displayName:"AvatarGroup",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!0,tsType:{name:"Array",elements:[{name:"ReactElement",elements:[{name:"AvatarProps"},{name:"Avatar"}],raw:"ReactElement<AvatarProps, typeof Avatar>"}],raw:"AvatarChildElement[]"},description:"Children must be a list of Avatar components"},max:{required:!1,tsType:{name:"number"},description:`Max avatars to show before +n.
@default 3`,defaultValue:{value:"3",computed:!1}},total:{required:!1,tsType:{name:"number"},description:`The total number of avatars. Used for calculating the number of extra avatars.
@defalut children.length`}}};export{v as A};
