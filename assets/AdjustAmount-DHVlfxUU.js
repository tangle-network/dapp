import{j as t}from"./jsx-runtime-BbjHj44Y.js";import{I as y,c as g,d as k,e as A}from"./ProposalBadge-aTrZS74o.js";import"./create-icon-BPUPqOkJ.js";import"./ChainIcon-MpKHrVma.js";import"./InformationLine-D6uBLwmF.js";import"./Spinner-C8gHa2rr.js";import"./Alert-CUeVEtwL.js";import"./StatusIndicator-BMH2ux_C.js";import{D as p}from"./decimal-A899wnYr.js";import{r as a}from"./index-C6mWTJJr.js";import{t as f}from"./bundle-mjs-D696Ktp4.js";import{I as N}from"./Input-oMzDo86x.js";const V=a.forwardRef(({className:h,iconClassName:d,id:b="adjust-amount",isDisabled:n,max:r,min:u,onChange:e,step:s=.5,value:i=0,...v},x)=>{const[l,m]=a.useState(i);a.useEffect(()=>{m(i)},[i]);const c=a.useMemo(()=>f("group","fill-mono-160 hover:fill-mono-200 disabled:fill-mono-100","dark:fill-mono-40 dark:disabled:fill-mono-120",d),[d]),T=a.useCallback(()=>{const o=new p(l).minus(s);n||typeof u=="number"&&o.lt(u)||(m(o.toNumber()),e==null||e(o.toNumber()))},[n,u,e,s,l]),j=a.useCallback(()=>{const o=new p(l).plus(s);n||typeof r=="number"&&o.gt(r)||(m(o.toNumber()),e==null||e(o.toNumber()))},[n,r,e,s,l]);return t.jsxs("div",{...v,ref:x,className:f("flex gap-6 items-center",h),children:[t.jsxs("button",{className:c,onClick:T,disabled:n??(typeof u=="number"&&l<=u),children:[t.jsx(y,{className:"group-hover:group-enabled:hidden !fill-inherit",size:"lg"}),t.jsx(g,{className:"hidden group-hover:group-enabled:inline-block !fill-inherit",size:"lg"})]}),t.jsx(N,{style:{textAlign:"center"},autoComplete:"off",inputMode:"numeric",size:"sm",type:"number",isReadOnly:!0,id:b,isDisabled:n,value:`${l}`}),t.jsxs("button",{className:c,onClick:j,disabled:n??(typeof r=="number"&&l>=r),children:[t.jsx(k,{className:"group-hover:group-enabled:hidden !fill-inherit",size:"lg"}),t.jsx(A,{className:"hidden group-hover:group-enabled:inline-block !fill-inherit",size:"lg"})]})]})});V.__docgenInfo={description:'The `AdjustAmount` component\n\nProps:\n\n- `id`: The `id` prop for label and input (defaults to "adjust-amount")\n- `value`: The value prop\n- `onChange`: The callback function to control the component\n- `min`: The minimum value\n- `max`: The maximum value\n- `step`: The step value (defaults to 0.5)\n\n@example\n\n```jsx\n<AdjustAmount value={value} onChange={(nextVal) => setValue(nextVal)} />\n```',methods:[],displayName:"AdjustAmount",props:{max:{required:!1,tsType:{name:"number"},description:"The maximum value"},min:{required:!1,tsType:{name:"number"},description:"The minimum value"},step:{required:!1,tsType:{name:"number"},description:"The step between each value",defaultValue:{value:"0.5",computed:!1}},value:{required:!1,tsType:{name:"number"},description:"The actual value (used to control the component)",defaultValue:{value:"0",computed:!1}},isDisabled:{required:!1,tsType:{name:"boolean"},description:"Disable the input"},iconClassName:{required:!1,tsType:{name:"string"},description:"The icon button class name to override style"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(nextValue: number) => void",signature:{arguments:[{type:{name:"number"},name:"nextValue"}],return:{name:"void"}}},description:`The callback function when the value is changed
@param nextValue next value of the component
@returns void`},id:{defaultValue:{value:"'adjust-amount'",computed:!1},required:!1}},composes:["Omit"]};export{V as A};
