import{j as e}from"./jsx-runtime-BbjHj44Y.js";import{r as s}from"./index-C6mWTJJr.js";import{t as d}from"./bundle-mjs-D696Ktp4.js";import{T as l}from"./Typography-BXoXAd7x.js";import{T as c}from"./TitleWithInfo-TkXT9seP.js";const p=s.forwardRef(({className:r,items:a,...o},i)=>{const n=s.useMemo(()=>d("flex items-center pb-12 justify-evenly",r),[r]);return e.jsx("div",{...o,className:n,ref:i,children:a.map((t,m)=>e.jsxs("div",{className:"flex flex-col items-center space-y-2",children:[e.jsx(c,{...t.titleProps}),e.jsx(l,{variant:"h4",fw:"bold",children:t.value.toString()})]},`${t.titleProps.title}-${m}`))})});p.__docgenInfo={description:"",methods:[],displayName:"Stats",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},items:{required:!0,tsType:{name:"Array",elements:[{name:"StatItem"}],raw:"Array<StatItem>"},description:""}}};export{p as S};
