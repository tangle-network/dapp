import{j as s}from"./jsx-runtime-BbjHj44Y.js";import{R as i,T as l,C as p}from"./index-BFtB9_AZ.js";import{r as a}from"./index-C6mWTJJr.js";import{f as d}from"./ProposalBadge-aTrZS74o.js";import"./create-icon-BPUPqOkJ.js";import"./ChainIcon-MpKHrVma.js";import"./InformationLine-D6uBLwmF.js";import"./Spinner-C8gHa2rr.js";import"./Alert-CUeVEtwL.js";import"./StatusIndicator-BMH2ux_C.js";import{c}from"./index-BpvXyOxN.js";import{t as r}from"./bundle-mjs-D696Ktp4.js";import{T as m}from"./Typography-BXoXAd7x.js";const u=a.forwardRef((e,o)=>s.jsx(i,{...e,ref:o}));u.__docgenInfo={description:`The wrapper around Radix Collapsible Root, use for displaying collapsible content

@example

\`\`\`jsx
   <Collapsible>
     <CollapsibleButton>Click to expand</CollapsibleButton>
     <CollapsibleContent>Expanded section</CollapsibleContent>
   </Collapsible>
\`\`\``,methods:[],displayName:"Collapsible",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""}},composes:["RdxCollapsibleContentProps"]};const C=a.forwardRef(({children:e,className:o,...t},n)=>s.jsxs(l,{...t,className:r(c("group flex w-full select-none items-center justify-between px-4 py-2"),o),ref:n,children:[s.jsx(m,{variant:"body1",component:"span",className:"block",children:e}),s.jsx(d,{size:"lg",className:"block duration-300 ease-in-out transform group-radix-state-open:rotate-180"})]}));C.__docgenInfo={description:"The style wrapper around Radix Collapsible Trigger, must use inside `<Collapsible></Collapsible>` tag",methods:[],displayName:"CollapsibleButton",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""}},composes:["CollapsibleTriggerProps"]};const f=a.forwardRef(({className:e,...o},t)=>s.jsx(p,{...o,className:r("p-4",e),ref:t}));f.__docgenInfo={description:"The style wrapper around Radix Collapsible Content, must use inside `<Collapsible></Collapsible>` tag",methods:[],displayName:"CollapsibleContent",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""}},composes:["RdxCollapsibleContentProps"]};export{u as C,C as a,f as b};
