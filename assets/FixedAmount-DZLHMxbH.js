import{j as e}from"./jsx-runtime-BbjHj44Y.js";import{T as w}from"./DropdownMenuItem-CysMNRwX.js";import{f as k}from"./ProposalBadge-aTrZS74o.js";import{c as N}from"./index-BpvXyOxN.js";import{r as o}from"./index-C6mWTJJr.js";import{I as A}from"./InformationLine-D6uBLwmF.js";import{t as p}from"./bundle-mjs-D696Ktp4.js";import{T as u}from"./Typography-BXoXAd7x.js";import{B as c}from"./Button-bTMyXnUe.js";import{C}from"./Chip-CU1xpYxs.js";import{D as q}from"./Divider-hpSSgNgZ.js";import{D as F,b as I}from"./AccountDropdownBody-BtkIwlri.js";import{L as R}from"./Label-DpPnCd0G.js";import{T as D}from"./TitleWithInfo-TkXT9seP.js";const f=o.forwardRef(({className:t,onChange:n,selected:r,...a},i)=>e.jsxs("div",{...a,className:p("flex flex-col p-4 space-y-2",t),ref:i,children:[e.jsxs("div",{children:[e.jsx(c,{variant:"link",className:"inline-block mr-2",isDisabled:r==="fixed",onClick:()=>n==null?void 0:n("fixed"),children:"Fixed Amount"}),e.jsx(C,{color:"purple",children:"Max privacy"})]}),e.jsx(c,{variant:"link",isDisabled:r==="custom",onClick:()=>n==null?void 0:n("custom"),children:"Custom Amount"}),e.jsx(q,{className:"bg-mono-40 dark:bg-mono-140"}),e.jsxs("div",{children:[e.jsxs(u,{variant:"body3",fw:"bold",className:"flex items-center mb-2",children:[e.jsx(A,{className:"inline-block mr-1"})," Withrawals Impact Privacy"]}),e.jsx(u,{variant:"body4",className:"max-w-[253px]",children:"Using fixed amounts maximizes your privacy, making it harder for address to be statistically linked. Learn more here."})]})]}));f.__docgenInfo={description:`The AmountMenu Component

Props:

- \`selected\`: Represents the selected value - 'fixed' | 'custom';
- \`onChange\`: Callback when user hits change input button

@example

\`\`\`jsx
 <AmountMenu {...amountMenuProps} onChange={onAmountTypeChange} />
\`\`\``,methods:[],displayName:"AmountMenu",props:{selected:{required:!1,tsType:{name:"union",raw:"'fixed' | 'custom'",elements:[{name:"literal",value:"'fixed'"},{name:"literal",value:"'custom'"}]},description:"Selected value"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(nextVal: 'fixed' | 'custom') => void",signature:{arguments:[{type:{name:"union",raw:"'fixed' | 'custom'",elements:[{name:"literal",value:"'fixed'"},{name:"literal",value:"'custom'"}]},name:"nextVal"}],return:{name:"void"}}},description:"Callback when user hits change input button"}},composes:["Omit"]};const x=o.forwardRef(({children:t,className:n,...r},a)=>{const i=o.useMemo(()=>p("bg-mono-0 dark:bg-mono-140 px-2.5 lg:px-4 py-2 lg:max-w-[518px] w-full rounded-lg flex items-center justify-between cursor-pointer",n),[n]);return e.jsx("div",{...r,className:i,ref:a,children:t})});x.__docgenInfo={description:"",methods:[],displayName:"InputWrapper",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},id:{required:!1,tsType:{name:"string"},description:'The `id` prop for label and input\n@default "amount"'},title:{required:!1,tsType:{name:"string"},description:"Used to override the default title of an input"},info:{required:!1,tsType:{name:"ComponentProps['info']",raw:"ComponentProps<typeof TitleWithInfo>['info']"},description:"The tooltip info"}}};const V=o.forwardRef(({amountMenuProps:t,id:n,info:r,isDisabled:a,onChange:i,title:h="Fixed amount",value:d,values:b,...y},T)=>{const[v,m]=o.useState(()=>d),g=o.useCallback(s=>{m(s),i==null||i(s)},[i,m]),j=o.useCallback(s=>{var l;(l=t==null?void 0:t.onChange)==null||l.call(t,s)},[t]);return o.useEffect(()=>{m(d)},[d]),e.jsx(x,{...y,ref:T,children:e.jsxs("div",{className:"flex flex-col w-full space-y-2",children:[e.jsx(R,{htmlFor:n,className:"flex items-center space-x-2",children:t&&e.jsxs(F,{children:[e.jsx(w,{asChild:!0,className:"flex items-start space-x-1",children:e.jsxs("span",{className:"flex items-center",children:[e.jsx(D,{title:h,info:r,variant:"utility",titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"}),e.jsx(k,{})]})}),e.jsx(I,{isPortal:!1,align:"start",className:"z-10 mt-1",children:e.jsx(f,{...t,onChange:j})})]})}),e.jsx("div",{className:"flex space-x-2",children:b.map((s,l)=>e.jsx("div",{className:"grow shrink basis-0",children:e.jsx(c,{isFullWidth:!0,size:"md",variant:"utility",className:N("justify-center",{"disabled:border disabled:border-solid disabled:border-blue-90 dark:disabled:border-blue-30":!a},{"disabled:bg-blue-10 dark:disabled:bg-blue-120":!a},{"disabled:text-blue-90 dark:disabled:text-blue-30":!a}),isDisabled:a||v===s,onClick:()=>g(s),children:s.toFixed(2)})},`${s}-${l}`))})]})})});V.__docgenInfo={description:"The `FixedAmount` component\n\nProps:\n\n- `id`: The `id` prop for label and input (defaults to \"amount\")\n- `values`:  The fixed number list to display\n- `value`: The value prop\n- `onChange`: The callback function to control the component\n- `amountMenuProps`: The amount menu props to pass into the AmountMenu component\n\n@example\n\n```jsx\n<FixedAmount info='Fix amount' values={values} value={value} onChange={(nextVal) => setValue(nextVal)} />\n<FixedAmount {...fixedAmountProps} className={cx({ hidden: amountType !== 'fixed' })} hidden={amountType !== 'fixed'} />\n```",methods:[],displayName:"FixedAmount",props:{id:{required:!1,tsType:{name:"string"},description:'The `id` prop for label and input\n@default "amount"'},values:{required:!0,tsType:{name:"Array",elements:[{name:"number"}],raw:"number[]"},description:"The fixed number list to display"},value:{required:!1,tsType:{name:"number"},description:"The value prop"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(nextVal: number) => void",signature:{arguments:[{type:{name:"number"},name:"nextVal"}],return:{name:"void"}}},description:"The callback function to control the component"},amountMenuProps:{required:!1,tsType:{name:"ComponentProps",elements:[{name:"AmountMenu"}],raw:"ComponentProps<typeof AmountMenu>"},description:"The amount menu props to pass into the AmountMenu component"},isDisabled:{required:!1,tsType:{name:"boolean"},description:"Disable the input"},title:{defaultValue:{value:"'Fixed amount'",computed:!1},required:!1}},composes:["Omit"]};export{f as A,V as F,x as I};
