import{j as e}from"./jsx-runtime-BbjHj44Y.js";import{c as ee}from"./chain-config-ChLUb0m2.js";import{f as G,E as ne,z as te,H as S,g as E,S as V,W as K,a2 as ae,a3 as oe}from"./ProposalBadge-aTrZS74o.js";import"./create-icon-BPUPqOkJ.js";import{C as _}from"./ChainIcon-MpKHrVma.js";import{I as Y}from"./InformationLine-D6uBLwmF.js";import"./Spinner-C8gHa2rr.js";import"./Alert-CUeVEtwL.js";import"./StatusIndicator-BMH2ux_C.js";import{r as s}from"./index-C6mWTJJr.js";import{t as p}from"./bundle-mjs-D696Ktp4.js";import{T as x}from"./Typography-BXoXAd7x.js";import"./index.browser.esm-BZmtMS8Q.js";import{g as I}from"./getRoundedAmountString-DnoSM7dX.js";import{E as se}from"./index-VMVr2VZz.js";import{A as ie}from"./AdjustAmount-DHVlfxUU.js";import{T as re}from"./DropdownMenuItem-CysMNRwX.js";import{I as w,A as le}from"./FixedAmount-DZLHMxbH.js";import{B as J}from"./Button-bTMyXnUe.js";import{D as de,b as me,e as P}from"./AccountDropdownBody-BtkIwlri.js";import{L as k}from"./Label-DpPnCd0G.js";import{I as X}from"./Input-oMzDo86x.js";import{T as j}from"./TitleWithInfo-TkXT9seP.js";import"./InfoItem-DHGSOusR.js";import{n as ce}from"./NotificationStacked-juqkK1lm.js";import"./Checkbox-CLfCyBur.js";import{s as pe}from"./shortenString-JLwGCdNy.js";import{A as ue}from"./Avatar-BFvCMqwp.js";import{c as Q}from"./index-BpvXyOxN.js";import{T as fe}from"./TokenPair-BjEhvCmG.js";import{I as O}from"./IconWithTooltip-zSSBUA4I.js";import{S as he}from"./Switcher-By-8GUmy.js";import{T as ye,a as xe,b as be}from"./Tooltip-BHOFDjF6.js";import{T as $}from"./TextField-bCO2HDo8.js";import{T as ge}from"./TokenSelector-DU0tKBKi.js";function Te(t){const a=t.toString();return a.length>1e3?(console.error("isScientificNotation: value is too long"),!1):/^[+-]?\d+(\.\d+)?e[+-]?\d+$/i.test(a)}function Ce(t){let a=String(t);if(a.indexOf("e")!==-1){const o=parseInt(a.split("-")[1],10);a=t.toFixed(o)}return a}function H(t,a=2){const o=Te(t)?Ce(t):`${t}`,i=new RegExp(`^-?\\d+(?:\\.\\d{0,${a}})?`),n=o.match(i);return!n||n[0]==null?t:parseFloat(n[0])}const Ne=s.forwardRef(({amount:t,amountMenuProps:a,className:o,errorMessage:i,id:n="amount",info:d="Amount",isDisabled:l,onAmountChange:r,onMaxBtnClick:u,overrideInputProps:f,title:m="Amount",...c},b)=>{const[h,T]=s.useState(!1),g=s.useMemo(()=>p("cursor-auto select-none space-x-2",o),[o]),C=s.useCallback(y=>{var N;(N=a==null?void 0:a.onChange)==null||N.call(a,y)},[a]);return e.jsxs(e.Fragment,{children:[e.jsxs(w,{...c,className:g,ref:b,children:[e.jsxs("div",{className:"flex flex-col space-y-1 grow",children:[e.jsx(k,{htmlFor:n,className:"flex items-center space-x-2",children:a?e.jsxs(de,{radixRootProps:{onOpenChange:y=>T(y),open:h},children:[e.jsx(re,{asChild:!0,className:"flex items-start space-x-1",children:e.jsxs("span",{className:"flex items-center cursor-pointer",children:[e.jsx(j,{title:m,variant:"utility",titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"}),e.jsx(G,{})]})}),e.jsx(me,{isPortal:!1,align:"start",className:"z-10 mt-1",children:e.jsx(le,{...a,onChange:C})})]}):e.jsx(j,{title:m,variant:"utility",info:d,titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"})}),e.jsx(X,{id:n,name:n,value:t,type:"number",inputMode:"numeric",onChange:r,placeholder:"0",size:"sm",autoComplete:"off",isDisabled:l||h,min:0,...f})]}),e.jsx(J,{isDisabled:l,onClick:u,variant:"utility",size:"sm",children:"Max"})]}),i&&e.jsxs("span",{className:"flex items-center text-red-70 dark:text-red-50",children:[e.jsx(Y,{className:"!fill-current mr-1"}),e.jsx(x,{variant:"body1",fw:"bold",className:"!text-current",children:i})]})]})});Ne.__docgenInfo={description:"",methods:[],displayName:"AmountInput",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},id:{required:!1,tsType:{name:"string"},description:'The `id` prop for label and input\n@default "amount"',defaultValue:{value:"'amount'",computed:!1}},title:{required:!1,tsType:{name:"string"},description:"Used to override the default title of an input",defaultValue:{value:"'Amount'",computed:!1}},info:{required:!1,tsType:{name:"string"},description:"The tooltip info",defaultValue:{value:"'Amount'",computed:!1}},amount:{required:!1,tsType:{name:"InputProps['value']",raw:"InputProps['value']"},description:"The amount value"},errorMessage:{required:!1,tsType:{name:"string"},description:"The error message to display"},onAmountChange:{required:!1,tsType:{name:"InputProps['onChange']",raw:"InputProps['onChange']"},description:"Callback function to control the amount value"},onMaxBtnClick:{required:!1,tsType:{name:"ReactComponentPropsWithoutRef['onClick']",raw:"PropsOf<'button'>['onClick']"},description:"Callback function when the max button is clicked"},amountMenuProps:{required:!1,tsType:{name:"ComponentProps",elements:[{name:"AmountMenu"}],raw:"ComponentProps<typeof AmountMenu>"},description:"The amount menu props to pass into the AmountMenu component"},overrideInputProps:{required:!1,tsType:{name:"Omit",elements:[{name:"InputProps"},{name:"literal",value:"'id'"}],raw:"Omit<InputProps, 'id'>"},description:"Override props of input element"},isDisabled:{required:!1,tsType:{name:"boolean"},description:"Disable the input"}}};const je=s.forwardRef(({children:t,className:a,...o},i)=>e.jsx("div",{...o,className:p("p-2 bg-mono-20 dark:bg-mono-160 rounded-lg",a),ref:i,children:t}));je.__docgenInfo={description:`The \`BridgeInputGroup\` component

Props:

- \`children\`: Consumes component children

@example

\`\`\`jsx
<BridgeInputGroup>
  <AmountInput  />
</BridgeInputGroup>
\`\`\``,methods:[],displayName:"BridgeInputGroup"};const ve=s.forwardRef(({chain:t,chainType:a,id:o,info:i,title:n,...d},l)=>e.jsxs(w,{...d,ref:l,children:[e.jsxs("div",{className:"flex flex-col space-y-1",children:[e.jsx(k,{htmlFor:o,children:e.jsx(j,{title:n||(a==="source"?"Source":"Destination")+" chain",info:i,variant:"utility",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"})}),t?e.jsxs("p",{className:"flex items-center space-x-1",children:[e.jsx(_,{name:t.name,size:"lg"}),e.jsx(x,{component:"span",variant:"h5",fw:"bold",children:t.name})]}):e.jsx(x,{variant:"h5",fw:"bold",className:"text-black dark:text-white",children:"Select chain"})]}),e.jsx(P,{})]}));ve.__docgenInfo={description:`The \`ChainInput\` component

Props:

- \`chain\`: Will display \`select chain\` when the chain not provided
- \`chainType\`:  Input "source" | "dest"

@example

\`\`\`jsx
<ChainInput />
<ChainInput chainType='dest' chain={{ name: 'Optimism', symbol: 'op' }} />
\`\`\``,methods:[],displayName:"ChainInput",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},id:{required:!1,tsType:{name:"string"},description:'The `id` prop for label and input\n@default "amount"'},title:{required:!1,tsType:{name:"string"},description:"Used to override the default title of an input"},info:{required:!1,tsType:{name:"ComponentProps['info']",raw:"ComponentProps<typeof TitleWithInfo>['info']"},description:"The tooltip info"},chain:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  /**
   * The chain name
   */
  name: string;
}`,signature:{properties:[{key:"name",value:{name:"string",required:!0},description:"The chain name"}]}},description:"The chain type\nWill display `select chain` when the chain not provided"},chainType:{required:!0,tsType:{name:"union",raw:"'source' | 'dest'",elements:[{name:"literal",value:"'source'"},{name:"literal",value:"'dest'"}]},description:`The chain type
@type "source" | "dest"`}}};const we=s.forwardRef(({className:t,errorMessage:a,id:o="recipient",info:i,isHiddenPasteBtn:n,isValidSet:d,onChange:l,overrideInputProps:r,title:u,validate:f,value:m,placeholder:c,...b},h)=>{const[T,g]=s.useState(()=>m),[C,y]=s.useState(void 0),N=s.useMemo(()=>a||C,[C,a]),v=s.useCallback(q=>{const A=q.trim();g(A.toString()),l==null||l(A),A===""||(!f||f(A))?(y(void 0),d==null||d(!0)):(y("Invalid wallet address "),d==null||d(!1))},[d,l,f]),L=s.useCallback(async()=>{try{const q=await window.navigator.clipboard.readText();v(q)}catch{ce({message:"Failed to read clipboard",secondaryMessage:"Please change your browser settings to allow clipboard access.",variant:"warning"})}},[v]);return s.useEffect(()=>{g(m)},[m]),e.jsxs(e.Fragment,{children:[e.jsxs(w,{...b,className:p("cursor-auto space-x-2",t),ref:h,children:[e.jsxs("div",{className:"flex flex-col w-full space-y-1",children:[e.jsx(k,{htmlFor:o,children:e.jsx(j,{title:u??o,info:i,variant:"utility",titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"})}),e.jsx(X,{placeholder:c??"Enter recipient wallet address",id:o,size:"sm",value:T,onChange:v,...r})]}),!n&&e.jsx(J,{variant:"utility",size:"sm",onClick:L,isDisabled:!!(r!=null&&r.isDisabled||T),children:"Paste"})]}),N&&e.jsxs("span",{className:"flex items-center mt-1 text-red-70 dark:text-red-50",children:[e.jsx(Y,{className:"!fill-current mr-1"}),e.jsx(x,{variant:"body1",fw:"bold",className:"!text-current",children:N})]})]})});we.__docgenInfo={description:"The `RecipientInput` component\n\nProps:\n\n- `value`: The input value\n- `onChange`: Callback function to control the input value\n\n@example\n\n```jsx\n  <RecipientInput {...recipientInputProps} />\n <RecipientInput value={recipient} onChange={(nextVal) => setRecipient(nextVal.toString())} />\n```",methods:[],displayName:"RecipientInput",props:{value:{required:!1,tsType:{name:"InputProps['value']",raw:"InputProps['value']"},description:"The input value"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(nextValue: string) => void",signature:{arguments:[{type:{name:"string"},name:"nextValue"}],return:{name:"void"}}},description:"Callback function to control the input value"},amountMenuProps:{required:!1,tsType:{name:"ComponentProps",elements:[{name:"AmountMenu"}],raw:"ComponentProps<typeof AmountMenu>"},description:"The amount menu props to pass into the AmountMenu component"},errorMessage:{required:!1,tsType:{name:"string"},description:"The error message to display"},overrideInputProps:{required:!1,tsType:{name:"Omit",elements:[{name:"InputProps"},{name:"literal",value:"'id'"}],raw:"Omit<InputProps, 'id'>"},description:"Override props of input element"},isHiddenPasteBtn:{required:!1,tsType:{name:"boolean"},description:"If `true`, the patse button will be hidden"},placeholder:{required:!1,tsType:{name:"string"},description:"Override default place holder"},id:{defaultValue:{value:"'recipient'",computed:!1},required:!1}},composes:["Omit"]};const ke=s.forwardRef(({externalLink:t,id:a,info:o,relayerAddress:i,iconTheme:n,...d},l)=>e.jsxs(w,{...d,ref:l,children:[e.jsxs("div",{className:"flex flex-col space-y-1",children:[e.jsx(k,{htmlFor:a,children:e.jsx(j,{title:"Relayer",variant:"utility",info:o,titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"})}),i?e.jsxs("div",{className:"flex items-center space-x-1",children:[e.jsx(ue,{theme:n,value:i}),e.jsx(x,{component:"span",variant:"h5",fw:"bold",children:pe(i)}),t&&e.jsx("a",{target:"_blank",href:t,rel:"noopener noreferrer",children:e.jsx(ne,{})})]}):e.jsx(x,{variant:"h5",fw:"bold",className:"text-black dark:text-white",children:"Add a relayer"})]}),i?e.jsx(te,{className:"inline-block"}):e.jsx(S,{className:"inline-block"})]}));ke.__docgenInfo={description:`The \`RelayerInput\` component

Props:

- \`relayerAddress\`: The relayer address to display
- \`externalLink\`: The external url of a relayer

@example

\`\`\`jsx
<RelayerInput />
<RelayerInput
  relayerAddress='5DJEpHVVxSpaWGfdAzep11MK458y5JkHA5YvYm3dp3eawuXi'
  externalLink='https://tangle.tools'
/>
\`\`\``,methods:[],displayName:"RelayerInput",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},id:{required:!1,tsType:{name:"string"},description:'The `id` prop for label and input\n@default "amount"'},title:{required:!1,tsType:{name:"string"},description:"Used to override the default title of an input"},info:{required:!1,tsType:{name:"ComponentProps['info']",raw:"ComponentProps<typeof TitleWithInfo>['info']"},description:"The tooltip info"},relayerAddress:{required:!1,tsType:{name:"string"},description:"The relayer address to display"},externalLink:{required:!1,tsType:{name:"string"},description:"The external url of a relayer"},iconTheme:{required:!1,tsType:{name:"AvatarProps['theme']",raw:"AvatarProps['theme']"},description:`Relayer icon theme (use for Identicon theme)
@default 'polkadot'`}}};const Ie=s.forwardRef(({asset:t,className:a,id:o,info:i,title:n="Shielded Asset",...d},l)=>{const[r,u]=s.useMemo(()=>{let f,m;return t!=null&&t.balance&&(f=I(parseFloat(t.balance.toString()))),t!=null&&t.balanceInUsd&&(m=I(parseFloat(t.balanceInUsd.toString()))),[f,m]},[t]);return e.jsxs(w,{...d,className:p(Q({"items-start":r}),a),ref:l,children:[e.jsxs("div",{className:"flex flex-col space-y-1",children:[e.jsx(k,{htmlFor:o,children:e.jsx(j,{title:n,variant:"utility",info:i,titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"uppercase !text-inherit"})}),t?e.jsx(fe,{token1Symbol:t.symbol,token2Symbol:t.symbol}):e.jsxs(x,{variant:"body1",fw:"bold",children:["Select ",n]})]}),r?e.jsxs("div",{className:"flex flex-col items-end space-y-1",children:[e.jsxs(x,{variant:"body4",fw:"bold",component:"span",className:"uppercase text-mono-100 dark:text-mono-80",children:["Balance: ",r," ",u?`≈$${u}`:""]}),e.jsx(S,{className:"inline-block grow"})]}):e.jsx(S,{className:"inline-block"})]})});Ie.__docgenInfo={description:`The \`ShieldedAssetInput\` component

Props:

- \`asset\`: The asset type

@example

\`\`\`jsx
 <ShieldedAssetInput />
 <ShieldedAssetInput asset={{ token1Symbol: 'tnt', token2Symbol: 'eth', balance: 2.1, balanceInUsd: 1000 }} />
\`\`\``,methods:[],displayName:"ShieldedAssetInput",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},id:{required:!1,tsType:{name:"string"},description:'The `id` prop for label and input\n@default "amount"'},title:{required:!1,tsType:{name:"string"},description:"Used to override the default title of an input",defaultValue:{value:"'Shielded Asset'",computed:!1}},info:{required:!1,tsType:{name:"ComponentProps['info']",raw:"ComponentProps<typeof TitleWithInfo>['info']"},description:"The tooltip info"},asset:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  /**
   * The symbol of the pool (bridge, fungible) token
   */
  symbol: string;

  /**
   * The token balance
   */
  balance?: number | string;

  /**
   * Token token balance in usd
   */
  balanceInUsd?: number | string;
}`,signature:{properties:[{key:"symbol",value:{name:"string",required:!0},description:"The symbol of the pool (bridge, fungible) token"},{key:"balance",value:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}],required:!1},description:"The token balance"},{key:"balanceInUsd",value:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}],required:!1},description:"Token token balance in usd"}]}},description:""}}};const Z=s.forwardRef(({token1Symbol:t,token2Symbol:a,chainName:o,className:i,...n},d)=>e.jsxs("div",{...n,className:p("flex items-center group/token relative",o?"mr-1":"",i),ref:d,children:[e.jsx(O,{icon:e.jsx(E,{size:"lg",name:t.toLowerCase()}),content:t}),e.jsx(O,{icon:e.jsx(E,{size:"lg",name:a.toLowerCase()}),content:a,overrideTooltipTriggerProps:{className:"-ml-2 transition-all group-hover/token:ml-1"}}),o&&e.jsx(_,{name:o,className:"absolute top-0 -right-1",width:"12",height:"12"})]}));Z.__docgenInfo={description:"",methods:[],displayName:"TokenPairIcons",props:{token1Symbol:{required:!0,tsType:{name:"string"},description:"The first token symbol to display"},token2Symbol:{required:!0,tsType:{name:"string"},description:"The second token symbol to display"},chainName:{required:!1,tsType:{name:"string"},description:"The chain name to display"}}};const Re=s.forwardRef(({className:t,id:a,info:o,title:i="Token",token:n,...d},l)=>{const[r,u]=s.useMemo(()=>{let m,c;return n!=null&&n.balance&&(m=I(parseFloat(n.balance.toString()))),n!=null&&n.balanceInUsd&&(c=I(parseFloat(n.balanceInUsd.toString()))),[m,c]},[n]),f=s.useMemo(()=>{if(n&&typeof n.onTokenClick=="function")return m=>{var c;m.stopPropagation(),(c=n==null?void 0:n.onTokenClick)==null||c.call(n,n==null?void 0:n.symbol)}},[n]);return e.jsxs(w,{...d,className:p(Q({"items-start":r}),t),ref:l,children:[e.jsxs("div",{className:"flex flex-col space-y-1",children:[e.jsx(k,{htmlFor:a,children:e.jsx(j,{title:i,variant:"utility",info:o,titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"})}),n?e.jsxs("div",{className:"flex items-center space-x-1",children:[n.tokenComposition?e.jsx(Z,{token1Symbol:n.tokenComposition[0].trim(),token2Symbol:n.tokenComposition[1].trim()}):e.jsx(E,{onClick:f,name:n.symbol.trim(),size:"lg"}),n.tokenComposition?e.jsx(x,{component:"span",variant:"h5",fw:"bold",children:n.tokenComposition[0].trim()+"/"+n.tokenComposition[1].trim()}):e.jsx(x,{component:"span",variant:"h5",fw:"bold",children:n.symbol.trim()})]}):e.jsx(x,{variant:"h5",fw:"bold",children:"Select token"})]}),r?e.jsxs("div",{className:"flex flex-col items-end justify-between",children:[e.jsxs("div",{className:"flex items-center gap-1.5",children:[(n==null?void 0:n.balanceType)==="note"?e.jsx(V,{size:"md"}):e.jsx(K,{size:"md"}),e.jsx(j,{title:`${r} ${u?`≈$${u}`:""}`,variant:"utility",titleComponent:"span",className:"text-mono-100 dark:text-mono-80",titleClassName:"capitalize !text-inherit"})]}),e.jsx("div",{children:e.jsx(P,{className:"inline-block grow"})})]}):e.jsx(P,{className:"inline-block"})]})});Re.__docgenInfo={description:`Token Input component, for selecting token on the bridge

@example

\`\`\`jsx
 <TokenInput />
 <TokenInput token={{ symbol: 'eth', balance: 1.2, balanceInUsd: 1000 }} />
\`\`\``,methods:[],displayName:"TokenInput",props:{className:{required:!1,tsType:{name:"string"},description:"The tailwindcss className to override the style"},darkMode:{required:!1,tsType:{name:"boolean"},description:"Control dark mode using `js`, if it's empty, the component will control dark mode in `css`"},children:{required:!1,tsType:{name:"union",raw:"React.ReactNode | string",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"string"}]},description:""},id:{required:!1,tsType:{name:"string"},description:'The `id` prop for label and input\n@default "amount"'},title:{required:!1,tsType:{name:"string"},description:"Used to override the default title of an input",defaultValue:{value:"'Token'",computed:!1}},info:{required:!1,tsType:{name:"ComponentProps['info']",raw:"ComponentProps<typeof TitleWithInfo>['info']"},description:"The tooltip info"},token:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  /**
   * The token symbol to display token logo
   */
  symbol: string;

  /**
   * The token balance
   */
  balance?: number | string;

  /**
   * Token token balance in usd
   */
  balanceInUsd?: number | string;

  /**
   * The token composition if the token is a pool token
   */
  tokenComposition?: string[];

  /**
   * The callback when user clicks on the token
   */
  onTokenClick?: (symbol: string) => void;

  /**
   * Type of balance
   */
  balanceType?: 'wallet' | 'note';
}`,signature:{properties:[{key:"symbol",value:{name:"string",required:!0},description:"The token symbol to display token logo"},{key:"balance",value:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}],required:!1},description:"The token balance"},{key:"balanceInUsd",value:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}],required:!1},description:"Token token balance in usd"},{key:"tokenComposition",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1},description:"The token composition if the token is a pool token"},{key:"onTokenClick",value:{name:"signature",type:"function",raw:"(symbol: string) => void",signature:{arguments:[{type:{name:"string"},name:"symbol"}],return:{name:"void"}},required:!1},description:"The callback when user clicks on the token"},{key:"balanceType",value:{name:"union",raw:"'wallet' | 'note'",elements:[{name:"literal",value:"'wallet'"},{name:"literal",value:"'note'"}],required:!1},description:"Type of balance"}]}},description:"The token token\nWill display `select token` when the token not provided"}}};const R=s.createContext({}),B=s.forwardRef(({accountType:t,amount:a,children:o,className:i,isFixedAmount:n,maxAmount:d,onAmountChange:l,onIsFixedAmountChange:r,tokenSymbol:u,typedChainId:f,errorMessage:m,...c},b)=>e.jsx("div",{...c,ref:b,className:p("w-full rounded-xl p-4 space-y-2","bg-mono-20 dark:bg-mono-170",i),children:e.jsx(R.Provider,{value:{accountType:t,amount:a,isFixedAmount:n,maxAmount:d,onAmountChange:l,onIsFixedAmountChange:r,tokenSymbol:u,typedChainId:f,errorMessage:m},children:o})}));B.displayName="TransactionInputCardRoot";const M=s.forwardRef((t,a)=>{const{as:o="button",typedChainId:i,className:n,disabled:d,placeholder:l="Select Chain",renderBody:r,...u}=t,f=s.useContext(R),m=i??f.typedChainId,c=m?ee[m]:void 0;return e.jsxs(o,{type:"button",...u,disabled:d,ref:a,className:p("flex items-center gap-1 p-2 group",n),children:[typeof r=="function"?r():e.jsxs("p",{className:"flex items-center gap-2",children:[c&&e.jsx(_,{name:c.name,size:"lg"}),e.jsx(x,{variant:"h5",fw:"bold",component:"span",className:"inline-block text-mono-200 dark:text-mono-40",children:(c==null?void 0:c.name)??l})]}),!d&&e.jsx(G,{size:"lg",className:"rounded-lg group-hover:bg-mono-40 dark:group-hover:bg-mono-160"})]})});M.displayName="TransactionChainSelector";const F=s.forwardRef(({className:t,children:a,Icon:o,...i},n)=>e.jsxs("button",{type:"button",...i,className:p("group flex items-center gap-1","text-mono-170 dark:text-mono-80","hover:enabled:text-mono-190 dark:hover:enabled:text-mono-20","disabled:text-mono-100 dark:disabled:text-mono-100",t),ref:n,children:[o&&s.cloneElement(o,{...o.props,className:p("!fill-current",o.props.className)}),typeof a=="string"||typeof a=="number"?e.jsx(x,{variant:"body1",fw:"bold",className:"!text-inherit",children:a}):a]}));F.displayName="TransactionButton";const z=s.forwardRef(({className:t,tokenSymbol:a,maxAmount:o,accountType:i,onAmountChange:n,disabled:d,tooltipBody:l,Icon:r,...u},f)=>{const m=s.useContext(R),c=a??m.tokenSymbol,b=i??m.accountType,h=o??m.maxAmount,T=n??m.onAmountChange,g=s.useMemo(()=>{const v=typeof h=="number"?H(h,5):se;return`${typeof v=="number"?I(v,5):v} ${c??""}`.trim()},[h,c]),C=d??(typeof h!="number"||h<=0),{iconDisabledClassName:y,iconEnabledClassName:N}=s.useMemo(()=>({iconDisabledClassName:p("!fill-current hidden group-hover:group-enabled:block group-disabled:block"),iconEnabledClassName:p("!fill-current group-hover:group-enabled:hidden group-disabled:hidden")}),[]);return e.jsxs(ye,{children:[e.jsx(xe,{asChild:!0,children:e.jsx(F,{...u,ref:f,disabled:C,onClick:typeof h=="number"?()=>T==null?void 0:T(`${H(h,5)}`):void 0,Icon:r===void 0?b==="note"?e.jsxs(e.Fragment,{children:[e.jsx(V,{className:N}),e.jsx(ae,{className:y})]}):e.jsxs(e.Fragment,{children:[e.jsx(K,{className:N}),e.jsx(oe,{className:y})]}):s.isValidElement(r)?s.cloneElement(r,{...r.props,className:p("!fill-current",r.props.className)}):"enabled"in r&&"disabled"in r?e.jsxs(e.Fragment,{children:[s.cloneElement(r.enabled,{...r.enabled.props,className:p(N,r.enabled.props.className)}),s.cloneElement(r.disabled,{...r.disabled.props,className:p(y,r.disabled.props.className)})]}):null,className:p("ml-auto justify-end xs:justify-start",C&&"cursor-not-allowed"),children:g})}),e.jsx(be,{children:l===void 0?b==="note"?"Shielded Balance":"Available Balance":l})]})});z.displayName="TransactionMaxAmountButton";const W=s.forwardRef(({className:t,children:a,...o},i)=>e.jsx("div",{...o,ref:i,className:p("py-1 flex flex-col xs:flex-row xs:items-center xs:justify-between","border-b border-mono-40 dark:border-mono-160",t),children:a}));W.displayName="TransactionInputCardHeader";const U=s.forwardRef(({amount:t,className:a,customAmountProps:o,fixedAmountProps:i,isFixedAmount:n,onAmountChange:d,tokenSelectorProps:l,tokenSymbol:r,hiddenAmountInput:u,...f},m)=>{const c=s.useContext(R),b=t??c.amount,h=n??c.isFixedAmount,T=r??c.tokenSymbol,g=d??c.onAmountChange,C=s.useMemo(()=>{if(g)return y=>{g(y.target.value)}},[g]);return e.jsxs("div",{...f,ref:m,className:p("flex items-center justify-between gap-2",a),children:[!u&&(h?e.jsx(ie,{min:0,...i,className:p("max-w-[var(--adjust-amount-width)] h-full grow",i==null?void 0:i.className),value:typeof b=="string"?Number(b):void 0,onChange:typeof g=="function"?y=>g(`${y}`):void 0}):e.jsx($.Root,{isDisabledHoverStyle:!0,className:"!bg-transparent grow",children:e.jsx($.Input,{className:"text-xl",placeholder:"Enter amount",min:0,inputMode:"decimal",pattern:"[0-9]*\\.?[0-9]*",value:b,onChange:C,...o})})),e.jsx(ge,{type:"button",...l,className:p("ml-auto max-w-[210px]",l==null?void 0:l.className),children:T||(l==null?void 0:l.children)})]})});U.displayName="TransactionInputCardBody";const D=s.forwardRef(({className:t,labelWithTooltipProps:a,isFixedAmount:o,onIsFixedAmountChange:i,...n},d)=>{const l=s.useContext(R),r=o??l.isFixedAmount,u=i??l.onIsFixedAmountChange;return e.jsxs("div",{...n,ref:d,className:p("py-1 flex gap-2 items-center",t),children:[e.jsx(j,{...a,title:"Fixed amount",className:"text-mono-100 dark:text-mono-100"}),e.jsx(he,{checked:r,onCheckedChange:u})]})});D.displayName="TransactionInputCardFooter";const cn=Object.assign({},{Root:B,Header:W,Body:U,Footer:D,ChainSelector:M,Button:F,MaxAmountButton:z});F.__docgenInfo={description:"",methods:[],displayName:"TransactionButton",props:{Icon:{required:!1,tsType:{name:"union",raw:"ReactElement | null",elements:[{name:"ReactElement"},{name:"null"}]},description:"The icon of the transaction button."}}};M.__docgenInfo={description:"",methods:[],displayName:"TransactionChainSelector",props:{as:{required:!1,tsType:{name:"TAs"},description:""},placeholder:{required:!1,tsType:{name:"string"},description:"@default 'Select Chain'"},renderBody:{required:!1,tsType:{name:"signature",type:"function",raw:"() => ReactNode",signature:{arguments:[],return:{name:"ReactNode"}}},description:""}}};U.__docgenInfo={description:"",methods:[],displayName:"TransactionInputCardBody",props:{hiddenAmountInput:{required:!1,tsType:{name:"boolean"},description:""},customAmountProps:{required:!1,tsType:{name:"ComponentPropsWithRef",elements:[{name:"TextFieldInput"}],raw:"ComponentPropsWithRef<typeof TextFieldInput>"},description:"The props of the custom amount input."},fixedAmountProps:{required:!1,tsType:{name:"ComponentProps",elements:[{name:"AdjustAmount"}],raw:"ComponentProps<typeof AdjustAmount>"},description:"The props of the fixed amount input."},tokenSelectorProps:{required:!1,tsType:{name:"ComponentProps",elements:[{name:"TokenSelector"}],raw:"ComponentProps<typeof TokenSelector>"},description:"The props of the token selector."}},composes:["Pick"]};D.__docgenInfo={description:"",methods:[],displayName:"TransactionInputCardFooter",props:{labelWithTooltipProps:{required:!1,tsType:{name:"Partial",elements:[{name:"ComponentProps",elements:[{name:"TitleWithInfo"}],raw:"ComponentProps<typeof TitleWithInfo>"}],raw:"Partial<ComponentProps<typeof TitleWithInfo>>"},description:"Label with tooltip info props"}},composes:["Pick"]};W.__docgenInfo={description:"",methods:[],displayName:"TransactionInputCardHeader"};B.__docgenInfo={description:"",methods:[],displayName:"TransactionInputCardRoot",props:{accountType:{required:!1,tsType:{name:"union",raw:"'wallet' | 'note'",elements:[{name:"literal",value:"'wallet'"},{name:"literal",value:"'note'"}]},description:`The account type to display
@default 'wallet'`},typedChainId:{required:!1,tsType:{name:"number"},description:"The typed chain id to display the chain info on the selector."},maxAmount:{required:!1,tsType:{name:"union",raw:"number | null",elements:[{name:"number"},{name:"null"}]},description:"The max amount of the transaction input card."},tokenSymbol:{required:!1,tsType:{name:"ReactNode"},description:"The token symbol of the transaction input card."},amount:{required:!1,tsType:{name:"string"},description:"The amount of the transaction input card."},onAmountChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(amount: string) => void",signature:{arguments:[{type:{name:"string"},name:"amount"}],return:{name:"void"}}},description:"The callback function to handle the amount change."},isFixedAmount:{required:!1,tsType:{name:"boolean"},description:"The boolean to indicate if the transaction input amount is fixed."},onIsFixedAmountChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(isFixedAmount: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isFixedAmount"}],return:{name:"void"}}},description:"The callback function to handle the fixed amount change."},errorMessage:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"The error message of the transaction input card."}}};z.__docgenInfo={description:"",methods:[],displayName:"TransactionMaxAmountButton",props:{tooltipBody:{required:!1,tsType:{name:"ReactNode"},description:`The tooltip body for the max amount button.
@default "Shielded Balance" | "Available Balance" (based on the account type)`},Icon:{required:!1,tsType:{name:"union",raw:`| ReactElement
| {
    enabled: ReactElement;
    disabled: ReactElement;
  }`,elements:[{name:"ReactElement"},{name:"signature",type:"object",raw:`{
  enabled: ReactElement;
  disabled: ReactElement;
}`,signature:{properties:[{key:"enabled",value:{name:"ReactElement",required:!0}},{key:"disabled",value:{name:"ReactElement",required:!0}}]}}]},description:`The Icon for the max amount button.
#@default <ShieldKeyhole /> | <Wallet /> (based on the account type)`}},composes:["Pick"]};export{cn as T,Z as a,Ce as n};
